/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'kernel'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct dollar_B8B9B85B971E3DBFC31707A9282CDA9E;
struct dollar_0BA82F063C392BF02AF0AA599B603A12;
struct dollar_0B20F48E2CD2D778BD1F216BA81B71CE;
struct z_stream_s;
struct internal_state;
struct mach_port_qos;
struct au_tid;
struct mac_policy_ops;
struct ucred;
struct auditinfo_addr;
struct flock;
struct inpcb;
struct sockaddr;
struct msg;
struct attrlist;
struct dollar_71210C31999B47ECFCA79A4496892A9D;

/* 2 */
typedef unsigned int uint32_t;

/* 4 */
typedef int integer_t;

/* 3 */
typedef integer_t cpu_type_t;

/* 5 */
typedef integer_t cpu_subtype_t;

/* 1 */
struct mach_header_64
{
  uint32_t magic;
  cpu_type_t cputype;
  cpu_subtype_t cpusubtype;
  uint32_t filetype;
  uint32_t ncmds;
  uint32_t sizeofcmds;
  uint32_t flags;
  uint32_t reserved;
};

/* 8 */
typedef unsigned __int8 __uint8_t;

/* 9 */
typedef unsigned __int16 __uint16_t;

/* 10 */
typedef unsigned int __uint32_t;

/* 7 */
union in6_addr::dollar_330434928707C706902F20BE7BA89EB4
{
  __uint8_t __u6_addr8[16];
  __uint16_t __u6_addr16[8];
  __uint32_t __u6_addr32[4];
};

/* 6 */
struct in6_addr
{
  in6_addr::dollar_330434928707C706902F20BE7BA89EB4 __u6_addr;
};

/* 11 */
typedef dollar_B8B9B85B971E3DBFC31707A9282CDA9E NDR_record_t;

/* 12 */
struct dollar_B8B9B85B971E3DBFC31707A9282CDA9E
{
  unsigned __int8 mig_vers;
  unsigned __int8 if_vers;
  unsigned __int8 reserved1;
  unsigned __int8 mig_encoding;
  unsigned __int8 int_rep;
  unsigned __int8 char_rep;
  unsigned __int8 float_rep;
  unsigned __int8 reserved2;
};

/* 13 */
typedef dollar_0BA82F063C392BF02AF0AA599B603A12 security_token_t;

/* 14 */
#pragma pack(push, 4)
struct dollar_0BA82F063C392BF02AF0AA599B603A12
{
  unsigned int val[2];
};
#pragma pack(pop)

/* 17 */
typedef unsigned int u_int32_t;

/* 16 */
typedef u_int32_t fixpt_t;

/* 15 */
struct loadavg
{
  fixpt_t ldavg[3];
  __int64 fscale;
};

/* 18 */
typedef dollar_0B20F48E2CD2D778BD1F216BA81B71CE audit_token_t;

/* 19 */
#pragma pack(push, 4)
struct dollar_0B20F48E2CD2D778BD1F216BA81B71CE
{
  unsigned int val[8];
};
#pragma pack(pop)

/* 21 */
typedef unsigned __int64 uint64_t;

/* 22 */
typedef int vm_prot_t;

/* 20 */
struct  segment_command_64
{
  uint32_t cmd;
  uint32_t cmdsize;
  char segname[16];
  uint64_t vmaddr;
  uint64_t vmsize;
  uint64_t fileoff;
  uint64_t filesize;
  vm_prot_t maxprot;
  vm_prot_t initprot;
  uint32_t nsects;
  uint32_t flags;
};

/* 23 */
struct  section_64
{
  char sectname[16];
  char segname[16];
  uint64_t addr;
  uint64_t size;
  uint32_t offset;
  uint32_t align;
  uint32_t reloff;
  uint32_t nreloc;
  uint32_t flags;
  uint32_t reserved1;
  uint32_t reserved2;
  uint32_t reserved3;
};

/* 24 */
struct symtab_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t symoff;
  uint32_t nsyms;
  uint32_t stroff;
  uint32_t strsize;
};

/* 25 */
struct dysymtab_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t ilocalsym;
  uint32_t nlocalsym;
  uint32_t iextdefsym;
  uint32_t nextdefsym;
  uint32_t iundefsym;
  uint32_t nundefsym;
  uint32_t tocoff;
  uint32_t ntoc;
  uint32_t modtaboff;
  uint32_t nmodtab;
  uint32_t extrefsymoff;
  uint32_t nextrefsyms;
  uint32_t indirectsymoff;
  uint32_t nindirectsyms;
  uint32_t extreloff;
  uint32_t nextrel;
  uint32_t locreloff;
  uint32_t nlocrel;
};

/* 27 */
typedef unsigned __int8 uint8_t;

/* 26 */
struct uuid_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint8_t uuid[16];
};

/* 28 */
struct version_min_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t version;
  uint32_t reserved;
};

/* 29 */
struct source_version_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint64_t version;
};

/* 30 */
struct linkedit_data_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t dataoff;
  uint32_t datasize;
};

/* 35 */
typedef unsigned __int16 u_int16_t;

/* 34 */
typedef u_int16_t uint16_t;

/* 38 */
typedef unsigned __int64 u_int64_t;

/* 37 */
typedef u_int64_t uint64_t_0;

/* 39 */
struct firehose_ring_tail_u::dollar_F6571BDB056DC40600E46F6E0E875058
{
  uint16_t frp_mem_tail;
  uint16_t frp_mem_flushed;
  uint16_t frp_io_tail;
  uint16_t frp_io_flushed;
};

/* 36 */
union firehose_ring_tail_u
{
  uint64_t_0 frp_atomic_tail;
  firehose_ring_tail_u::dollar_F6571BDB056DC40600E46F6E0E875058 _anon_0;
};

/* 40 */
typedef u_int32_t uint32_t_0;

/* 44 */
struct firehose_bank_state_u::dollar_34A067239D8370519A9BE3F34A2C6CB1
{
  uint16_t fbs_mem_bank;
  uint16_t fbs_io_bank;
  uint16_t fbs_max_ref;
  uint16_t fbs_unused;
};

/* 43 */
union firehose_bank_state_u
{
  uint64_t_0 fbs_atomic_state;
  firehose_bank_state_u::dollar_34A067239D8370519A9BE3F34A2C6CB1 _anon_0;
};

/* 42 */
struct __attribute__((aligned(64))) firehose_buffer_bank_s
{
  volatile firehose_bank_state_u fbb_state;
  volatile uint64_t_0 fbb_metadata_bitmap;
  volatile uint64_t_0 fbb_mem_flushed;
  volatile uint64_t_0 fbb_mem_notifs;
  volatile uint64_t_0 fbb_mem_sync_pushes;
  volatile uint64_t_0 fbb_io_flushed;
  volatile uint64_t_0 fbb_io_notifs;
  volatile uint64_t_0 fbb_io_sync_pushes;
  volatile unsigned __int64 fbb_flags;
  uint64_t_0 fbb_bitmap;
  firehose_bank_state_u fbb_limits;
  uint32_t_0 _fbb_unused;
};

/* 49 */
typedef uint32_t_0 dispatch_lock;

/* 48 */
struct dispatch_gate_s
{
  dispatch_lock dgl_lock;
};

/* 47 */
typedef dispatch_gate_s dispatch_gate_s_0;

/* 50 */
struct firehose_stream_state_u::dollar_7E9FB127019B0BAFA44ADAF16D22741B
{
  uint32_t_0 fss_allocator;
  uint16_t fss_current;
  uint16_t fss_generation;
};

/* 46 */
union firehose_stream_state_u
{
  uint64_t_0 fss_atomic_state;
  dispatch_gate_s_0 fss_gate;
  firehose_stream_state_u::dollar_7E9FB127019B0BAFA44ADAF16D22741B _anon_0;
};

/* 45 */
struct __attribute__((aligned(128))) firehose_buffer_stream_s
{
  firehose_stream_state_u fbs_state;
};

/* 53 */
typedef int __int32_t;

/* 52 */
typedef __int32_t __darwin_pid_t;

/* 51 */
typedef __darwin_pid_t pid_t;

/* 56 */
struct ipc_port;

/* 55 */
typedef struct ipc_port *ipc_port_t;

/* 54 */
typedef ipc_port_t mach_port_t;

/* 33 */
struct __attribute__((aligned(4096))) firehose_buffer_header_s
{
  volatile uint16_t fbh_mem_ring[64];
  volatile uint16_t fbh_io_ring[64];
  volatile firehose_ring_tail_u fbh_ring_tail;
  uint32_t_0 fbh_spi_version;
  __attribute__((aligned(64))) volatile uint16_t fbh_ring_mem_head;
  __attribute__((aligned(64))) volatile uint16_t fbh_ring_io_head;
  firehose_buffer_bank_s fbh_bank;
  firehose_buffer_stream_s fbh_stream[7];
  uint64_t_0 fbh_uniquepid;
  pid_t fbh_pid;
  mach_port_t fbh_logd_port;
  volatile mach_port_t fbh_sendp;
  mach_port_t fbh_recvp;
  uint64_t_0 fbh_unused[];
};

/* 59 */
typedef unsigned __int8 u_int8_t;

/* 58 */
typedef u_int8_t uint8_t_0;

/* 63 */
typedef __uint32_t in_addr_t;

/* 62 */
struct in_addr
{
  in_addr_t s_addr;
};

/* 64 */
typedef z_stream_s z_stream;

/* 67 */
typedef unsigned __int8 Byte;

/* 66 */
typedef Byte Bytef;

/* 68 */
typedef unsigned int uInt;

/* 69 */
typedef unsigned __int64 uLong;

/* 72 */
typedef void *voidpf;

/* 71 */
typedef voidpf (__cdecl *alloc_func)(voidpf opaque, uInt items, uInt size);

/* 73 */
typedef void (__cdecl *free_func)(voidpf opaque, voidpf address);

/* 65 */
struct z_stream_s
{
  Bytef *next_in;
  uInt avail_in;
  uLong total_in;
  Bytef *next_out;
  uInt avail_out;
  uLong total_out;
  char *msg;
  internal_state *state;
  alloc_func zalloc;
  free_func zfree;
  voidpf opaque;
  int data_type;
  uLong adler;
  uLong reserved;
};

/* 70 */
struct internal_state
{
  int dummy;
};

/* 74 */
typedef mach_port_qos mach_port_qos_t;

/* 77 */
typedef unsigned int __darwin_natural_t;

/* 76 */
typedef __darwin_natural_t natural_t;

/* 75 */
struct mach_port_qos
{
  unsigned __int32 name : 1;
  unsigned __int32 prealloc : 1;
  unsigned __int32 pad1 : 30;
  natural_t len;
};

/* 80 */
typedef uint64_t mach_vm_address_t;

/* 81 */
typedef uint64_t mach_vm_size_t;

/* 79 */
#pragma pack(push, 4)
struct mach_vm_read_entry
{
  mach_vm_address_t address;
  mach_vm_size_t size;
};
#pragma pack(pop)

/* 78 */
typedef mach_vm_read_entry mach_vm_read_entry_t[256];

/* 83 */
typedef __uint8_t sa_family_t;

/* 84 */
typedef __uint16_t in_port_t;

/* 82 */
struct sockaddr_in
{
  __uint8_t sin_len;
  sa_family_t sin_family;
  in_port_t sin_port;
  in_addr sin_addr;
  char sin_zero[8];
};

/* 87 */
struct xdrbuf::dollar_3C99F4725429E2A3FEA5222150305F9C::dollar_F1B07FB5AB0A91F7CDD6BE0247735827
{
  char *xbb_base;
  uint32_t xbb_size;
  uint32_t xbb_len;
};

/* 86 */
union xdrbuf::dollar_3C99F4725429E2A3FEA5222150305F9C
{
  xdrbuf::dollar_3C99F4725429E2A3FEA5222150305F9C::dollar_F1B07FB5AB0A91F7CDD6BE0247735827 xb_buffer;
};

/* 89 */
typedef unsigned __int64 __darwin_size_t;

/* 88 */
typedef __darwin_size_t size_t;

/* 90 */
enum xdrbuf_type
{
  XDRBUF_BUFFER = 0x1,
};

/* 85 */
struct xdrbuf
{
  xdrbuf::dollar_3C99F4725429E2A3FEA5222150305F9C xb_u;
  char *xb_ptr;
  size_t xb_left;
  size_t xb_growsize;
  xdrbuf_type xb_type;
  uint32_t xb_flags;
};

/* 91 */
typedef au_tid au_tid_t;

/* 94 */
typedef __int32_t __darwin_dev_t;

/* 93 */
typedef __darwin_dev_t dev_t;

/* 92 */
struct au_tid
{
  dev_t port;
  u_int32_t machine;
};

/* 97 */
typedef __uint32_t __darwin_uid_t;

/* 96 */
typedef __darwin_uid_t uid_t;

/* 99 */
typedef __uint32_t __darwin_gid_t;

/* 98 */
typedef __darwin_gid_t gid_t;

/* 101 */
typedef __uint16_t __darwin_mode_t;

/* 100 */
typedef __darwin_mode_t mode_t;

/* 102 */
typedef __int32_t key_t;

/* 95 */
#pragma pack(push, 4)
struct ipc_perm
{
  uid_t uid;
  gid_t gid;
  uid_t cuid;
  gid_t cgid;
  mode_t mode;
  unsigned __int16 _seq;
  key_t _key;
};
#pragma pack(pop)

/* 103 */
struct mac_policy_conf
{
  const char *mpc_name;
  const char *mpc_fullname;
  const char **mpc_labelnames;
  unsigned int mpc_labelname_count;
  mac_policy_ops *mpc_ops;
  int mpc_loadtime_flags;
  int *mpc_field_off;
  int mpc_runtime_flags;
  mac_policy_conf *mpc_list;
  void *mpc_data;
};

/* 106 */
typedef ucred *kauth_cred_t;

/* 105 */
typedef int __cdecl mpo_audit_check_postselect_t(kauth_cred_t cred, unsigned __int16 syscode, void *args, int error, int retval);

/* 122 */
typedef int __cdecl mpo_audit_check_preselect_t(kauth_cred_t cred, unsigned __int16 syscode, void *args);

/* 124 */
struct bpf_d;

/* 111 */
struct label;

/* 123 */
typedef void __cdecl mpo_bpfdesc_label_associate_t(kauth_cred_t cred, struct bpf_d *bpf_d, struct label *bpflabel);

/* 125 */
typedef void __cdecl mpo_bpfdesc_label_destroy_t(struct label *label);

/* 126 */
typedef void __cdecl mpo_bpfdesc_label_init_t(struct label *label);

/* 128 */
struct ifnet;

/* 127 */
typedef int __cdecl mpo_bpfdesc_check_receive_t(struct bpf_d *bpf_d, struct label *bpflabel, struct ifnet *ifp, struct label *ifnetlabel);

/* 130 */
struct vnode;

/* 131 */
struct proc;

/* 129 */
typedef int __cdecl mpo_cred_check_label_update_execve_t(kauth_cred_t old, struct vnode *vp, struct label *vnodelabel, struct label *scriptvnodelabel, struct label *execlabel, struct proc *proc);

/* 132 */
typedef int __cdecl mpo_cred_check_label_update_t(kauth_cred_t cred, struct label *newlabel);

/* 133 */
typedef int __cdecl mpo_cred_check_visible_t(kauth_cred_t u1, kauth_cred_t u2);

/* 135 */
typedef struct proc *proc_t;

/* 134 */
typedef void __cdecl mpo_cred_label_associate_fork_t(kauth_cred_t cred, proc_t proc);

/* 136 */
typedef void __cdecl mpo_cred_label_associate_kernel_t(kauth_cred_t cred);

/* 137 */
typedef void __cdecl mpo_cred_label_associate_t(kauth_cred_t parent_cred, kauth_cred_t child_cred);

/* 138 */
typedef void __cdecl mpo_cred_label_associate_user_t(kauth_cred_t cred);

/* 139 */
typedef void __cdecl mpo_cred_label_destroy_t(struct label *label);

/* 141 */
struct sbuf;

/* 140 */
typedef int __cdecl mpo_cred_label_externalize_audit_t(struct label *label, char *element_name, struct sbuf *sb);

/* 142 */
typedef int __cdecl mpo_cred_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);

/* 143 */
typedef void __cdecl mpo_cred_label_init_t(struct label *label);

/* 144 */
typedef int __cdecl mpo_cred_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 145 */
typedef void __cdecl mpo_cred_label_update_execve_t(kauth_cred_t old_cred, kauth_cred_t new_cred, struct vnode *vp, struct label *vnodelabel, struct label *scriptvnodelabel, struct label *execlabel, int *disjointp);

/* 146 */
typedef void __cdecl mpo_cred_label_update_t(kauth_cred_t cred, struct label *newlabel);

/* 148 */
struct devnode;

/* 147 */
typedef void __cdecl mpo_devfs_label_associate_device_t(dev_t dev, struct devnode *de, struct label *label, const char *fullpath);

/* 149 */
typedef void __cdecl mpo_devfs_label_associate_directory_t(const char *dirname, int dirnamelen, struct devnode *de, struct label *label, const char *fullpath);

/* 150 */
typedef void __cdecl mpo_devfs_label_copy_t(struct label *src, struct label *dest);

/* 151 */
typedef void __cdecl mpo_devfs_label_destroy_t(struct label *label);

/* 152 */
typedef void __cdecl mpo_devfs_label_init_t(struct label *label);

/* 154 */
struct mount;

/* 153 */
typedef void __cdecl mpo_devfs_label_update_t(struct mount *mp, struct devnode *de, struct label *delabel, struct vnode *vp, struct label *vnodelabel);

/* 156 */
struct fileglob;

/* 155 */
typedef int __cdecl mpo_file_check_change_offset_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);

/* 157 */
typedef int __cdecl mpo_file_check_create_t(kauth_cred_t cred);

/* 158 */
typedef int __cdecl mpo_file_check_dup_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int newfd);

/* 161 */
typedef __int64 int64_t;

/* 160 */
typedef int64_t user_long_t;

/* 159 */
typedef int __cdecl mpo_file_check_fcntl_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int cmd, user_long_t arg);

/* 162 */
typedef int __cdecl mpo_file_check_get_offset_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);

/* 163 */
typedef int __cdecl mpo_file_check_get_t(kauth_cred_t cred, struct fileglob *fg, char *elements, int len);

/* 164 */
typedef int __cdecl mpo_file_check_inherit_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);

/* 165 */
typedef int __cdecl mpo_file_check_ioctl_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, unsigned int cmd);

/* 166 */
typedef int __cdecl mpo_file_check_lock_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int op, flock *fl);

/* 171 */
typedef void __cdecl mpo_file_check_mmap_downgrade_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int *prot);

/* 172 */
typedef int __cdecl mpo_file_check_mmap_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int prot, int flags, int *maxprot);

/* 173 */
typedef int __cdecl mpo_file_check_receive_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);

/* 174 */
typedef int __cdecl mpo_file_check_set_t(kauth_cred_t cred, struct fileglob *fg, char *elements, int len);

/* 175 */
typedef void __cdecl mpo_file_label_init_t(struct label *label);

/* 176 */
typedef void __cdecl mpo_file_label_destroy_t(struct label *label);

/* 177 */
typedef void __cdecl mpo_file_label_associate_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);

/* 178 */
typedef int __cdecl mpo_ifnet_check_label_update_t(kauth_cred_t cred, struct ifnet *ifp, struct label *ifnetlabel, struct label *newlabel);

/* 180 */
struct mbuf;

/* 179 */
typedef int __cdecl mpo_ifnet_check_transmit_t(struct ifnet *ifp, struct label *ifnetlabel, struct mbuf *m, struct label *mbuflabel, int family, int type);

/* 181 */
typedef void __cdecl mpo_ifnet_label_associate_t(struct ifnet *ifp, struct label *ifnetlabel);

/* 182 */
typedef void __cdecl mpo_ifnet_label_copy_t(struct label *src, struct label *dest);

/* 183 */
typedef void __cdecl mpo_ifnet_label_destroy_t(struct label *label);

/* 184 */
typedef int __cdecl mpo_ifnet_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);

/* 185 */
typedef void __cdecl mpo_ifnet_label_init_t(struct label *label);

/* 186 */
typedef int __cdecl mpo_ifnet_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 187 */
typedef void __cdecl mpo_ifnet_label_update_t(kauth_cred_t cred, struct ifnet *ifp, struct label *ifnetlabel, struct label *newlabel);

/* 188 */
typedef void __cdecl mpo_ifnet_label_recycle_t(struct label *label);

/* 189 */
typedef int __cdecl mpo_inpcb_check_deliver_t(inpcb *inp, struct label *inplabel, struct mbuf *m, struct label *mbuflabel, int family, int type);

/* 203 */
typedef void __cdecl mpo_inpcb_label_associate_t(struct socket *so, struct label *solabel, inpcb *inp, struct label *inplabel);

/* 204 */
typedef void __cdecl mpo_inpcb_label_destroy_t(struct label *label);

/* 205 */
typedef int __cdecl mpo_inpcb_label_init_t(struct label *label, int flag);

/* 206 */
typedef void __cdecl mpo_inpcb_label_recycle_t(struct label *label);

/* 207 */
typedef void __cdecl mpo_inpcb_label_update_t(struct socket *so, struct label *solabel, inpcb *inp, struct label *inplabel);

/* 209 */
struct mac_module_data;

/* 208 */
typedef int __cdecl mpo_iokit_check_device_t(char *devtype, struct mac_module_data *mdata);

/* 211 */
struct ipq;

/* 210 */
typedef void __cdecl mpo_ipq_label_associate_t(struct mbuf *fragment, struct label *fragmentlabel, struct ipq *ipq, struct label *ipqlabel);

/* 212 */
typedef int __cdecl mpo_ipq_label_compare_t(struct mbuf *fragment, struct label *fragmentlabel, struct ipq *ipq, struct label *ipqlabel);

/* 213 */
typedef void __cdecl mpo_ipq_label_destroy_t(struct label *label);

/* 214 */
typedef int __cdecl mpo_ipq_label_init_t(struct label *label, int flag);

/* 215 */
typedef void __cdecl mpo_ipq_label_update_t(struct mbuf *fragment, struct label *fragmentlabel, struct ipq *ipq, struct label *ipqlabel);

/* 217 */
struct lctx;

/* 216 */
typedef int __cdecl mpo_lctx_check_label_update_t(struct lctx *l, struct label *newlabel);

/* 218 */
typedef void __cdecl mpo_lctx_label_destroy_t(struct label *label);

/* 219 */
typedef int __cdecl mpo_lctx_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);

/* 220 */
typedef void __cdecl mpo_lctx_label_init_t(struct label *label);

/* 221 */
typedef int __cdecl mpo_lctx_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 222 */
typedef void __cdecl mpo_lctx_label_update_t(struct lctx *l, struct label *newlabel);

/* 223 */
typedef void __cdecl mpo_lctx_notify_create_t(struct proc *p, struct lctx *l);

/* 224 */
typedef void __cdecl mpo_lctx_notify_join_t(struct proc *p, struct lctx *l);

/* 225 */
typedef void __cdecl mpo_lctx_notify_leave_t(struct proc *p, struct lctx *l);

/* 226 */
typedef void __cdecl mpo_mbuf_label_associate_bpfdesc_t(struct bpf_d *bpf_d, struct label *b_label, struct mbuf *m, struct label *m_label);

/* 227 */
typedef void __cdecl mpo_mbuf_label_associate_ifnet_t(struct ifnet *ifp, struct label *i_label, struct mbuf *m, struct label *m_label);

/* 228 */
typedef void __cdecl mpo_mbuf_label_associate_inpcb_t(inpcb *inp, struct label *i_label, struct mbuf *m, struct label *m_label);

/* 229 */
typedef void __cdecl mpo_mbuf_label_associate_ipq_t(struct ipq *ipq, struct label *ipqlabel, struct mbuf *mbuf, struct label *mbuflabel);

/* 230 */
typedef void __cdecl mpo_mbuf_label_associate_linklayer_t(struct ifnet *ifp, struct label *i_label, struct mbuf *m, struct label *m_label);

/* 231 */
typedef void __cdecl mpo_mbuf_label_associate_multicast_encap_t(struct mbuf *oldmbuf, struct label *oldmbuflabel, struct ifnet *ifp, struct label *ifplabel, struct mbuf *newmbuf, struct label *newmbuflabel);

/* 232 */
typedef void __cdecl mpo_mbuf_label_associate_netlayer_t(struct mbuf *oldmbuf, struct label *oldmbuflabel, struct mbuf *newmbuf, struct label *newmbuflabel);

/* 235 */
struct __socket;

/* 234 */
typedef struct __socket *socket_t;

/* 233 */
typedef void __cdecl mpo_mbuf_label_associate_socket_t(socket_t so, struct label *so_label, struct mbuf *m, struct label *m_label);

/* 236 */
typedef void __cdecl mpo_mbuf_label_copy_t(struct label *src, struct label *dest);

/* 237 */
typedef void __cdecl mpo_mbuf_label_destroy_t(struct label *label);

/* 238 */
typedef int __cdecl mpo_mbuf_label_init_t(struct label *label, int flag);

/* 239 */
typedef int __cdecl mpo_mount_check_fsctl_t(kauth_cred_t cred, struct mount *mp, struct label *label, unsigned int cmd);

/* 240 */
typedef int __cdecl mpo_mount_check_getattr_t(kauth_cred_t cred, struct mount *mp, struct label *mp_label, struct vfs_attr *vfa);

/* 241 */
typedef int __cdecl mpo_mount_check_label_update_t(kauth_cred_t cred, struct mount *mp, struct label *mntlabel);

/* 242 */
typedef int __cdecl mpo_mount_check_mount_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, struct componentname *cnp, const char *vfc_name);

/* 243 */
typedef int __cdecl mpo_mount_check_remount_t(kauth_cred_t cred, struct mount *mp, struct label *mlabel);

/* 244 */
typedef int __cdecl mpo_mount_check_setattr_t(kauth_cred_t cred, struct mount *mp, struct label *mp_label, struct vfs_attr *vfa);

/* 245 */
typedef int __cdecl mpo_mount_check_stat_t(kauth_cred_t cred, struct mount *mp, struct label *mntlabel);

/* 246 */
typedef int __cdecl mpo_mount_check_umount_t(kauth_cred_t cred, struct mount *mp, struct label *mlabel);

/* 247 */
typedef void __cdecl mpo_mount_label_associate_t(kauth_cred_t cred, struct mount *mp, struct label *mntlabel);

/* 248 */
typedef void __cdecl mpo_mount_label_destroy_t(struct label *label);

/* 249 */
typedef int __cdecl mpo_mount_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);

/* 250 */
typedef void __cdecl mpo_mount_label_init_t(struct label *label);

/* 251 */
typedef int __cdecl mpo_mount_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 252 */
typedef void __cdecl mpo_netinet_fragment_t(struct mbuf *datagram, struct label *datagramlabel, struct mbuf *fragment, struct label *fragmentlabel);

/* 253 */
typedef void __cdecl mpo_netinet_icmp_reply_t(struct mbuf *m, struct label *mlabel);

/* 254 */
typedef void __cdecl mpo_netinet_tcp_reply_t(struct mbuf *m, struct label *mlabel);

/* 256 */
struct pipe;

/* 255 */
typedef int __cdecl mpo_pipe_check_ioctl_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel, unsigned int cmd);

/* 258 */
struct knote;

/* 257 */
typedef int __cdecl mpo_pipe_check_kqfilter_t(kauth_cred_t cred, struct knote *kn, struct pipe *cpipe, struct label *pipelabel);

/* 259 */
typedef int __cdecl mpo_pipe_check_label_update_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel, struct label *newlabel);

/* 260 */
typedef int __cdecl mpo_pipe_check_read_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);

/* 261 */
typedef int __cdecl mpo_pipe_check_select_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel, int which);

/* 262 */
typedef int __cdecl mpo_pipe_check_stat_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);

/* 263 */
typedef int __cdecl mpo_pipe_check_write_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);

/* 264 */
typedef void __cdecl mpo_pipe_label_associate_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);

/* 265 */
typedef void __cdecl mpo_pipe_label_copy_t(struct label *src, struct label *dest);

/* 266 */
typedef void __cdecl mpo_pipe_label_destroy_t(struct label *label);

/* 267 */
typedef int __cdecl mpo_pipe_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);

/* 268 */
typedef void __cdecl mpo_pipe_label_init_t(struct label *label);

/* 269 */
typedef int __cdecl mpo_pipe_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 270 */
typedef void __cdecl mpo_pipe_label_update_t(kauth_cred_t cred, struct pipe *cpipe, struct label *oldlabel, struct label *newlabel);

/* 271 */
typedef void __cdecl mpo_policy_destroy_t(mac_policy_conf *mpc);

/* 272 */
typedef void __cdecl mpo_policy_init_t(mac_policy_conf *mpc);

/* 273 */
typedef void __cdecl mpo_policy_initbsd_t(mac_policy_conf *mpc);

/* 275 */
typedef u_int64_t user_addr_t;

/* 274 */
typedef int __cdecl mpo_policy_syscall_t(struct proc *p, int call, user_addr_t arg);

/* 276 */
typedef int __cdecl mpo_port_check_copy_send_t(struct label *task, struct label *port);

/* 277 */
typedef int __cdecl mpo_port_check_hold_receive_t(struct label *task, struct label *port);

/* 278 */
typedef int __cdecl mpo_port_check_hold_send_once_t(struct label *task, struct label *port);

/* 279 */
typedef int __cdecl mpo_port_check_hold_send_t(struct label *task, struct label *port);

/* 280 */
typedef int __cdecl mpo_port_check_label_update_t(struct label *task, struct label *oldlabel, struct label *newlabel);

/* 281 */
typedef int __cdecl mpo_port_check_make_send_once_t(struct label *task, struct label *port);

/* 282 */
typedef int __cdecl mpo_port_check_make_send_t(struct label *task, struct label *port);

/* 283 */
typedef int __cdecl mpo_port_check_method_t(struct proc *proc, struct label *task, struct label *port, int msgid);

/* 284 */
typedef int __cdecl mpo_port_check_move_receive_t(struct label *task, struct label *port);

/* 285 */
typedef int __cdecl mpo_port_check_move_send_once_t(struct label *task, struct label *port);

/* 286 */
typedef int __cdecl mpo_port_check_move_send_t(struct label *task, struct label *port);

/* 287 */
typedef int __cdecl mpo_port_check_receive_t(struct label *task, struct label *sender);

/* 288 */
typedef int __cdecl mpo_port_check_send_t(struct label *task, struct label *port);

/* 289 */
typedef int __cdecl mpo_port_check_service_t(struct label *subj, struct label *obj, const char *serv, const char *perm);

/* 290 */
typedef void __cdecl mpo_port_label_associate_kernel_t(struct label *portlabel, int isreply);

/* 291 */
typedef void __cdecl mpo_port_label_associate_t(struct label *it, struct label *st, struct label *portlabel);

/* 292 */
typedef int __cdecl mpo_port_label_compute_t(struct label *subj, struct label *obj, const char *serv, struct label *out);

/* 293 */
typedef void __cdecl mpo_port_label_copy_t(struct label *src, struct label *dest);

/* 294 */
typedef void __cdecl mpo_port_label_destroy_t(struct label *label);

/* 295 */
typedef void __cdecl mpo_port_label_init_t(struct label *label);

/* 296 */
typedef void __cdecl mpo_port_label_update_cred_t(struct label *cred, struct label *task);

/* 297 */
typedef void __cdecl mpo_port_label_update_kobject_t(struct label *portlabel, int kotype);

/* 298 */
typedef int __cdecl mpo_posixsem_check_create_t(kauth_cred_t cred, const char *name);

/* 300 */
struct pseminfo;

/* 299 */
typedef int __cdecl mpo_posixsem_check_open_t(kauth_cred_t cred, struct pseminfo *ps, struct label *semlabel);

/* 301 */
typedef int __cdecl mpo_posixsem_check_post_t(kauth_cred_t cred, struct pseminfo *ps, struct label *semlabel);

/* 302 */
typedef int __cdecl mpo_posixsem_check_unlink_t(kauth_cred_t cred, struct pseminfo *ps, struct label *semlabel, const char *name);

/* 303 */
typedef int __cdecl mpo_posixsem_check_wait_t(kauth_cred_t cred, struct pseminfo *ps, struct label *semlabel);

/* 304 */
typedef void __cdecl mpo_posixsem_label_associate_t(kauth_cred_t cred, struct pseminfo *ps, struct label *semlabel, const char *name);

/* 305 */
typedef void __cdecl mpo_posixsem_label_destroy_t(struct label *label);

/* 306 */
typedef void __cdecl mpo_posixsem_label_init_t(struct label *label);

/* 307 */
typedef int __cdecl mpo_posixshm_check_create_t(kauth_cred_t cred, const char *name);

/* 309 */
struct pshminfo;

/* 308 */
typedef int __cdecl mpo_posixshm_check_mmap_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel, int prot, int flags);

/* 310 */
typedef int __cdecl mpo_posixshm_check_open_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel);

/* 311 */
typedef int __cdecl mpo_posixshm_check_stat_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel);

/* 170 */
typedef __int64 __int64_t;

/* 169 */
typedef __int64_t __darwin_off_t;

/* 168 */
typedef __darwin_off_t off_t;

/* 312 */
typedef int __cdecl mpo_posixshm_check_truncate_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel, off_t len);

/* 313 */
typedef int __cdecl mpo_posixshm_check_unlink_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel, const char *name);

/* 314 */
typedef void __cdecl mpo_posixshm_label_associate_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel, const char *name);

/* 315 */
typedef void __cdecl mpo_posixshm_label_destroy_t(struct label *label);

/* 316 */
typedef void __cdecl mpo_posixshm_label_init_t(struct label *label);

/* 317 */
typedef int __cdecl mpo_proc_check_debug_t(kauth_cred_t cred, struct proc *proc);

/* 318 */
typedef int __cdecl mpo_proc_check_fork_t(kauth_cred_t cred, struct proc *proc);

/* 319 */
typedef int __cdecl mpo_proc_check_get_task_name_t(kauth_cred_t cred, struct proc *p);

/* 320 */
typedef int __cdecl mpo_proc_check_get_task_t(kauth_cred_t cred, struct proc *p);

/* 321 */
typedef int __cdecl mpo_proc_check_getaudit_t(kauth_cred_t cred);

/* 322 */
typedef int __cdecl mpo_proc_check_getauid_t(kauth_cred_t cred);

/* 323 */
typedef int __cdecl mpo_proc_check_getlcid_t(struct proc *p0, struct proc *p, pid_t pid);

/* 325 */
typedef u_int64_t user_size_t;

/* 324 */
typedef int __cdecl mpo_proc_check_mprotect_t(kauth_cred_t cred, struct proc *proc, user_addr_t addr, user_size_t size, int prot);

/* 326 */
typedef int __cdecl mpo_proc_check_sched_t(kauth_cred_t cred, struct proc *proc);

/* 327 */
typedef int __cdecl mpo_proc_check_setaudit_t(kauth_cred_t cred, auditinfo_addr *ai);

/* 328 */
typedef int __cdecl mpo_proc_check_setauid_t(kauth_cred_t cred, uid_t auid);

/* 329 */
typedef int __cdecl mpo_proc_check_setlcid_t(struct proc *p0, struct proc *p, pid_t pid, pid_t lcid);

/* 330 */
typedef int __cdecl mpo_proc_check_signal_t(kauth_cred_t cred, struct proc *proc, int signum);

/* 331 */
typedef int __cdecl mpo_proc_check_wait_t(kauth_cred_t cred, struct proc *proc);

/* 332 */
typedef void __cdecl mpo_proc_label_destroy_t(struct label *label);

/* 333 */
typedef void __cdecl mpo_proc_label_init_t(struct label *label);

/* 334 */
typedef int __cdecl mpo_socket_check_accept_t(kauth_cred_t cred, socket_t so, struct label *socklabel);

/* 335 */
typedef int __cdecl mpo_socket_check_accepted_t(kauth_cred_t cred, socket_t so, struct label *socklabel, sockaddr *addr);

/* 337 */
typedef int __cdecl mpo_socket_check_bind_t(kauth_cred_t cred, socket_t so, struct label *socklabel, sockaddr *addr);

/* 338 */
typedef int __cdecl mpo_socket_check_connect_t(kauth_cred_t cred, socket_t so, struct label *socklabel, sockaddr *addr);

/* 339 */
typedef int __cdecl mpo_socket_check_create_t(kauth_cred_t cred, int domain, int type, int protocol);

/* 340 */
typedef int __cdecl mpo_socket_check_deliver_t(socket_t so, struct label *so_label, struct mbuf *m, struct label *m_label);

/* 341 */
typedef int __cdecl mpo_socket_check_kqfilter_t(kauth_cred_t cred, struct knote *kn, socket_t so, struct label *socklabel);

/* 342 */
typedef int __cdecl mpo_socket_check_label_update_t(kauth_cred_t cred, socket_t so, struct label *so_label, struct label *newlabel);

/* 343 */
typedef int __cdecl mpo_socket_check_listen_t(kauth_cred_t cred, socket_t so, struct label *socklabel);

/* 344 */
typedef int __cdecl mpo_socket_check_receive_t(kauth_cred_t cred, socket_t so, struct label *socklabel);

/* 345 */
typedef int __cdecl mpo_socket_check_received_t(kauth_cred_t cred, struct socket *sock, struct label *socklabel, sockaddr *saddr);

/* 346 */
typedef int __cdecl mpo_socket_check_select_t(kauth_cred_t cred, socket_t so, struct label *socklabel, int which);

/* 347 */
typedef int __cdecl mpo_socket_check_send_t(kauth_cred_t cred, socket_t so, struct label *socklabel, sockaddr *addr);

/* 348 */
typedef int __cdecl mpo_socket_check_stat_t(kauth_cred_t cred, socket_t so, struct label *socklabel);

/* 349 */
typedef int __cdecl mpo_socket_check_setsockopt_t(kauth_cred_t cred, socket_t so, struct label *socklabel, struct sockopt *sopt);

/* 350 */
typedef int __cdecl mpo_socket_check_getsockopt_t(kauth_cred_t cred, socket_t so, struct label *socklabel, struct sockopt *sopt);

/* 351 */
typedef void __cdecl mpo_socket_label_associate_accept_t(socket_t oldsock, struct label *oldlabel, socket_t newsock, struct label *newlabel);

/* 352 */
typedef void __cdecl mpo_socket_label_associate_t(kauth_cred_t cred, socket_t so, struct label *solabel);

/* 353 */
typedef void __cdecl mpo_socket_label_copy_t(struct label *src, struct label *dest);

/* 354 */
typedef void __cdecl mpo_socket_label_destroy_t(struct label *label);

/* 355 */
typedef int __cdecl mpo_socket_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);

/* 356 */
typedef int __cdecl mpo_socket_label_init_t(struct label *label, int waitok);

/* 357 */
typedef int __cdecl mpo_socket_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 358 */
typedef void __cdecl mpo_socket_label_update_t(kauth_cred_t cred, socket_t so, struct label *so_label, struct label *newlabel);

/* 359 */
typedef void __cdecl mpo_socketpeer_label_associate_mbuf_t(struct mbuf *m, struct label *m_label, socket_t so, struct label *so_label);

/* 360 */
typedef void __cdecl mpo_socketpeer_label_associate_socket_t(socket_t source, struct label *sourcelabel, socket_t target, struct label *targetlabel);

/* 361 */
typedef void __cdecl mpo_socketpeer_label_destroy_t(struct label *label);

/* 362 */
typedef int __cdecl mpo_socketpeer_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);

/* 363 */
typedef int __cdecl mpo_socketpeer_label_init_t(struct label *label, int waitok);

/* 364 */
typedef int __cdecl mpo_system_check_acct_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel);

/* 365 */
typedef int __cdecl mpo_system_check_audit_t(kauth_cred_t cred, void *record, int length);

/* 366 */
typedef int __cdecl mpo_system_check_auditctl_t(kauth_cred_t cred, struct vnode *vp, struct label *vl);

/* 367 */
typedef int __cdecl mpo_system_check_auditon_t(kauth_cred_t cred, int cmd);

/* 368 */
typedef int __cdecl mpo_system_check_host_priv_t(kauth_cred_t cred);

/* 369 */
typedef int __cdecl mpo_system_check_nfsd_t(kauth_cred_t cred);

/* 370 */
typedef int __cdecl mpo_system_check_reboot_t(kauth_cred_t cred, int howto);

/* 371 */
typedef int __cdecl mpo_system_check_settime_t(kauth_cred_t cred);

/* 372 */
typedef int __cdecl mpo_system_check_swapoff_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 373 */
typedef int __cdecl mpo_system_check_swapon_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 375 */
typedef unsigned int u_int;

/* 374 */
typedef int __cdecl mpo_system_check_sysctl_t(kauth_cred_t cred, int *name, u_int namelen, user_addr_t old, user_addr_t oldlenp, int inkernel, user_addr_t newvalue, size_t newlen);

/* 376 */
typedef void __cdecl mpo_sysvmsg_label_associate_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel, msg *msgptr, struct label *msglabel);

/* 378 */
typedef void __cdecl mpo_sysvmsg_label_destroy_t(struct label *label);

/* 379 */
typedef void __cdecl mpo_sysvmsg_label_init_t(struct label *label);

/* 380 */
typedef void __cdecl mpo_sysvmsg_label_recycle_t(struct label *label);

/* 381 */
typedef int __cdecl mpo_sysvmsq_check_enqueue_t(kauth_cred_t cred, msg *msgptr, struct label *msglabel, struct msqid_kernel *msqptr, struct label *msqlabel);

/* 382 */
typedef int __cdecl mpo_sysvmsq_check_msgrcv_t(kauth_cred_t cred, msg *msgptr, struct label *msglabel);

/* 383 */
typedef int __cdecl mpo_sysvmsq_check_msgrmid_t(kauth_cred_t cred, msg *msgptr, struct label *msglabel);

/* 384 */
typedef int __cdecl mpo_sysvmsq_check_msqctl_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel, int cmd);

/* 385 */
typedef int __cdecl mpo_sysvmsq_check_msqget_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);

/* 386 */
typedef int __cdecl mpo_sysvmsq_check_msqrcv_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);

/* 387 */
typedef int __cdecl mpo_sysvmsq_check_msqsnd_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);

/* 388 */
typedef void __cdecl mpo_sysvmsq_label_associate_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);

/* 389 */
typedef void __cdecl mpo_sysvmsq_label_destroy_t(struct label *label);

/* 390 */
typedef void __cdecl mpo_sysvmsq_label_init_t(struct label *label);

/* 391 */
typedef void __cdecl mpo_sysvmsq_label_recycle_t(struct label *label);

/* 393 */
struct semid_kernel;

/* 392 */
typedef int __cdecl mpo_sysvsem_check_semctl_t(kauth_cred_t cred, struct semid_kernel *semakptr, struct label *semaklabel, int cmd);

/* 394 */
typedef int __cdecl mpo_sysvsem_check_semget_t(kauth_cred_t cred, struct semid_kernel *semakptr, struct label *semaklabel);

/* 395 */
typedef int __cdecl mpo_sysvsem_check_semop_t(kauth_cred_t cred, struct semid_kernel *semakptr, struct label *semaklabel, size_t accesstype);

/* 396 */
typedef void __cdecl mpo_sysvsem_label_associate_t(kauth_cred_t cred, struct semid_kernel *semakptr, struct label *semalabel);

/* 397 */
typedef void __cdecl mpo_sysvsem_label_destroy_t(struct label *label);

/* 398 */
typedef void __cdecl mpo_sysvsem_label_init_t(struct label *label);

/* 399 */
typedef void __cdecl mpo_sysvsem_label_recycle_t(struct label *label);

/* 401 */
struct shmid_kernel;

/* 400 */
typedef int __cdecl mpo_sysvshm_check_shmat_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel, int shmflg);

/* 402 */
typedef int __cdecl mpo_sysvshm_check_shmctl_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel, int cmd);

/* 403 */
typedef int __cdecl mpo_sysvshm_check_shmdt_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel);

/* 404 */
typedef int __cdecl mpo_sysvshm_check_shmget_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel, int shmflg);

/* 405 */
typedef void __cdecl mpo_sysvshm_label_associate_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmlabel);

/* 406 */
typedef void __cdecl mpo_sysvshm_label_destroy_t(struct label *label);

/* 407 */
typedef void __cdecl mpo_sysvshm_label_init_t(struct label *label);

/* 408 */
typedef void __cdecl mpo_sysvshm_label_recycle_t(struct label *shmlabel);

/* 410 */
struct task;

/* 409 */
typedef void __cdecl mpo_task_label_associate_kernel_t(struct task *kproc, struct label *tasklabel, struct label *portlabel);

/* 411 */
typedef void __cdecl mpo_task_label_associate_t(struct task *parent, struct task *child, struct label *parentlabel, struct label *childlabel, struct label *childportlabel);

/* 412 */
typedef void __cdecl mpo_task_label_copy_t(struct label *src, struct label *dest);

/* 413 */
typedef void __cdecl mpo_task_label_destroy_t(struct label *label);

/* 414 */
typedef int __cdecl mpo_task_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);

/* 415 */
typedef void __cdecl mpo_task_label_init_t(struct label *label);

/* 416 */
typedef int __cdecl mpo_task_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 417 */
typedef void __cdecl mpo_task_label_update_t(struct label *cred, struct label *task);

/* 418 */
typedef int __cdecl mpo_iokit_check_hid_control_t(kauth_cred_t cred);

/* 419 */
typedef int __cdecl mpo_vnode_check_access_t(kauth_cred_t cred, struct vnode *vp, struct label *label, int acc_mode);

/* 420 */
typedef int __cdecl mpo_vnode_check_chdir_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel);

/* 421 */
typedef int __cdecl mpo_vnode_check_chroot_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp);

/* 422 */
typedef int __cdecl mpo_vnode_check_create_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp, struct vnode_attr *vap);

/* 423 */
typedef int __cdecl mpo_vnode_check_deleteextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, const char *name);

/* 424 */
typedef int __cdecl mpo_vnode_check_exchangedata_t(kauth_cred_t cred, struct vnode *v1, struct label *vl1, struct vnode *v2, struct label *vl2);

/* 425 */
typedef int __cdecl mpo_vnode_check_exec_t(kauth_cred_t cred, struct vnode *vp, struct label *label, struct label *execlabel, struct componentname *cnp, u_int *csflags);

/* 426 */
typedef int __cdecl mpo_vnode_check_getattrlist_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, attrlist *alist);

/* 430 */
struct uio;

/* 429 */
typedef int __cdecl mpo_vnode_check_getextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *label, const char *name, struct uio *uio);

/* 431 */
typedef int __cdecl mpo_vnode_check_ioctl_t(kauth_cred_t cred, struct vnode *vp, struct label *label, unsigned int cmd);

/* 432 */
typedef int __cdecl mpo_vnode_check_kqfilter_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct knote *kn, struct vnode *vp, struct label *label);

/* 433 */
typedef int __cdecl mpo_vnode_check_label_update_t(ucred *cred, struct vnode *vp, struct label *vnodelabel, struct label *newlabel);

/* 434 */
typedef int __cdecl mpo_vnode_check_link_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, struct componentname *cnp);

/* 435 */
typedef int __cdecl mpo_vnode_check_listextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel);

/* 436 */
typedef int __cdecl mpo_vnode_check_lookup_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp);

/* 437 */
typedef int __cdecl mpo_vnode_check_open_t(kauth_cred_t cred, struct vnode *vp, struct label *label, int acc_mode);

/* 438 */
typedef int __cdecl mpo_vnode_check_read_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct vnode *vp, struct label *label);

/* 439 */
typedef int __cdecl mpo_vnode_check_readdir_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel);

/* 440 */
typedef int __cdecl mpo_vnode_check_readlink_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 441 */
typedef int __cdecl mpo_vnode_check_rename_from_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, struct componentname *cnp);

/* 442 */
typedef int __cdecl mpo_vnode_check_rename_to_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, int samedir, struct componentname *cnp);

/* 443 */
typedef int __cdecl mpo_vnode_check_revoke_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 444 */
typedef int __cdecl mpo_vnode_check_select_t(kauth_cred_t cred, struct vnode *vp, struct label *label, int which);

/* 445 */
typedef int __cdecl mpo_vnode_check_setattrlist_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, attrlist *alist);

/* 446 */
typedef int __cdecl mpo_vnode_check_setextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *label, const char *name, struct uio *uio);

/* 109 */
typedef unsigned __int64 u_long;

/* 447 */
typedef int __cdecl mpo_vnode_check_setflags_t(kauth_cred_t cred, struct vnode *vp, struct label *label, u_long flags);

/* 448 */
typedef int __cdecl mpo_vnode_check_setmode_t(kauth_cred_t cred, struct vnode *vp, struct label *label, mode_t mode);

/* 449 */
typedef int __cdecl mpo_vnode_check_setowner_t(kauth_cred_t cred, struct vnode *vp, struct label *label, uid_t uid, gid_t gid);

/* 452 */
typedef __int64 __darwin_time_t;

/* 451 */
struct timespec
{
  __darwin_time_t tv_sec;
  __int64 tv_nsec;
};

/* 450 */
typedef int __cdecl mpo_vnode_check_setutimes_t(kauth_cred_t cred, struct vnode *vp, struct label *label, timespec atime, timespec mtime);

/* 453 */
typedef int __cdecl mpo_vnode_check_stat_t(ucred *active_cred, ucred *file_cred, struct vnode *vp, struct label *label);

/* 454 */
typedef int __cdecl mpo_vnode_check_truncate_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct vnode *vp, struct label *label);

/* 455 */
typedef int __cdecl mpo_vnode_check_unlink_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, struct componentname *cnp);

/* 456 */
typedef int __cdecl mpo_vnode_check_write_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct vnode *vp, struct label *label);

/* 457 */
typedef void __cdecl mpo_vnode_label_associate_devfs_t(struct mount *mp, struct label *mntlabel, struct devnode *de, struct label *delabel, struct vnode *vp, struct label *vlabel);

/* 458 */
typedef int __cdecl mpo_vnode_label_associate_extattr_t(struct mount *mp, struct label *mntlabel, struct vnode *vp, struct label *vlabel);

/* 459 */
typedef void __cdecl mpo_vnode_label_associate_file_t(ucred *cred, struct mount *mp, struct label *mntlabel, struct fileglob *fg, struct label *label, struct vnode *vp, struct label *vlabel);

/* 460 */
typedef void __cdecl mpo_vnode_label_associate_pipe_t(ucred *cred, struct pipe *cpipe, struct label *pipelabel, struct vnode *vp, struct label *vlabel);

/* 461 */
typedef void __cdecl mpo_vnode_label_associate_posixsem_t(ucred *cred, struct pseminfo *psem, struct label *psemlabel, struct vnode *vp, struct label *vlabel);

/* 462 */
typedef void __cdecl mpo_vnode_label_associate_posixshm_t(ucred *cred, struct pshminfo *pshm, struct label *pshmlabel, struct vnode *vp, struct label *vlabel);

/* 463 */
typedef void __cdecl mpo_vnode_label_associate_singlelabel_t(struct mount *mp, struct label *mntlabel, struct vnode *vp, struct label *vlabel);

/* 464 */
typedef void __cdecl mpo_vnode_label_associate_socket_t(kauth_cred_t cred, socket_t so, struct label *solabel, struct vnode *vp, struct label *vlabel);

/* 465 */
typedef void __cdecl mpo_vnode_label_copy_t(struct label *src, struct label *dest);

/* 466 */
typedef void __cdecl mpo_vnode_label_destroy_t(struct label *label);

/* 467 */
typedef int __cdecl mpo_vnode_label_externalize_audit_t(struct label *label, char *element_name, struct sbuf *sb);

/* 468 */
typedef int __cdecl mpo_vnode_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);

/* 469 */
typedef void __cdecl mpo_vnode_label_init_t(struct label *label);

/* 470 */
typedef int __cdecl mpo_vnode_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 471 */
typedef void __cdecl mpo_vnode_label_recycle_t(struct label *label);

/* 472 */
typedef int __cdecl mpo_vnode_label_store_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, struct label *intlabel);

/* 473 */
typedef int __cdecl mpo_vnode_label_update_extattr_t(struct mount *mp, struct label *mntlabel, struct vnode *vp, struct label *vlabel, const char *name);

/* 474 */
typedef void __cdecl mpo_vnode_label_update_t(kauth_cred_t cred, struct vnode *vp, struct label *vnodelabel, struct label *label);

/* 475 */
typedef int __cdecl mpo_vnode_notify_create_t(kauth_cred_t cred, struct mount *mp, struct label *mntlabel, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *vlabel, struct componentname *cnp);

/* 476 */
typedef int __cdecl mpo_vnode_check_signature_t(struct vnode *vp, struct label *label, unsigned __int8 *sha1, void *signature, int size);

/* 477 */
typedef int __cdecl mpo_vnode_check_uipc_bind_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp, struct vnode_attr *vap);

/* 478 */
typedef int __cdecl mpo_vnode_check_uipc_connect_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 479 */
typedef int __cdecl mac_proc_check_run_cs_invalid_t(struct proc *p);

/* 480 */
typedef int __cdecl mpo_proc_check_suspend_resume_t(kauth_cred_t cred, struct proc *proc, int sr);

/* 481 */
typedef void mpo_reserved_hook_t(void);

/* 484 */
struct OSObject;

/* 483 */
typedef struct OSObject *io_object_t;

/* 482 */
typedef int __cdecl mpo_iokit_check_set_properties_t(kauth_cred_t cred, io_object_t entry, io_object_t properties);

/* 485 */
typedef int __cdecl mpo_system_check_chud_t(kauth_cred_t cred);

/* 486 */
typedef int __cdecl mpo_vnode_check_searchfs_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, attrlist *alist);

/* 487 */
typedef int __cdecl mpo_priv_check_t(kauth_cred_t cred, int priv);

/* 488 */
typedef int __cdecl mpo_priv_grant_t(kauth_cred_t cred, int priv);

/* 489 */
typedef int __cdecl mpo_proc_check_map_anon_t(struct proc *proc, kauth_cred_t cred, user_addr_t u_addr, user_size_t u_size, int prot, int flags, int *maxprot);

/* 490 */
typedef int __cdecl mpo_vnode_check_fsgetpath_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 491 */
typedef int __cdecl mpo_iokit_check_open_t(kauth_cred_t cred, io_object_t user_client, unsigned int user_client_type);

/* 492 */
typedef void __cdecl mpo_vnode_notify_rename_t(kauth_cred_t cred, struct vnode *vp, struct label *label, struct vnode *dvp, struct label *dlabel, struct componentname *cnp);

/* 104 */
struct mac_policy_ops
{
  mpo_audit_check_postselect_t *mpo_audit_check_postselect;
  mpo_audit_check_preselect_t *mpo_audit_check_preselect;
  mpo_bpfdesc_label_associate_t *mpo_bpfdesc_label_associate;
  mpo_bpfdesc_label_destroy_t *mpo_bpfdesc_label_destroy;
  mpo_bpfdesc_label_init_t *mpo_bpfdesc_label_init;
  mpo_bpfdesc_check_receive_t *mpo_bpfdesc_check_receive;
  mpo_cred_check_label_update_execve_t *mpo_cred_check_label_update_execve;
  mpo_cred_check_label_update_t *mpo_cred_check_label_update;
  mpo_cred_check_visible_t *mpo_cred_check_visible;
  mpo_cred_label_associate_fork_t *mpo_cred_label_associate_fork;
  mpo_cred_label_associate_kernel_t *mpo_cred_label_associate_kernel;
  mpo_cred_label_associate_t *mpo_cred_label_associate;
  mpo_cred_label_associate_user_t *mpo_cred_label_associate_user;
  mpo_cred_label_destroy_t *mpo_cred_label_destroy;
  mpo_cred_label_externalize_audit_t *mpo_cred_label_externalize_audit;
  mpo_cred_label_externalize_t *mpo_cred_label_externalize;
  mpo_cred_label_init_t *mpo_cred_label_init;
  mpo_cred_label_internalize_t *mpo_cred_label_internalize;
  mpo_cred_label_update_execve_t *mpo_cred_label_update_execve;
  mpo_cred_label_update_t *mpo_cred_label_update;
  mpo_devfs_label_associate_device_t *mpo_devfs_label_associate_device;
  mpo_devfs_label_associate_directory_t *mpo_devfs_label_associate_directory;
  mpo_devfs_label_copy_t *mpo_devfs_label_copy;
  mpo_devfs_label_destroy_t *mpo_devfs_label_destroy;
  mpo_devfs_label_init_t *mpo_devfs_label_init;
  mpo_devfs_label_update_t *mpo_devfs_label_update;
  mpo_file_check_change_offset_t *mpo_file_check_change_offset;
  mpo_file_check_create_t *mpo_file_check_create;
  mpo_file_check_dup_t *mpo_file_check_dup;
  mpo_file_check_fcntl_t *mpo_file_check_fcntl;
  mpo_file_check_get_offset_t *mpo_file_check_get_offset;
  mpo_file_check_get_t *mpo_file_check_get;
  mpo_file_check_inherit_t *mpo_file_check_inherit;
  mpo_file_check_ioctl_t *mpo_file_check_ioctl;
  mpo_file_check_lock_t *mpo_file_check_lock;
  mpo_file_check_mmap_downgrade_t *mpo_file_check_mmap_downgrade;
  mpo_file_check_mmap_t *mpo_file_check_mmap;
  mpo_file_check_receive_t *mpo_file_check_receive;
  mpo_file_check_set_t *mpo_file_check_set;
  mpo_file_label_init_t *mpo_file_label_init;
  mpo_file_label_destroy_t *mpo_file_label_destroy;
  mpo_file_label_associate_t *mpo_file_label_associate;
  mpo_ifnet_check_label_update_t *mpo_ifnet_check_label_update;
  mpo_ifnet_check_transmit_t *mpo_ifnet_check_transmit;
  mpo_ifnet_label_associate_t *mpo_ifnet_label_associate;
  mpo_ifnet_label_copy_t *mpo_ifnet_label_copy;
  mpo_ifnet_label_destroy_t *mpo_ifnet_label_destroy;
  mpo_ifnet_label_externalize_t *mpo_ifnet_label_externalize;
  mpo_ifnet_label_init_t *mpo_ifnet_label_init;
  mpo_ifnet_label_internalize_t *mpo_ifnet_label_internalize;
  mpo_ifnet_label_update_t *mpo_ifnet_label_update;
  mpo_ifnet_label_recycle_t *mpo_ifnet_label_recycle;
  mpo_inpcb_check_deliver_t *mpo_inpcb_check_deliver;
  mpo_inpcb_label_associate_t *mpo_inpcb_label_associate;
  mpo_inpcb_label_destroy_t *mpo_inpcb_label_destroy;
  mpo_inpcb_label_init_t *mpo_inpcb_label_init;
  mpo_inpcb_label_recycle_t *mpo_inpcb_label_recycle;
  mpo_inpcb_label_update_t *mpo_inpcb_label_update;
  mpo_iokit_check_device_t *mpo_iokit_check_device;
  mpo_ipq_label_associate_t *mpo_ipq_label_associate;
  mpo_ipq_label_compare_t *mpo_ipq_label_compare;
  mpo_ipq_label_destroy_t *mpo_ipq_label_destroy;
  mpo_ipq_label_init_t *mpo_ipq_label_init;
  mpo_ipq_label_update_t *mpo_ipq_label_update;
  mpo_lctx_check_label_update_t *mpo_lctx_check_label_update;
  mpo_lctx_label_destroy_t *mpo_lctx_label_destroy;
  mpo_lctx_label_externalize_t *mpo_lctx_label_externalize;
  mpo_lctx_label_init_t *mpo_lctx_label_init;
  mpo_lctx_label_internalize_t *mpo_lctx_label_internalize;
  mpo_lctx_label_update_t *mpo_lctx_label_update;
  mpo_lctx_notify_create_t *mpo_lctx_notify_create;
  mpo_lctx_notify_join_t *mpo_lctx_notify_join;
  mpo_lctx_notify_leave_t *mpo_lctx_notify_leave;
  mpo_mbuf_label_associate_bpfdesc_t *mpo_mbuf_label_associate_bpfdesc;
  mpo_mbuf_label_associate_ifnet_t *mpo_mbuf_label_associate_ifnet;
  mpo_mbuf_label_associate_inpcb_t *mpo_mbuf_label_associate_inpcb;
  mpo_mbuf_label_associate_ipq_t *mpo_mbuf_label_associate_ipq;
  mpo_mbuf_label_associate_linklayer_t *mpo_mbuf_label_associate_linklayer;
  mpo_mbuf_label_associate_multicast_encap_t *mpo_mbuf_label_associate_multicast_encap;
  mpo_mbuf_label_associate_netlayer_t *mpo_mbuf_label_associate_netlayer;
  mpo_mbuf_label_associate_socket_t *mpo_mbuf_label_associate_socket;
  mpo_mbuf_label_copy_t *mpo_mbuf_label_copy;
  mpo_mbuf_label_destroy_t *mpo_mbuf_label_destroy;
  mpo_mbuf_label_init_t *mpo_mbuf_label_init;
  mpo_mount_check_fsctl_t *mpo_mount_check_fsctl;
  mpo_mount_check_getattr_t *mpo_mount_check_getattr;
  mpo_mount_check_label_update_t *mpo_mount_check_label_update;
  mpo_mount_check_mount_t *mpo_mount_check_mount;
  mpo_mount_check_remount_t *mpo_mount_check_remount;
  mpo_mount_check_setattr_t *mpo_mount_check_setattr;
  mpo_mount_check_stat_t *mpo_mount_check_stat;
  mpo_mount_check_umount_t *mpo_mount_check_umount;
  mpo_mount_label_associate_t *mpo_mount_label_associate;
  mpo_mount_label_destroy_t *mpo_mount_label_destroy;
  mpo_mount_label_externalize_t *mpo_mount_label_externalize;
  mpo_mount_label_init_t *mpo_mount_label_init;
  mpo_mount_label_internalize_t *mpo_mount_label_internalize;
  mpo_netinet_fragment_t *mpo_netinet_fragment;
  mpo_netinet_icmp_reply_t *mpo_netinet_icmp_reply;
  mpo_netinet_tcp_reply_t *mpo_netinet_tcp_reply;
  mpo_pipe_check_ioctl_t *mpo_pipe_check_ioctl;
  mpo_pipe_check_kqfilter_t *mpo_pipe_check_kqfilter;
  mpo_pipe_check_label_update_t *mpo_pipe_check_label_update;
  mpo_pipe_check_read_t *mpo_pipe_check_read;
  mpo_pipe_check_select_t *mpo_pipe_check_select;
  mpo_pipe_check_stat_t *mpo_pipe_check_stat;
  mpo_pipe_check_write_t *mpo_pipe_check_write;
  mpo_pipe_label_associate_t *mpo_pipe_label_associate;
  mpo_pipe_label_copy_t *mpo_pipe_label_copy;
  mpo_pipe_label_destroy_t *mpo_pipe_label_destroy;
  mpo_pipe_label_externalize_t *mpo_pipe_label_externalize;
  mpo_pipe_label_init_t *mpo_pipe_label_init;
  mpo_pipe_label_internalize_t *mpo_pipe_label_internalize;
  mpo_pipe_label_update_t *mpo_pipe_label_update;
  mpo_policy_destroy_t *mpo_policy_destroy;
  mpo_policy_init_t *mpo_policy_init;
  mpo_policy_initbsd_t *mpo_policy_initbsd;
  mpo_policy_syscall_t *mpo_policy_syscall;
  mpo_port_check_copy_send_t *mpo_port_check_copy_send;
  mpo_port_check_hold_receive_t *mpo_port_check_hold_receive;
  mpo_port_check_hold_send_once_t *mpo_port_check_hold_send_once;
  mpo_port_check_hold_send_t *mpo_port_check_hold_send;
  mpo_port_check_label_update_t *mpo_port_check_label_update;
  mpo_port_check_make_send_once_t *mpo_port_check_make_send_once;
  mpo_port_check_make_send_t *mpo_port_check_make_send;
  mpo_port_check_method_t *mpo_port_check_method;
  mpo_port_check_move_receive_t *mpo_port_check_move_receive;
  mpo_port_check_move_send_once_t *mpo_port_check_move_send_once;
  mpo_port_check_move_send_t *mpo_port_check_move_send;
  mpo_port_check_receive_t *mpo_port_check_receive;
  mpo_port_check_send_t *mpo_port_check_send;
  mpo_port_check_service_t *mpo_port_check_service;
  mpo_port_label_associate_kernel_t *mpo_port_label_associate_kernel;
  mpo_port_label_associate_t *mpo_port_label_associate;
  mpo_port_label_compute_t *mpo_port_label_compute;
  mpo_port_label_copy_t *mpo_port_label_copy;
  mpo_port_label_destroy_t *mpo_port_label_destroy;
  mpo_port_label_init_t *mpo_port_label_init;
  mpo_port_label_update_cred_t *mpo_port_label_update_cred;
  mpo_port_label_update_kobject_t *mpo_port_label_update_kobject;
  mpo_posixsem_check_create_t *mpo_posixsem_check_create;
  mpo_posixsem_check_open_t *mpo_posixsem_check_open;
  mpo_posixsem_check_post_t *mpo_posixsem_check_post;
  mpo_posixsem_check_unlink_t *mpo_posixsem_check_unlink;
  mpo_posixsem_check_wait_t *mpo_posixsem_check_wait;
  mpo_posixsem_label_associate_t *mpo_posixsem_label_associate;
  mpo_posixsem_label_destroy_t *mpo_posixsem_label_destroy;
  mpo_posixsem_label_init_t *mpo_posixsem_label_init;
  mpo_posixshm_check_create_t *mpo_posixshm_check_create;
  mpo_posixshm_check_mmap_t *mpo_posixshm_check_mmap;
  mpo_posixshm_check_open_t *mpo_posixshm_check_open;
  mpo_posixshm_check_stat_t *mpo_posixshm_check_stat;
  mpo_posixshm_check_truncate_t *mpo_posixshm_check_truncate;
  mpo_posixshm_check_unlink_t *mpo_posixshm_check_unlink;
  mpo_posixshm_label_associate_t *mpo_posixshm_label_associate;
  mpo_posixshm_label_destroy_t *mpo_posixshm_label_destroy;
  mpo_posixshm_label_init_t *mpo_posixshm_label_init;
  mpo_proc_check_debug_t *mpo_proc_check_debug;
  mpo_proc_check_fork_t *mpo_proc_check_fork;
  mpo_proc_check_get_task_name_t *mpo_proc_check_get_task_name;
  mpo_proc_check_get_task_t *mpo_proc_check_get_task;
  mpo_proc_check_getaudit_t *mpo_proc_check_getaudit;
  mpo_proc_check_getauid_t *mpo_proc_check_getauid;
  mpo_proc_check_getlcid_t *mpo_proc_check_getlcid;
  mpo_proc_check_mprotect_t *mpo_proc_check_mprotect;
  mpo_proc_check_sched_t *mpo_proc_check_sched;
  mpo_proc_check_setaudit_t *mpo_proc_check_setaudit;
  mpo_proc_check_setauid_t *mpo_proc_check_setauid;
  mpo_proc_check_setlcid_t *mpo_proc_check_setlcid;
  mpo_proc_check_signal_t *mpo_proc_check_signal;
  mpo_proc_check_wait_t *mpo_proc_check_wait;
  mpo_proc_label_destroy_t *mpo_proc_label_destroy;
  mpo_proc_label_init_t *mpo_proc_label_init;
  mpo_socket_check_accept_t *mpo_socket_check_accept;
  mpo_socket_check_accepted_t *mpo_socket_check_accepted;
  mpo_socket_check_bind_t *mpo_socket_check_bind;
  mpo_socket_check_connect_t *mpo_socket_check_connect;
  mpo_socket_check_create_t *mpo_socket_check_create;
  mpo_socket_check_deliver_t *mpo_socket_check_deliver;
  mpo_socket_check_kqfilter_t *mpo_socket_check_kqfilter;
  mpo_socket_check_label_update_t *mpo_socket_check_label_update;
  mpo_socket_check_listen_t *mpo_socket_check_listen;
  mpo_socket_check_receive_t *mpo_socket_check_receive;
  mpo_socket_check_received_t *mpo_socket_check_received;
  mpo_socket_check_select_t *mpo_socket_check_select;
  mpo_socket_check_send_t *mpo_socket_check_send;
  mpo_socket_check_stat_t *mpo_socket_check_stat;
  mpo_socket_check_setsockopt_t *mpo_socket_check_setsockopt;
  mpo_socket_check_getsockopt_t *mpo_socket_check_getsockopt;
  mpo_socket_label_associate_accept_t *mpo_socket_label_associate_accept;
  mpo_socket_label_associate_t *mpo_socket_label_associate;
  mpo_socket_label_copy_t *mpo_socket_label_copy;
  mpo_socket_label_destroy_t *mpo_socket_label_destroy;
  mpo_socket_label_externalize_t *mpo_socket_label_externalize;
  mpo_socket_label_init_t *mpo_socket_label_init;
  mpo_socket_label_internalize_t *mpo_socket_label_internalize;
  mpo_socket_label_update_t *mpo_socket_label_update;
  mpo_socketpeer_label_associate_mbuf_t *mpo_socketpeer_label_associate_mbuf;
  mpo_socketpeer_label_associate_socket_t *mpo_socketpeer_label_associate_socket;
  mpo_socketpeer_label_destroy_t *mpo_socketpeer_label_destroy;
  mpo_socketpeer_label_externalize_t *mpo_socketpeer_label_externalize;
  mpo_socketpeer_label_init_t *mpo_socketpeer_label_init;
  mpo_system_check_acct_t *mpo_system_check_acct;
  mpo_system_check_audit_t *mpo_system_check_audit;
  mpo_system_check_auditctl_t *mpo_system_check_auditctl;
  mpo_system_check_auditon_t *mpo_system_check_auditon;
  mpo_system_check_host_priv_t *mpo_system_check_host_priv;
  mpo_system_check_nfsd_t *mpo_system_check_nfsd;
  mpo_system_check_reboot_t *mpo_system_check_reboot;
  mpo_system_check_settime_t *mpo_system_check_settime;
  mpo_system_check_swapoff_t *mpo_system_check_swapoff;
  mpo_system_check_swapon_t *mpo_system_check_swapon;
  mpo_system_check_sysctl_t *mpo_system_check_sysctl;
  mpo_sysvmsg_label_associate_t *mpo_sysvmsg_label_associate;
  mpo_sysvmsg_label_destroy_t *mpo_sysvmsg_label_destroy;
  mpo_sysvmsg_label_init_t *mpo_sysvmsg_label_init;
  mpo_sysvmsg_label_recycle_t *mpo_sysvmsg_label_recycle;
  mpo_sysvmsq_check_enqueue_t *mpo_sysvmsq_check_enqueue;
  mpo_sysvmsq_check_msgrcv_t *mpo_sysvmsq_check_msgrcv;
  mpo_sysvmsq_check_msgrmid_t *mpo_sysvmsq_check_msgrmid;
  mpo_sysvmsq_check_msqctl_t *mpo_sysvmsq_check_msqctl;
  mpo_sysvmsq_check_msqget_t *mpo_sysvmsq_check_msqget;
  mpo_sysvmsq_check_msqrcv_t *mpo_sysvmsq_check_msqrcv;
  mpo_sysvmsq_check_msqsnd_t *mpo_sysvmsq_check_msqsnd;
  mpo_sysvmsq_label_associate_t *mpo_sysvmsq_label_associate;
  mpo_sysvmsq_label_destroy_t *mpo_sysvmsq_label_destroy;
  mpo_sysvmsq_label_init_t *mpo_sysvmsq_label_init;
  mpo_sysvmsq_label_recycle_t *mpo_sysvmsq_label_recycle;
  mpo_sysvsem_check_semctl_t *mpo_sysvsem_check_semctl;
  mpo_sysvsem_check_semget_t *mpo_sysvsem_check_semget;
  mpo_sysvsem_check_semop_t *mpo_sysvsem_check_semop;
  mpo_sysvsem_label_associate_t *mpo_sysvsem_label_associate;
  mpo_sysvsem_label_destroy_t *mpo_sysvsem_label_destroy;
  mpo_sysvsem_label_init_t *mpo_sysvsem_label_init;
  mpo_sysvsem_label_recycle_t *mpo_sysvsem_label_recycle;
  mpo_sysvshm_check_shmat_t *mpo_sysvshm_check_shmat;
  mpo_sysvshm_check_shmctl_t *mpo_sysvshm_check_shmctl;
  mpo_sysvshm_check_shmdt_t *mpo_sysvshm_check_shmdt;
  mpo_sysvshm_check_shmget_t *mpo_sysvshm_check_shmget;
  mpo_sysvshm_label_associate_t *mpo_sysvshm_label_associate;
  mpo_sysvshm_label_destroy_t *mpo_sysvshm_label_destroy;
  mpo_sysvshm_label_init_t *mpo_sysvshm_label_init;
  mpo_sysvshm_label_recycle_t *mpo_sysvshm_label_recycle;
  mpo_task_label_associate_kernel_t *mpo_task_label_associate_kernel;
  mpo_task_label_associate_t *mpo_task_label_associate;
  mpo_task_label_copy_t *mpo_task_label_copy;
  mpo_task_label_destroy_t *mpo_task_label_destroy;
  mpo_task_label_externalize_t *mpo_task_label_externalize;
  mpo_task_label_init_t *mpo_task_label_init;
  mpo_task_label_internalize_t *mpo_task_label_internalize;
  mpo_task_label_update_t *mpo_task_label_update;
  mpo_iokit_check_hid_control_t *mpo_iokit_check_hid_control;
  mpo_vnode_check_access_t *mpo_vnode_check_access;
  mpo_vnode_check_chdir_t *mpo_vnode_check_chdir;
  mpo_vnode_check_chroot_t *mpo_vnode_check_chroot;
  mpo_vnode_check_create_t *mpo_vnode_check_create;
  mpo_vnode_check_deleteextattr_t *mpo_vnode_check_deleteextattr;
  mpo_vnode_check_exchangedata_t *mpo_vnode_check_exchangedata;
  mpo_vnode_check_exec_t *mpo_vnode_check_exec;
  mpo_vnode_check_getattrlist_t *mpo_vnode_check_getattrlist;
  mpo_vnode_check_getextattr_t *mpo_vnode_check_getextattr;
  mpo_vnode_check_ioctl_t *mpo_vnode_check_ioctl;
  mpo_vnode_check_kqfilter_t *mpo_vnode_check_kqfilter;
  mpo_vnode_check_label_update_t *mpo_vnode_check_label_update;
  mpo_vnode_check_link_t *mpo_vnode_check_link;
  mpo_vnode_check_listextattr_t *mpo_vnode_check_listextattr;
  mpo_vnode_check_lookup_t *mpo_vnode_check_lookup;
  mpo_vnode_check_open_t *mpo_vnode_check_open;
  mpo_vnode_check_read_t *mpo_vnode_check_read;
  mpo_vnode_check_readdir_t *mpo_vnode_check_readdir;
  mpo_vnode_check_readlink_t *mpo_vnode_check_readlink;
  mpo_vnode_check_rename_from_t *mpo_vnode_check_rename_from;
  mpo_vnode_check_rename_to_t *mpo_vnode_check_rename_to;
  mpo_vnode_check_revoke_t *mpo_vnode_check_revoke;
  mpo_vnode_check_select_t *mpo_vnode_check_select;
  mpo_vnode_check_setattrlist_t *mpo_vnode_check_setattrlist;
  mpo_vnode_check_setextattr_t *mpo_vnode_check_setextattr;
  mpo_vnode_check_setflags_t *mpo_vnode_check_setflags;
  mpo_vnode_check_setmode_t *mpo_vnode_check_setmode;
  mpo_vnode_check_setowner_t *mpo_vnode_check_setowner;
  mpo_vnode_check_setutimes_t *mpo_vnode_check_setutimes;
  mpo_vnode_check_stat_t *mpo_vnode_check_stat;
  mpo_vnode_check_truncate_t *mpo_vnode_check_truncate;
  mpo_vnode_check_unlink_t *mpo_vnode_check_unlink;
  mpo_vnode_check_write_t *mpo_vnode_check_write;
  mpo_vnode_label_associate_devfs_t *mpo_vnode_label_associate_devfs;
  mpo_vnode_label_associate_extattr_t *mpo_vnode_label_associate_extattr;
  mpo_vnode_label_associate_file_t *mpo_vnode_label_associate_file;
  mpo_vnode_label_associate_pipe_t *mpo_vnode_label_associate_pipe;
  mpo_vnode_label_associate_posixsem_t *mpo_vnode_label_associate_posixsem;
  mpo_vnode_label_associate_posixshm_t *mpo_vnode_label_associate_posixshm;
  mpo_vnode_label_associate_singlelabel_t *mpo_vnode_label_associate_singlelabel;
  mpo_vnode_label_associate_socket_t *mpo_vnode_label_associate_socket;
  mpo_vnode_label_copy_t *mpo_vnode_label_copy;
  mpo_vnode_label_destroy_t *mpo_vnode_label_destroy;
  mpo_vnode_label_externalize_audit_t *mpo_vnode_label_externalize_audit;
  mpo_vnode_label_externalize_t *mpo_vnode_label_externalize;
  mpo_vnode_label_init_t *mpo_vnode_label_init;
  mpo_vnode_label_internalize_t *mpo_vnode_label_internalize;
  mpo_vnode_label_recycle_t *mpo_vnode_label_recycle;
  mpo_vnode_label_store_t *mpo_vnode_label_store;
  mpo_vnode_label_update_extattr_t *mpo_vnode_label_update_extattr;
  mpo_vnode_label_update_t *mpo_vnode_label_update;
  mpo_vnode_notify_create_t *mpo_vnode_notify_create;
  mpo_vnode_check_signature_t *mpo_vnode_check_signature;
  mpo_vnode_check_uipc_bind_t *mpo_vnode_check_uipc_bind;
  mpo_vnode_check_uipc_connect_t *mpo_vnode_check_uipc_connect;
  mac_proc_check_run_cs_invalid_t *mpo_proc_check_run_cs_invalid;
  mpo_proc_check_suspend_resume_t *mpo_proc_check_suspend_resume;
  mpo_reserved_hook_t *mpo_reserved12;
  mpo_iokit_check_set_properties_t *mpo_iokit_check_set_properties;
  mpo_system_check_chud_t *mpo_system_check_chud;
  mpo_vnode_check_searchfs_t *mpo_vnode_check_searchfs;
  mpo_priv_check_t *mpo_priv_check;
  mpo_priv_grant_t *mpo_priv_grant;
  mpo_proc_check_map_anon_t *mpo_proc_check_map_anon;
  mpo_vnode_check_fsgetpath_t *mpo_vnode_check_fsgetpath;
  mpo_iokit_check_open_t *mpo_iokit_check_open;
  mpo_vnode_notify_rename_t *mpo_vnode_notify_rename;
  mpo_reserved_hook_t *mpo_reserved14;
  mpo_reserved_hook_t *mpo_reserved15;
  mpo_reserved_hook_t *mpo_reserved16;
  mpo_reserved_hook_t *mpo_reserved17;
  mpo_reserved_hook_t *mpo_reserved18;
  mpo_reserved_hook_t *mpo_reserved19;
  mpo_reserved_hook_t *mpo_reserved20;
  mpo_reserved_hook_t *mpo_reserved21;
  mpo_reserved_hook_t *mpo_reserved22;
  mpo_reserved_hook_t *mpo_reserved23;
  mpo_reserved_hook_t *mpo_reserved24;
  mpo_reserved_hook_t *mpo_reserved25;
  mpo_reserved_hook_t *mpo_reserved26;
  mpo_reserved_hook_t *mpo_reserved27;
  mpo_reserved_hook_t *mpo_reserved28;
  mpo_reserved_hook_t *mpo_reserved29;
};

/* 108 */
struct ucred::dollar_FA68314EC5A1B61A7AF0AAA32900A7CA
{
  ucred *tqe_next;
  ucred **tqe_prev;
};

/* 110 */
struct ucred::posix_cred
{
  uid_t cr_uid;
  uid_t cr_ruid;
  uid_t cr_svuid;
  __int16 cr_ngroups;
  gid_t cr_groups[16];
  gid_t cr_rgid;
  gid_t cr_svgid;
  uid_t cr_gmuid;
  int cr_flags;
};

/* 113 */
typedef auditinfo_addr auditinfo_addr_t;

/* 117 */
struct au_mask
{
  unsigned int am_success;
  unsigned int am_failure;
};

/* 116 */
typedef au_mask au_mask_t;

/* 112 */
struct au_session
{
  auditinfo_addr_t *as_aia_p;
  au_mask_t as_mask;
};

/* 107 */
struct ucred
{
  ucred::dollar_FA68314EC5A1B61A7AF0AAA32900A7CA cr_link;
  u_long cr_ref;
  ucred::posix_cred cr_posix;
  label *cr_label;
  au_session cr_audit;
};

/* 115 */
typedef uid_t au_id_t;

/* 119 */
struct au_tid_addr
{
  dev_t at_port;
  u_int32_t at_type;
  u_int32_t at_addr[4];
};

/* 118 */
typedef au_tid_addr au_tid_addr_t;

/* 120 */
typedef pid_t au_asid_t;

/* 121 */
typedef u_int64_t au_asflgs_t;

/* 114 */
struct auditinfo_addr
{
  au_id_t ai_auid;
  au_mask_t ai_mask;
  au_tid_addr_t ai_termid;
  au_asid_t ai_asid;
  au_asflgs_t ai_flags;
};

/* 167 */
struct flock
{
  off_t l_start;
  off_t l_len;
  pid_t l_pid;
  __int16 l_type;
  __int16 l_whence;
};

/* 191 */
#pragma pack(push, 4)
struct _inpcb_list_entry
{
  u_int32_t le_next;
  u_int32_t le_prev;
};
#pragma pack(pop)

/* 192 */
typedef unsigned __int16 u_short;

/* 193 */
typedef unsigned __int8 u_char;

/* 195 */
typedef u_int64_t u_quad_t;

/* 194 */
typedef u_quad_t inp_gen_t;

/* 197 */
struct in_addr_4in6
{
  u_int32_t ia46_pad32[3];
  in_addr ia46_addr4;
};

/* 196 */
#pragma pack(push, 4)
union inpcb::dollar_BD75B87EE766833A3DF9644C7FCC1E00
{
  in_addr_4in6 inp46_foreign;
  in6_addr inp6_foreign;
};
#pragma pack(pop)

/* 198 */
#pragma pack(push, 4)
union inpcb::dollar_61B649B2802E895728C8AA130C15F594
{
  in_addr_4in6 inp46_local;
  in6_addr inp6_local;
};
#pragma pack(pop)

/* 199 */
#pragma pack(push, 4)
union inpcb::dollar_1F3C467F2673A40775B3C04457DCB635
{
  u_char inp4_route[20];
  u_char inp6_route[32];
};
#pragma pack(pop)

/* 200 */
#pragma pack(push, 4)
struct inpcb::dollar_6F13D882517E6D5CBD1B080626F65DC4
{
  u_char inp4_ip_tos;
  u_int32_t inp4_options;
  u_int32_t inp4_moptions;
};
#pragma pack(pop)

/* 202 */
typedef unsigned __int16 ushort;

/* 201 */
#pragma pack(push, 4)
struct inpcb::dollar_F2E854D5640579B71C918C53FCA5BF60
{
  u_int32_t inp6_options;
  u_int8_t inp6_hlim;
  u_int8_t unused_uint8_1;
  ushort unused_uint16_1;
  u_int32_t inp6_outputopts;
  u_int32_t inp6_moptions;
  u_int32_t inp6_icmp6filt;
  int inp6_cksum;
  u_short inp6_ifindex;
  __int16 inp6_hops;
};
#pragma pack(pop)

/* 190 */
#pragma pack(push, 4)
struct inpcb
{
  _inpcb_list_entry inp_hash;
  in_addr reserved1;
  in_addr reserved2;
  u_short inp_fport;
  u_short inp_lport;
  _inpcb_list_entry inp_list;
  u_int32_t inp_ppcb;
  u_int32_t inp_pcbinfo;
  u_int32_t inp_socket;
  u_char nat_owner;
  u_int32_t nat_cookie;
  _inpcb_list_entry inp_portlist;
  u_int32_t inp_phd;
  inp_gen_t inp_gencnt;
  int inp_flags;
  u_int32_t inp_flow;
  u_char inp_vflag;
  u_char inp_ip_ttl;
  u_char inp_ip_p;
  inpcb::dollar_BD75B87EE766833A3DF9644C7FCC1E00 inp_dependfaddr;
  inpcb::dollar_61B649B2802E895728C8AA130C15F594 inp_dependladdr;
  inpcb::dollar_1F3C467F2673A40775B3C04457DCB635 inp_dependroute;
  inpcb::dollar_6F13D882517E6D5CBD1B080626F65DC4 inp_depend4;
  inpcb::dollar_F2E854D5640579B71C918C53FCA5BF60 inp_depend6;
  int hash_element;
  u_int32_t inp_saved_ppcb;
  u_int32_t inp_sp;
  u_int32_t reserved[3];
};
#pragma pack(pop)

/* 336 */
struct sockaddr
{
  __uint8_t sa_len;
  sa_family_t sa_family;
  char sa_data[14];
};

/* 377 */
struct msg
{
  msg *msg_next;
  __int64 msg_type;
  unsigned __int16 msg_ts;
  __int16 msg_spot;
  label *label;
};

/* 428 */
typedef u_int32_t attrgroup_t;

/* 427 */
struct attrlist
{
  u_short bitmapcount;
  u_int16_t reserved;
  attrgroup_t commonattr;
  attrgroup_t volattr;
  attrgroup_t dirattr;
  attrgroup_t fileattr;
  attrgroup_t forkattr;
};

/* 493 */
typedef dollar_71210C31999B47ECFCA79A4496892A9D mach_msg_header_t;

/* 495 */
typedef unsigned int mach_msg_bits_t;

/* 496 */
typedef natural_t mach_msg_size_t;

/* 497 */
typedef integer_t mach_msg_id_t;

/* 494 */
#pragma pack(push, 4)
struct dollar_71210C31999B47ECFCA79A4496892A9D
{
  mach_msg_bits_t msgh_bits;
  mach_msg_size_t msgh_size;
  mach_port_t msgh_remote_port;
  mach_port_t msgh_local_port;
  mach_msg_size_t msgh_reserved;
  mach_msg_id_t msgh_id;
};
#pragma pack(pop)

/* 498 */
struct OSMetaClassBase;

/* 499 */
struct OSMetaClassMeta;

/* 500 */
struct OSMetaClass;

/* 501 */
struct OSObject::MetaClass;

/* 502 */
struct OSArray;

/* 503 */
struct OSBoolean;

/* 504 */
struct OSCollection;

/* 505 */
struct OSCollection::MetaClass;

/* 506 */
struct OSCollectionIterator;

/* 507 */
struct OSData;

/* 508 */
struct OSDictionary;

/* 509 */
struct OSIterator;

/* 510 */
struct OSIterator::MetaClass;

/* 511 */
struct OSKext;

/* 512 */
struct OSNumber;

/* 513 */
struct OSOrderedSet;

/* 514 */
struct OSSerialize;

/* 515 */
struct OSSerializer;

/* 516 */
struct OSSet;

/* 517 */
struct OSString;

/* 518 */
struct OSSymbol;

/* 519 */
struct OSSymbolPool;

/* 520 */
struct IOConditionLock;

/* 521 */
struct IORegistryEntry;

/* 522 */
struct IORegistryIterator;

/* 523 */
struct IORegistryPlane;

/* 524 */
struct IOService;

/* 525 */
struct _IOServiceInterestNotifier;

/* 526 */
struct _IOOpenServiceIterator;

/* 527 */
struct _IOServiceNotifier;

/* 528 */
struct _IOConfigThread;

/* 529 */
struct _IOServiceJob;

/* 530 */
struct _IOServiceNullNotifier;

/* 531 */
struct IOResources;

/* 532 */
struct IONotifier;

/* 533 */
struct IONotifier::MetaClass;

/* 534 */
struct IOPMRequest;

/* 535 */
struct IOPMRequestQueue;

/* 536 */
struct IOPMWorkQueue;

/* 537 */
struct IOPMCompletionQueue;

/* 538 */
struct IOServicePM;

/* 539 */
struct IOPMinformee;

/* 540 */
struct IOPMinformeeList;

/* 541 */
struct IOPMPowerStateQueue;

/* 542 */
struct IOCatalogue;

/* 543 */
struct IOPMPowerSource;

/* 544 */
struct IOPMPowerSourceList;

/* 545 */
struct IOPolledInterface;

/* 546 */
struct IOPolledInterface::MetaClass;

/* 547 */
struct IOPolledFilePollers;

/* 548 */
struct IOWorkLoop;

/* 549 */
struct IOEventSource;

/* 550 */
struct IOEventSource::MetaClass;

/* 551 */
struct IOInterruptEventSource;

/* 552 */
struct IOCommandGate;

/* 553 */
struct IOCommand;

/* 554 */
struct IOCommandPool;

/* 555 */
struct IODMAEventSource;

/* 556 */
struct IOFilterInterruptEventSource;

/* 557 */
struct IOTimerEventSource;

/* 558 */
struct IOBufferMemoryDescriptor;

/* 559 */
struct IODMACommand;

/* 560 */
struct IODeviceMemory;

/* 561 */
struct IOInterleavedMemoryDescriptor;

/* 562 */
struct IOMapper;

/* 563 */
struct IOMapper::MetaClass;

/* 564 */
struct IOMemoryCursor;

/* 565 */
struct IONaturalMemoryCursor;

/* 566 */
struct IOBigMemoryCursor;

/* 567 */
struct IOLittleMemoryCursor;

/* 568 */
struct IOMemoryDescriptor;

/* 569 */
struct IOGeneralMemoryDescriptor;

/* 570 */
struct IOMemoryMap;

/* 571 */
struct IOMemoryDescriptor::MetaClass;

/* 572 */
struct IOMultiMemoryDescriptor;

/* 573 */
struct IORangeAllocator;

/* 574 */
struct IOSubMemoryDescriptor;

/* 575 */
struct IOPlatformExpert;

/* 576 */
struct IOPlatformDevice;

/* 577 */
struct IODTPlatformExpert;

/* 578 */
struct IODTPlatformExpert::MetaClass;

/* 579 */
struct IOPlatformExpertDevice;

/* 580 */
struct IOPanicPlatform;

/* 581 */
struct IOCPU;

/* 582 */
struct IOCPU::MetaClass;

/* 583 */
struct IOCPUInterruptController;

/* 584 */
struct IODTNVRAM;

/* 585 */
struct IODMAController;

/* 586 */
struct IODMAController::MetaClass;

/* 587 */
struct IOInterruptController;

/* 588 */
struct IOSharedInterruptController;

/* 589 */
struct IOInterruptController::MetaClass;

/* 590 */
struct IOMachPort;

/* 591 */
struct IOUserIterator;

/* 592 */
struct IOUserNotification;

/* 593 */
struct IOUserNotification::MetaClass;

/* 594 */
struct IOServiceUserNotification;

/* 595 */
struct IOServiceMessageUserNotification;

/* 596 */
struct IOUserClient;

/* 597 */
struct IOUserClient::MetaClass;

/* 598 */
struct IOKitDiagnostics;

/* 599 */
struct IOKitDiagnosticsClient;

/* 600 */
struct IODataQueue;

/* 601 */
struct IOSharedDataQueue;

/* 602 */
struct IOReporter;

/* 603 */
struct IOSimpleReporter;

/* 604 */
struct IOStateReporter;

/* 605 */
struct IOHistogramReporter;

/* 606 */
struct IOReportLegend;

/* 607 */
struct IORTC;

/* 608 */
struct IORTC::MetaClass;

/* 609 */
struct RootDomainUserClient;

/* 610 */
struct IOPowerConnection;

/* 611 */
struct IOWatchDogTimer;

/* 612 */
struct IOWatchDogTimer::MetaClass;

/* 613 */
struct IOSKRegionMapper;

/* 614 */
struct IOSKMapper;

/* 615 */
struct IOSKArena;

/* 616 */
struct IOSKRegion;

/* 617 */
struct IOSKMemoryArray;

/* 618 */
struct IOSKMemoryBuffer;

/* 619 */
struct IOSyncer;

/* 620 */
struct PMAssertionsTracker;

/* 621 */
struct PMHaltWorker;

/* 622 */
struct IOPMrootDomain;

/* 623 */
struct IOPMServiceInterestNotifier;

/* 624 */
struct IORootParent;

/* 625 */
struct PMTraceWorker;

/* 626 */
struct PMSettingHandle;

/* 627 */
struct PMSettingObject;

/* 628 */
struct KLDBootstrap;

/* 629 */
struct OSArray::MetaClass;

/* 630 */
struct OSBoolean::MetaClass;

/* 631 */
struct OSCollectionIterator::MetaClass;

/* 632 */
struct OSData::MetaClass;

/* 633 */
struct OSDictionary::MetaClass;

/* 634 */
struct OSKext::MetaClass;

/* 635 */
struct OSNumber::MetaClass;

/* 636 */
struct OSOrderedSet::MetaClass;

/* 637 */
struct OSSerialize::MetaClass;

/* 638 */
struct OSSerializer::MetaClass;

/* 639 */
struct OSSet::MetaClass;

/* 640 */
struct OSString::MetaClass;

/* 641 */
struct OSSymbol::MetaClass;

/* 642 */
struct __va_list_tag
{
  unsigned int gp_offset;
  unsigned int fp_offset;
  void *overflow_arg_area;
  void *reg_save_area;
};

/* 643 */
typedef struct __va_list_tag __gnuc_va_list[1];

/* 644 */
struct IOConditionLock::MetaClass;

/* 645 */
struct IORegistryEntry::MetaClass;

/* 646 */
struct IORegistryPlane::MetaClass;

/* 647 */
struct IORegistryIterator::MetaClass;

/* 648 */
struct IOService::MetaClass;

/* 649 */
struct _IOServiceNotifier::MetaClass;

/* 650 */
struct _IOServiceNullNotifier::MetaClass;

/* 651 */
struct _IOServiceInterestNotifier::MetaClass;

/* 652 */
struct _IOConfigThread::MetaClass;

/* 653 */
struct _IOServiceJob::MetaClass;

/* 654 */
struct IOResources::MetaClass;

/* 655 */
struct _IOOpenServiceIterator::MetaClass;

/* 656 */
struct IOPMRequest::MetaClass;

/* 657 */
struct IOPMRequestQueue::MetaClass;

/* 658 */
struct IOPMWorkQueue::MetaClass;

/* 659 */
struct IOPMCompletionQueue::MetaClass;

/* 660 */
struct IOServicePM::MetaClass;

/* 661 */
struct IOPMinformee::MetaClass;

/* 662 */
struct IOPMinformeeList::MetaClass;

/* 663 */
struct IOPMPowerStateQueue::MetaClass;

/* 664 */
struct IOCatalogue::MetaClass;

/* 665 */
struct IOPMPowerSource::MetaClass;

/* 666 */
struct IOPMPowerSourceList::MetaClass;

/* 667 */
struct IOPolledFilePollers::MetaClass;

/* 668 */
struct IOWorkLoop::MetaClass;

/* 669 */
struct IOInterruptEventSource::MetaClass;

/* 670 */
struct IOCommandGate::MetaClass;

/* 671 */
struct IOCommand::MetaClass;

/* 672 */
struct IOCommandPool::MetaClass;

/* 673 */
struct IODMAEventSource::MetaClass;

/* 674 */
struct IOFilterInterruptEventSource::MetaClass;

/* 675 */
struct IOTimerEventSource::MetaClass;

/* 676 */
struct IOBufferMemoryDescriptor::MetaClass;

/* 677 */
struct IODMACommand::MetaClass;

/* 678 */
struct IOInterleavedMemoryDescriptor::MetaClass;

/* 679 */
struct IOMemoryCursor::MetaClass;

/* 680 */
struct IONaturalMemoryCursor::MetaClass;

/* 681 */
struct IOBigMemoryCursor::MetaClass;

/* 682 */
struct IOLittleMemoryCursor::MetaClass;

/* 683 */
struct IOGeneralMemoryDescriptor::MetaClass;

/* 684 */
struct IOMemoryMap::MetaClass;

/* 685 */
struct IOMultiMemoryDescriptor::MetaClass;

/* 686 */
struct IORangeAllocator::MetaClass;

/* 687 */
struct IOSubMemoryDescriptor::MetaClass;

/* 688 */
struct IOPlatformExpert::MetaClass;

/* 689 */
struct IOPlatformExpertDevice::MetaClass;

/* 690 */
struct IOPlatformDevice::MetaClass;

/* 691 */
struct IOPanicPlatform::MetaClass;

/* 692 */
struct IOCPUInterruptController::MetaClass;

/* 693 */
struct IODTNVRAM::MetaClass;

/* 694 */
struct IOSharedInterruptController::MetaClass;

/* 695 */
struct IOMachPort::MetaClass;

/* 696 */
struct IOUserIterator::MetaClass;

/* 697 */
struct IOServiceUserNotification::MetaClass;

/* 698 */
struct IOServiceMessageUserNotification::MetaClass;

/* 699 */
struct IOKitDiagnostics::MetaClass;

/* 700 */
struct IOKitDiagnosticsClient::MetaClass;

/* 701 */
struct IODataQueue::MetaClass;

/* 702 */
struct IOSharedDataQueue::MetaClass;

/* 703 */
struct IOStatistics;

/* 704 */
struct IOReporter::MetaClass;

/* 705 */
struct IOSimpleReporter::MetaClass;

/* 706 */
struct IOStateReporter::MetaClass;

/* 707 */
struct IOHistogramReporter::MetaClass;

/* 708 */
struct IOReportLegend::MetaClass;

/* 709 */
struct RootDomainUserClient::MetaClass;

/* 710 */
struct IOPowerConnection::MetaClass;

/* 711 */
struct IOSKRegionMapper::MetaClass;

/* 712 */
struct IOSKMapper::MetaClass;

/* 713 */
struct IOSKArena::MetaClass;

/* 714 */
struct IOSKRegion::MetaClass;

/* 715 */
struct IOSKMemoryArray::MetaClass;

/* 716 */
struct IOSKMemoryBuffer::MetaClass;

/* 717 */
struct IOSyncer::MetaClass;

/* 718 */
struct PMAssertionsTracker::MetaClass;

/* 719 */
struct PMHaltWorker::MetaClass;

/* 720 */
struct IOPMrootDomain::MetaClass;

/* 721 */
struct IOPMServiceInterestNotifier::MetaClass;

/* 722 */
struct PMTraceWorker::MetaClass;

/* 723 */
struct PMSettingHandle::MetaClass;

/* 724 */
struct PMSettingObject::MetaClass;

/* 725 */
struct IORootParent::MetaClass;

