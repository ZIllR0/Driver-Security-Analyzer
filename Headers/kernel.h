/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'kernel.iDEA'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct $0BA82F063C392BF02AF0AA599B603A12;
struct $0B20F48E2CD2D778BD1F216BA81B71CE;
struct $B8B9B85B971E3DBFC31707A9282CDA9E;
struct select_nocancel_args;
struct z_stream_s;
struct internal_state;
struct mach_port_qos;
struct au_tid;
struct mac_policy_ops;
struct ucred;
struct auditinfo_addr;
struct sbuf;
struct mount;
struct flock;
struct inpcb;
struct pseminfo;
struct pshminfo;
struct sockaddr;
struct msg;
struct semid_kernel;
struct attrlist;
struct OSObject;
struct OSMetaClassBase;
struct OSMetaClass;
struct OSCollection;
struct OSData;
struct OSDictionary;
struct OSIterator;
struct OSNumber;
struct OSSerialize;
struct OSSet;
struct OSString;
struct OSSymbol;
struct IORegistryPlane;
struct IONotifier;
struct IOWorkLoop;
struct IOEventSource;
struct IOCommand;
struct IOBufferMemoryDescriptor;
struct IODMACommand;
struct IOMapper;
struct IOMemoryDescriptor;
struct IOGeneralMemoryDescriptor;
struct IOMemoryMap;
struct IOInterruptController;
struct IOSharedInterruptController;
struct IOUserClient;
struct IOPowerConnection;
struct kmod_info;
struct kmod_reference;
struct vfs_attr;
struct vfsconf;
struct vfsops;
struct componentname;
struct vnode_attr;
struct vnodeopv_entry_desc;
struct vnodeopv_desc;
struct PE_Video;
struct bpf_insn;
struct sockaddr_dl;
struct IONVRAMDescriptor;
struct $B104DB4BFE5CD69413386C08F1ABB991;
struct $D93714C8BBE6D2A33F086219D2EEC2F2;
struct _IODataQueueEntry;
struct IOPMPowerState;
struct IOExternalMethod;
struct IOExternalAsyncMethod;
struct IOExternalTrap;
struct IOExternalMethodArguments;
struct IOExternalMethodDispatch;
struct IOI2CRequest;
struct $FCB00A11B4535F29AAC7A131B72B7D4F;
struct IOInterruptVector;
struct sysctl_req;
struct sysctl_oid_list;
struct sysctl_oid;
struct sem;
struct vfstable;
struct sem_undo::undo;
struct msqid_kernel;
struct lockf;
struct kauth_acl;
struct locklist;
struct vtable_OSMetaClassBase;
struct vtable_OSMetaClassMeta;
struct vtable_OSMetaClass;
struct vtable_OSObject;
struct vtable_OSObject::MetaClass;
struct vtable_OSArray;
struct vtable_OSArray::MetaClass;
struct vtable_OSBoolean;
struct vtable_OSBoolean::MetaClass;
struct vtable_OSCollection;
struct vtable_OSCollection::MetaClass;
struct vtable_OSCollectionIterator;
struct vtable_OSCollectionIterator::MetaClass;
struct vtable_OSData;
struct vtable_OSData::MetaClass;
struct vtable_OSDictionary;
struct vtable_OSDictionary::MetaClass;
struct vtable_OSIterator;
struct vtable_OSIterator::MetaClass;
struct vtable_OSKext;
struct vtable_OSKext::MetaClass;
struct vtable_OSNumber;
struct vtable_OSNumber::MetaClass;
struct vtable_OSOrderedSet;
struct vtable_OSOrderedSet::MetaClass;
struct vtable_OSSerialize;
struct vtable_OSSerialize::MetaClass;
struct vtable_OSSerializer;
struct vtable_OSSerializer::MetaClass;
struct vtable_OSSet;
struct vtable_OSSet::MetaClass;
struct vtable_OSString;
struct vtable_OSString::MetaClass;
struct vtable_OSSymbolPool;
struct vtable_OSSymbol;
struct vtable_OSSymbol::MetaClass;
struct vtable_OSAction;
struct vtable_OSAction::MetaClass;
struct vtable_IODispatchSource;
struct vtable_IODispatchSource::MetaClass;
struct vtable_IODispatchQueue;
struct vtable_IODispatchQueue::MetaClass;
struct vtable_IOInterruptDispatchSource;
struct vtable_IOInterruptDispatchSource::MetaClass;
struct vtable_IODataQueueDispatchSource;
struct vtable_IODataQueueDispatchSource::MetaClass;
struct vtable_IOConditionLock;
struct vtable_IOConditionLock::MetaClass;
struct vtable_IORegistryEntry;
struct vtable_IORegistryIterator;
struct vtable_IORegistryEntry::MetaClass;
struct vtable_IORegistryPlane;
struct vtable_IORegistryPlane::MetaClass;
struct vtable_IORegistryIterator::MetaClass;
struct vtable_IOService;
struct vtable__IOServiceInterestNotifier;
struct vtable__IOOpenServiceIterator;
struct vtable__IOServiceJob;
struct vtable__IOServiceNotifier;
struct vtable__IOConfigThread;
struct vtable_IOService::MetaClass;
struct vtable__IOServiceNotifier::MetaClass;
struct vtable__IOServiceNullNotifier;
struct vtable__IOServiceNullNotifier::MetaClass;
struct vtable__IOServiceInterestNotifier::MetaClass;
struct vtable__IOConfigThread::MetaClass;
struct vtable__IOServiceJob::MetaClass;
struct vtable_IOResources;
struct vtable_IOResources::MetaClass;
struct vtable_IOUserResources;
struct vtable_IOUserResources::MetaClass;
struct vtable__IOOpenServiceIterator::MetaClass;
struct vtable_IONotifier;
struct vtable_IONotifier::MetaClass;
struct vtable_IOPMRequest;
struct vtable_IOPMRequest::MetaClass;
struct vtable_IOPMRequestQueue;
struct vtable_IOPMRequestQueue::MetaClass;
struct vtable_IOPMWorkQueue;
struct vtable_IOPMWorkQueue::MetaClass;
struct vtable_IOPMCompletionQueue;
struct vtable_IOPMCompletionQueue::MetaClass;
struct vtable_IOServicePM;
struct vtable_IOServicePM::MetaClass;
struct vtable_IOPMinformee;
struct vtable_IOPMinformee::MetaClass;
struct vtable_IOPMinformeeList;
struct vtable_IOPMinformeeList::MetaClass;
struct vtable_IOPMPowerStateQueue;
struct vtable_IOPMPowerStateQueue::MetaClass;
struct vtable_IOCatalogue;
struct vtable_IOCatalogue::MetaClass;
struct vtable_IOPMPowerSource;
struct vtable_IOPMPowerSource::MetaClass;
struct vtable_IOPMPowerSourceList;
struct vtable_IOPMPowerSourceList::MetaClass;
struct vtable_IOPolledInterface;
struct vtable_IOPolledInterface::MetaClass;
struct vtable_IOPolledFilePollers;
struct vtable_IOPolledFilePollers::MetaClass;
struct vtable_IOWorkLoop;
struct vtable_IOWorkLoop::MetaClass;
struct vtable_IOEventSource;
struct vtable_IOEventSource::MetaClass;
struct vtable_IOInterruptEventSource;
struct vtable_IOInterruptEventSource::MetaClass;
struct vtable_IOCommandGate;
struct vtable_IOCommandGate::MetaClass;
struct vtable_IOCommand;
struct vtable_IOCommand::MetaClass;
struct vtable_IOCommandPool;
struct vtable_IOCommandPool::MetaClass;
struct vtable_IODMAEventSource;
struct vtable_IODMAEventSource::MetaClass;
struct vtable_IOFilterInterruptEventSource;
struct vtable_IOFilterInterruptEventSource::MetaClass;
struct vtable_IOTimerEventSource;
struct vtable_IOTimerEventSource::MetaClass;
struct vtable_IOBufferMemoryDescriptor;
struct vtable_IOBufferMemoryDescriptor::MetaClass;
struct vtable_IODMACommand;
struct vtable_IODMACommand::MetaClass;
struct vtable_IOInterleavedMemoryDescriptor;
struct vtable_IOInterleavedMemoryDescriptor::MetaClass;
struct vtable_IOMapper;
struct vtable_IOMapper::MetaClass;
struct vtable_IOMemoryCursor;
struct vtable_IOMemoryCursor::MetaClass;
struct vtable_IONaturalMemoryCursor;
struct vtable_IONaturalMemoryCursor::MetaClass;
struct vtable_IOBigMemoryCursor;
struct vtable_IOBigMemoryCursor::MetaClass;
struct vtable_IOLittleMemoryCursor;
struct vtable_IOLittleMemoryCursor::MetaClass;
struct vtable_IOMemoryDescriptor;
struct vtable_IOGeneralMemoryDescriptor;
struct vtable_IOMemoryMap;
struct vtable_IOMemoryDescriptor::MetaClass;
struct vtable_IOGeneralMemoryDescriptor::MetaClass;
struct vtable_IOMemoryMap::MetaClass;
struct vtable_IOMultiMemoryDescriptor;
struct vtable_IOMultiMemoryDescriptor::MetaClass;
struct vtable_IORangeAllocator;
struct vtable_IORangeAllocator::MetaClass;
struct vtable_IOSubMemoryDescriptor;
struct vtable_IOSubMemoryDescriptor::MetaClass;
struct vtable_IOPlatformExpert;
struct vtable_IOPlatformDevice;
struct vtable_IOPlatformExpert::MetaClass;
struct vtable_IODTPlatformExpert;
struct vtable_IODTPlatformExpert::MetaClass;
struct vtable_IOPlatformExpertDevice;
struct vtable_IOPlatformExpertDevice::MetaClass;
struct vtable_IOPlatformDevice::MetaClass;
struct vtable_IOPanicPlatform;
struct vtable_IOPanicPlatform::MetaClass;
struct vtable_IOCPU;
struct vtable_IOCPU::MetaClass;
struct vtable_IOCPUInterruptController;
struct vtable_IOCPUInterruptController::MetaClass;
struct vtable_IODTNVRAM;
struct vtable_IODTNVRAM::MetaClass;
struct vtable_IODMAController;
struct vtable_IODMAController::MetaClass;
struct vtable_IOInterruptController;
struct vtable_IOSharedInterruptController;
struct vtable_IOInterruptController::MetaClass;
struct vtable_IOSharedInterruptController::MetaClass;
struct vtable_IOMachPort;
struct vtable_IOMachPort::MetaClass;
struct vtable_IOUserIterator;
struct vtable_IOUserIterator::MetaClass;
struct vtable_IOUserNotification;
struct vtable_IOUserNotification::MetaClass;
struct vtable_IOServiceUserNotification;
struct vtable_IOServiceUserNotification::MetaClass;
struct vtable_IOServiceMessageUserNotification;
struct vtable_IOServiceMessageUserNotification::MetaClass;
struct vtable_IOUserClient;
struct vtable_IOUserClient::MetaClass;
struct vtable_IOKitDiagnostics;
struct vtable_IOKitDiagnostics::MetaClass;
struct vtable_IOKitDiagnosticsClient;
struct vtable_IOKitDiagnosticsClient::MetaClass;
struct vtable_IODataQueue;
struct vtable_IODataQueue::MetaClass;
struct vtable_IOSharedDataQueue;
struct vtable_IOSharedDataQueue::MetaClass;
struct vtable_IOReporter;
struct vtable_IOReporter::MetaClass;
struct vtable_IOSimpleReporter;
struct vtable_IOSimpleReporter::MetaClass;
struct vtable_IOStateReporter;
struct vtable_IOStateReporter::MetaClass;
struct vtable_IOHistogramReporter;
struct vtable_IOHistogramReporter::MetaClass;
struct vtable_IOReportLegend;
struct vtable_IOReportLegend::MetaClass;
struct vtable_IORTC;
struct vtable_IORTC::MetaClass;
struct vtable_OSUserMetaClass;
struct vtable_OSUserMetaClass::MetaClass;
struct vtable_IOUserService;
struct vtable_IOUserService::MetaClass;
struct vtable_IOUserServer;
struct vtable_IOUserServer::MetaClass;
struct vtable_RootDomainUserClient;
struct vtable_RootDomainUserClient::MetaClass;
struct vtable_IOPowerConnection;
struct vtable_IOPowerConnection::MetaClass;
struct vtable_IOWatchDogTimer;
struct vtable_IOWatchDogTimer::MetaClass;
struct vtable_IOPerfControlClient;
struct vtable_IOPerfControlClient::MetaClass;
struct vtable_IOSKRegionMapper;
struct vtable_IOSKRegionMapper::MetaClass;
struct vtable_IOSKMapper;
struct vtable_IOSKMapper::MetaClass;
struct vtable_IOSKArena;
struct vtable_IOSKArena::MetaClass;
struct vtable_IOSKRegion;
struct vtable_IOSKRegion::MetaClass;
struct vtable_IOSKMemoryArray;
struct vtable_IOSKMemoryArray::MetaClass;
struct vtable_IOSKMemoryBuffer;
struct vtable_IOSKMemoryBuffer::MetaClass;
struct vtable_IOSyncer;
struct vtable_IOSyncer::MetaClass;
struct vtable_PMAssertionsTracker;
struct vtable_PMAssertionsTracker::MetaClass;
struct vtable_PMHaltWorker;
struct vtable_PMHaltWorker::MetaClass;
struct vtable_IOPMrootDomain;
struct vtable_IOPMServiceInterestNotifier;
struct vtable_IORootParent;
struct vtable_IOPMrootDomain::MetaClass;
struct vtable_IOPMServiceInterestNotifier::MetaClass;
struct vtable_PMTraceWorker;
struct vtable_PMTraceWorker::MetaClass;
struct vtable_PMSettingHandle;
struct vtable_PMSettingHandle::MetaClass;
struct vtable_PMSettingObject;
struct vtable_PMSettingObject::MetaClass;
struct vtable_IORootParent::MetaClass;

/* 2 */
typedef unsigned int uint32_t;

/* 4 */
typedef int integer_t;

/* 3 */
typedef integer_t cpu_type_t;

/* 5 */
typedef integer_t cpu_subtype_t;

/* 1 */
struct mach_header_64
{
  uint32_t magic;
  cpu_type_t cputype;
  cpu_subtype_t cpusubtype;
  uint32_t filetype;
  uint32_t ncmds;
  uint32_t sizeofcmds;
  uint32_t flags;
  uint32_t reserved;
};

/* 6 */
typedef struct $0BA82F063C392BF02AF0AA599B603A12 security_token_t;

/* 7 */
struct $0BA82F063C392BF02AF0AA599B603A12
{
  unsigned int val[2];
};

/* 8 */
typedef struct $0B20F48E2CD2D778BD1F216BA81B71CE audit_token_t;

/* 9 */
struct $0B20F48E2CD2D778BD1F216BA81B71CE
{
  unsigned int val[8];
};

/* 12 */
typedef unsigned __int8 __uint8_t;

/* 13 */
typedef unsigned __int16 __uint16_t;

/* 14 */
typedef unsigned int __uint32_t;

/* 1590 */
union in6_addr::$4C2F77AF37B2B7DA726D741833D6BD82
{
  __uint8_t __u6_addr8[16];
  __uint16_t __u6_addr16[8];
  __uint32_t __u6_addr32[4];
};

/* 10 */
struct in6_addr
{
  union in6_addr::$4C2F77AF37B2B7DA726D741833D6BD82 __u6_addr;
};

/* 11 */
union in6_addr::$330434928707C706902F20BE7BA89EB4
{
  __uint8_t __u6_addr8[16];
  __uint16_t __u6_addr16[8];
  __uint32_t __u6_addr32[4];
};

/* 15 */
typedef struct $B8B9B85B971E3DBFC31707A9282CDA9E NDR_record_t;

/* 16 */
struct $B8B9B85B971E3DBFC31707A9282CDA9E
{
  unsigned __int8 mig_vers;
  unsigned __int8 if_vers;
  unsigned __int8 reserved1;
  unsigned __int8 mig_encoding;
  unsigned __int8 int_rep;
  unsigned __int8 char_rep;
  unsigned __int8 float_rep;
  unsigned __int8 reserved2;
};

/* 19 */
typedef unsigned int u_int32_t;

/* 18 */
typedef u_int32_t fixpt_t;

/* 17 */
struct loadavg
{
  fixpt_t ldavg[3];
  __int64 fscale;
};

/* 21 */
typedef unsigned __int64 uint64_t;

/* 22 */
typedef int vm_prot_t;

/* 20 */
struct segment_command_64
{
  uint32_t cmd;
  uint32_t cmdsize;
  char segname[16];
  uint64_t vmaddr;
  uint64_t vmsize;
  uint64_t fileoff;
  uint64_t filesize;
  vm_prot_t maxprot;
  vm_prot_t initprot;
  uint32_t nsects;
  uint32_t flags;
};

/* 23 */
struct section_64
{
  char sectname[16];
  char segname[16];
  uint64_t addr;
  uint64_t size;
  uint32_t offset;
  uint32_t align;
  uint32_t reloff;
  uint32_t nreloc;
  uint32_t flags;
  uint32_t reserved1;
  uint32_t reserved2;
  uint32_t reserved3;
};

/* 24 */
struct symtab_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t symoff;
  uint32_t nsyms;
  uint32_t stroff;
  uint32_t strsize;
};

/* 25 */
struct dysymtab_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t ilocalsym;
  uint32_t nlocalsym;
  uint32_t iextdefsym;
  uint32_t nextdefsym;
  uint32_t iundefsym;
  uint32_t nundefsym;
  uint32_t tocoff;
  uint32_t ntoc;
  uint32_t modtaboff;
  uint32_t nmodtab;
  uint32_t extrefsymoff;
  uint32_t nextrefsyms;
  uint32_t indirectsymoff;
  uint32_t nindirectsyms;
  uint32_t extreloff;
  uint32_t nextrel;
  uint32_t locreloff;
  uint32_t nlocrel;
};

/* 27 */
typedef unsigned __int8 uint8_t;

/* 26 */
struct uuid_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint8_t uuid[16];
};

/* 28 */
struct source_version_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint64_t version;
};

/* 29 */
struct linkedit_data_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t dataoff;
  uint32_t datasize;
};

/* 32 */
typedef unsigned __int64 u_int64_t;

/* 31 */
typedef u_int64_t uint64_t_0;

/* 30 */
typedef uint64_t_0 pml4_entry_t;

/* 33 */
typedef unsigned __int64 __ARRAY_SIZE_TYPE__;

/* 34 */
typedef uint64_t_0 pdpt_entry_t;

/* 35 */
typedef uint64_t_0 pd_entry_t;

/* 36 */
typedef unsigned __int64 uintptr_t;

/* 39 */
typedef unsigned __int64 size_t;

/* 40 */
typedef u_int32_t uint32_t_0;

/* 45 */
typedef __int64 int64_t;

/* 44 */
typedef int64_t dtrace_optval_t;

/* 47 */
typedef unsigned __int64 __darwin_size_t;

/* 46 */
typedef __darwin_size_t size_t_0;

/* 48 */
typedef int64_t hrtime_t;

/* 60 */
typedef int __int32_t;

/* 59 */
typedef __int32_t __darwin_pid_t;

/* 58 */
typedef __darwin_pid_t pid_t;

/* 62 */
typedef __uint32_t __darwin_uid_t;

/* 61 */
typedef __darwin_uid_t uid_t;

/* 65 */
typedef __uint32_t __darwin_gid_t;

/* 64 */
typedef __darwin_gid_t gid_t;

/* 66 */
struct lck_mtx_t
{
  unsigned __int64 opaque[2];
};

/* 73 */
typedef int64_t mach_exception_data_type_t;

/* 72 */
typedef mach_exception_data_type_t mach_exception_code_t;

/* 74 */
typedef mach_exception_data_type_t mach_exception_subcode_t;

/* 78 */
typedef int int32_t;

/* 76 */
struct _select_data
{
  u_int64_t abstime;
  uint64_t_0 *wqp;
  int count;
  select_nocancel_args *args;
  int32_t *retval;
};

/* 80 */
typedef u_int64_t user_addr_t;

/* 77 */
struct select_nocancel_args
{
  char nd_l_[];
  int nd;
  char nd_r_[];
  char in_l_[];
  user_addr_t in;
  char in_r_[];
  char ou_l_[];
  user_addr_t ou;
  char ou_r_[];
  char ex_l_[];
  user_addr_t ex;
  char ex_r_[];
  char tv_l_[];
  user_addr_t tv;
  char tv_r_[];
};

/* 81 */
typedef u_int64_t user_size_t;

/* 82 */
struct fileproc;

/* 79 */
struct kevent_ctx_s
{
  uint64_t_0 kec_data_avail;
  user_addr_t kec_data_out;
  user_size_t kec_data_size;
  user_size_t kec_data_resid;
  uint64_t_0 kec_deadline;
  fileproc *kec_fp;
  int kec_fd;
  int kec_process_nevents;
  int kec_process_noutputs;
  unsigned int kec_process_flags;
  user_addr_t kec_process_eventlist;
};

/* 85 */
typedef __int16 int16_t;

/* 87 */
typedef unsigned __int16 u_int16_t;

/* 86 */
typedef u_int16_t uint16_t;

/* 84 */
struct kevent_qos_s
{
  uint64_t_0 ident;
  int16_t filter;
  uint16_t flags;
  int32_t qos;
  uint64_t_0 udata;
  uint32_t_0 fflags;
  uint32_t_0 xflags;
  int64_t data;
  uint64_t_0 ext[4];
};

/* 88 */
typedef struct thread *thread_t;

/* 89 */
struct thread;

/* 93 */
struct waitq_set
{
  char opaque[64];
};

/* 94 */
struct lck_spin_t
{
  unsigned __int64 opaque[10];
};

/* 95 */
enum kq_state_t : __int16
{
  KQ_SEL = 0x1,
  KQ_SLEEP = 0x2,
  KQ_PROCWAIT = 0x4,
  KQ_KEV32 = 0x8,
  KQ_KEV64 = 0x10,
  KQ_KEV_QOS = 0x20,
  KQ_WORKQ = 0x40,
  KQ_WORKLOOP = 0x80,
  KQ_PROCESSING = 0x100,
  KQ_DRAIN = 0x200,
  KQ_WAKEUP = 0x400,
  KQ_DYNAMIC = 0x800,
  KQ_R2K_ARMED = 0x1000,
  KQ_HAS_TURNSTILE = 0x2000,
};

/* 103 */
enum kn_status_t : __int16
{
  KN_ACTIVE = 0x1,
  KN_QUEUED = 0x2,
  KN_DISABLED = 0x4,
  KN_DROPPING = 0x8,
  KN_LOCKED = 0x10,
  KN_POSTING = 0x20,
  KN_STAYACTIVE = 0x40,
  KN_DEFERDELETE = 0x80,
  KN_MERGE_QOS = 0x100,
  KN_REQVANISH = 0x200,
  KN_VANISHED = 0x400,
  KN_SUPPRESSED = 0x800,
};

/* 105 */
typedef __uint32_t in_addr_t;

/* 104 */
struct in_addr
{
  in_addr_t s_addr;
};

/* 106 */
typedef struct z_stream_s z_stream;

/* 109 */
typedef unsigned __int8 Byte;

/* 108 */
typedef Byte Bytef;

/* 110 */
typedef unsigned int uInt;

/* 111 */
typedef unsigned __int64 uLong;

/* 114 */
typedef void *voidpf;

/* 113 */
typedef voidpf (__cdecl *alloc_func)(voidpf opaque, uInt items, uInt size);

/* 115 */
typedef void (__cdecl *free_func)(voidpf opaque, voidpf address);

/* 107 */
struct z_stream_s
{
  Bytef *next_in;
  uInt avail_in;
  uLong total_in;
  Bytef *next_out;
  uInt avail_out;
  uLong total_out;
  char *msg;
  struct internal_state *state;
  alloc_func zalloc;
  free_func zfree;
  voidpf opaque;
  int data_type;
  uLong adler;
  uLong reserved;
};

/* 112 */
struct internal_state
{
  int dummy;
};

/* 116 */
typedef struct mach_port_qos mach_port_qos_t;

/* 119 */
typedef unsigned int __darwin_natural_t;

/* 118 */
typedef __darwin_natural_t natural_t;

/* 117 */
struct mach_port_qos
{
  unsigned __int32 name : 1;
  unsigned __int32 prealloc : 1;
  __int32 pad1 : 30;
  natural_t len;
};

/* 122 */
typedef uint64_t mach_vm_address_t;

/* 123 */
typedef uint64_t mach_vm_size_t;

/* 121 */
struct mach_vm_read_entry
{
  mach_vm_address_t address;
  mach_vm_size_t size;
};

/* 120 */
typedef struct mach_vm_read_entry mach_vm_read_entry_t[256];

/* 125 */
typedef __uint8_t sa_family_t;

/* 126 */
typedef __uint16_t in_port_t;

/* 124 */
struct sockaddr_in
{
  __uint8_t sin_len;
  sa_family_t sin_family;
  in_port_t sin_port;
  struct in_addr sin_addr;
  char sin_zero[8];
};

/* 129 */
struct xdrbuf::$3C99F4725429E2A3FEA5222150305F9C::$F1B07FB5AB0A91F7CDD6BE0247735827
{
  char *xbb_base;
  uint32_t xbb_size;
  uint32_t xbb_len;
};

/* 128 */
union xdrbuf::$3C99F4725429E2A3FEA5222150305F9C
{
  xdrbuf::$3C99F4725429E2A3FEA5222150305F9C::$F1B07FB5AB0A91F7CDD6BE0247735827 xb_buffer;
};

/* 130 */
enum xdrbuf_type
{
  XDRBUF_BUFFER = 0x1,
};

/* 127 */
struct xdrbuf
{
  xdrbuf::$3C99F4725429E2A3FEA5222150305F9C xb_u;
  char *xb_ptr;
  size_t xb_left;
  size_t xb_growsize;
  xdrbuf_type xb_type;
  uint32_t xb_flags;
};

/* 131 */
typedef struct au_tid au_tid_t;

/* 134 */
typedef __int32_t __darwin_dev_t;

/* 133 */
typedef __darwin_dev_t dev_t;

/* 132 */
struct au_tid
{
  dev_t port;
  u_int32_t machine;
};

/* 137 */
typedef __uint16_t __darwin_mode_t;

/* 136 */
typedef __darwin_mode_t mode_t;

/* 138 */
typedef __int32_t key_t;

/* 135 */
struct ipc_perm
{
  uid_t uid;
  gid_t gid;
  uid_t cuid;
  gid_t cgid;
  mode_t mode;
  unsigned __int16 _seq;
  key_t _key;
};

/* 139 */
struct mac_policy_conf
{
  const char *mpc_name;
  const char *mpc_fullname;
  const char **mpc_labelnames;
  unsigned int mpc_labelname_count;
  mac_policy_ops *mpc_ops;
  int mpc_loadtime_flags;
  int *mpc_field_off;
  int mpc_runtime_flags;
  mac_policy_conf *mpc_list;
  void *mpc_data;
};

/* 142 */
typedef struct ucred *kauth_cred_t;

/* 141 */
typedef int __cdecl mpo_audit_check_postselect_t(kauth_cred_t cred, unsigned __int16 syscode, void *args, int error, int retval);

/* 158 */
typedef int __cdecl mpo_audit_check_preselect_t(kauth_cred_t cred, unsigned __int16 syscode, void *args);

/* 160 */
struct bpf_d;

/* 147 */
struct label;

/* 159 */
typedef void __cdecl mpo_bpfdesc_label_associate_t(kauth_cred_t cred, struct bpf_d *bpf_d, struct label *bpflabel);

/* 161 */
typedef void __cdecl mpo_bpfdesc_label_destroy_t(struct label *label);

/* 162 */
typedef void __cdecl mpo_bpfdesc_label_init_t(struct label *label);

/* 164 */
struct ifnet;

/* 163 */
typedef int __cdecl mpo_bpfdesc_check_receive_t(struct bpf_d *bpf_d, struct label *bpflabel, struct ifnet *ifp, struct label *ifnetlabel);

/* 166 */
struct vnode;

/* 167 */
struct proc;

/* 165 */
typedef int __cdecl mpo_cred_check_label_update_execve_t(kauth_cred_t old, struct vnode *vp, struct label *vnodelabel, struct label *scriptvnodelabel, struct label *execlabel, struct proc *proc);

/* 168 */
typedef int __cdecl mpo_cred_check_label_update_t(kauth_cred_t cred, struct label *newlabel);

/* 169 */
typedef int __cdecl mpo_cred_check_visible_t(kauth_cred_t u1, kauth_cred_t u2);

/* 171 */
typedef struct proc *proc_t;

/* 170 */
typedef void __cdecl mpo_cred_label_associate_fork_t(kauth_cred_t cred, proc_t proc);

/* 172 */
typedef void __cdecl mpo_cred_label_associate_kernel_t(kauth_cred_t cred);

/* 173 */
typedef void __cdecl mpo_cred_label_associate_t(kauth_cred_t parent_cred, kauth_cred_t child_cred);

/* 174 */
typedef void __cdecl mpo_cred_label_associate_user_t(kauth_cred_t cred);

/* 175 */
typedef void __cdecl mpo_cred_label_destroy_t(struct label *label);

/* 176 */
typedef int __cdecl mpo_cred_label_externalize_audit_t(struct label *label, char *element_name, sbuf *sb);

/* 178 */
typedef int __cdecl mpo_cred_label_externalize_t(struct label *label, char *element_name, sbuf *sb);

/* 179 */
typedef void __cdecl mpo_cred_label_init_t(struct label *label);

/* 180 */
typedef int __cdecl mpo_cred_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 181 */
typedef void __cdecl mpo_cred_label_update_execve_t(kauth_cred_t old_cred, kauth_cred_t new_cred, struct vnode *vp, struct label *vnodelabel, struct label *scriptvnodelabel, struct label *execlabel, int *disjointp);

/* 182 */
typedef void __cdecl mpo_cred_label_update_t(kauth_cred_t cred, struct label *newlabel);

/* 184 */
struct devnode;

/* 183 */
typedef void __cdecl mpo_devfs_label_associate_device_t(dev_t dev, struct devnode *de, struct label *label, const char *fullpath);

/* 185 */
typedef void __cdecl mpo_devfs_label_associate_directory_t(const char *dirname, int dirnamelen, struct devnode *de, struct label *label, const char *fullpath);

/* 186 */
typedef void __cdecl mpo_devfs_label_copy_t(struct label *src, struct label *dest);

/* 187 */
typedef void __cdecl mpo_devfs_label_destroy_t(struct label *label);

/* 188 */
typedef void __cdecl mpo_devfs_label_init_t(struct label *label);

/* 189 */
typedef void __cdecl mpo_devfs_label_update_t(mount *mp, struct devnode *de, struct label *delabel, struct vnode *vp, struct label *vnodelabel);

/* 192 */
struct fileglob;

/* 191 */
typedef int __cdecl mpo_file_check_change_offset_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);

/* 193 */
typedef int __cdecl mpo_file_check_create_t(kauth_cred_t cred);

/* 194 */
typedef int __cdecl mpo_file_check_dup_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int newfd);

/* 196 */
typedef int64_t user_long_t;

/* 195 */
typedef int __cdecl mpo_file_check_fcntl_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int cmd, user_long_t arg);

/* 197 */
typedef int __cdecl mpo_file_check_get_offset_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);

/* 198 */
typedef int __cdecl mpo_file_check_get_t(kauth_cred_t cred, struct fileglob *fg, char *elements, int len);

/* 199 */
typedef int __cdecl mpo_file_check_inherit_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);

/* 200 */
typedef int __cdecl mpo_file_check_ioctl_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, unsigned int cmd);

/* 201 */
typedef int __cdecl mpo_file_check_lock_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int op, flock *fl);

/* 206 */
typedef void __cdecl mpo_file_check_mmap_downgrade_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int *prot);

/* 207 */
typedef int __cdecl mpo_file_check_mmap_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int prot, int flags, int *maxprot);

/* 208 */
typedef int __cdecl mpo_file_check_receive_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);

/* 209 */
typedef int __cdecl mpo_file_check_set_t(kauth_cred_t cred, struct fileglob *fg, char *elements, int len);

/* 210 */
typedef void __cdecl mpo_file_label_init_t(struct label *label);

/* 211 */
typedef void __cdecl mpo_file_label_destroy_t(struct label *label);

/* 212 */
typedef void __cdecl mpo_file_label_associate_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);

/* 213 */
typedef int __cdecl mpo_ifnet_check_label_update_t(kauth_cred_t cred, struct ifnet *ifp, struct label *ifnetlabel, struct label *newlabel);

/* 215 */
struct mbuf;

/* 214 */
typedef int __cdecl mpo_ifnet_check_transmit_t(struct ifnet *ifp, struct label *ifnetlabel, struct mbuf *m, struct label *mbuflabel, int family, int type);

/* 216 */
typedef void __cdecl mpo_ifnet_label_associate_t(struct ifnet *ifp, struct label *ifnetlabel);

/* 217 */
typedef void __cdecl mpo_ifnet_label_copy_t(struct label *src, struct label *dest);

/* 218 */
typedef void __cdecl mpo_ifnet_label_destroy_t(struct label *label);

/* 219 */
typedef int __cdecl mpo_ifnet_label_externalize_t(struct label *label, char *element_name, sbuf *sb);

/* 220 */
typedef void __cdecl mpo_ifnet_label_init_t(struct label *label);

/* 221 */
typedef int __cdecl mpo_ifnet_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 222 */
typedef void __cdecl mpo_ifnet_label_update_t(kauth_cred_t cred, struct ifnet *ifp, struct label *ifnetlabel, struct label *newlabel);

/* 223 */
typedef void __cdecl mpo_ifnet_label_recycle_t(struct label *label);

/* 224 */
typedef int __cdecl mpo_inpcb_check_deliver_t(inpcb *inp, struct label *inplabel, struct mbuf *m, struct label *mbuflabel, int family, int type);

/* 239 */
typedef void __cdecl mpo_inpcb_label_associate_t(struct socket *so, struct label *solabel, inpcb *inp, struct label *inplabel);

/* 240 */
typedef void __cdecl mpo_inpcb_label_destroy_t(struct label *label);

/* 241 */
typedef int __cdecl mpo_inpcb_label_init_t(struct label *label, int flag);

/* 242 */
typedef void __cdecl mpo_inpcb_label_recycle_t(struct label *label);

/* 243 */
typedef void __cdecl mpo_inpcb_label_update_t(struct socket *so, struct label *solabel, inpcb *inp, struct label *inplabel);

/* 245 */
struct mac_module_data;

/* 244 */
typedef int __cdecl mpo_iokit_check_device_t(char *devtype, struct mac_module_data *mdata);

/* 247 */
struct ipq;

/* 246 */
typedef void __cdecl mpo_ipq_label_associate_t(struct mbuf *fragment, struct label *fragmentlabel, struct ipq *ipq, struct label *ipqlabel);

/* 248 */
typedef int __cdecl mpo_ipq_label_compare_t(struct mbuf *fragment, struct label *fragmentlabel, struct ipq *ipq, struct label *ipqlabel);

/* 249 */
typedef void __cdecl mpo_ipq_label_destroy_t(struct label *label);

/* 250 */
typedef int __cdecl mpo_ipq_label_init_t(struct label *label, int flag);

/* 251 */
typedef void __cdecl mpo_ipq_label_update_t(struct mbuf *fragment, struct label *fragmentlabel, struct ipq *ipq, struct label *ipqlabel);

/* 253 */
struct lctx;

/* 252 */
typedef int __cdecl mpo_lctx_check_label_update_t(struct lctx *l, struct label *newlabel);

/* 254 */
typedef void __cdecl mpo_lctx_label_destroy_t(struct label *label);

/* 255 */
typedef int __cdecl mpo_lctx_label_externalize_t(struct label *label, char *element_name, sbuf *sb);

/* 256 */
typedef void __cdecl mpo_lctx_label_init_t(struct label *label);

/* 257 */
typedef int __cdecl mpo_lctx_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 258 */
typedef void __cdecl mpo_lctx_label_update_t(struct lctx *l, struct label *newlabel);

/* 259 */
typedef void __cdecl mpo_lctx_notify_create_t(struct proc *p, struct lctx *l);

/* 260 */
typedef void __cdecl mpo_lctx_notify_join_t(struct proc *p, struct lctx *l);

/* 261 */
typedef void __cdecl mpo_lctx_notify_leave_t(struct proc *p, struct lctx *l);

/* 262 */
typedef void __cdecl mpo_mbuf_label_associate_bpfdesc_t(struct bpf_d *bpf_d, struct label *b_label, struct mbuf *m, struct label *m_label);

/* 263 */
typedef void __cdecl mpo_mbuf_label_associate_ifnet_t(struct ifnet *ifp, struct label *i_label, struct mbuf *m, struct label *m_label);

/* 264 */
typedef void __cdecl mpo_mbuf_label_associate_inpcb_t(inpcb *inp, struct label *i_label, struct mbuf *m, struct label *m_label);

/* 265 */
typedef void __cdecl mpo_mbuf_label_associate_ipq_t(struct ipq *ipq, struct label *ipqlabel, struct mbuf *mbuf, struct label *mbuflabel);

/* 266 */
typedef void __cdecl mpo_mbuf_label_associate_linklayer_t(struct ifnet *ifp, struct label *i_label, struct mbuf *m, struct label *m_label);

/* 267 */
typedef void __cdecl mpo_mbuf_label_associate_multicast_encap_t(struct mbuf *oldmbuf, struct label *oldmbuflabel, struct ifnet *ifp, struct label *ifplabel, struct mbuf *newmbuf, struct label *newmbuflabel);

/* 268 */
typedef void __cdecl mpo_mbuf_label_associate_netlayer_t(struct mbuf *oldmbuf, struct label *oldmbuflabel, struct mbuf *newmbuf, struct label *newmbuflabel);

/* 270 */
typedef struct __socket *socket_t;

/* 269 */
typedef void __cdecl mpo_mbuf_label_associate_socket_t(socket_t so, struct label *so_label, struct mbuf *m, struct label *m_label);

/* 272 */
typedef void __cdecl mpo_mbuf_label_copy_t(struct label *src, struct label *dest);

/* 273 */
typedef void __cdecl mpo_mbuf_label_destroy_t(struct label *label);

/* 274 */
typedef int __cdecl mpo_mbuf_label_init_t(struct label *label, int flag);

/* 275 */
typedef int __cdecl mpo_mount_check_fsctl_t(kauth_cred_t cred, mount *mp, struct label *label, unsigned int cmd);

/* 276 */
typedef int __cdecl mpo_mount_check_getattr_t(kauth_cred_t cred, mount *mp, struct label *mp_label, struct vfs_attr *vfa);

/* 277 */
typedef int __cdecl mpo_mount_check_label_update_t(kauth_cred_t cred, mount *mp, struct label *mntlabel);

/* 278 */
typedef int __cdecl mpo_mount_check_mount_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, struct componentname *cnp, const char *vfc_name);

/* 279 */
typedef int __cdecl mpo_mount_check_remount_t(kauth_cred_t cred, mount *mp, struct label *mlabel);

/* 280 */
typedef int __cdecl mpo_mount_check_setattr_t(kauth_cred_t cred, mount *mp, struct label *mp_label, struct vfs_attr *vfa);

/* 281 */
typedef int __cdecl mpo_mount_check_stat_t(kauth_cred_t cred, mount *mp, struct label *mntlabel);

/* 282 */
typedef int __cdecl mpo_mount_check_umount_t(kauth_cred_t cred, mount *mp, struct label *mlabel);

/* 283 */
typedef void __cdecl mpo_mount_label_associate_t(kauth_cred_t cred, mount *mp, struct label *mntlabel);

/* 284 */
typedef void __cdecl mpo_mount_label_destroy_t(struct label *label);

/* 285 */
typedef int __cdecl mpo_mount_label_externalize_t(struct label *label, char *element_name, sbuf *sb);

/* 286 */
typedef void __cdecl mpo_mount_label_init_t(struct label *label);

/* 287 */
typedef int __cdecl mpo_mount_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 288 */
typedef void __cdecl mpo_netinet_fragment_t(struct mbuf *datagram, struct label *datagramlabel, struct mbuf *fragment, struct label *fragmentlabel);

/* 289 */
typedef void __cdecl mpo_netinet_icmp_reply_t(struct mbuf *m, struct label *mlabel);

/* 290 */
typedef void __cdecl mpo_netinet_tcp_reply_t(struct mbuf *m, struct label *mlabel);

/* 292 */
struct pipe;

/* 291 */
typedef int __cdecl mpo_pipe_check_ioctl_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel, unsigned int cmd);

/* 294 */
struct knote;

/* 293 */
typedef int __cdecl mpo_pipe_check_kqfilter_t(kauth_cred_t cred, struct knote *kn, struct pipe *cpipe, struct label *pipelabel);

/* 295 */
typedef int __cdecl mpo_pipe_check_label_update_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel, struct label *newlabel);

/* 296 */
typedef int __cdecl mpo_pipe_check_read_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);

/* 297 */
typedef int __cdecl mpo_pipe_check_select_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel, int which);

/* 298 */
typedef int __cdecl mpo_pipe_check_stat_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);

/* 299 */
typedef int __cdecl mpo_pipe_check_write_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);

/* 300 */
typedef void __cdecl mpo_pipe_label_associate_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);

/* 301 */
typedef void __cdecl mpo_pipe_label_copy_t(struct label *src, struct label *dest);

/* 302 */
typedef void __cdecl mpo_pipe_label_destroy_t(struct label *label);

/* 303 */
typedef int __cdecl mpo_pipe_label_externalize_t(struct label *label, char *element_name, sbuf *sb);

/* 304 */
typedef void __cdecl mpo_pipe_label_init_t(struct label *label);

/* 305 */
typedef int __cdecl mpo_pipe_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 306 */
typedef void __cdecl mpo_pipe_label_update_t(kauth_cred_t cred, struct pipe *cpipe, struct label *oldlabel, struct label *newlabel);

/* 307 */
typedef void __cdecl mpo_policy_destroy_t(mac_policy_conf *mpc);

/* 308 */
typedef void __cdecl mpo_policy_init_t(mac_policy_conf *mpc);

/* 309 */
typedef void __cdecl mpo_policy_initbsd_t(mac_policy_conf *mpc);

/* 310 */
typedef int __cdecl mpo_policy_syscall_t(struct proc *p, int call, user_addr_t arg);

/* 311 */
typedef int __cdecl mpo_port_check_copy_send_t(struct label *task, struct label *port);

/* 312 */
typedef int __cdecl mpo_port_check_hold_receive_t(struct label *task, struct label *port);

/* 313 */
typedef int __cdecl mpo_port_check_hold_send_once_t(struct label *task, struct label *port);

/* 314 */
typedef int __cdecl mpo_port_check_hold_send_t(struct label *task, struct label *port);

/* 315 */
typedef int __cdecl mpo_port_check_label_update_t(struct label *task, struct label *oldlabel, struct label *newlabel);

/* 316 */
typedef int __cdecl mpo_port_check_make_send_once_t(struct label *task, struct label *port);

/* 317 */
typedef int __cdecl mpo_port_check_make_send_t(struct label *task, struct label *port);

/* 318 */
typedef int __cdecl mpo_port_check_method_t(struct proc *proc, struct label *task, struct label *port, int msgid);

/* 319 */
typedef int __cdecl mpo_port_check_move_receive_t(struct label *task, struct label *port);

/* 320 */
typedef int __cdecl mpo_port_check_move_send_once_t(struct label *task, struct label *port);

/* 321 */
typedef int __cdecl mpo_port_check_move_send_t(struct label *task, struct label *port);

/* 322 */
typedef int __cdecl mpo_port_check_receive_t(struct label *task, struct label *sender);

/* 323 */
typedef int __cdecl mpo_port_check_send_t(struct label *task, struct label *port);

/* 324 */
typedef int __cdecl mpo_port_check_service_t(struct label *subj, struct label *obj, const char *serv, const char *perm);

/* 325 */
typedef void __cdecl mpo_port_label_associate_kernel_t(struct label *portlabel, int isreply);

/* 326 */
typedef void __cdecl mpo_port_label_associate_t(struct label *it, struct label *st, struct label *portlabel);

/* 327 */
typedef int __cdecl mpo_port_label_compute_t(struct label *subj, struct label *obj, const char *serv, struct label *out);

/* 328 */
typedef void __cdecl mpo_port_label_copy_t(struct label *src, struct label *dest);

/* 329 */
typedef void __cdecl mpo_port_label_destroy_t(struct label *label);

/* 330 */
typedef void __cdecl mpo_port_label_init_t(struct label *label);

/* 331 */
typedef void __cdecl mpo_port_label_update_cred_t(struct label *cred, struct label *task);

/* 332 */
typedef void __cdecl mpo_port_label_update_kobject_t(struct label *portlabel, int kotype);

/* 333 */
typedef int __cdecl mpo_posixsem_check_create_t(kauth_cred_t cred, const char *name);

/* 334 */
typedef int __cdecl mpo_posixsem_check_open_t(kauth_cred_t cred, pseminfo *ps, struct label *semlabel);

/* 336 */
typedef int __cdecl mpo_posixsem_check_post_t(kauth_cred_t cred, pseminfo *ps, struct label *semlabel);

/* 337 */
typedef int __cdecl mpo_posixsem_check_unlink_t(kauth_cred_t cred, pseminfo *ps, struct label *semlabel, const char *name);

/* 338 */
typedef int __cdecl mpo_posixsem_check_wait_t(kauth_cred_t cred, pseminfo *ps, struct label *semlabel);

/* 339 */
typedef void __cdecl mpo_posixsem_label_associate_t(kauth_cred_t cred, pseminfo *ps, struct label *semlabel, const char *name);

/* 340 */
typedef void __cdecl mpo_posixsem_label_destroy_t(struct label *label);

/* 341 */
typedef void __cdecl mpo_posixsem_label_init_t(struct label *label);

/* 342 */
typedef int __cdecl mpo_posixshm_check_create_t(kauth_cred_t cred, const char *name);

/* 343 */
typedef int __cdecl mpo_posixshm_check_mmap_t(kauth_cred_t cred, pshminfo *ps, struct label *shmlabel, int prot, int flags);

/* 345 */
typedef int __cdecl mpo_posixshm_check_open_t(kauth_cred_t cred, pshminfo *ps, struct label *shmlabel);

/* 346 */
typedef int __cdecl mpo_posixshm_check_stat_t(kauth_cred_t cred, pshminfo *ps, struct label *shmlabel);

/* 205 */
typedef __int64 __int64_t;

/* 204 */
typedef __int64_t __darwin_off_t;

/* 203 */
typedef __darwin_off_t off_t;

/* 347 */
typedef int __cdecl mpo_posixshm_check_truncate_t(kauth_cred_t cred, pshminfo *ps, struct label *shmlabel, off_t len);

/* 348 */
typedef int __cdecl mpo_posixshm_check_unlink_t(kauth_cred_t cred, pshminfo *ps, struct label *shmlabel, const char *name);

/* 349 */
typedef void __cdecl mpo_posixshm_label_associate_t(kauth_cred_t cred, pshminfo *ps, struct label *shmlabel, const char *name);

/* 350 */
typedef void __cdecl mpo_posixshm_label_destroy_t(struct label *label);

/* 351 */
typedef void __cdecl mpo_posixshm_label_init_t(struct label *label);

/* 352 */
typedef int __cdecl mpo_proc_check_debug_t(kauth_cred_t cred, struct proc *proc);

/* 353 */
typedef int __cdecl mpo_proc_check_fork_t(kauth_cred_t cred, struct proc *proc);

/* 354 */
typedef int __cdecl mpo_proc_check_get_task_name_t(kauth_cred_t cred, struct proc *p);

/* 355 */
typedef int __cdecl mpo_proc_check_get_task_t(kauth_cred_t cred, struct proc *p);

/* 356 */
typedef int __cdecl mpo_proc_check_getaudit_t(kauth_cred_t cred);

/* 357 */
typedef int __cdecl mpo_proc_check_getauid_t(kauth_cred_t cred);

/* 358 */
typedef int __cdecl mpo_proc_check_getlcid_t(struct proc *p0, struct proc *p, pid_t pid);

/* 359 */
typedef int __cdecl mpo_proc_check_mprotect_t(kauth_cred_t cred, struct proc *proc, user_addr_t addr, user_size_t size, int prot);

/* 360 */
typedef int __cdecl mpo_proc_check_sched_t(kauth_cred_t cred, struct proc *proc);

/* 361 */
typedef int __cdecl mpo_proc_check_setaudit_t(kauth_cred_t cred, auditinfo_addr *ai);

/* 362 */
typedef int __cdecl mpo_proc_check_setauid_t(kauth_cred_t cred, uid_t auid);

/* 363 */
typedef int __cdecl mpo_proc_check_setlcid_t(struct proc *p0, struct proc *p, pid_t pid, pid_t lcid);

/* 364 */
typedef int __cdecl mpo_proc_check_signal_t(kauth_cred_t cred, struct proc *proc, int signum);

/* 365 */
typedef int __cdecl mpo_proc_check_wait_t(kauth_cred_t cred, struct proc *proc);

/* 366 */
typedef void __cdecl mpo_proc_label_destroy_t(struct label *label);

/* 367 */
typedef void __cdecl mpo_proc_label_init_t(struct label *label);

/* 368 */
typedef int __cdecl mpo_socket_check_accept_t(kauth_cred_t cred, socket_t so, struct label *socklabel);

/* 369 */
typedef int __cdecl mpo_socket_check_accepted_t(kauth_cred_t cred, socket_t so, struct label *socklabel, sockaddr *addr);

/* 371 */
typedef int __cdecl mpo_socket_check_bind_t(kauth_cred_t cred, socket_t so, struct label *socklabel, sockaddr *addr);

/* 372 */
typedef int __cdecl mpo_socket_check_connect_t(kauth_cred_t cred, socket_t so, struct label *socklabel, sockaddr *addr);

/* 373 */
typedef int __cdecl mpo_socket_check_create_t(kauth_cred_t cred, int domain, int type, int protocol);

/* 374 */
typedef int __cdecl mpo_socket_check_deliver_t(socket_t so, struct label *so_label, struct mbuf *m, struct label *m_label);

/* 375 */
typedef int __cdecl mpo_socket_check_kqfilter_t(kauth_cred_t cred, struct knote *kn, socket_t so, struct label *socklabel);

/* 376 */
typedef int __cdecl mpo_socket_check_label_update_t(kauth_cred_t cred, socket_t so, struct label *so_label, struct label *newlabel);

/* 377 */
typedef int __cdecl mpo_socket_check_listen_t(kauth_cred_t cred, socket_t so, struct label *socklabel);

/* 378 */
typedef int __cdecl mpo_socket_check_receive_t(kauth_cred_t cred, socket_t so, struct label *socklabel);

/* 379 */
typedef int __cdecl mpo_socket_check_received_t(kauth_cred_t cred, struct socket *sock, struct label *socklabel, sockaddr *saddr);

/* 380 */
typedef int __cdecl mpo_socket_check_select_t(kauth_cred_t cred, socket_t so, struct label *socklabel, int which);

/* 381 */
typedef int __cdecl mpo_socket_check_send_t(kauth_cred_t cred, socket_t so, struct label *socklabel, sockaddr *addr);

/* 382 */
typedef int __cdecl mpo_socket_check_stat_t(kauth_cred_t cred, socket_t so, struct label *socklabel);

/* 383 */
typedef int __cdecl mpo_socket_check_setsockopt_t(kauth_cred_t cred, socket_t so, struct label *socklabel, struct sockopt *sopt);

/* 384 */
typedef int __cdecl mpo_socket_check_getsockopt_t(kauth_cred_t cred, socket_t so, struct label *socklabel, struct sockopt *sopt);

/* 385 */
typedef void __cdecl mpo_socket_label_associate_accept_t(socket_t oldsock, struct label *oldlabel, socket_t newsock, struct label *newlabel);

/* 386 */
typedef void __cdecl mpo_socket_label_associate_t(kauth_cred_t cred, socket_t so, struct label *solabel);

/* 387 */
typedef void __cdecl mpo_socket_label_copy_t(struct label *src, struct label *dest);

/* 388 */
typedef void __cdecl mpo_socket_label_destroy_t(struct label *label);

/* 389 */
typedef int __cdecl mpo_socket_label_externalize_t(struct label *label, char *element_name, sbuf *sb);

/* 390 */
typedef int __cdecl mpo_socket_label_init_t(struct label *label, int waitok);

/* 391 */
typedef int __cdecl mpo_socket_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 392 */
typedef void __cdecl mpo_socket_label_update_t(kauth_cred_t cred, socket_t so, struct label *so_label, struct label *newlabel);

/* 393 */
typedef void __cdecl mpo_socketpeer_label_associate_mbuf_t(struct mbuf *m, struct label *m_label, socket_t so, struct label *so_label);

/* 394 */
typedef void __cdecl mpo_socketpeer_label_associate_socket_t(socket_t source, struct label *sourcelabel, socket_t target, struct label *targetlabel);

/* 395 */
typedef void __cdecl mpo_socketpeer_label_destroy_t(struct label *label);

/* 396 */
typedef int __cdecl mpo_socketpeer_label_externalize_t(struct label *label, char *element_name, sbuf *sb);

/* 397 */
typedef int __cdecl mpo_socketpeer_label_init_t(struct label *label, int waitok);

/* 398 */
typedef int __cdecl mpo_system_check_acct_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel);

/* 399 */
typedef int __cdecl mpo_system_check_audit_t(kauth_cred_t cred, void *record, int length);

/* 400 */
typedef int __cdecl mpo_system_check_auditctl_t(kauth_cred_t cred, struct vnode *vp, struct label *vl);

/* 401 */
typedef int __cdecl mpo_system_check_auditon_t(kauth_cred_t cred, int cmd);

/* 402 */
typedef int __cdecl mpo_system_check_host_priv_t(kauth_cred_t cred);

/* 403 */
typedef int __cdecl mpo_system_check_nfsd_t(kauth_cred_t cred);

/* 404 */
typedef int __cdecl mpo_system_check_reboot_t(kauth_cred_t cred, int howto);

/* 405 */
typedef int __cdecl mpo_system_check_settime_t(kauth_cred_t cred);

/* 406 */
typedef int __cdecl mpo_system_check_swapoff_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 407 */
typedef int __cdecl mpo_system_check_swapon_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 409 */
typedef unsigned int u_int;

/* 408 */
typedef int __cdecl mpo_system_check_sysctl_t(kauth_cred_t cred, int *name, u_int namelen, user_addr_t old, user_addr_t oldlenp, int inkernel, user_addr_t newvalue, size_t newlen);

/* 410 */
typedef void __cdecl mpo_sysvmsg_label_associate_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel, msg *msgptr, struct label *msglabel);

/* 412 */
typedef void __cdecl mpo_sysvmsg_label_destroy_t(struct label *label);

/* 413 */
typedef void __cdecl mpo_sysvmsg_label_init_t(struct label *label);

/* 414 */
typedef void __cdecl mpo_sysvmsg_label_recycle_t(struct label *label);

/* 415 */
typedef int __cdecl mpo_sysvmsq_check_enqueue_t(kauth_cred_t cred, msg *msgptr, struct label *msglabel, struct msqid_kernel *msqptr, struct label *msqlabel);

/* 416 */
typedef int __cdecl mpo_sysvmsq_check_msgrcv_t(kauth_cred_t cred, msg *msgptr, struct label *msglabel);

/* 417 */
typedef int __cdecl mpo_sysvmsq_check_msgrmid_t(kauth_cred_t cred, msg *msgptr, struct label *msglabel);

/* 418 */
typedef int __cdecl mpo_sysvmsq_check_msqctl_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel, int cmd);

/* 419 */
typedef int __cdecl mpo_sysvmsq_check_msqget_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);

/* 420 */
typedef int __cdecl mpo_sysvmsq_check_msqrcv_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);

/* 421 */
typedef int __cdecl mpo_sysvmsq_check_msqsnd_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);

/* 422 */
typedef void __cdecl mpo_sysvmsq_label_associate_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);

/* 423 */
typedef void __cdecl mpo_sysvmsq_label_destroy_t(struct label *label);

/* 424 */
typedef void __cdecl mpo_sysvmsq_label_init_t(struct label *label);

/* 425 */
typedef void __cdecl mpo_sysvmsq_label_recycle_t(struct label *label);

/* 426 */
typedef int __cdecl mpo_sysvsem_check_semctl_t(kauth_cred_t cred, semid_kernel *semakptr, struct label *semaklabel, int cmd);

/* 428 */
typedef int __cdecl mpo_sysvsem_check_semget_t(kauth_cred_t cred, semid_kernel *semakptr, struct label *semaklabel);

/* 429 */
typedef int __cdecl mpo_sysvsem_check_semop_t(kauth_cred_t cred, semid_kernel *semakptr, struct label *semaklabel, size_t accesstype);

/* 430 */
typedef void __cdecl mpo_sysvsem_label_associate_t(kauth_cred_t cred, semid_kernel *semakptr, struct label *semalabel);

/* 431 */
typedef void __cdecl mpo_sysvsem_label_destroy_t(struct label *label);

/* 432 */
typedef void __cdecl mpo_sysvsem_label_init_t(struct label *label);

/* 433 */
typedef void __cdecl mpo_sysvsem_label_recycle_t(struct label *label);

/* 435 */
struct shmid_kernel;

/* 434 */
typedef int __cdecl mpo_sysvshm_check_shmat_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel, int shmflg);

/* 436 */
typedef int __cdecl mpo_sysvshm_check_shmctl_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel, int cmd);

/* 437 */
typedef int __cdecl mpo_sysvshm_check_shmdt_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel);

/* 438 */
typedef int __cdecl mpo_sysvshm_check_shmget_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel, int shmflg);

/* 439 */
typedef void __cdecl mpo_sysvshm_label_associate_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmlabel);

/* 440 */
typedef void __cdecl mpo_sysvshm_label_destroy_t(struct label *label);

/* 441 */
typedef void __cdecl mpo_sysvshm_label_init_t(struct label *label);

/* 442 */
typedef void __cdecl mpo_sysvshm_label_recycle_t(struct label *shmlabel);

/* 444 */
struct task;

/* 443 */
typedef void __cdecl mpo_task_label_associate_kernel_t(struct task *kproc, struct label *tasklabel, struct label *portlabel);

/* 445 */
typedef void __cdecl mpo_task_label_associate_t(struct task *parent, struct task *child, struct label *parentlabel, struct label *childlabel, struct label *childportlabel);

/* 446 */
typedef void __cdecl mpo_task_label_copy_t(struct label *src, struct label *dest);

/* 447 */
typedef void __cdecl mpo_task_label_destroy_t(struct label *label);

/* 448 */
typedef int __cdecl mpo_task_label_externalize_t(struct label *label, char *element_name, sbuf *sb);

/* 449 */
typedef void __cdecl mpo_task_label_init_t(struct label *label);

/* 450 */
typedef int __cdecl mpo_task_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 451 */
typedef void __cdecl mpo_task_label_update_t(struct label *cred, struct label *task);

/* 452 */
typedef int __cdecl mpo_iokit_check_hid_control_t(kauth_cred_t cred);

/* 453 */
typedef int __cdecl mpo_vnode_check_access_t(kauth_cred_t cred, struct vnode *vp, struct label *label, int acc_mode);

/* 454 */
typedef int __cdecl mpo_vnode_check_chdir_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel);

/* 455 */
typedef int __cdecl mpo_vnode_check_chroot_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp);

/* 456 */
typedef int __cdecl mpo_vnode_check_create_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp, struct vnode_attr *vap);

/* 457 */
typedef int __cdecl mpo_vnode_check_deleteextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, const char *name);

/* 458 */
typedef int __cdecl mpo_vnode_check_exchangedata_t(kauth_cred_t cred, struct vnode *v1, struct label *vl1, struct vnode *v2, struct label *vl2);

/* 459 */
typedef int __cdecl mpo_vnode_check_exec_t(kauth_cred_t cred, struct vnode *vp, struct label *label, struct label *execlabel, struct componentname *cnp, u_int *csflags);

/* 460 */
typedef int __cdecl mpo_vnode_check_getattrlist_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, attrlist *alist);

/* 464 */
struct uio;

/* 463 */
typedef int __cdecl mpo_vnode_check_getextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *label, const char *name, struct uio *uio);

/* 465 */
typedef int __cdecl mpo_vnode_check_ioctl_t(kauth_cred_t cred, struct vnode *vp, struct label *label, unsigned int cmd);

/* 466 */
typedef int __cdecl mpo_vnode_check_kqfilter_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct knote *kn, struct vnode *vp, struct label *label);

/* 467 */
typedef int __cdecl mpo_vnode_check_label_update_t(ucred *cred, struct vnode *vp, struct label *vnodelabel, struct label *newlabel);

/* 468 */
typedef int __cdecl mpo_vnode_check_link_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, struct componentname *cnp);

/* 469 */
typedef int __cdecl mpo_vnode_check_listextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel);

/* 470 */
typedef int __cdecl mpo_vnode_check_lookup_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp);

/* 471 */
typedef int __cdecl mpo_vnode_check_open_t(kauth_cred_t cred, struct vnode *vp, struct label *label, int acc_mode);

/* 472 */
typedef int __cdecl mpo_vnode_check_read_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct vnode *vp, struct label *label);

/* 473 */
typedef int __cdecl mpo_vnode_check_readdir_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel);

/* 474 */
typedef int __cdecl mpo_vnode_check_readlink_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 475 */
typedef int __cdecl mpo_vnode_check_rename_from_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, struct componentname *cnp);

/* 476 */
typedef int __cdecl mpo_vnode_check_rename_to_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, int samedir, struct componentname *cnp);

/* 477 */
typedef int __cdecl mpo_vnode_check_revoke_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 478 */
typedef int __cdecl mpo_vnode_check_select_t(kauth_cred_t cred, struct vnode *vp, struct label *label, int which);

/* 479 */
typedef int __cdecl mpo_vnode_check_setattrlist_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, attrlist *alist);

/* 480 */
typedef int __cdecl mpo_vnode_check_setextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *label, const char *name, struct uio *uio);

/* 145 */
typedef unsigned __int64 u_long;

/* 481 */
typedef int __cdecl mpo_vnode_check_setflags_t(kauth_cred_t cred, struct vnode *vp, struct label *label, u_long flags);

/* 482 */
typedef int __cdecl mpo_vnode_check_setmode_t(kauth_cred_t cred, struct vnode *vp, struct label *label, mode_t mode);

/* 483 */
typedef int __cdecl mpo_vnode_check_setowner_t(kauth_cred_t cred, struct vnode *vp, struct label *label, uid_t uid, gid_t gid);

/* 486 */
typedef __int64 __darwin_time_t;

/* 485 */
struct timespec
{
  __darwin_time_t tv_sec;
  __int64 tv_nsec;
};

/* 484 */
typedef int __cdecl mpo_vnode_check_setutimes_t(kauth_cred_t cred, struct vnode *vp, struct label *label, timespec atime, timespec mtime);

/* 487 */
typedef int __cdecl mpo_vnode_check_stat_t(ucred *active_cred, ucred *file_cred, struct vnode *vp, struct label *label);

/* 488 */
typedef int __cdecl mpo_vnode_check_truncate_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct vnode *vp, struct label *label);

/* 489 */
typedef int __cdecl mpo_vnode_check_unlink_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, struct componentname *cnp);

/* 490 */
typedef int __cdecl mpo_vnode_check_write_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct vnode *vp, struct label *label);

/* 491 */
typedef void __cdecl mpo_vnode_label_associate_devfs_t(mount *mp, struct label *mntlabel, struct devnode *de, struct label *delabel, struct vnode *vp, struct label *vlabel);

/* 492 */
typedef int __cdecl mpo_vnode_label_associate_extattr_t(mount *mp, struct label *mntlabel, struct vnode *vp, struct label *vlabel);

/* 493 */
typedef void __cdecl mpo_vnode_label_associate_file_t(ucred *cred, mount *mp, struct label *mntlabel, struct fileglob *fg, struct label *label, struct vnode *vp, struct label *vlabel);

/* 494 */
typedef void __cdecl mpo_vnode_label_associate_pipe_t(ucred *cred, struct pipe *cpipe, struct label *pipelabel, struct vnode *vp, struct label *vlabel);

/* 495 */
typedef void __cdecl mpo_vnode_label_associate_posixsem_t(ucred *cred, pseminfo *psem, struct label *psemlabel, struct vnode *vp, struct label *vlabel);

/* 496 */
typedef void __cdecl mpo_vnode_label_associate_posixshm_t(ucred *cred, pshminfo *pshm, struct label *pshmlabel, struct vnode *vp, struct label *vlabel);

/* 497 */
typedef void __cdecl mpo_vnode_label_associate_singlelabel_t(mount *mp, struct label *mntlabel, struct vnode *vp, struct label *vlabel);

/* 498 */
typedef void __cdecl mpo_vnode_label_associate_socket_t(kauth_cred_t cred, socket_t so, struct label *solabel, struct vnode *vp, struct label *vlabel);

/* 499 */
typedef void __cdecl mpo_vnode_label_copy_t(struct label *src, struct label *dest);

/* 500 */
typedef void __cdecl mpo_vnode_label_destroy_t(struct label *label);

/* 501 */
typedef int __cdecl mpo_vnode_label_externalize_audit_t(struct label *label, char *element_name, sbuf *sb);

/* 502 */
typedef int __cdecl mpo_vnode_label_externalize_t(struct label *label, char *element_name, sbuf *sb);

/* 503 */
typedef void __cdecl mpo_vnode_label_init_t(struct label *label);

/* 504 */
typedef int __cdecl mpo_vnode_label_internalize_t(struct label *label, char *element_name, char *element_data);

/* 505 */
typedef void __cdecl mpo_vnode_label_recycle_t(struct label *label);

/* 506 */
typedef int __cdecl mpo_vnode_label_store_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, struct label *intlabel);

/* 507 */
typedef int __cdecl mpo_vnode_label_update_extattr_t(mount *mp, struct label *mntlabel, struct vnode *vp, struct label *vlabel, const char *name);

/* 508 */
typedef void __cdecl mpo_vnode_label_update_t(kauth_cred_t cred, struct vnode *vp, struct label *vnodelabel, struct label *label);

/* 509 */
typedef int __cdecl mpo_vnode_notify_create_t(kauth_cred_t cred, mount *mp, struct label *mntlabel, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *vlabel, struct componentname *cnp);

/* 510 */
typedef int __cdecl mpo_vnode_check_signature_t(struct vnode *vp, struct label *label, unsigned __int8 *sha1, void *signature, int size);

/* 511 */
typedef int __cdecl mpo_vnode_check_uipc_bind_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp, struct vnode_attr *vap);

/* 512 */
typedef int __cdecl mpo_vnode_check_uipc_connect_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 513 */
typedef int __cdecl mac_proc_check_run_cs_invalid_t(struct proc *p);

/* 514 */
typedef int __cdecl mpo_proc_check_suspend_resume_t(kauth_cred_t cred, struct proc *proc, int sr);

/* 515 */
typedef void mpo_reserved_hook_t(void);

/* 517 */
typedef struct OSObject *io_object_t;

/* 516 */
typedef int __cdecl mpo_iokit_check_set_properties_t(kauth_cred_t cred, io_object_t entry, io_object_t properties);

/* 519 */
typedef int __cdecl mpo_system_check_chud_t(kauth_cred_t cred);

/* 520 */
typedef int __cdecl mpo_vnode_check_searchfs_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, attrlist *alist);

/* 521 */
typedef int __cdecl mpo_priv_check_t(kauth_cred_t cred, int priv);

/* 522 */
typedef int __cdecl mpo_priv_grant_t(kauth_cred_t cred, int priv);

/* 523 */
typedef int __cdecl mpo_proc_check_map_anon_t(struct proc *proc, kauth_cred_t cred, user_addr_t u_addr, user_size_t u_size, int prot, int flags, int *maxprot);

/* 524 */
typedef int __cdecl mpo_vnode_check_fsgetpath_t(kauth_cred_t cred, struct vnode *vp, struct label *label);

/* 525 */
typedef int __cdecl mpo_iokit_check_open_t(kauth_cred_t cred, io_object_t user_client, unsigned int user_client_type);

/* 526 */
typedef void __cdecl mpo_vnode_notify_rename_t(kauth_cred_t cred, struct vnode *vp, struct label *label, struct vnode *dvp, struct label *dlabel, struct componentname *cnp);

/* 140 */
struct mac_policy_ops
{
  mpo_audit_check_postselect_t *mpo_audit_check_postselect;
  mpo_audit_check_preselect_t *mpo_audit_check_preselect;
  mpo_bpfdesc_label_associate_t *mpo_bpfdesc_label_associate;
  mpo_bpfdesc_label_destroy_t *mpo_bpfdesc_label_destroy;
  mpo_bpfdesc_label_init_t *mpo_bpfdesc_label_init;
  mpo_bpfdesc_check_receive_t *mpo_bpfdesc_check_receive;
  mpo_cred_check_label_update_execve_t *mpo_cred_check_label_update_execve;
  mpo_cred_check_label_update_t *mpo_cred_check_label_update;
  mpo_cred_check_visible_t *mpo_cred_check_visible;
  mpo_cred_label_associate_fork_t *mpo_cred_label_associate_fork;
  mpo_cred_label_associate_kernel_t *mpo_cred_label_associate_kernel;
  mpo_cred_label_associate_t *mpo_cred_label_associate;
  mpo_cred_label_associate_user_t *mpo_cred_label_associate_user;
  mpo_cred_label_destroy_t *mpo_cred_label_destroy;
  mpo_cred_label_externalize_audit_t *mpo_cred_label_externalize_audit;
  mpo_cred_label_externalize_t *mpo_cred_label_externalize;
  mpo_cred_label_init_t *mpo_cred_label_init;
  mpo_cred_label_internalize_t *mpo_cred_label_internalize;
  mpo_cred_label_update_execve_t *mpo_cred_label_update_execve;
  mpo_cred_label_update_t *mpo_cred_label_update;
  mpo_devfs_label_associate_device_t *mpo_devfs_label_associate_device;
  mpo_devfs_label_associate_directory_t *mpo_devfs_label_associate_directory;
  mpo_devfs_label_copy_t *mpo_devfs_label_copy;
  mpo_devfs_label_destroy_t *mpo_devfs_label_destroy;
  mpo_devfs_label_init_t *mpo_devfs_label_init;
  mpo_devfs_label_update_t *mpo_devfs_label_update;
  mpo_file_check_change_offset_t *mpo_file_check_change_offset;
  mpo_file_check_create_t *mpo_file_check_create;
  mpo_file_check_dup_t *mpo_file_check_dup;
  mpo_file_check_fcntl_t *mpo_file_check_fcntl;
  mpo_file_check_get_offset_t *mpo_file_check_get_offset;
  mpo_file_check_get_t *mpo_file_check_get;
  mpo_file_check_inherit_t *mpo_file_check_inherit;
  mpo_file_check_ioctl_t *mpo_file_check_ioctl;
  mpo_file_check_lock_t *mpo_file_check_lock;
  mpo_file_check_mmap_downgrade_t *mpo_file_check_mmap_downgrade;
  mpo_file_check_mmap_t *mpo_file_check_mmap;
  mpo_file_check_receive_t *mpo_file_check_receive;
  mpo_file_check_set_t *mpo_file_check_set;
  mpo_file_label_init_t *mpo_file_label_init;
  mpo_file_label_destroy_t *mpo_file_label_destroy;
  mpo_file_label_associate_t *mpo_file_label_associate;
  mpo_ifnet_check_label_update_t *mpo_ifnet_check_label_update;
  mpo_ifnet_check_transmit_t *mpo_ifnet_check_transmit;
  mpo_ifnet_label_associate_t *mpo_ifnet_label_associate;
  mpo_ifnet_label_copy_t *mpo_ifnet_label_copy;
  mpo_ifnet_label_destroy_t *mpo_ifnet_label_destroy;
  mpo_ifnet_label_externalize_t *mpo_ifnet_label_externalize;
  mpo_ifnet_label_init_t *mpo_ifnet_label_init;
  mpo_ifnet_label_internalize_t *mpo_ifnet_label_internalize;
  mpo_ifnet_label_update_t *mpo_ifnet_label_update;
  mpo_ifnet_label_recycle_t *mpo_ifnet_label_recycle;
  mpo_inpcb_check_deliver_t *mpo_inpcb_check_deliver;
  mpo_inpcb_label_associate_t *mpo_inpcb_label_associate;
  mpo_inpcb_label_destroy_t *mpo_inpcb_label_destroy;
  mpo_inpcb_label_init_t *mpo_inpcb_label_init;
  mpo_inpcb_label_recycle_t *mpo_inpcb_label_recycle;
  mpo_inpcb_label_update_t *mpo_inpcb_label_update;
  mpo_iokit_check_device_t *mpo_iokit_check_device;
  mpo_ipq_label_associate_t *mpo_ipq_label_associate;
  mpo_ipq_label_compare_t *mpo_ipq_label_compare;
  mpo_ipq_label_destroy_t *mpo_ipq_label_destroy;
  mpo_ipq_label_init_t *mpo_ipq_label_init;
  mpo_ipq_label_update_t *mpo_ipq_label_update;
  mpo_lctx_check_label_update_t *mpo_lctx_check_label_update;
  mpo_lctx_label_destroy_t *mpo_lctx_label_destroy;
  mpo_lctx_label_externalize_t *mpo_lctx_label_externalize;
  mpo_lctx_label_init_t *mpo_lctx_label_init;
  mpo_lctx_label_internalize_t *mpo_lctx_label_internalize;
  mpo_lctx_label_update_t *mpo_lctx_label_update;
  mpo_lctx_notify_create_t *mpo_lctx_notify_create;
  mpo_lctx_notify_join_t *mpo_lctx_notify_join;
  mpo_lctx_notify_leave_t *mpo_lctx_notify_leave;
  mpo_mbuf_label_associate_bpfdesc_t *mpo_mbuf_label_associate_bpfdesc;
  mpo_mbuf_label_associate_ifnet_t *mpo_mbuf_label_associate_ifnet;
  mpo_mbuf_label_associate_inpcb_t *mpo_mbuf_label_associate_inpcb;
  mpo_mbuf_label_associate_ipq_t *mpo_mbuf_label_associate_ipq;
  mpo_mbuf_label_associate_linklayer_t *mpo_mbuf_label_associate_linklayer;
  mpo_mbuf_label_associate_multicast_encap_t *mpo_mbuf_label_associate_multicast_encap;
  mpo_mbuf_label_associate_netlayer_t *mpo_mbuf_label_associate_netlayer;
  mpo_mbuf_label_associate_socket_t *mpo_mbuf_label_associate_socket;
  mpo_mbuf_label_copy_t *mpo_mbuf_label_copy;
  mpo_mbuf_label_destroy_t *mpo_mbuf_label_destroy;
  mpo_mbuf_label_init_t *mpo_mbuf_label_init;
  mpo_mount_check_fsctl_t *mpo_mount_check_fsctl;
  mpo_mount_check_getattr_t *mpo_mount_check_getattr;
  mpo_mount_check_label_update_t *mpo_mount_check_label_update;
  mpo_mount_check_mount_t *mpo_mount_check_mount;
  mpo_mount_check_remount_t *mpo_mount_check_remount;
  mpo_mount_check_setattr_t *mpo_mount_check_setattr;
  mpo_mount_check_stat_t *mpo_mount_check_stat;
  mpo_mount_check_umount_t *mpo_mount_check_umount;
  mpo_mount_label_associate_t *mpo_mount_label_associate;
  mpo_mount_label_destroy_t *mpo_mount_label_destroy;
  mpo_mount_label_externalize_t *mpo_mount_label_externalize;
  mpo_mount_label_init_t *mpo_mount_label_init;
  mpo_mount_label_internalize_t *mpo_mount_label_internalize;
  mpo_netinet_fragment_t *mpo_netinet_fragment;
  mpo_netinet_icmp_reply_t *mpo_netinet_icmp_reply;
  mpo_netinet_tcp_reply_t *mpo_netinet_tcp_reply;
  mpo_pipe_check_ioctl_t *mpo_pipe_check_ioctl;
  mpo_pipe_check_kqfilter_t *mpo_pipe_check_kqfilter;
  mpo_pipe_check_label_update_t *mpo_pipe_check_label_update;
  mpo_pipe_check_read_t *mpo_pipe_check_read;
  mpo_pipe_check_select_t *mpo_pipe_check_select;
  mpo_pipe_check_stat_t *mpo_pipe_check_stat;
  mpo_pipe_check_write_t *mpo_pipe_check_write;
  mpo_pipe_label_associate_t *mpo_pipe_label_associate;
  mpo_pipe_label_copy_t *mpo_pipe_label_copy;
  mpo_pipe_label_destroy_t *mpo_pipe_label_destroy;
  mpo_pipe_label_externalize_t *mpo_pipe_label_externalize;
  mpo_pipe_label_init_t *mpo_pipe_label_init;
  mpo_pipe_label_internalize_t *mpo_pipe_label_internalize;
  mpo_pipe_label_update_t *mpo_pipe_label_update;
  mpo_policy_destroy_t *mpo_policy_destroy;
  mpo_policy_init_t *mpo_policy_init;
  mpo_policy_initbsd_t *mpo_policy_initbsd;
  mpo_policy_syscall_t *mpo_policy_syscall;
  mpo_port_check_copy_send_t *mpo_port_check_copy_send;
  mpo_port_check_hold_receive_t *mpo_port_check_hold_receive;
  mpo_port_check_hold_send_once_t *mpo_port_check_hold_send_once;
  mpo_port_check_hold_send_t *mpo_port_check_hold_send;
  mpo_port_check_label_update_t *mpo_port_check_label_update;
  mpo_port_check_make_send_once_t *mpo_port_check_make_send_once;
  mpo_port_check_make_send_t *mpo_port_check_make_send;
  mpo_port_check_method_t *mpo_port_check_method;
  mpo_port_check_move_receive_t *mpo_port_check_move_receive;
  mpo_port_check_move_send_once_t *mpo_port_check_move_send_once;
  mpo_port_check_move_send_t *mpo_port_check_move_send;
  mpo_port_check_receive_t *mpo_port_check_receive;
  mpo_port_check_send_t *mpo_port_check_send;
  mpo_port_check_service_t *mpo_port_check_service;
  mpo_port_label_associate_kernel_t *mpo_port_label_associate_kernel;
  mpo_port_label_associate_t *mpo_port_label_associate;
  mpo_port_label_compute_t *mpo_port_label_compute;
  mpo_port_label_copy_t *mpo_port_label_copy;
  mpo_port_label_destroy_t *mpo_port_label_destroy;
  mpo_port_label_init_t *mpo_port_label_init;
  mpo_port_label_update_cred_t *mpo_port_label_update_cred;
  mpo_port_label_update_kobject_t *mpo_port_label_update_kobject;
  mpo_posixsem_check_create_t *mpo_posixsem_check_create;
  mpo_posixsem_check_open_t *mpo_posixsem_check_open;
  mpo_posixsem_check_post_t *mpo_posixsem_check_post;
  mpo_posixsem_check_unlink_t *mpo_posixsem_check_unlink;
  mpo_posixsem_check_wait_t *mpo_posixsem_check_wait;
  mpo_posixsem_label_associate_t *mpo_posixsem_label_associate;
  mpo_posixsem_label_destroy_t *mpo_posixsem_label_destroy;
  mpo_posixsem_label_init_t *mpo_posixsem_label_init;
  mpo_posixshm_check_create_t *mpo_posixshm_check_create;
  mpo_posixshm_check_mmap_t *mpo_posixshm_check_mmap;
  mpo_posixshm_check_open_t *mpo_posixshm_check_open;
  mpo_posixshm_check_stat_t *mpo_posixshm_check_stat;
  mpo_posixshm_check_truncate_t *mpo_posixshm_check_truncate;
  mpo_posixshm_check_unlink_t *mpo_posixshm_check_unlink;
  mpo_posixshm_label_associate_t *mpo_posixshm_label_associate;
  mpo_posixshm_label_destroy_t *mpo_posixshm_label_destroy;
  mpo_posixshm_label_init_t *mpo_posixshm_label_init;
  mpo_proc_check_debug_t *mpo_proc_check_debug;
  mpo_proc_check_fork_t *mpo_proc_check_fork;
  mpo_proc_check_get_task_name_t *mpo_proc_check_get_task_name;
  mpo_proc_check_get_task_t *mpo_proc_check_get_task;
  mpo_proc_check_getaudit_t *mpo_proc_check_getaudit;
  mpo_proc_check_getauid_t *mpo_proc_check_getauid;
  mpo_proc_check_getlcid_t *mpo_proc_check_getlcid;
  mpo_proc_check_mprotect_t *mpo_proc_check_mprotect;
  mpo_proc_check_sched_t *mpo_proc_check_sched;
  mpo_proc_check_setaudit_t *mpo_proc_check_setaudit;
  mpo_proc_check_setauid_t *mpo_proc_check_setauid;
  mpo_proc_check_setlcid_t *mpo_proc_check_setlcid;
  mpo_proc_check_signal_t *mpo_proc_check_signal;
  mpo_proc_check_wait_t *mpo_proc_check_wait;
  mpo_proc_label_destroy_t *mpo_proc_label_destroy;
  mpo_proc_label_init_t *mpo_proc_label_init;
  mpo_socket_check_accept_t *mpo_socket_check_accept;
  mpo_socket_check_accepted_t *mpo_socket_check_accepted;
  mpo_socket_check_bind_t *mpo_socket_check_bind;
  mpo_socket_check_connect_t *mpo_socket_check_connect;
  mpo_socket_check_create_t *mpo_socket_check_create;
  mpo_socket_check_deliver_t *mpo_socket_check_deliver;
  mpo_socket_check_kqfilter_t *mpo_socket_check_kqfilter;
  mpo_socket_check_label_update_t *mpo_socket_check_label_update;
  mpo_socket_check_listen_t *mpo_socket_check_listen;
  mpo_socket_check_receive_t *mpo_socket_check_receive;
  mpo_socket_check_received_t *mpo_socket_check_received;
  mpo_socket_check_select_t *mpo_socket_check_select;
  mpo_socket_check_send_t *mpo_socket_check_send;
  mpo_socket_check_stat_t *mpo_socket_check_stat;
  mpo_socket_check_setsockopt_t *mpo_socket_check_setsockopt;
  mpo_socket_check_getsockopt_t *mpo_socket_check_getsockopt;
  mpo_socket_label_associate_accept_t *mpo_socket_label_associate_accept;
  mpo_socket_label_associate_t *mpo_socket_label_associate;
  mpo_socket_label_copy_t *mpo_socket_label_copy;
  mpo_socket_label_destroy_t *mpo_socket_label_destroy;
  mpo_socket_label_externalize_t *mpo_socket_label_externalize;
  mpo_socket_label_init_t *mpo_socket_label_init;
  mpo_socket_label_internalize_t *mpo_socket_label_internalize;
  mpo_socket_label_update_t *mpo_socket_label_update;
  mpo_socketpeer_label_associate_mbuf_t *mpo_socketpeer_label_associate_mbuf;
  mpo_socketpeer_label_associate_socket_t *mpo_socketpeer_label_associate_socket;
  mpo_socketpeer_label_destroy_t *mpo_socketpeer_label_destroy;
  mpo_socketpeer_label_externalize_t *mpo_socketpeer_label_externalize;
  mpo_socketpeer_label_init_t *mpo_socketpeer_label_init;
  mpo_system_check_acct_t *mpo_system_check_acct;
  mpo_system_check_audit_t *mpo_system_check_audit;
  mpo_system_check_auditctl_t *mpo_system_check_auditctl;
  mpo_system_check_auditon_t *mpo_system_check_auditon;
  mpo_system_check_host_priv_t *mpo_system_check_host_priv;
  mpo_system_check_nfsd_t *mpo_system_check_nfsd;
  mpo_system_check_reboot_t *mpo_system_check_reboot;
  mpo_system_check_settime_t *mpo_system_check_settime;
  mpo_system_check_swapoff_t *mpo_system_check_swapoff;
  mpo_system_check_swapon_t *mpo_system_check_swapon;
  mpo_system_check_sysctl_t *mpo_system_check_sysctl;
  mpo_sysvmsg_label_associate_t *mpo_sysvmsg_label_associate;
  mpo_sysvmsg_label_destroy_t *mpo_sysvmsg_label_destroy;
  mpo_sysvmsg_label_init_t *mpo_sysvmsg_label_init;
  mpo_sysvmsg_label_recycle_t *mpo_sysvmsg_label_recycle;
  mpo_sysvmsq_check_enqueue_t *mpo_sysvmsq_check_enqueue;
  mpo_sysvmsq_check_msgrcv_t *mpo_sysvmsq_check_msgrcv;
  mpo_sysvmsq_check_msgrmid_t *mpo_sysvmsq_check_msgrmid;
  mpo_sysvmsq_check_msqctl_t *mpo_sysvmsq_check_msqctl;
  mpo_sysvmsq_check_msqget_t *mpo_sysvmsq_check_msqget;
  mpo_sysvmsq_check_msqrcv_t *mpo_sysvmsq_check_msqrcv;
  mpo_sysvmsq_check_msqsnd_t *mpo_sysvmsq_check_msqsnd;
  mpo_sysvmsq_label_associate_t *mpo_sysvmsq_label_associate;
  mpo_sysvmsq_label_destroy_t *mpo_sysvmsq_label_destroy;
  mpo_sysvmsq_label_init_t *mpo_sysvmsq_label_init;
  mpo_sysvmsq_label_recycle_t *mpo_sysvmsq_label_recycle;
  mpo_sysvsem_check_semctl_t *mpo_sysvsem_check_semctl;
  mpo_sysvsem_check_semget_t *mpo_sysvsem_check_semget;
  mpo_sysvsem_check_semop_t *mpo_sysvsem_check_semop;
  mpo_sysvsem_label_associate_t *mpo_sysvsem_label_associate;
  mpo_sysvsem_label_destroy_t *mpo_sysvsem_label_destroy;
  mpo_sysvsem_label_init_t *mpo_sysvsem_label_init;
  mpo_sysvsem_label_recycle_t *mpo_sysvsem_label_recycle;
  mpo_sysvshm_check_shmat_t *mpo_sysvshm_check_shmat;
  mpo_sysvshm_check_shmctl_t *mpo_sysvshm_check_shmctl;
  mpo_sysvshm_check_shmdt_t *mpo_sysvshm_check_shmdt;
  mpo_sysvshm_check_shmget_t *mpo_sysvshm_check_shmget;
  mpo_sysvshm_label_associate_t *mpo_sysvshm_label_associate;
  mpo_sysvshm_label_destroy_t *mpo_sysvshm_label_destroy;
  mpo_sysvshm_label_init_t *mpo_sysvshm_label_init;
  mpo_sysvshm_label_recycle_t *mpo_sysvshm_label_recycle;
  mpo_task_label_associate_kernel_t *mpo_task_label_associate_kernel;
  mpo_task_label_associate_t *mpo_task_label_associate;
  mpo_task_label_copy_t *mpo_task_label_copy;
  mpo_task_label_destroy_t *mpo_task_label_destroy;
  mpo_task_label_externalize_t *mpo_task_label_externalize;
  mpo_task_label_init_t *mpo_task_label_init;
  mpo_task_label_internalize_t *mpo_task_label_internalize;
  mpo_task_label_update_t *mpo_task_label_update;
  mpo_iokit_check_hid_control_t *mpo_iokit_check_hid_control;
  mpo_vnode_check_access_t *mpo_vnode_check_access;
  mpo_vnode_check_chdir_t *mpo_vnode_check_chdir;
  mpo_vnode_check_chroot_t *mpo_vnode_check_chroot;
  mpo_vnode_check_create_t *mpo_vnode_check_create;
  mpo_vnode_check_deleteextattr_t *mpo_vnode_check_deleteextattr;
  mpo_vnode_check_exchangedata_t *mpo_vnode_check_exchangedata;
  mpo_vnode_check_exec_t *mpo_vnode_check_exec;
  mpo_vnode_check_getattrlist_t *mpo_vnode_check_getattrlist;
  mpo_vnode_check_getextattr_t *mpo_vnode_check_getextattr;
  mpo_vnode_check_ioctl_t *mpo_vnode_check_ioctl;
  mpo_vnode_check_kqfilter_t *mpo_vnode_check_kqfilter;
  mpo_vnode_check_label_update_t *mpo_vnode_check_label_update;
  mpo_vnode_check_link_t *mpo_vnode_check_link;
  mpo_vnode_check_listextattr_t *mpo_vnode_check_listextattr;
  mpo_vnode_check_lookup_t *mpo_vnode_check_lookup;
  mpo_vnode_check_open_t *mpo_vnode_check_open;
  mpo_vnode_check_read_t *mpo_vnode_check_read;
  mpo_vnode_check_readdir_t *mpo_vnode_check_readdir;
  mpo_vnode_check_readlink_t *mpo_vnode_check_readlink;
  mpo_vnode_check_rename_from_t *mpo_vnode_check_rename_from;
  mpo_vnode_check_rename_to_t *mpo_vnode_check_rename_to;
  mpo_vnode_check_revoke_t *mpo_vnode_check_revoke;
  mpo_vnode_check_select_t *mpo_vnode_check_select;
  mpo_vnode_check_setattrlist_t *mpo_vnode_check_setattrlist;
  mpo_vnode_check_setextattr_t *mpo_vnode_check_setextattr;
  mpo_vnode_check_setflags_t *mpo_vnode_check_setflags;
  mpo_vnode_check_setmode_t *mpo_vnode_check_setmode;
  mpo_vnode_check_setowner_t *mpo_vnode_check_setowner;
  mpo_vnode_check_setutimes_t *mpo_vnode_check_setutimes;
  mpo_vnode_check_stat_t *mpo_vnode_check_stat;
  mpo_vnode_check_truncate_t *mpo_vnode_check_truncate;
  mpo_vnode_check_unlink_t *mpo_vnode_check_unlink;
  mpo_vnode_check_write_t *mpo_vnode_check_write;
  mpo_vnode_label_associate_devfs_t *mpo_vnode_label_associate_devfs;
  mpo_vnode_label_associate_extattr_t *mpo_vnode_label_associate_extattr;
  mpo_vnode_label_associate_file_t *mpo_vnode_label_associate_file;
  mpo_vnode_label_associate_pipe_t *mpo_vnode_label_associate_pipe;
  mpo_vnode_label_associate_posixsem_t *mpo_vnode_label_associate_posixsem;
  mpo_vnode_label_associate_posixshm_t *mpo_vnode_label_associate_posixshm;
  mpo_vnode_label_associate_singlelabel_t *mpo_vnode_label_associate_singlelabel;
  mpo_vnode_label_associate_socket_t *mpo_vnode_label_associate_socket;
  mpo_vnode_label_copy_t *mpo_vnode_label_copy;
  mpo_vnode_label_destroy_t *mpo_vnode_label_destroy;
  mpo_vnode_label_externalize_audit_t *mpo_vnode_label_externalize_audit;
  mpo_vnode_label_externalize_t *mpo_vnode_label_externalize;
  mpo_vnode_label_init_t *mpo_vnode_label_init;
  mpo_vnode_label_internalize_t *mpo_vnode_label_internalize;
  mpo_vnode_label_recycle_t *mpo_vnode_label_recycle;
  mpo_vnode_label_store_t *mpo_vnode_label_store;
  mpo_vnode_label_update_extattr_t *mpo_vnode_label_update_extattr;
  mpo_vnode_label_update_t *mpo_vnode_label_update;
  mpo_vnode_notify_create_t *mpo_vnode_notify_create;
  mpo_vnode_check_signature_t *mpo_vnode_check_signature;
  mpo_vnode_check_uipc_bind_t *mpo_vnode_check_uipc_bind;
  mpo_vnode_check_uipc_connect_t *mpo_vnode_check_uipc_connect;
  mac_proc_check_run_cs_invalid_t *mpo_proc_check_run_cs_invalid;
  mpo_proc_check_suspend_resume_t *mpo_proc_check_suspend_resume;
  mpo_reserved_hook_t *mpo_reserved12;
  mpo_iokit_check_set_properties_t *mpo_iokit_check_set_properties;
  mpo_system_check_chud_t *mpo_system_check_chud;
  mpo_vnode_check_searchfs_t *mpo_vnode_check_searchfs;
  mpo_priv_check_t *mpo_priv_check;
  mpo_priv_grant_t *mpo_priv_grant;
  mpo_proc_check_map_anon_t *mpo_proc_check_map_anon;
  mpo_vnode_check_fsgetpath_t *mpo_vnode_check_fsgetpath;
  mpo_iokit_check_open_t *mpo_iokit_check_open;
  mpo_vnode_notify_rename_t *mpo_vnode_notify_rename;
  mpo_reserved_hook_t *mpo_reserved14;
  mpo_reserved_hook_t *mpo_reserved15;
  mpo_reserved_hook_t *mpo_reserved16;
  mpo_reserved_hook_t *mpo_reserved17;
  mpo_reserved_hook_t *mpo_reserved18;
  mpo_reserved_hook_t *mpo_reserved19;
  mpo_reserved_hook_t *mpo_reserved20;
  mpo_reserved_hook_t *mpo_reserved21;
  mpo_reserved_hook_t *mpo_reserved22;
  mpo_reserved_hook_t *mpo_reserved23;
  mpo_reserved_hook_t *mpo_reserved24;
  mpo_reserved_hook_t *mpo_reserved25;
  mpo_reserved_hook_t *mpo_reserved26;
  mpo_reserved_hook_t *mpo_reserved27;
  mpo_reserved_hook_t *mpo_reserved28;
  mpo_reserved_hook_t *mpo_reserved29;
};

/* 830 */
struct ucred::$39348EDF62FF74AECB85B832497777BE
{
  struct ucred *tqe_next;
  struct ucred **tqe_prev;
};

/* 146 */
struct ucred::posix_cred
{
  uid_t cr_uid;
  uid_t cr_ruid;
  uid_t cr_svuid;
  __int16 cr_ngroups;
  gid_t cr_groups[16];
  gid_t cr_rgid;
  gid_t cr_svgid;
  uid_t cr_gmuid;
  int cr_flags;
};

/* 149 */
typedef struct auditinfo_addr auditinfo_addr_t;

/* 153 */
struct au_mask
{
  unsigned int am_success;
  unsigned int am_failure;
};

/* 152 */
typedef struct au_mask au_mask_t;

/* 148 */
struct au_session
{
  auditinfo_addr_t *as_aia_p;
  au_mask_t as_mask;
};

/* 143 */
struct ucred
{
  struct ucred::$39348EDF62FF74AECB85B832497777BE cr_link;
  u_long cr_ref;
  struct ucred::posix_cred cr_posix;
  struct label *cr_label;
  struct au_session cr_audit;
};

/* 177 */
struct sbuf
{
  char *s_buf;
  void *s_unused;
  int s_size;
  int s_len;
  int s_flags;
};

/* 3036 */
struct mount::$20676DB12413B915A5BF96A743F2062F
{
  struct mount *tqe_next;
  struct mount **tqe_prev;
};

/* 3035 */
struct vnodelst
{
  struct vnode *tqh_first;
  struct vnode **tqh_last;
};

/* 1123 */
struct fsid
{
  int32_t val[2];
};

/* 2087 */
typedef fsid fsid_t;

/* 1290 */
struct vfsstatfs
{
  uint32_t f_bsize;
  size_t f_iosize;
  uint64_t f_blocks;
  uint64_t f_bfree;
  uint64_t f_bavail;
  uint64_t f_bused;
  uint64_t f_files;
  uint64_t f_ffree;
  fsid_t f_fsid;
  uid_t f_owner;
  uint64_t f_flags;
  char f_fstypename[16];
  char f_mntonname[1024];
  char f_mntfromname[1024];
  uint32_t f_fssubtype;
  void *f_reserved[2];
};

/* 3034 */
typedef uint64_t pending_io_t;

/* 802 */
struct timeval
{
  __darwin_time_t tv_sec;
  __darwin_suseconds_t tv_usec;
};

/* 1171 */
struct $A2475F8F9BC5F30B072E7515C4CE3623
{
  uint32_t opaque[3];
  uint32_t opaque4;
};

/* 1172 */
typedef struct $A2475F8F9BC5F30B072E7515C4CE3623 lck_rw_t;

/* 190 */
struct mount
{
  struct mount::$20676DB12413B915A5BF96A743F2062F mnt_list;
  int32_t mnt_count;
  lck_mtx_t mnt_mlock;
  struct vfsops *mnt_op;
  struct vfstable *mnt_vtable;
  struct vnode *mnt_vnodecovered;
  struct vnodelst mnt_vnodelist;
  struct vnodelst mnt_workerqueue;
  struct vnodelst mnt_newvnodes;
  uint32_t mnt_flag;
  uint32_t mnt_kern_flag;
  uint32_t mnt_compound_ops;
  uint32_t mnt_lflag;
  uint32_t mnt_maxsymlinklen;
  struct vfsstatfs mnt_vfsstat;
  qaddr_t mnt_data;
  uint32_t mnt_maxreadcnt;
  uint32_t mnt_maxwritecnt;
  uint32_t mnt_segreadcnt;
  uint32_t mnt_segwritecnt;
  uint32_t mnt_maxsegreadsize;
  uint32_t mnt_maxsegwritesize;
  uint32_t mnt_alignmentmask;
  uint32_t mnt_devblocksize;
  uint32_t mnt_ioqueue_depth;
  uint32_t mnt_ioscale;
  uint32_t mnt_ioflags;
  uint32_t mnt_minsaturationbytecount;
  pending_io_t mnt_pending_write_size;
  pending_io_t mnt_pending_read_size;
  struct timeval mnt_last_write_issued_timestamp;
  struct timeval mnt_last_write_completed_timestamp;
  int64_t mnt_max_swappin_available;
  lck_rw_t mnt_rwlock;
  lck_mtx_t mnt_renamelock;
  vnode_t mnt_devvp;
  uint32_t mnt_devbsdunit;
  uint64_t mnt_throttle_mask;
  void *mnt_throttle_info;
  int32_t mnt_crossref;
  int32_t mnt_iterref;
  uid_t mnt_fsowner;
  gid_t mnt_fsgroup;
  struct label *mnt_mntlabel;
  struct label *mnt_fslabel;
  vnode_t mnt_realrootvp;
  uint32_t mnt_realrootvp_vid;
  uint32_t mnt_generation;
  int mnt_authcache_ttl;
  char fstypename_override[16];
  uint32_t mnt_iobufinuse;
  void *mnt_disk_conditioner_info;
  lck_mtx_t mnt_iter_lock;
};

/* 202 */
struct flock
{
  off_t l_start;
  off_t l_len;
  pid_t l_pid;
  __int16 l_type;
  __int16 l_whence;
};

/* 226 */
struct _inpcb_list_entry
{
  u_int32_t le_next;
  u_int32_t le_prev;
};

/* 227 */
typedef unsigned __int16 u_short;

/* 228 */
typedef unsigned __int8 u_char;

/* 230 */
typedef u_int64_t u_quad_t;

/* 229 */
typedef u_quad_t inp_gen_t;

/* 232 */
struct in_addr_4in6
{
  u_int32_t ia46_pad32[3];
  struct in_addr ia46_addr4;
};

/* 2902 */
union inpcb::$C546130D1A8005171B373D3D35148C2E
{
  struct in_addr_4in6 inp46_foreign;
  struct in6_addr inp6_foreign;
};

/* 2903 */
union inpcb::$063EAF1BB47BFDDCF9B5FC2C194DF159
{
  struct in_addr_4in6 inp46_local;
  struct in6_addr inp6_local;
};

/* 2904 */
union inpcb::$FE52D47358C406D73A3E484EF826A472
{
  u_char inp4_route[20];
  u_char inp6_route[32];
};

/* 2905 */
struct inpcb::$B6009C45682547227034B3F8732E6FD1
{
  u_char inp4_ip_tos;
  u_int32_t inp4_options;
  u_int32_t inp4_moptions;
};

/* 237 */
typedef unsigned __int8 u_int8_t;

/* 238 */
typedef unsigned __int16 ushort;

/* 2906 */
struct inpcb::$7EEB3027874E30BBAF53C832E8C725EC
{
  u_int32_t inp6_options;
  u_int8_t inp6_hlim;
  u_int8_t unused_uint8_1;
  ushort unused_uint16_1;
  u_int32_t inp6_outputopts;
  u_int32_t inp6_moptions;
  u_int32_t inp6_icmp6filt;
  int inp6_cksum;
  u_short inp6_ifindex;
  __int16 inp6_hops;
};

/* 225 */
struct inpcb
{
  struct _inpcb_list_entry inp_hash;
  struct in_addr reserved1;
  struct in_addr reserved2;
  u_short inp_fport;
  u_short inp_lport;
  struct _inpcb_list_entry inp_list;
  u_int32_t inp_ppcb;
  u_int32_t inp_pcbinfo;
  u_int32_t inp_socket;
  u_char nat_owner;
  u_int32_t nat_cookie;
  struct _inpcb_list_entry inp_portlist;
  u_int32_t inp_phd;
  inp_gen_t inp_gencnt;
  int inp_flags;
  u_int32_t inp_flow;
  u_char inp_vflag;
  u_char inp_ip_ttl;
  u_char inp_ip_p;
  union inpcb::$C546130D1A8005171B373D3D35148C2E inp_dependfaddr;
  union inpcb::$063EAF1BB47BFDDCF9B5FC2C194DF159 inp_dependladdr;
  union inpcb::$FE52D47358C406D73A3E484EF826A472 inp_dependroute;
  struct inpcb::$B6009C45682547227034B3F8732E6FD1 inp_depend4;
  struct inpcb::$7EEB3027874E30BBAF53C832E8C725EC inp_depend6;
  int hash_element;
  u_int32_t inp_saved_ppcb;
  u_int32_t inp_sp;
  u_int32_t reserved[3];
};

/* 271 */
struct __socket;

/* 1282 */
typedef u_int32_t vol_capabilities_set_t[4];

/* 1283 */
struct vol_capabilities_attr
{
  vol_capabilities_set_t capabilities;
  vol_capabilities_set_t valid;
};

/* 4054 */
typedef vol_capabilities_attr vol_capabilities_attr_t;

/* 462 */
typedef u_int32_t attrgroup_t;

/* 1278 */
struct attribute_set
{
  attrgroup_t commonattr;
  attrgroup_t volattr;
  attrgroup_t dirattr;
  attrgroup_t fileattr;
  attrgroup_t forkattr;
};

/* 4057 */
typedef attribute_set attribute_set_t;

/* 4056 */
struct vol_attributes_attr
{
  attribute_set_t validattr;
  attribute_set_t nativeattr;
};

/* 4055 */
typedef vol_attributes_attr vol_attributes_attr_t;

/* 1291 */
struct vfs_attr
{
  uint64_t f_supported;
  uint64_t f_active;
  uint64_t f_objcount;
  uint64_t f_filecount;
  uint64_t f_dircount;
  uint64_t f_maxobjcount;
  uint32_t f_bsize;
  size_t f_iosize;
  uint64_t f_blocks;
  uint64_t f_bfree;
  uint64_t f_bavail;
  uint64_t f_bused;
  uint64_t f_files;
  uint64_t f_ffree;
  fsid_t f_fsid;
  uid_t f_owner;
  vol_capabilities_attr_t f_capabilities;
  vol_attributes_attr_t f_attributes;
  struct timespec f_create_time;
  struct timespec f_modify_time;
  struct timespec f_access_time;
  struct timespec f_backup_time;
  uint32_t f_fssubtype;
  char *f_vol_name;
  uint16_t f_signature;
  uint16_t f_carbon_fsid;
  uuid_t f_uuid;
  uint64_t f_quota;
  uint64_t f_reserved;
};

/* 1308 */
struct componentname
{
  uint32_t cn_nameiop;
  uint32_t cn_flags;
  void *cn_reserved1;
  void *cn_reserved2;
  char *cn_pnbuf;
  int cn_pnlen;
  char *cn_nameptr;
  int cn_namelen;
  uint32_t cn_hash;
  uint32_t cn_consume;
};

/* 335 */
struct pseminfo
{
  unsigned int psem_flags;
  unsigned int psem_usecount;
  mode_t psem_mode;
  uid_t psem_uid;
  gid_t psem_gid;
  char psem_name[32];
  void *psem_semobject;
  struct label *psem_label;
  pid_t psem_creator_pid;
  uint64_t psem_creator_uniqueid;
};

/* 344 */
struct pshminfo
{
  unsigned int pshm_flags;
  unsigned int pshm_usecount;
  off_t pshm_length;
  mode_t pshm_mode;
  uid_t pshm_uid;
  gid_t pshm_gid;
  char pshm_name[32];
  void *pshm_memobject;
  struct label *pshm_label;
};

/* 151 */
typedef uid_t au_id_t;

/* 155 */
struct au_tid_addr
{
  dev_t at_port;
  u_int32_t at_type;
  u_int32_t at_addr[4];
};

/* 154 */
typedef struct au_tid_addr au_tid_addr_t;

/* 156 */
typedef pid_t au_asid_t;

/* 157 */
typedef u_int64_t au_asflgs_t;

/* 150 */
struct auditinfo_addr
{
  au_id_t ai_auid;
  au_mask_t ai_mask;
  au_tid_addr_t ai_termid;
  au_asid_t ai_asid;
  au_asflgs_t ai_flags;
};

/* 370 */
struct sockaddr
{
  __uint8_t sa_len;
  sa_family_t sa_family;
  char sa_data[14];
};

/* 3423 */
typedef user_ulong_t user_msglen_t;

/* 3420 */
typedef user_ulong_t user_msgqnum_t;

/* 3426 */
struct user_msqid_ds
{
  struct ipc_perm msg_perm;
  struct msg *msg_first;
  struct msg *msg_last;
  user_msglen_t msg_cbytes;
  user_msgqnum_t msg_qnum;
  user_msglen_t msg_qbytes;
  pid_t msg_lspid;
  pid_t msg_lrpid;
  user_time_t msg_stime;
  __int32_t msg_pad1;
  user_time_t msg_rtime;
  __int32_t msg_pad2;
  user_time_t msg_ctime;
  __int32_t msg_pad3;
  __int32_t msg_pad4[4];
};

/* 3429 */
struct msqid_kernel
{
  struct user_msqid_ds u;
  struct label *label;
};

/* 411 */
struct msg
{
  struct msg *msg_next;
  __int64 msg_type;
  unsigned __int16 msg_ts;
  __int16 msg_spot;
  struct label *label;
};

/* 3045 */
struct user_semid_ds
{
  struct ipc_perm sem_perm;
  struct sem *sem_base;
  unsigned __int16 sem_nsems;
  user_time_t sem_otime;
  __int32_t sem_pad1;
  user_time_t sem_ctime;
  __int32_t sem_pad2;
  __int32_t sem_pad3[4];
};

/* 427 */
struct semid_kernel
{
  struct user_semid_ds u;
  struct label *label;
};

/* 1311 */
enum vtype
{
  VNON = 0x0,
  VREG = 0x1,
  VDIR = 0x2,
  VBLK = 0x3,
  VCHR = 0x4,
  VLNK = 0x5,
  VSOCK = 0x6,
  VFIFO = 0x7,
  VBAD = 0x8,
  VSTR = 0x9,
  VCPLX = 0xA,
};

/* 3492 */
struct $9196AF323BDCF3C1DC54CF7CF3A0084E
{
  unsigned __int8 g_guid[16];
};

/* 3491 */
typedef $9196AF323BDCF3C1DC54CF7CF3A0084E guid_t;

/* 1310 */
struct vnode_attr
{
  uint64_t va_supported;
  uint64_t va_active;
  int va_vaflags;
  dev_t va_rdev;
  uint64_t va_nlink;
  uint64_t va_total_size;
  uint64_t va_total_alloc;
  uint64_t va_data_size;
  uint64_t va_data_alloc;
  uint32_t va_iosize;
  uid_t va_uid;
  gid_t va_gid;
  mode_t va_mode;
  uint32_t va_flags;
  struct kauth_acl *va_acl;
  struct timespec va_create_time;
  struct timespec va_access_time;
  struct timespec va_modify_time;
  struct timespec va_change_time;
  struct timespec va_backup_time;
  uint64_t va_fileid;
  uint64_t va_linkid;
  uint64_t va_parentid;
  uint32_t va_fsid;
  uint64_t va_filerev;
  uint32_t va_gen;
  uint32_t va_encoding;
  enum vtype va_type;
  char *va_name;
  guid_t va_uuuid;
  guid_t va_guuid;
  uint64_t va_nchildren;
  uint64_t va_dirlinkcount;
  void *va_reserved1;
  struct timespec va_addedtime;
  uint32_t va_dataprotect_class;
  uint32_t va_dataprotect_flags;
  uint32_t va_document_id;
  uint32_t va_devid;
  uint32_t va_objtype;
  uint32_t va_objtag;
  uint32_t va_user_access;
  uint8_t va_finderinfo[32];
  uint64_t va_rsrc_length;
  uint64_t va_rsrc_alloc;
  fsid_t va_fsid64;
  uint32_t va_write_gencount;
  uint64_t va_private_size;
};

/* 461 */
struct attrlist
{
  u_short bitmapcount;
  u_int16_t reserved;
  attrgroup_t commonattr;
  attrgroup_t volattr;
  attrgroup_t dirattr;
  attrgroup_t fileattr;
  attrgroup_t forkattr;
};

/* 518 */
struct OSObject
{
  struct vtable_OSObject *vtable;
  __int64 member1;
};

/* 1303 */
struct vfsops
{
  int (__cdecl *vfs_mount)(struct mount *mp, vnode_t devvp, user_addr_t data, vfs_context_t context);
  int (__cdecl *vfs_start)(struct mount *mp, int flags, vfs_context_t context);
  int (__cdecl *vfs_unmount)(struct mount *mp, int mntflags, vfs_context_t context);
  int (__cdecl *vfs_root)(struct mount *mp, struct vnode **vpp, vfs_context_t context);
  int (__cdecl *vfs_quotactl)(struct mount *mp, int cmds, uid_t uid, caddr_t arg, vfs_context_t context);
  int (__cdecl *vfs_getattr)(struct mount *mp, struct vfs_attr *, vfs_context_t context);
  int (__cdecl *vfs_sync)(struct mount *mp, int waitfor, vfs_context_t context);
  int (__cdecl *vfs_vget)(struct mount *mp, ino64_t ino, struct vnode **vpp, vfs_context_t context);
  int (__cdecl *vfs_fhtovp)(struct mount *mp, int fhlen, unsigned __int8 *fhp, struct vnode **vpp, vfs_context_t context);
  int (__cdecl *vfs_vptofh)(struct vnode *vp, int *fhlen, unsigned __int8 *fhp, vfs_context_t context);
  int (__cdecl *vfs_init)(struct vfsconf *);
  int (__cdecl *vfs_sysctl)(int *, u_int, user_addr_t, size_t *, user_addr_t, size_t, vfs_context_t context);
  int (__cdecl *vfs_setattr)(struct mount *mp, struct vfs_attr *, vfs_context_t context);
  int (__cdecl *vfs_ioctl)(struct mount *mp, u_long command, caddr_t data, int flags, vfs_context_t context);
  int (__cdecl *vfs_vget_snapdir)(struct mount *mp, struct vnode **vpp, vfs_context_t context);
  void *vfs_reserved5;
  void *vfs_reserved4;
  void *vfs_reserved3;
  void *vfs_reserved2;
  void *vfs_reserved1;
};

/* 3037 */
struct vfstable
{
  struct vfsops *vfc_vfsops;
  char vfc_name[15];
  int vfc_typenum;
  int vfc_refcount;
  int vfc_flags;
  int (__cdecl *vfc_mountroot)(mount_t, vnode_t, vfs_context_t);
  struct vfstable *vfc_next;
  int32_t vfc_reserved1;
  int32_t vfc_reserved2;
  int vfc_vfsflags;
  void *vfc_descptr;
  int vfc_descsize;
  struct sysctl_oid *vfc_sysctl;
};

/* 3024 */
struct sem
{
  unsigned __int16 semval;
  pid_t sempid;
  unsigned __int16 semncnt;
  unsigned __int16 semzcnt;
};

/* 3493 */
struct kauth_ace
{
  guid_t ace_applicable;
  u_int32_t ace_flags;
  kauth_ace_rights_t ace_rights;
};

/* 3494 */
struct kauth_acl
{
  u_int32_t acl_entrycount;
  u_int32_t acl_flags;
  struct kauth_ace acl_ace[1];
};

/* 4084 */
struct vtable_OSObject
{
  __int64 (__fastcall *__ZN8OSObjectD1Ev)(OSObject *__hidden this);
  __int64 (__fastcall *__ZN8OSObjectD0Ev)(OSObject *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK8OSObject12getMetaClassEv)(OSObject *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 1292 */
struct vfsconf
{
  uint32_t vfc_reserved1;
  char vfc_name[15];
  int vfc_typenum;
  int vfc_refcount;
  int vfc_flags;
  uint32_t vfc_reserved2;
  uint32_t vfc_reserved3;
};

/* 2958 */
struct sysctl_oid::$97B4C1309EBF5F9747EAB5DA8CB413C8
{
  struct sysctl_oid *sle_next;
};

/* 2957 */
struct sysctl_oid
{
  struct sysctl_oid_list *oid_parent;
  struct sysctl_oid::$97B4C1309EBF5F9747EAB5DA8CB413C8 oid_link;
  int oid_number;
  int oid_kind;
  void *oid_arg1;
  int oid_arg2;
  const char *oid_name;
  int (__cdecl *oid_handler)(struct sysctl_oid *oidp, void *arg1, int arg2, struct sysctl_req *req);
  const char *oid_fmt;
  const char *oid_descr;
  int oid_version;
  int oid_refcnt;
};

/* 543 */
struct OSSerialize
{
  struct vtable_OSSerialize *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
};

/* 529 */
struct OSMetaClass
{
  struct vtable_OSMetaClass *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
};

/* 527 */
struct OSMetaClassBase
{
  struct vtable_OSMetaClassBase *vtable;
};

/* 2956 */
struct sysctl_oid_list
{
  struct sysctl_oid *slh_first;
};

/* 2955 */
struct sysctl_req
{
  struct proc *p;
  int lock;
  user_addr_t oldptr;
  size_t oldlen;
  size_t oldidx;
  int (__cdecl *oldfunc)(struct sysctl_req *, const void *, size_t);
  user_addr_t newptr;
  size_t newlen;
  size_t newidx;
  int (__cdecl *newfunc)(struct sysctl_req *, void *, size_t);
};

/* 4128 */
struct vtable_OSSerialize
{
  __int64 (__fastcall *__ZN11OSSerializeD1Ev)(OSSerialize *__hidden this);
  __int64 (__fastcall *__ZN11OSSerializeD0Ev)(OSSerialize *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSSerialize12getMetaClassEv)(OSSerialize *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN11OSSerialize4freeEv)(OSSerialize *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  char *(__cdecl *__ZNK11OSSerialize4textEv)(OSSerialize *this);
  void (__cdecl *__ZN11OSSerialize9clearTextEv)(OSSerialize *this);
  bool (__cdecl *__ZN11OSSerialize20previouslySerializedEPK15OSMetaClassBase)(OSSerialize *this, const OSMetaClassBase *object);
  bool (__cdecl *__ZN11OSSerialize14addXMLStartTagEPK15OSMetaClassBasePKc)(OSSerialize *this, const OSMetaClassBase *object, const char *tagString);
  bool (__cdecl *__ZN11OSSerialize12addXMLEndTagEPKc)(OSSerialize *this, const char *tagString);
  bool (__cdecl *__ZN11OSSerialize7addCharEc)(OSSerialize *this, const char aChar);
  bool (__cdecl *__ZN11OSSerialize9addStringEPKc)(OSSerialize *this, const char *cString);
  bool (__cdecl *__ZN11OSSerialize16initWithCapacityEj)(OSSerialize *this, unsigned int inCapacity);
  unsigned int (__cdecl *__ZNK11OSSerialize9getLengthEv)(OSSerialize *this);
  unsigned int (__cdecl *__ZNK11OSSerialize11getCapacityEv)(OSSerialize *this);
  unsigned int (__cdecl *__ZNK11OSSerialize20getCapacityIncrementEv)(OSSerialize *this);
  unsigned int (__cdecl *__ZN11OSSerialize20setCapacityIncrementEj)(OSSerialize *this, unsigned int increment);
  unsigned int (__cdecl *__ZN11OSSerialize14ensureCapacityEj)(OSSerialize *this, unsigned int newCapacity);
  void (__cdecl *__ZN11OSSerialize21_RESERVEDOSSerialize0Ev)(OSSerialize *this);
  void (__cdecl *__ZN11OSSerialize21_RESERVEDOSSerialize1Ev)(OSSerialize *this);
  void (__cdecl *__ZN11OSSerialize21_RESERVEDOSSerialize2Ev)(OSSerialize *this);
  void (__cdecl *__ZN11OSSerialize21_RESERVEDOSSerialize3Ev)(OSSerialize *this);
  void (__cdecl *__ZN11OSSerialize21_RESERVEDOSSerialize4Ev)(OSSerialize *this);
  void (__cdecl *__ZN11OSSerialize21_RESERVEDOSSerialize5Ev)(OSSerialize *this);
  void (__cdecl *__ZN11OSSerialize21_RESERVEDOSSerialize6Ev)(OSSerialize *this);
  void (__cdecl *__ZN11OSSerialize21_RESERVEDOSSerialize7Ev)(OSSerialize *this);
};

/* 4082 */
struct vtable_OSMetaClass
{
  __int64 (__fastcall *__ZN11OSMetaClassD1Ev)(OSMetaClass *__hidden this);
  __int64 (__fastcall *__ZN11OSMetaClassD0Ev)(OSMetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  void (__fastcall __noreturn *___cxa_pure_virtual)();
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 4078 */
struct vtable_OSMetaClassBase
{
  __int64 (__fastcall *__ZN15OSMetaClassBaseD1Ev)(OSMetaClassBase *__hidden this);
  __int64 (__fastcall *__ZN15OSMetaClassBaseD0Ev)(OSMetaClassBase *__hidden this);
  void (__fastcall __noreturn *___cxa_pure_virtual)();
  void (__fastcall __noreturn *___cxa_pure_virtual3)();
  void (__fastcall __noreturn *___cxa_pure_virtual4)();
  void (__fastcall __noreturn *___cxa_pure_virtual5)();
  void (__fastcall __noreturn *___cxa_pure_virtual6)();
  void (__fastcall __noreturn *___cxa_pure_virtual7)();
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__fastcall __noreturn *___cxa_pure_virtual9)();
  void (__fastcall __noreturn *___cxa_pure_virtual10)();
  void (__fastcall __noreturn *___cxa_pure_virtual11)();
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
};

/* 144 */
struct ucred::$FA68314EC5A1B61A7AF0AAA32900A7CA
{
  ucred *tqe_next;
  ucred **tqe_prev;
};

/* 231 */
#pragma pack(push, 4)
union inpcb::$BD75B87EE766833A3DF9644C7FCC1E00
{
  in_addr_4in6 inp46_foreign;
  in6_addr inp6_foreign;
};
#pragma pack(pop)

/* 233 */
#pragma pack(push, 4)
union inpcb::$61B649B2802E895728C8AA130C15F594
{
  in_addr_4in6 inp46_local;
  in6_addr inp6_local;
};
#pragma pack(pop)

/* 234 */
#pragma pack(push, 4)
union inpcb::$1F3C467F2673A40775B3C04457DCB635
{
  u_char inp4_route[20];
  u_char inp6_route[32];
};
#pragma pack(pop)

/* 235 */
#pragma pack(push, 4)
struct inpcb::$6F13D882517E6D5CBD1B080626F65DC4
{
  u_char inp4_ip_tos;
  u_int32_t inp4_options;
  u_int32_t inp4_moptions;
};
#pragma pack(pop)

/* 236 */
#pragma pack(push, 4)
struct inpcb::$F2E854D5640579B71C918C53FCA5BF60
{
  u_int32_t inp6_options;
  u_int8_t inp6_hlim;
  u_int8_t unused_uint8_1;
  ushort unused_uint16_1;
  u_int32_t inp6_outputopts;
  u_int32_t inp6_moptions;
  u_int32_t inp6_icmp6filt;
  int inp6_cksum;
  u_short inp6_ifindex;
  __int16 inp6_hops;
};
#pragma pack(pop)

/* 528 */
struct OSMetaClassMeta
{
  struct vtable_OSMetaClassMeta *vtable;
};

/* 4080 */
struct vtable_OSMetaClassMeta
{
  __int64 (__fastcall *__ZN15OSMetaClassMetaD1Ev)(OSMetaClassMeta *__hidden this);
  __int64 (__fastcall *__ZN15OSMetaClassMetaD0Ev)(OSMetaClassMeta *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15OSMetaClassMeta5allocEv)(OSMetaClassMeta *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 530 */
struct OSObject::MetaClass
{
  struct vtable_OSObject::MetaClass *vtable;
};

/* 4086 */
struct vtable_OSObject::MetaClass
{
  __int64 (__fastcall *__ZN8OSObject9MetaClassD1Ev)(OSObject::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN8OSObject9MetaClassD0Ev)(OSObject::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject9MetaClass8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK8OSObject9MetaClass5allocEv)(OSObject::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 531 */
struct OSArray
{
  struct vtable_OSArray *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
};

/* 4088 */
struct vtable_OSArray
{
  __int64 (__fastcall *__ZN7OSArrayD1Ev)(OSArray *__hidden this);
  __int64 (__fastcall *__ZN7OSArrayD0Ev)(OSArray *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK7OSArray9serializeEP11OSSerialize)(OSArray *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK7OSArray12getMetaClassEv)(OSArray *this);
  bool (__cdecl *__ZNK7OSArray9isEqualToEPK15OSMetaClassBase)(OSArray *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN12OSCollection4initEv)(OSCollection *this);
  void (__cdecl *__ZN7OSArray4freeEv)(OSArray *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  unsigned int (__cdecl *__ZNK7OSArray12iteratorSizeEv)(OSArray *this);
  bool (__cdecl *__ZNK7OSArray12initIteratorEPv)(OSArray *this, void *iterator);
  bool (__cdecl *__ZNK7OSArray24getNextObjectForIteratorEPvPP8OSObject)(OSArray *this, void *iterator, OSObject **ret);
  unsigned int (__cdecl *__ZNK7OSArray8getCountEv)(OSArray *this);
  unsigned int (__cdecl *__ZNK7OSArray11getCapacityEv)(OSArray *this);
  unsigned int (__cdecl *__ZNK7OSArray20getCapacityIncrementEv)(OSArray *this);
  unsigned int (__cdecl *__ZN7OSArray20setCapacityIncrementEj)(OSArray *this, unsigned int increment);
  unsigned int (__cdecl *__ZN7OSArray14ensureCapacityEj)(OSArray *this, unsigned int newCapacity);
  void (__cdecl *__ZN7OSArray15flushCollectionEv)(OSArray *this);
  unsigned int (__cdecl *__ZN7OSArray10setOptionsEjjPv)(OSArray *this, unsigned int options, unsigned int mask, void *context);
  OSCollection *(__cdecl *__ZN7OSArray14copyCollectionEP12OSDictionary)(OSArray *this, OSDictionary *cycleDict);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection2Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection3Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection4Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection5Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection6Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection7Ev)(OSCollection *this);
  bool (__cdecl *__ZN7OSArray16initWithCapacityEj)(OSArray *this, unsigned int capacity);
  bool (__cdecl *__ZN7OSArray15initWithObjectsEPPK8OSObjectjj)(OSArray *this, const OSObject **objects, unsigned int count, unsigned int capacity);
  bool (__cdecl *__ZN7OSArray13initWithArrayEPKS_j)(OSArray *this, const OSArray *anArray, unsigned int capacity);
  bool (__cdecl *__ZN7OSArray9setObjectEPK15OSMetaClassBase)(OSArray *this, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZN7OSArray9setObjectEjPK15OSMetaClassBase)(OSArray *this, unsigned int index, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZN7OSArray5mergeEPKS_)(OSArray *this, const OSArray *otherArray);
  void (__cdecl *__ZN7OSArray13replaceObjectEjPK15OSMetaClassBase)(OSArray *this, unsigned int index, const OSMetaClassBase *anObject);
  void (__cdecl *__ZN7OSArray12removeObjectEj)(OSArray *this, unsigned int index);
  bool (__cdecl *__ZNK7OSArray9isEqualToEPKS_)(OSArray *this, const OSArray *anArray);
  OSObject *(__cdecl *__ZNK7OSArray9getObjectEj)(OSArray *this, unsigned int index);
  OSObject *(__cdecl *__ZNK7OSArray13getLastObjectEv)(OSArray *this);
  unsigned int (__cdecl *__ZNK7OSArray20getNextIndexOfObjectEPK15OSMetaClassBasej)(OSArray *this, const OSMetaClassBase *anObject, unsigned int index);
  void (__cdecl *__ZN7OSArray17_RESERVEDOSArray0Ev)(OSArray *this);
  void (__cdecl *__ZN7OSArray17_RESERVEDOSArray1Ev)(OSArray *this);
  void (__cdecl *__ZN7OSArray17_RESERVEDOSArray2Ev)(OSArray *this);
  void (__cdecl *__ZN7OSArray17_RESERVEDOSArray3Ev)(OSArray *this);
  void (__cdecl *__ZN7OSArray17_RESERVEDOSArray4Ev)(OSArray *this);
  void (__cdecl *__ZN7OSArray17_RESERVEDOSArray5Ev)(OSArray *this);
  void (__cdecl *__ZN7OSArray17_RESERVEDOSArray6Ev)(OSArray *this);
  void (__cdecl *__ZN7OSArray17_RESERVEDOSArray7Ev)(OSArray *this);
};

/* 533 */
struct OSCollection
{
  struct vtable_OSCollection *vtable;
  __int64 member1;
  __int64 member2;
};

/* 537 */
struct OSDictionary
{
  struct vtable_OSDictionary *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
};

/* 4096 */
struct vtable_OSCollection
{
  __int64 (__fastcall *__ZN12OSCollectionD1Ev)(OSCollection *__hidden this);
  __int64 (__fastcall *__ZN12OSCollectionD0Ev)(OSCollection *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK12OSCollection12getMetaClassEv)(OSCollection *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN12OSCollection4initEv)(OSCollection *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  unsigned int (__cdecl *__ZNK12OSCollection12iteratorSizeEv)(OSCollection *this);
  bool (__cdecl *__ZNK12OSCollection12initIteratorEPv)(OSCollection *this, void *iterationContext);
  bool (__cdecl *__ZNK12OSCollection24getNextObjectForIteratorEPvPP8OSObject)(OSCollection *this, void *iterationContext, OSObject **nextObject);
  unsigned int (__cdecl *__ZNK12OSCollection8getCountEv)(OSCollection *this);
  unsigned int (__cdecl *__ZNK12OSCollection11getCapacityEv)(OSCollection *this);
  unsigned int (__cdecl *__ZNK12OSCollection20getCapacityIncrementEv)(OSCollection *this);
  unsigned int (__cdecl *__ZN12OSCollection20setCapacityIncrementEj)(OSCollection *this, unsigned int increment);
  unsigned int (__cdecl *__ZN12OSCollection14ensureCapacityEj)(OSCollection *this, unsigned int newCapacity);
  void (__cdecl *__ZN12OSCollection15flushCollectionEv)(OSCollection *this);
  unsigned int (__cdecl *__ZN12OSCollection10setOptionsEjjPv)(OSCollection *this, unsigned int options, unsigned int mask, void *context);
  OSCollection *(__cdecl *__ZN12OSCollection14copyCollectionEP12OSDictionary)(OSCollection *this, OSDictionary *cycleDict);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection2Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection3Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection4Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection5Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection6Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection7Ev)(OSCollection *this);
};

/* 4108 */
struct vtable_OSDictionary
{
  __int64 (__fastcall *__ZN12OSDictionaryD1Ev)(OSDictionary *__hidden this);
  __int64 (__fastcall *__ZN12OSDictionaryD0Ev)(OSDictionary *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK12OSDictionary9serializeEP11OSSerialize)(OSDictionary *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK12OSDictionary12getMetaClassEv)(OSDictionary *this);
  bool (__cdecl *__ZNK12OSDictionary9isEqualToEPK15OSMetaClassBase)(OSDictionary *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN12OSCollection4initEv)(OSCollection *this);
  void (__cdecl *__ZN12OSDictionary4freeEv)(OSDictionary *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  unsigned int (__cdecl *__ZNK12OSDictionary12iteratorSizeEv)(OSDictionary *this);
  bool (__cdecl *__ZNK12OSDictionary12initIteratorEPv)(OSDictionary *this, void *iterator);
  bool (__cdecl *__ZNK12OSDictionary24getNextObjectForIteratorEPvPP8OSObject)(OSDictionary *this, void *iterator, OSObject **ret);
  unsigned int (__cdecl *__ZNK12OSDictionary8getCountEv)(OSDictionary *this);
  unsigned int (__cdecl *__ZNK12OSDictionary11getCapacityEv)(OSDictionary *this);
  unsigned int (__cdecl *__ZNK12OSDictionary20getCapacityIncrementEv)(OSDictionary *this);
  unsigned int (__cdecl *__ZN12OSDictionary20setCapacityIncrementEj)(OSDictionary *this, unsigned int increment);
  unsigned int (__cdecl *__ZN12OSDictionary14ensureCapacityEj)(OSDictionary *this, unsigned int newCapacity);
  void (__cdecl *__ZN12OSDictionary15flushCollectionEv)(OSDictionary *this);
  unsigned int (__cdecl *__ZN12OSDictionary10setOptionsEjjPv)(OSDictionary *this, unsigned int options, unsigned int mask, void *context);
  OSCollection *(__cdecl *__ZN12OSDictionary14copyCollectionEP12OSDictionary)(OSDictionary *this, OSDictionary *cycleDict);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection2Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection3Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection4Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection5Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection6Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection7Ev)(OSCollection *this);
  bool (__cdecl *__ZN12OSDictionary16initWithCapacityEj)(OSDictionary *this, unsigned int capacity);
  bool (__cdecl *__ZN12OSDictionary15initWithObjectsEPPK8OSObjectPPK8OSSymboljj)(OSDictionary *this, const OSObject **objects, const OSSymbol **keys, unsigned int count, unsigned int capacity);
  bool (__cdecl *__ZN12OSDictionary15initWithObjectsEPPK8OSObjectPPK8OSStringjj)(OSDictionary *this, const OSObject **objects, const OSString **keys, unsigned int count, unsigned int capacity);
  bool (__cdecl *__ZN12OSDictionary18initWithDictionaryEPKS_j)(OSDictionary *this, const OSDictionary *dict, unsigned int capacity);
  bool (__cdecl *__ZN12OSDictionary9setObjectEPK8OSSymbolPK15OSMetaClassBase)(OSDictionary *this, const OSSymbol *aKey, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZN12OSDictionary9setObjectEPK8OSStringPK15OSMetaClassBase)(OSDictionary *this, const OSString *aKey, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZN12OSDictionary9setObjectEPKcPK15OSMetaClassBase)(OSDictionary *this, const char *aKey, const OSMetaClassBase *anObject);
  void (__cdecl *__ZN12OSDictionary12removeObjectEPK8OSSymbol)(OSDictionary *this, const OSSymbol *aKey);
  void (__cdecl *__ZN12OSDictionary12removeObjectEPK8OSString)(OSDictionary *this, const OSString *aKey);
  void (__cdecl *__ZN12OSDictionary12removeObjectEPKc)(OSDictionary *this, const char *aKey);
  bool (__cdecl *__ZN12OSDictionary5mergeEPKS_)(OSDictionary *this, const OSDictionary *aDictionary);
  OSObject *(__cdecl *__ZNK12OSDictionary9getObjectEPK8OSSymbol)(OSDictionary *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK12OSDictionary9getObjectEPK8OSString)(OSDictionary *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK12OSDictionary9getObjectEPKc)(OSDictionary *this, const char *aKey);
  bool (__cdecl *__ZNK12OSDictionary9isEqualToEPKS_PK12OSCollection)(OSDictionary *this, const OSDictionary *aDictionary, const OSCollection *keys);
  bool (__cdecl *__ZNK12OSDictionary9isEqualToEPKS_)(OSDictionary *this, const OSDictionary *aDictionary);
  void (__cdecl *__ZN12OSDictionary22_RESERVEDOSDictionary0Ev)(OSDictionary *this);
  void (__cdecl *__ZN12OSDictionary22_RESERVEDOSDictionary1Ev)(OSDictionary *this);
  void (__cdecl *__ZN12OSDictionary22_RESERVEDOSDictionary2Ev)(OSDictionary *this);
  void (__cdecl *__ZN12OSDictionary22_RESERVEDOSDictionary3Ev)(OSDictionary *this);
  void (__cdecl *__ZN12OSDictionary22_RESERVEDOSDictionary4Ev)(OSDictionary *this);
  void (__cdecl *__ZN12OSDictionary22_RESERVEDOSDictionary5Ev)(OSDictionary *this);
  void (__cdecl *__ZN12OSDictionary22_RESERVEDOSDictionary6Ev)(OSDictionary *this);
  void (__cdecl *__ZN12OSDictionary22_RESERVEDOSDictionary7Ev)(OSDictionary *this);
};

/* 547 */
struct OSSymbol
{
  struct vtable_OSSymbol *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 546 */
struct OSString
{
  struct vtable_OSString *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4146 */
struct vtable_OSSymbol
{
  __int64 (__fastcall *__ZN8OSSymbolD1Ev)(OSSymbol *__hidden this);
  __int64 (__fastcall *__ZN8OSSymbolD0Ev)(OSSymbol *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSString9serializeEP11OSSerialize)(OSString *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK8OSSymbol12getMetaClassEv)(OSSymbol *this);
  bool (__cdecl *__ZNK8OSSymbol9isEqualToEPK15OSMetaClassBase)(OSSymbol *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSSymbol13taggedReleaseEPKv)(OSSymbol *this, const void *tag);
  void (__cdecl *__ZNK8OSSymbol13taggedReleaseEPKvi)(OSSymbol *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSSymbol4freeEv)(OSSymbol *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN8OSSymbol14initWithStringEPKS_)(OSSymbol *this, const OSString *aString);
  bool (__cdecl *__ZN8OSSymbol15initWithCStringEPKc)(OSSymbol *this, const char *cString);
  bool (__cdecl *__ZN8OSSymbol21initWithCStringNoCopyEPKc)(OSSymbol *this, const char *cString);
  unsigned int (__cdecl *__ZNK8OSString9getLengthEv)(OSString *this);
  char (__cdecl *__ZNK8OSString7getCharEj)(OSString *this, unsigned int index);
  bool (__cdecl *__ZN8OSString7setCharEcj)(OSString *this, char aChar, unsigned int index);
  const char *(__cdecl *__ZNK8OSString16getCStringNoCopyEv)(OSString *this);
  bool (__cdecl *__ZNK8OSString9isEqualToEPKS_)(OSString *this, const OSString *aString);
  bool (__cdecl *__ZNK8OSSymbol9isEqualToEPKc)(OSSymbol *this, const char *cString);
  bool (__cdecl *__ZNK8OSString9isEqualToEPK6OSData)(OSString *this, const OSData *aDataObject);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString0Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString1Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString2Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString3Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString4Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString5Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString6Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString7Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString8Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString9Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString10Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString11Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString12Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString13Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString14Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString15Ev)(OSString *this);
  bool (__cdecl *__ZNK8OSSymbol9isEqualToEPKS_)(OSSymbol *this, const OSSymbol *aSymbol);
  void (__cdecl *__ZN8OSSymbol18_RESERVEDOSSymbol0Ev)(OSSymbol *this);
  void (__cdecl *__ZN8OSSymbol18_RESERVEDOSSymbol1Ev)(OSSymbol *this);
  void (__cdecl *__ZN8OSSymbol18_RESERVEDOSSymbol2Ev)(OSSymbol *this);
  void (__cdecl *__ZN8OSSymbol18_RESERVEDOSSymbol3Ev)(OSSymbol *this);
  void (__cdecl *__ZN8OSSymbol18_RESERVEDOSSymbol4Ev)(OSSymbol *this);
  void (__cdecl *__ZN8OSSymbol18_RESERVEDOSSymbol5Ev)(OSSymbol *this);
  void (__cdecl *__ZN8OSSymbol18_RESERVEDOSSymbol6Ev)(OSSymbol *this);
  void (__cdecl *__ZN8OSSymbol18_RESERVEDOSSymbol7Ev)(OSSymbol *this);
};

/* 4140 */
struct vtable_OSString
{
  __int64 (__fastcall *__ZN8OSStringD1Ev)(OSString *__hidden this);
  __int64 (__fastcall *__ZN8OSStringD0Ev)(OSString *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSString9serializeEP11OSSerialize)(OSString *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK8OSString12getMetaClassEv)(OSString *this);
  bool (__cdecl *__ZNK8OSString9isEqualToEPK15OSMetaClassBase)(OSString *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSString4freeEv)(OSString *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN8OSString14initWithStringEPKS_)(OSString *this, const OSString *aString);
  bool (__cdecl *__ZN8OSString15initWithCStringEPKc)(OSString *this, const char *cString);
  bool (__cdecl *__ZN8OSString21initWithCStringNoCopyEPKc)(OSString *this, const char *cString);
  unsigned int (__cdecl *__ZNK8OSString9getLengthEv)(OSString *this);
  char (__cdecl *__ZNK8OSString7getCharEj)(OSString *this, unsigned int index);
  bool (__cdecl *__ZN8OSString7setCharEcj)(OSString *this, char aChar, unsigned int index);
  const char *(__cdecl *__ZNK8OSString16getCStringNoCopyEv)(OSString *this);
  bool (__cdecl *__ZNK8OSString9isEqualToEPKS_)(OSString *this, const OSString *aString);
  bool (__cdecl *__ZNK8OSString9isEqualToEPKc)(OSString *this, const char *cString);
  bool (__cdecl *__ZNK8OSString9isEqualToEPK6OSData)(OSString *this, const OSData *aDataObject);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString0Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString1Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString2Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString3Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString4Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString5Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString6Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString7Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString8Ev)(OSString *this);
  void (__cdecl *__ZN8OSString18_RESERVEDOSString9Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString10Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString11Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString12Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString13Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString14Ev)(OSString *this);
  void (__cdecl *__ZN8OSString19_RESERVEDOSString15Ev)(OSString *this);
};

/* 536 */
struct OSData
{
  struct vtable_OSData *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 4104 */
struct vtable_OSData
{
  __int64 (__fastcall *__ZN6OSDataD1Ev)(OSData *__hidden this);
  __int64 (__fastcall *__ZN6OSDataD0Ev)(OSData *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK6OSData9serializeEP11OSSerialize)(OSData *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK6OSData12getMetaClassEv)(OSData *this);
  bool (__cdecl *__ZNK6OSData9isEqualToEPK15OSMetaClassBase)(OSData *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN6OSData4freeEv)(OSData *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN6OSData16initWithCapacityEj)(OSData *this, unsigned int capacity);
  bool (__cdecl *__ZN6OSData13initWithBytesEPKvj)(OSData *this, const void *bytes, unsigned int numBytes);
  bool (__cdecl *__ZN6OSData19initWithBytesNoCopyEPvj)(OSData *this, void *bytes, unsigned int numBytes);
  bool (__cdecl *__ZN6OSData12initWithDataEPKS_)(OSData *this, const OSData *inData);
  bool (__cdecl *__ZN6OSData12initWithDataEPKS_jj)(OSData *this, const OSData *inData, unsigned int start, unsigned int numBytes);
  unsigned int (__cdecl *__ZNK6OSData9getLengthEv)(OSData *this);
  unsigned int (__cdecl *__ZNK6OSData11getCapacityEv)(OSData *this);
  unsigned int (__cdecl *__ZNK6OSData20getCapacityIncrementEv)(OSData *this);
  unsigned int (__cdecl *__ZN6OSData20setCapacityIncrementEj)(OSData *this, unsigned int increment);
  unsigned int (__cdecl *__ZN6OSData14ensureCapacityEj)(OSData *this, unsigned int newCapacity);
  bool (__cdecl *__ZN6OSData11appendBytesEPKvj)(OSData *this, const void *bytes, unsigned int numBytes);
  bool (__cdecl *__ZN6OSData11appendBytesEPKS_)(OSData *this, const OSData *aDataObj);
  const void *(__cdecl *__ZNK6OSData14getBytesNoCopyEv)(OSData *this);
  const void *(__cdecl *__ZNK6OSData14getBytesNoCopyEjj)(OSData *this, unsigned int start, unsigned int numBytes);
  bool (__cdecl *__ZNK6OSData9isEqualToEPKS_)(OSData *this, const OSData *aDataObj);
  bool (__cdecl *__ZNK6OSData9isEqualToEPKvj)(OSData *this, const void *bytes, unsigned int numBytes);
  bool (__cdecl *__ZNK6OSData9isEqualToEPK8OSString)(OSData *this, const OSString *aString);
  bool (__cdecl *__ZN6OSData10appendByteEhj)(OSData *this, unsigned __int8 byte, unsigned int numBytes);
  void (__cdecl *__ZN6OSData18setDeallocFunctionEPFvPvjE)(OSData *this, void (__cdecl *func)(void *, unsigned int));
  void (__cdecl *__ZN6OSData16_RESERVEDOSData1Ev)(OSData *this);
  void (__cdecl *__ZN6OSData16_RESERVEDOSData2Ev)(OSData *this);
  void (__cdecl *__ZN6OSData16_RESERVEDOSData3Ev)(OSData *this);
  void (__cdecl *__ZN6OSData16_RESERVEDOSData4Ev)(OSData *this);
  void (__cdecl *__ZN6OSData16_RESERVEDOSData5Ev)(OSData *this);
  void (__cdecl *__ZN6OSData16_RESERVEDOSData6Ev)(OSData *this);
  void (__cdecl *__ZN6OSData16_RESERVEDOSData7Ev)(OSData *this);
};

/* 532 */
struct OSBoolean
{
  struct vtable_OSBoolean *vtable;
  __int64 member1;
};

/* 4092 */
struct vtable_OSBoolean
{
  __int64 (__fastcall *__ZN9OSBooleanD1Ev)(OSBoolean *__hidden this);
  __int64 (__fastcall *__ZN9OSBooleanD0Ev)(OSBoolean *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK9OSBoolean9serializeEP11OSSerialize)(OSBoolean *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK9OSBoolean12getMetaClassEv)(OSBoolean *this);
  bool (__cdecl *__ZNK9OSBoolean9isEqualToEPK15OSMetaClassBase)(OSBoolean *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK9OSBoolean12taggedRetainEPKv)(OSBoolean *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK9OSBoolean13taggedReleaseEPKvi)(OSBoolean *this, const void *tag, const int when);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9OSBoolean4freeEv)(OSBoolean *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZNK9OSBoolean6isTrueEv)(OSBoolean *this);
  bool (__cdecl *__ZNK9OSBoolean7isFalseEv)(OSBoolean *this);
  bool (__cdecl *__ZNK9OSBoolean8getValueEv)(OSBoolean *this);
  bool (__cdecl *__ZNK9OSBoolean9isEqualToEPKS_)(OSBoolean *this, const OSBoolean *aBoolean);
  void (__cdecl *__ZN9OSBoolean19_RESERVEDOSBoolean0Ev)(OSBoolean *this);
  void (__cdecl *__ZN9OSBoolean19_RESERVEDOSBoolean1Ev)(OSBoolean *this);
  void (__cdecl *__ZN9OSBoolean19_RESERVEDOSBoolean2Ev)(OSBoolean *this);
  void (__cdecl *__ZN9OSBoolean19_RESERVEDOSBoolean3Ev)(OSBoolean *this);
  void (__cdecl *__ZN9OSBoolean19_RESERVEDOSBoolean4Ev)(OSBoolean *this);
  void (__cdecl *__ZN9OSBoolean19_RESERVEDOSBoolean5Ev)(OSBoolean *this);
  void (__cdecl *__ZN9OSBoolean19_RESERVEDOSBoolean6Ev)(OSBoolean *this);
  void (__cdecl *__ZN9OSBoolean19_RESERVEDOSBoolean7Ev)(OSBoolean *this);
};

/* 534 */
struct OSCollection::MetaClass
{
  struct vtable_OSCollection::MetaClass *vtable;
};

/* 4098 */
struct vtable_OSCollection::MetaClass
{
  __int64 (__fastcall *__ZN12OSCollection9MetaClassD1Ev)(OSCollection::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN12OSCollection9MetaClassD0Ev)(OSCollection::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK12OSCollection9MetaClass5allocEv)(OSCollection::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 535 */
struct OSCollectionIterator
{
  struct vtable_OSCollectionIterator *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
};

/* 4100 */
struct vtable_OSCollectionIterator
{
  __int64 (__fastcall *__ZN20OSCollectionIteratorD1Ev)(OSCollectionIterator *__hidden this);
  __int64 (__fastcall *__ZN20OSCollectionIteratorD0Ev)(OSCollectionIterator *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK20OSCollectionIterator12getMetaClassEv)(OSCollectionIterator *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN20OSCollectionIterator4freeEv)(OSCollectionIterator *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN20OSCollectionIterator5resetEv)(OSCollectionIterator *this);
  bool (__cdecl *__ZN20OSCollectionIterator7isValidEv)(OSCollectionIterator *this);
  OSObject *(__cdecl *__ZN20OSCollectionIterator13getNextObjectEv)(OSCollectionIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator0Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator1Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator2Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator3Ev)(OSIterator *this);
  bool (__cdecl *__ZN20OSCollectionIterator18initWithCollectionEPK12OSCollection)(OSCollectionIterator *this, const OSCollection *inColl);
};

/* 538 */
struct OSIterator
{
  struct vtable_OSIterator *vtable;
  __int64 member1;
};

/* 4112 */
struct vtable_OSIterator
{
  __int64 (__fastcall *__ZN10OSIteratorD1Ev)(OSIterator *__hidden this);
  __int64 (__fastcall *__ZN10OSIteratorD0Ev)(OSIterator *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK10OSIterator12getMetaClassEv)(OSIterator *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN10OSIterator5resetEv)(OSIterator *this);
  bool (__cdecl *__ZN10OSIterator7isValidEv)(OSIterator *this);
  OSObject *(__cdecl *__ZN10OSIterator13getNextObjectEv)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator0Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator1Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator2Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator3Ev)(OSIterator *this);
};

/* 539 */
struct OSIterator::MetaClass
{
  struct vtable_OSIterator::MetaClass *vtable;
};

/* 4114 */
struct vtable_OSIterator::MetaClass
{
  __int64 (__fastcall *__ZN10OSIterator9MetaClassD1Ev)(OSIterator::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN10OSIterator9MetaClassD0Ev)(OSIterator::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK10OSIterator9MetaClass5allocEv)(OSIterator::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 540 */
struct OSKext
{
  struct vtable_OSKext *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
};

/* 683 */
typedef int kern_return_t;

/* 3991 */
typedef uint32_t OSKextLoadTag;

/* 4116 */
struct vtable_OSKext
{
  __int64 (__fastcall *__ZN6OSKextD1Ev)(OSKext *__hidden this);
  __int64 (__fastcall *__ZN6OSKextD0Ev)(OSKext *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK6OSKext12getMetaClassEv)(OSKext *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN6OSKext4freeEv)(OSKext *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN6OSKext18initWithBooterDataEP8OSStringP6OSData)(OSKext *this, OSString *deviceTreeName, OSData *booterData);
  bool (__cdecl *__ZN6OSKext25initWithPrelinkedInfoDictEP12OSDictionaryb)(OSKext *this, OSDictionary *infoDict, bool doCoalesedSlides);
  bool (__cdecl *__ZN6OSKext18initWithMkext2InfoEP12OSDictionaryP6OSData)(OSKext *this, OSDictionary *anInfoDict, OSData *mkextData);
  bool (__cdecl *__ZN6OSKext24setInfoDictionaryAndPathEP12OSDictionaryP8OSString)(OSKext *this, OSDictionary *aDictionary, OSString *aPath);
  bool (__cdecl *__ZN6OSKext13setExecutableEP6OSDataS1_b)(OSKext *this, OSData *anExecutable, OSData *externalData, bool externalDataIsMkext);
  bool (__cdecl *__ZN6OSKext18registerIdentifierEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext15isInExcludeListEv)(OSKext *this);
  OSData *(__cdecl *__ZN6OSKext21createMkext2FileEntryEP6OSDataP8OSNumberPKc)(OSKext *this, OSData *mkextData, OSNumber *offsetNum, const char *entryName);
  OSData *(__cdecl *__ZN6OSKext21extractMkext2FileDataEPhPKcjj)(OSKext *this, unsigned __int8 *data, const char *name, u_int32_t compressedSize, u_int32_t fullSize);
  bool (__cdecl *__ZN6OSKext19resolveDependenciesEP7OSArray)(OSKext *this, OSArray *loopStack);
  bool (__cdecl *__ZN6OSKext27addBleedthroughDependenciesEP7OSArray)(OSKext *this, OSArray *anArray);
  bool (__cdecl *__ZN6OSKext17flushDependenciesEb)(OSKext *this, bool forceFlag);
  uint32_t (__cdecl *__ZN6OSKext18getNumDependenciesEv)(OSKext *this);
  OSArray *(__cdecl *__ZN6OSKext15getDependenciesEv)(OSKext *this);
  __int64 (__fastcall *__ZN6OSKext4loadEhhP7OSArray)(OSKext *__hidden this, unsigned __int8, unsigned __int8, OSArray *);
  OSReturn (__cdecl *__ZN6OSKext6unloadEv)(OSKext *this);
  OSReturn (__cdecl *__ZN6OSKext21queueKextNotificationEPKcP8OSString)(OSKext *this, const char *notificationName, OSString *kextIdentifier);
  OSReturn (__cdecl *__ZN6OSKext24slidePrelinkedExecutableEb)(OSKext *this, bool doCoalesedSlides);
  OSReturn (__cdecl *__ZN6OSKext14loadExecutableEv)(OSKext *this);
  void (__cdecl *__ZN6OSKext23jettisonLinkeditSegmentEv)(OSKext *this);
  void (__cdecl *__ZN6OSKext26jettisonDATASegmentPaddingEv)(OSKext *this);
  OSData *(__cdecl *__ZN6OSKext13getExecutableEv)(OSKext *this);
  void (__cdecl *__ZN6OSKext19setLinkedExecutableEP6OSData)(OSKext *this, OSData *anExecutable);
  __int64 (__fastcall *__ZN6OSKext18registerWithDTraceEv)(OSKext *__hidden this);
  __int64 (__fastcall *__ZN6OSKext20unregisterWithDTraceEv)(OSKext *__hidden this);
  OSReturn (__cdecl *__ZN6OSKext5startEb)(OSKext *this, bool startDependenciesFlag);
  OSReturn (__cdecl *__ZN6OSKext4stopEv)(OSKext *this);
  OSReturn (__cdecl *__ZN6OSKext15setVMAttributesEbb)(OSKext *this, bool protect, bool wire);
  __int64 (__fastcall *__ZN6OSKext20segmentShouldBeWiredEP18segment_command_64)();
  OSReturn (__cdecl *__ZN6OSKext19validateKextMappingEb)(OSKext *this, bool startFlag);
  __int64 (__fastcall *__ZN6OSKext20verifySegmentMappingEP18segment_command_64)();
  OSReturn (__cdecl *__ZN6OSKext26sendPersonalitiesToCatalogEbP7OSArray)(OSKext *this, bool startMatching, OSArray *personalityNames);
  OSDictionary *(__cdecl *__ZN6OSKext8copyInfoEP7OSArray)(OSKext *this, OSArray *keys);
  OSReturn (__cdecl *__ZN6OSKext8addClassEP11OSMetaClassj)(OSKext *this, OSMetaClass *aClass, u_int32_t numClasses);
  OSReturn (__cdecl *__ZN6OSKext11removeClassEP11OSMetaClass)(OSKext *this, OSMetaClass *aClass);
  bool (__cdecl *__ZN6OSKext23hasOSMetaClassInstancesEv)(OSKext *this);
  OSSet *(__cdecl *__ZN6OSKext14getMetaClassesEv)(OSKext *this);
  __int64 (__fastcall *__ZN6OSKext26reportOSMetaClassInstancesEj)(OSKext *__hidden this, unsigned int);
  void (__cdecl *__ZN6OSKext30invokeOrCancelRequestCallbacksEib)(OSKext *this, kern_return_t callbackResult, bool invokeFlag);
  uint32_t (__cdecl *__ZN6OSKext21countRequestCallbacksEv)(OSKext *this);
  void (__cdecl *__ZN6OSKext17setCPPInitializedEb)(OSKext *this, bool initialized);
  bool (__cdecl *__ZN6OSKext20setAutounloadEnabledEb)(OSKext *this, bool flag);
  const OSSymbol *(__cdecl *__ZN6OSKext13getIdentifierEv)(OSKext *this);
  const char *(__cdecl *__ZN6OSKext20getIdentifierCStringEv)(OSKext *this);
  int (__cdecl *__ZN6OSKext10getVersionEv)(OSKext *this);
  int (__cdecl *__ZN6OSKext20getCompatibleVersionEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext9isLibraryEv)(OSKext *this);
  __int64 (__fastcall *__ZN6OSKext23isCompatibleWithVersionEx)(OSKext *__hidden this, __int64);
  OSObject *(__cdecl *__ZN6OSKext22getPropertyForHostArchEPKc)(OSKext *this, const char *key);
  OSKextLoadTag (__cdecl *__ZN6OSKext10getLoadTagEv)(OSKext *this);
  void (__cdecl *__ZN6OSKext11getSizeInfoEPjS0_)(OSKext *this, unsigned int *loadSize, unsigned int *wiredSize);
  OSData *(__cdecl *__ZN6OSKext8copyUUIDEv)(OSKext *this);
  OSArray *(__cdecl *__ZN6OSKext22copyPersonalitiesArrayEv)(OSKext *this);
  __int64 (__fastcall *__ZN6OSKext16setDriverKitUUIDEP6OSData)(OSKext *__hidden this, OSData *);
  void (__cdecl *__ZN6OSKext30removePersonalitiesFromCatalogEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext18declaresExecutableEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext11isInterfaceEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext8isKernelEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext17isKernelComponentEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext12isExecutableEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext20isLoadableInSafeBootEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext11isPrelinkedEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext8isLoadedEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext9isStartedEv)(OSKext *this);
  bool (__cdecl *__ZN6OSKext16isCPPInitializedEv)(OSKext *this);
};

/* 541 */
struct OSNumber
{
  struct vtable_OSNumber *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
};

/* 545 */
struct OSSet
{
  struct vtable_OSSet *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
};

/* 4120 */
struct vtable_OSNumber
{
  __int64 (__fastcall *__ZN8OSNumberD1Ev)(OSNumber *__hidden this);
  __int64 (__fastcall *__ZN8OSNumberD0Ev)(OSNumber *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSNumber9serializeEP11OSSerialize)(OSNumber *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK8OSNumber12getMetaClassEv)(OSNumber *this);
  bool (__cdecl *__ZNK8OSNumber9isEqualToEPK15OSMetaClassBase)(OSNumber *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSNumber4freeEv)(OSNumber *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN8OSNumber4initEyj)(OSNumber *this, unsigned __int64 value, unsigned int numberOfBits);
  bool (__cdecl *__ZN8OSNumber4initEPKcj)(OSNumber *this, const char *valueString, unsigned int numberOfBits);
  unsigned int (__cdecl *__ZNK8OSNumber12numberOfBitsEv)(OSNumber *this);
  unsigned int (__cdecl *__ZNK8OSNumber13numberOfBytesEv)(OSNumber *this);
  unsigned __int8 (__cdecl *__ZNK8OSNumber17unsigned8BitValueEv)(OSNumber *this);
  unsigned __int16 (__cdecl *__ZNK8OSNumber18unsigned16BitValueEv)(OSNumber *this);
  unsigned int (__cdecl *__ZNK8OSNumber18unsigned32BitValueEv)(OSNumber *this);
  unsigned __int64 (__cdecl *__ZNK8OSNumber18unsigned64BitValueEv)(OSNumber *this);
  void (__cdecl *__ZN8OSNumber8addValueEx)(OSNumber *this, __int64 value);
  void (__cdecl *__ZN8OSNumber8setValueEy)(OSNumber *this, unsigned __int64 value);
  bool (__cdecl *__ZNK8OSNumber9isEqualToEPKS_)(OSNumber *this, const OSNumber *aNumber);
  void (__cdecl *__ZN8OSNumber18_RESERVEDOSNumber0Ev)(OSNumber *this);
  void (__cdecl *__ZN8OSNumber18_RESERVEDOSNumber1Ev)(OSNumber *this);
  void (__cdecl *__ZN8OSNumber18_RESERVEDOSNumber2Ev)(OSNumber *this);
  void (__cdecl *__ZN8OSNumber18_RESERVEDOSNumber3Ev)(OSNumber *this);
  void (__cdecl *__ZN8OSNumber18_RESERVEDOSNumber4Ev)(OSNumber *this);
  void (__cdecl *__ZN8OSNumber18_RESERVEDOSNumber5Ev)(OSNumber *this);
  void (__cdecl *__ZN8OSNumber18_RESERVEDOSNumber6Ev)(OSNumber *this);
  void (__cdecl *__ZN8OSNumber18_RESERVEDOSNumber7Ev)(OSNumber *this);
};

/* 4136 */
struct vtable_OSSet
{
  __int64 (__fastcall *__ZN5OSSetD1Ev)(OSSet *__hidden this);
  __int64 (__fastcall *__ZN5OSSetD0Ev)(OSSet *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK5OSSet9serializeEP11OSSerialize)(OSSet *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK5OSSet12getMetaClassEv)(OSSet *this);
  bool (__cdecl *__ZNK5OSSet9isEqualToEPK15OSMetaClassBase)(OSSet *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN12OSCollection4initEv)(OSCollection *this);
  void (__cdecl *__ZN5OSSet4freeEv)(OSSet *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  unsigned int (__cdecl *__ZNK5OSSet12iteratorSizeEv)(OSSet *this);
  bool (__cdecl *__ZNK5OSSet12initIteratorEPv)(OSSet *this, void *iterator);
  bool (__cdecl *__ZNK5OSSet24getNextObjectForIteratorEPvPP8OSObject)(OSSet *this, void *iterator, OSObject **ret);
  unsigned int (__cdecl *__ZNK5OSSet8getCountEv)(OSSet *this);
  unsigned int (__cdecl *__ZNK5OSSet11getCapacityEv)(OSSet *this);
  unsigned int (__cdecl *__ZNK5OSSet20getCapacityIncrementEv)(OSSet *this);
  unsigned int (__cdecl *__ZN5OSSet20setCapacityIncrementEj)(OSSet *this, unsigned int increment);
  unsigned int (__cdecl *__ZN5OSSet14ensureCapacityEj)(OSSet *this, unsigned int newCapacity);
  void (__cdecl *__ZN5OSSet15flushCollectionEv)(OSSet *this);
  unsigned int (__cdecl *__ZN5OSSet10setOptionsEjjPv)(OSSet *this, unsigned int options, unsigned int mask, void *context);
  OSCollection *(__cdecl *__ZN5OSSet14copyCollectionEP12OSDictionary)(OSSet *this, OSDictionary *cycleDict);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection2Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection3Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection4Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection5Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection6Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection7Ev)(OSCollection *this);
  bool (__cdecl *__ZN5OSSet16initWithCapacityEj)(OSSet *this, unsigned int capacity);
  bool (__cdecl *__ZN5OSSet15initWithObjectsEPPK8OSObjectjj)(OSSet *this, const OSObject **objects, unsigned int count, unsigned int capacity);
  bool (__cdecl *__ZN5OSSet13initWithArrayEPK7OSArrayj)(OSSet *this, const OSArray *array, unsigned int capacity);
  bool (__cdecl *__ZN5OSSet11initWithSetEPKS_j)(OSSet *this, const OSSet *set, unsigned int capacity);
  bool (__cdecl *__ZN5OSSet9setObjectEPK15OSMetaClassBase)(OSSet *this, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZN5OSSet5mergeEPK7OSArray)(OSSet *this, const OSArray *array);
  bool (__cdecl *__ZN5OSSet5mergeEPKS_)(OSSet *this, const OSSet *set);
  void (__cdecl *__ZN5OSSet12removeObjectEPK15OSMetaClassBase)(OSSet *this, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZNK5OSSet14containsObjectEPK15OSMetaClassBase)(OSSet *this, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZNK5OSSet6memberEPK15OSMetaClassBase)(OSSet *this, const OSMetaClassBase *anObject);
  OSObject *(__cdecl *__ZNK5OSSet12getAnyObjectEv)(OSSet *this);
  bool (__cdecl *__ZNK5OSSet9isEqualToEPKS_)(OSSet *this, const OSSet *aSet);
  void (__cdecl *__ZN5OSSet15_RESERVEDOSSet0Ev)(OSSet *this);
  void (__cdecl *__ZN5OSSet15_RESERVEDOSSet1Ev)(OSSet *this);
  void (__cdecl *__ZN5OSSet15_RESERVEDOSSet2Ev)(OSSet *this);
  void (__cdecl *__ZN5OSSet15_RESERVEDOSSet3Ev)(OSSet *this);
  void (__cdecl *__ZN5OSSet15_RESERVEDOSSet4Ev)(OSSet *this);
  void (__cdecl *__ZN5OSSet15_RESERVEDOSSet5Ev)(OSSet *this);
  void (__cdecl *__ZN5OSSet15_RESERVEDOSSet6Ev)(OSSet *this);
  void (__cdecl *__ZN5OSSet15_RESERVEDOSSet7Ev)(OSSet *this);
};

/* 542 */
struct OSOrderedSet
{
  struct vtable_OSOrderedSet *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
};

/* 4124 */
struct vtable_OSOrderedSet
{
  __int64 (__fastcall *__ZN12OSOrderedSetD1Ev)(OSOrderedSet *__hidden this);
  __int64 (__fastcall *__ZN12OSOrderedSetD0Ev)(OSOrderedSet *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK12OSOrderedSet12getMetaClassEv)(OSOrderedSet *this);
  bool (__cdecl *__ZNK12OSOrderedSet9isEqualToEPK15OSMetaClassBase)(OSOrderedSet *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN12OSCollection4initEv)(OSCollection *this);
  void (__cdecl *__ZN12OSOrderedSet4freeEv)(OSOrderedSet *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  unsigned int (__cdecl *__ZNK12OSOrderedSet12iteratorSizeEv)(OSOrderedSet *this);
  bool (__cdecl *__ZNK12OSOrderedSet12initIteratorEPv)(OSOrderedSet *this, void *iterator);
  bool (__cdecl *__ZNK12OSOrderedSet24getNextObjectForIteratorEPvPP8OSObject)(OSOrderedSet *this, void *iterator, OSObject **ret);
  unsigned int (__cdecl *__ZNK12OSOrderedSet8getCountEv)(OSOrderedSet *this);
  unsigned int (__cdecl *__ZNK12OSOrderedSet11getCapacityEv)(OSOrderedSet *this);
  unsigned int (__cdecl *__ZNK12OSOrderedSet20getCapacityIncrementEv)(OSOrderedSet *this);
  unsigned int (__cdecl *__ZN12OSOrderedSet20setCapacityIncrementEj)(OSOrderedSet *this, unsigned int increment);
  unsigned int (__cdecl *__ZN12OSOrderedSet14ensureCapacityEj)(OSOrderedSet *this, unsigned int newCapacity);
  void (__cdecl *__ZN12OSOrderedSet15flushCollectionEv)(OSOrderedSet *this);
  unsigned int (__cdecl *__ZN12OSOrderedSet10setOptionsEjjPv)(OSOrderedSet *this, unsigned int options, unsigned int mask, void *context);
  OSCollection *(__cdecl *__ZN12OSOrderedSet14copyCollectionEP12OSDictionary)(OSOrderedSet *this, OSDictionary *cycleDict);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection2Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection3Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection4Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection5Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection6Ev)(OSCollection *this);
  void (__cdecl *__ZN12OSCollection22_RESERVEDOSCollection7Ev)(OSCollection *this);
  bool (__cdecl *__ZN12OSOrderedSet16initWithCapacityEjPFiPK15OSMetaClassBaseS2_PvES3_)(OSOrderedSet *this, unsigned int capacity, SInt32 (__cdecl *orderFunc)(const OSMetaClassBase *, const OSMetaClassBase *, void *), void *orderingContext);
  bool (__cdecl *__ZN12OSOrderedSet9setObjectEPK15OSMetaClassBase)(OSOrderedSet *this, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZN12OSOrderedSet14setFirstObjectEPK15OSMetaClassBase)(OSOrderedSet *this, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZN12OSOrderedSet13setLastObjectEPK15OSMetaClassBase)(OSOrderedSet *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZN12OSOrderedSet12removeObjectEPK15OSMetaClassBase)(OSOrderedSet *this, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZNK12OSOrderedSet14containsObjectEPK15OSMetaClassBase)(OSOrderedSet *this, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZNK12OSOrderedSet6memberEPK15OSMetaClassBase)(OSOrderedSet *this, const OSMetaClassBase *anObject);
  OSObject *(__cdecl *__ZNK12OSOrderedSet14getFirstObjectEv)(OSOrderedSet *this);
  OSObject *(__cdecl *__ZNK12OSOrderedSet13getLastObjectEv)(OSOrderedSet *this);
  SInt32 (__cdecl *__ZN12OSOrderedSet11orderObjectEPK15OSMetaClassBase)(OSOrderedSet *this, const OSMetaClassBase *anObject);
  bool (__cdecl *__ZN12OSOrderedSet9setObjectEjPK15OSMetaClassBase)(OSOrderedSet *this, unsigned int index, const OSMetaClassBase *anObject);
  OSObject *(__cdecl *__ZNK12OSOrderedSet9getObjectEj)(OSOrderedSet *this, unsigned int index);
  void *(__cdecl *__ZN12OSOrderedSet14getOrderingRefEv)(OSOrderedSet *this);
  bool (__cdecl *__ZNK12OSOrderedSet9isEqualToEPKS_)(OSOrderedSet *this, const OSOrderedSet *anOrderedSet);
  void (__cdecl *__ZN12OSOrderedSet22_RESERVEDOSOrderedSet0Ev)(OSOrderedSet *this);
  void (__cdecl *__ZN12OSOrderedSet22_RESERVEDOSOrderedSet1Ev)(OSOrderedSet *this);
  void (__cdecl *__ZN12OSOrderedSet22_RESERVEDOSOrderedSet2Ev)(OSOrderedSet *this);
  void (__cdecl *__ZN12OSOrderedSet22_RESERVEDOSOrderedSet3Ev)(OSOrderedSet *this);
  void (__cdecl *__ZN12OSOrderedSet22_RESERVEDOSOrderedSet4Ev)(OSOrderedSet *this);
  void (__cdecl *__ZN12OSOrderedSet22_RESERVEDOSOrderedSet5Ev)(OSOrderedSet *this);
  void (__cdecl *__ZN12OSOrderedSet22_RESERVEDOSOrderedSet6Ev)(OSOrderedSet *this);
  void (__cdecl *__ZN12OSOrderedSet22_RESERVEDOSOrderedSet7Ev)(OSOrderedSet *this);
};

/* 544 */
struct OSSerializer
{
  struct vtable_OSSerializer *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
};

/* 4132 */
struct vtable_OSSerializer
{
  __int64 (__fastcall *__ZN12OSSerializerD1Ev)(OSSerializer *__hidden this);
  __int64 (__fastcall *__ZN12OSSerializerD0Ev)(OSSerializer *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK12OSSerializer9serializeEP11OSSerialize)(OSSerializer *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK12OSSerializer12getMetaClassEv)(OSSerializer *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN12OSSerializer4freeEv)(OSSerializer *__hidden this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 548 */
struct OSSymbolPool
{
  struct vtable_OSSymbolPool *vtable;
};

/* 4144 */
struct vtable_OSSymbolPool
{
  __int64 (__fastcall *__ZN12OSSymbolPoolD1Ev)(OSSymbolPool *__hidden this);
  __int64 (__fastcall *__ZN12OSSymbolPoolD0Ev)(OSSymbolPool *__hidden this);
};

/* 549 */
struct OSAction
{
  struct vtable_OSAction *vtable;
  __int64 member1;
  __int64 member2;
};

/* 4150 */
struct vtable_OSAction
{
  __int64 (__fastcall *__ZN8OSActionD1Ev)(OSAction *__hidden this);
  __int64 (__fastcall *__ZN8OSActionD0Ev)(OSAction *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK8OSAction12getMetaClassEv)(OSAction *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSAction8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSAction4freeEv)(OSAction *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 550 */
struct IODispatchSource
{
  struct vtable_IODispatchSource *vtable;
  __int64 member1;
  __int64 member2;
};

/* 4154 */
struct vtable_IODispatchSource
{
  __int64 (__fastcall *__ZN16IODispatchSourceD1Ev)(IODispatchSource *__hidden this);
  __int64 (__fastcall *__ZN16IODispatchSourceD0Ev)(IODispatchSource *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK16IODispatchSource12getMetaClassEv)(IODispatchSource *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN16IODispatchSource8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN16IODispatchSource4initEv)(IODispatchSource *__hidden this);
  void (__cdecl *__ZN16IODispatchSource4freeEv)(IODispatchSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 551 */
struct IODispatchQueue
{
  struct vtable_IODispatchQueue *vtable;
  __int64 member1;
  __int64 member2;
};

/* 4158 */
struct vtable_IODispatchQueue
{
  __int64 (__fastcall *__ZN15IODispatchQueueD1Ev)(IODispatchQueue *__hidden this);
  __int64 (__fastcall *__ZN15IODispatchQueueD0Ev)(IODispatchQueue *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15IODispatchQueue12getMetaClassEv)(IODispatchQueue *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15IODispatchQueue8DispatchE5IORPC)(__int64, __int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN15IODispatchQueue4initEv)(IODispatchQueue *__hidden this);
  void (__cdecl *__ZN15IODispatchQueue4freeEv)(IODispatchQueue *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 552 */
struct IOInterruptDispatchSource
{
  struct vtable_IOInterruptDispatchSource *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4162 */
struct vtable_IOInterruptDispatchSource
{
  __int64 (__fastcall *__ZN25IOInterruptDispatchSourceD1Ev)(IOInterruptDispatchSource *__hidden this);
  __int64 (__fastcall *__ZN25IOInterruptDispatchSourceD0Ev)(IOInterruptDispatchSource *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  __int64 (__fastcall *__ZNK25IOInterruptDispatchSource12getMetaClassEv)(IOInterruptDispatchSource *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN25IOInterruptDispatchSource8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZN25IOInterruptDispatchSource4initEv)(IOInterruptDispatchSource *__hidden this);
  __int64 (__fastcall *__ZN25IOInterruptDispatchSource4freeEv)(IOInterruptDispatchSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 553 */
struct IODataQueueDispatchSource
{
  struct vtable_IODataQueueDispatchSource *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4166 */
struct vtable_IODataQueueDispatchSource
{
  __int64 (__fastcall *__ZN25IODataQueueDispatchSourceD1Ev)(IODataQueueDispatchSource *__hidden this);
  __int64 (__fastcall *__ZN25IODataQueueDispatchSourceD0Ev)(IODataQueueDispatchSource *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  __int64 (__fastcall *__ZNK25IODataQueueDispatchSource12getMetaClassEv)(IODataQueueDispatchSource *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN25IODataQueueDispatchSource8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZN25IODataQueueDispatchSource4initEv)(IODataQueueDispatchSource *__hidden this);
  __int64 (__fastcall *__ZN25IODataQueueDispatchSource4freeEv)(IODataQueueDispatchSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 554 */
struct IOConditionLock
{
  struct vtable_IOConditionLock *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 4170 */
struct vtable_IOConditionLock
{
  __int64 (__fastcall *__ZN15IOConditionLockD1Ev)(IOConditionLock *__hidden this);
  __int64 (__fastcall *__ZN15IOConditionLockD0Ev)(IOConditionLock *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15IOConditionLock12getMetaClassEv)(IOConditionLock *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN15IOConditionLock4freeEv)(IOConditionLock *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN15IOConditionLock17initWithConditionEib)(IOConditionLock *this, int condition, bool inIntr);
  bool (__cdecl *__ZN15IOConditionLock7tryLockEv)(IOConditionLock *this);
  int (__cdecl *__ZN15IOConditionLock4lockEv)(IOConditionLock *this);
  void (__cdecl *__ZN15IOConditionLock6unlockEv)(IOConditionLock *this);
  bool (__cdecl *__ZNK15IOConditionLock16getInterruptibleEv)(IOConditionLock *this);
  int (__cdecl *__ZNK15IOConditionLock12getConditionEv)(IOConditionLock *this);
  int (__cdecl *__ZN15IOConditionLock12setConditionEi)(IOConditionLock *this, int condition);
  int (__cdecl *__ZN15IOConditionLock8lockWhenEi)(IOConditionLock *this, int condition);
  void (__cdecl *__ZN15IOConditionLock10unlockWithEi)(IOConditionLock *this, int condition);
};

/* 555 */
struct IORegistryEntry
{
  struct vtable_IORegistryEntry *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
};

/* 2399 */
typedef kern_return_t IOReturn;

/* 4174 */
struct vtable_IORegistryEntry
{
  __int64 (__fastcall *__ZN15IORegistryEntryD1Ev)(IORegistryEntry *__hidden this);
  __int64 (__fastcall *__ZN15IORegistryEntryD0Ev)(IORegistryEntry *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15IORegistryEntry12getMetaClassEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN15IORegistryEntry4freeEv)(IORegistryEntry *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN15IORegistryEntry4initEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK15IORegistryEntry19serializePropertiesEP11OSSerialize)(IORegistryEntry *this, OSSerialize *serialize);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN15IORegistryEntry4initEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
};

/* 557 */
struct IORegistryPlane
{
  struct vtable_IORegistryPlane *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
};

/* 4180 */
struct vtable_IORegistryPlane
{
  __int64 (__fastcall *__ZN15IORegistryPlaneD1Ev)(IORegistryPlane *__hidden this);
  __int64 (__fastcall *__ZN15IORegistryPlaneD0Ev)(IORegistryPlane *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK15IORegistryPlane9serializeEP11OSSerialize)(IORegistryPlane *__hidden this, OSSerialize *);
  const OSMetaClass *(__cdecl *__ZNK15IORegistryPlane12getMetaClassEv)(IORegistryPlane *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 556 */
struct IORegistryIterator
{
  struct vtable_IORegistryIterator *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
};

/* 4176 */
struct vtable_IORegistryIterator
{
  __int64 (__fastcall *__ZN18IORegistryIteratorD1Ev)(IORegistryIterator *__hidden this);
  __int64 (__fastcall *__ZN18IORegistryIteratorD0Ev)(IORegistryIterator *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK18IORegistryIterator12getMetaClassEv)(IORegistryIterator *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN18IORegistryIterator4freeEv)(IORegistryIterator *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN18IORegistryIterator5resetEv)(IORegistryIterator *this);
  bool (__cdecl *__ZN18IORegistryIterator7isValidEv)(IORegistryIterator *this);
  OSObject *(__cdecl *__ZN18IORegistryIterator13getNextObjectEv)(IORegistryIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator0Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator1Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator2Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator3Ev)(OSIterator *this);
  IORegistryEntry *(__cdecl *__ZN18IORegistryIterator17getNextObjectFlatEv)(IORegistryIterator *this);
  IORegistryEntry *(__cdecl *__ZN18IORegistryIterator22getNextObjectRecursiveEv)(IORegistryIterator *this);
  IORegistryEntry *(__cdecl *__ZN18IORegistryIterator15getCurrentEntryEv)(IORegistryIterator *this);
  void (__cdecl *__ZN18IORegistryIterator10enterEntryEv)(IORegistryIterator *this);
  void (__cdecl *__ZN18IORegistryIterator10enterEntryEPK15IORegistryPlane)(IORegistryIterator *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN18IORegistryIterator9exitEntryEv)(IORegistryIterator *this);
  OSOrderedSet *(__cdecl *__ZN18IORegistryIterator10iterateAllEv)(IORegistryIterator *this);
};

/* 558 */
struct IOService
{
  struct vtable_IOService *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
};

/* 2503 */
typedef struct $B104DB4BFE5CD69413386C08F1ABB991 IOReportChannelList;

/* 2401 */
typedef UInt32 IOOptionBits;

/* 2404 */
typedef UInt32 IOItemCount;

/* 595 */
struct IODeviceMemory;

/* 681 */
typedef uintptr_t vm_size_t;

/* 4186 */
struct vtable_IOService
{
  __int64 (__fastcall *__ZN9IOServiceD1Ev)(IOService *__hidden this);
  __int64 (__fastcall *__ZN9IOServiceD0Ev)(IOService *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK9IOService12getMetaClassEv)(IOService *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
};

/* 2498 */
struct $D01AECF6A226AC2D27B7AC80A7DD17A7
{
  uint8_t report_format;
  uint8_t reserved;
  uint16_t categories;
  uint16_t nelements;
  int16_t element_idx;
};

/* 2499 */
typedef struct $D01AECF6A226AC2D27B7AC80A7DD17A7 IOReportChannelType;

/* 2500 */
struct $9B2E7C0D365ECBFDE228577196A944D7
{
  uint64_t channel_id;
  IOReportChannelType channel_type;
};

/* 2501 */
typedef struct $9B2E7C0D365ECBFDE228577196A944D7 IOReportChannel;

/* 2502 */
struct $B104DB4BFE5CD69413386C08F1ABB991
{
  uint32_t nchannels;
  IOReportChannel channels[];
};

/* 583 */
struct IOWorkLoop
{
  struct vtable_IOWorkLoop *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
};

/* 605 */
struct IOMemoryMap
{
  struct vtable_IOMemoryMap *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
  __int64 member28;
  __int64 member29;
  __int64 member30;
  __int64 member31;
  __int64 member32;
  __int64 member33;
  __int64 member34;
  __int64 member35;
  __int64 member36;
  __int64 member37;
  __int64 member38;
  __int64 member39;
  __int64 member40;
  __int64 member41;
  __int64 member42;
  __int64 member43;
  __int64 member44;
  __int64 member45;
  __int64 member46;
  __int64 member47;
  __int64 member48;
};

/* 567 */
struct IONotifier
{
  struct vtable_IONotifier *vtable;
  __int64 member1;
};

/* 631 */
struct IOUserClient
{
  struct vtable_IOUserClient *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
};

/* 2546 */
typedef unsigned __int64 IOPMPowerFlags;

/* 2574 */
struct IOPMPowerState
{
  unsigned __int64 version;
  IOPMPowerFlags capabilityFlags;
  IOPMPowerFlags outputPowerCharacter;
  IOPMPowerFlags inputPowerRequirement;
  unsigned __int64 staticPower;
  unsigned __int64 stateOrder;
  unsigned __int64 powerToAttain;
  unsigned __int64 timeToAttain;
  unsigned __int64 settleUpTime;
  unsigned __int64 timeToLower;
  unsigned __int64 settleDownTime;
  unsigned __int64 powerDomainBudget;
};

/* 648 */
struct IOPowerConnection
{
  struct vtable_IOPowerConnection *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
};

/* 2456 */
typedef thread_t IOThread;

/* 4278 */
struct vtable_IOWorkLoop
{
  __int64 (__fastcall *__ZN10IOWorkLoopD1Ev)(IOWorkLoop *__hidden this);
  __int64 (__fastcall *__ZN10IOWorkLoopD0Ev)(IOWorkLoop *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK10IOWorkLoop12getMetaClassEv)(IOWorkLoop *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN10IOWorkLoop4initEv)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop4freeEv)(IOWorkLoop *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  IOReturn (__cdecl *__ZN10IOWorkLoop13_maintRequestEPvS0_S0_S0_)(IOWorkLoop *this, void *command, void *data, void *, void *);
  void (__cdecl *__ZN10IOWorkLoop10threadMainEv)(IOWorkLoop *this);
  IOThread (__cdecl *__ZNK10IOWorkLoop9getThreadEv)(IOWorkLoop *this);
  bool (__cdecl *__ZNK10IOWorkLoop8onThreadEv)(IOWorkLoop *this);
  bool (__cdecl *__ZNK10IOWorkLoop6inGateEv)(IOWorkLoop *this);
  IOReturn (__cdecl *__ZN10IOWorkLoop14addEventSourceEP13IOEventSource)(IOWorkLoop *this, IOEventSource *newEvent);
  IOReturn (__cdecl *__ZN10IOWorkLoop17removeEventSourceEP13IOEventSource)(IOWorkLoop *this, IOEventSource *toRemove);
  void (__cdecl *__ZNK10IOWorkLoop21enableAllEventSourcesEv)(IOWorkLoop *this);
  void (__cdecl *__ZNK10IOWorkLoop22disableAllEventSourcesEv)(IOWorkLoop *this);
  void (__cdecl *__ZNK10IOWorkLoop19enableAllInterruptsEv)(IOWorkLoop *this);
  void (__cdecl *__ZNK10IOWorkLoop20disableAllInterruptsEv)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop19signalWorkAvailableEv)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop8openGateEv)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop9closeGateEv)(IOWorkLoop *this);
  bool (__cdecl *__ZN10IOWorkLoop12tryCloseGateEv)(IOWorkLoop *this);
  int (__cdecl *__ZN10IOWorkLoop9sleepGateEPvj)(IOWorkLoop *this, void *event, unsigned int interuptibleType);
  void (__cdecl *__ZN10IOWorkLoop10wakeupGateEPvb)(IOWorkLoop *this, void *event, bool oneThread);
  IOReturn (__cdecl *__ZN10IOWorkLoop9runActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IOWorkLoop *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  bool (__cdecl *__ZN10IOWorkLoop15runEventSourcesEv)(IOWorkLoop *this);
  int (__cdecl *__ZN10IOWorkLoop9sleepGateEPvyj)(IOWorkLoop *this, void *event, UInt64 deadline, unsigned int interuptibleType);
  void (__cdecl *__ZN10IOWorkLoop20_RESERVEDIOWorkLoop0Ev)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop20_RESERVEDIOWorkLoop1Ev)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop20_RESERVEDIOWorkLoop2Ev)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop20_RESERVEDIOWorkLoop3Ev)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop20_RESERVEDIOWorkLoop4Ev)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop20_RESERVEDIOWorkLoop5Ev)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop20_RESERVEDIOWorkLoop6Ev)(IOWorkLoop *this);
  void (__cdecl *__ZN10IOWorkLoop20_RESERVEDIOWorkLoop7Ev)(IOWorkLoop *this);
};

/* 2412 */
typedef mach_vm_address_t IOVirtualAddress;

/* 2408 */
typedef UInt32 IOPhysicalAddress32;

/* 2415 */
typedef IOPhysicalAddress32 IOPhysicalAddress;

/* 2407 */
typedef UInt64 IOByteCount64;

/* 2406 */
typedef UInt32 IOByteCount32;

/* 2413 */
typedef IOByteCount32 IOByteCount;

/* 1132 */
typedef struct task *task_t;

/* 4350 */
struct vtable_IOMemoryMap
{
  __int64 (__fastcall *__ZN11IOMemoryMapD1Ev)(IOMemoryMap *__hidden this);
  __int64 (__fastcall *__ZN11IOMemoryMapD0Ev)(IOMemoryMap *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11IOMemoryMap12getMetaClassEv)(IOMemoryMap *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK11IOMemoryMap13taggedReleaseEPKv)(IOMemoryMap *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN11IOMemoryMap8DispatchE5IORPC)(__int64, __int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN11IOMemoryMap4freeEv)(IOMemoryMap *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  IOVirtualAddress (__cdecl *__ZN11IOMemoryMap17getVirtualAddressEv)(IOMemoryMap *this);
  IOPhysicalAddress (__cdecl *__ZN11IOMemoryMap18getPhysicalSegmentEyPyj)(IOMemoryMap *this, IOByteCount64 offset, unsigned __int64 *length, UInt32 options);
  IOByteCount (__cdecl *__ZN11IOMemoryMap9getLengthEv)(IOMemoryMap *this);
  task_t (__cdecl *__ZN11IOMemoryMap14getAddressTaskEv)(IOMemoryMap *this);
  IOMemoryDescriptor *(__cdecl *__ZN11IOMemoryMap19getMemoryDescriptorEv)(IOMemoryMap *this);
  IOOptionBits (__cdecl *__ZN11IOMemoryMap13getMapOptionsEv)(IOMemoryMap *this);
  IOReturn (__cdecl *__ZN11IOMemoryMap5unmapEv)(IOMemoryMap *this);
  void (__cdecl *__ZN11IOMemoryMap8taskDiedEv)(IOMemoryMap *this);
  IOReturn (__cdecl *__ZN11IOMemoryMap8redirectEP18IOMemoryDescriptorjy)(IOMemoryMap *this, IOMemoryDescriptor *newBackingMemory, UInt32 options, uint64_t offset);
  void (__cdecl *__ZN11IOMemoryMap21_RESERVEDIOMemoryMap0Ev)(IOMemoryMap *this);
  void (__cdecl *__ZN11IOMemoryMap21_RESERVEDIOMemoryMap1Ev)(IOMemoryMap *this);
  void (__cdecl *__ZN11IOMemoryMap21_RESERVEDIOMemoryMap2Ev)(IOMemoryMap *this);
  void (__cdecl *__ZN11IOMemoryMap21_RESERVEDIOMemoryMap3Ev)(IOMemoryMap *this);
  void (__cdecl *__ZN11IOMemoryMap21_RESERVEDIOMemoryMap4Ev)(IOMemoryMap *this);
  void (__cdecl *__ZN11IOMemoryMap21_RESERVEDIOMemoryMap5Ev)(IOMemoryMap *this);
  void (__cdecl *__ZN11IOMemoryMap21_RESERVEDIOMemoryMap6Ev)(IOMemoryMap *this);
  void (__cdecl *__ZN11IOMemoryMap21_RESERVEDIOMemoryMap7Ev)(IOMemoryMap *this);
};

/* 4222 */
struct vtable_IONotifier
{
  __int64 (__fastcall *__ZN10IONotifierD1Ev)(IONotifier *__hidden this);
  __int64 (__fastcall *__ZN10IONotifierD0Ev)(IONotifier *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK10IONotifier12getMetaClassEv)(IONotifier *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN10IONotifier6removeEv)(IONotifier *this);
  bool (__cdecl *__ZN10IONotifier7disableEv)(IONotifier *this);
  void (__cdecl *__ZN10IONotifier6enableEb)(IONotifier *this, bool was);
};

/* 878 */
typedef struct ipc_port *ipc_port_t;

/* 1157 */
struct semaphore;

/* 4434 */
struct vtable_IOUserClient
{
  __int64 (__fastcall *__ZN12IOUserClientD1Ev)(IOUserClient *__hidden this);
  __int64 (__fastcall *__ZN12IOUserClientD0Ev)(IOUserClient *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK12IOUserClient12getMetaClassEv)(IOUserClient *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN12IOUserClient4initEv)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient4freeEv)(IOUserClient *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN12IOUserClient4initEP12OSDictionary)(IOUserClient *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN12IOUserClient14externalMethodEjP25IOExternalMethodArgumentsP24IOExternalMethodDispatchP8OSObjectPv)(IOUserClient *this, u_int32_t selector, IOExternalMethodArguments *arguments, IOExternalMethodDispatch *dispatch, OSObject *target, void *reference);
  IOReturn (__cdecl *__ZN12IOUserClient24registerNotificationPortEP8ipc_portjy)(IOUserClient *this, ipc_port_t port, unsigned int type, uint64_t refCon);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient0Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient1Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient2Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient3Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient4Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient5Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient6Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient7Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient8Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient9Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient10Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient11Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient12Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient13Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient14Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient15Ev)(IOUserClient *this);
  bool (__cdecl *__ZN12IOUserClient12initWithTaskEP4taskPvjP12OSDictionary)(IOUserClient *this, struct task *owningTask, void *securityToken, unsigned int type, OSDictionary *properties);
  bool (__cdecl *__ZN12IOUserClient12initWithTaskEP4taskPvj)(IOUserClient *this, struct task *owningTask, void *securityToken, unsigned int type);
  IOReturn (__cdecl *__ZN12IOUserClient11clientCloseEv)(IOUserClient *this);
  IOReturn (__cdecl *__ZN12IOUserClient10clientDiedEv)(IOUserClient *this);
  IOService *(__cdecl *__ZN12IOUserClient10getServiceEv)(IOUserClient *this);
  IOReturn (__cdecl *__ZN12IOUserClient24registerNotificationPortEP8ipc_portjj)(IOUserClient *this, ipc_port_t port, unsigned int type, unsigned int refCon);
  IOReturn (__cdecl *__ZN12IOUserClient24getNotificationSemaphoreEjPP9semaphore)(IOUserClient *this, unsigned int notification_type, semaphore **semaphore);
  IOReturn (__cdecl *__ZN12IOUserClient13connectClientEPS_)(IOUserClient *this, IOUserClient *client);
  IOReturn (__cdecl *__ZN12IOUserClient19clientMemoryForTypeEjPjPP18IOMemoryDescriptor)(IOUserClient *this, unsigned int type, unsigned int *options, IOMemoryDescriptor **memory);
  IOReturn (__cdecl *__ZN12IOUserClient20exportObjectToClientEP4taskP8OSObjectPS3_)(IOUserClient *this, struct task *task, OSObject *obj, OSObject **clientObj);
  IOExternalMethod *(__cdecl *__ZN12IOUserClient25getExternalMethodForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalAsyncMethod *(__cdecl *__ZN12IOUserClient30getExternalAsyncMethodForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalMethod *(__cdecl *__ZN12IOUserClient26getTargetAndMethodForIndexEPP9IOServicej)(IOUserClient *this, IOService **targetP, unsigned int index);
  IOExternalAsyncMethod *(__cdecl *__ZN12IOUserClient31getAsyncTargetAndMethodForIndexEPP9IOServicej)(IOUserClient *this, IOService **targetP, unsigned int index);
  IOExternalTrap *(__cdecl *__ZN12IOUserClient23getExternalTrapForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalTrap *(__cdecl *__ZN12IOUserClient24getTargetAndTrapForIndexEPP9IOServicej)(IOUserClient *this, IOService **targetP, unsigned int index);
};

/* 4494 */
struct vtable_IOPowerConnection
{
  __int64 (__fastcall *__ZN17IOPowerConnectionD1Ev)(IOPowerConnection *__hidden this);
  __int64 (__fastcall *__ZN17IOPowerConnectionD0Ev)(IOPowerConnection *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK17IOPowerConnection12getMetaClassEv)(IOPowerConnection *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
};

/* 584 */
struct IOEventSource
{
  struct vtable_IOEventSource *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
};

/* 603 */
struct IOMemoryDescriptor
{
  struct vtable_IOMemoryDescriptor *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
};

/* 879 */
typedef __darwin_mach_port_t mach_port_t;

/* 2430 */
typedef uint64_t io_user_reference_t;

/* 2601 */
struct IOExternalMethodArguments
{
  uint32_t version;
  uint32_t selector;
  mach_port_t asyncWakePort;
  io_user_reference_t *asyncReference;
  uint32_t asyncReferenceCount;
  const uint64_t *scalarInput;
  uint32_t scalarInputCount;
  const void *structureInput;
  uint32_t structureInputSize;
  IOMemoryDescriptor *structureInputDescriptor;
  uint64_t *scalarOutput;
  uint32_t scalarOutputCount;
  void *structureOutput;
  uint32_t structureOutputSize;
  IOMemoryDescriptor *structureOutputDescriptor;
  uint32_t structureOutputDescriptorSize;
  uint32_t __reservedA;
  OSObject **structureVariableOutputData;
  uint32_t __reserved[30];
};

/* 2602 */
typedef IOReturn (__cdecl *IOExternalMethodAction)(OSObject *target, void *reference, IOExternalMethodArguments *arguments);

/* 2603 */
struct IOExternalMethodDispatch
{
  IOExternalMethodAction function;
  uint32_t checkScalarInputCount;
  uint32_t checkStructureInputSize;
  uint32_t checkScalarOutputCount;
  uint32_t checkStructureOutputSize;
};

/* 877 */
struct ipc_port;

/* 2592 */
typedef IOReturn (__cdecl *IOMethod)(void *p1, void *p2, void *p3, void *p4, void *p5, void *p6);

/* 2595 */
struct IOExternalMethod
{
  IOService *object;
  IOMethod func;
  IOOptionBits flags;
  IOByteCount count0;
  IOByteCount count1;
};

/* 2532 */
typedef natural_t OSAsyncReference[8];

/* 2593 */
typedef IOReturn (__cdecl *IOAsyncMethod)(OSAsyncReference asyncRef, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6);

/* 2596 */
struct IOExternalAsyncMethod
{
  IOService *object;
  IOAsyncMethod func;
  IOOptionBits flags;
  IOByteCount count0;
  IOByteCount count1;
};

/* 2594 */
typedef IOReturn (__cdecl *IOTrap)(void *p1, void *p2, void *p3, void *p4, void *p5, void *p6);

/* 2597 */
struct IOExternalTrap
{
  IOService *object;
  IOTrap func;
};

/* 4282 */
struct vtable_IOEventSource
{
  __int64 (__fastcall *__ZN13IOEventSourceD1Ev)(IOEventSource *__hidden this);
  __int64 (__fastcall *__ZN13IOEventSourceD0Ev)(IOEventSource *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK13IOEventSource12getMetaClassEv)(IOEventSource *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN13IOEventSource4freeEv)(IOEventSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN13IOEventSource4initEP8OSObjectPFvS1_zE)(IOEventSource *this, OSObject *owner, void (*action)(OSObject *, ...));
  bool (__cdecl *__ZN13IOEventSource12checkForWorkEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource11setWorkLoopEP10IOWorkLoop)(IOEventSource *this, IOWorkLoop *workLoop);
  void (__cdecl *__ZN13IOEventSource7setNextEPS_)(IOEventSource *this, IOEventSource *next);
  IOEventSource *(__cdecl *__ZNK13IOEventSource7getNextEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource9setActionEPFvP8OSObjectzE)(IOEventSource *this, void (*action)(OSObject *, ...));
  __int64 (__fastcall *__ZNK13IOEventSource9getActionEv)(IOEventSource *__hidden this);
  void (__cdecl *__ZN13IOEventSource6enableEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource7disableEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource9isEnabledEv)(IOEventSource *this);
  IOWorkLoop *(__cdecl *__ZNK13IOEventSource11getWorkLoopEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource8onThreadEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource0Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource1Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource2Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource3Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource4Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource5Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource6Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource7Ev)(IOEventSource *this);
};

/* 2475 */
typedef IOOptionBits IODirection;

/* 4346 */
struct vtable_IOMemoryDescriptor
{
  __int64 (__fastcall *__ZN18IOMemoryDescriptorD1Ev)(IOMemoryDescriptor *__hidden this);
  __int64 (__fastcall *__ZN18IOMemoryDescriptorD0Ev)(IOMemoryDescriptor *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK18IOMemoryDescriptor12getMetaClassEv)(IOMemoryDescriptor *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN18IOMemoryDescriptor4freeEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN18IOMemoryDescriptor15initWithOptionsEPvjjP4taskjP8IOMapper)(IOMemoryDescriptor *this, void *buffers, unsigned int count, unsigned int offset, struct task *task, UInt32 options, IOMapper *mapper);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor12setPurgeableEjPj)(IOMemoryDescriptor *this, UInt32 newState, unsigned int *oldState);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor16performOperationEjyy)(IOMemoryDescriptor *this, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  IOReturn (__cdecl *__ZNK18IOMemoryDescriptor19dmaCommandOperationEjPvj)(IOMemoryDescriptor *this, IOOptionBits op, void *vData, unsigned int dataSize);
  addr64_t (__cdecl *__ZN18IOMemoryDescriptor18getPhysicalSegmentEyPyj)(IOMemoryDescriptor *this, IOByteCount64 offset, unsigned __int64 *length, UInt32 options);
  uint64_t (__cdecl *__ZN18IOMemoryDescriptor16getPreparationIDEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor1Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor2Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor3Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor4Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor5Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor6Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor7Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor8Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor9Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor10Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor11Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor12Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor13Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor14Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor15Ev)(IOMemoryDescriptor *this);
  IODirection (__cdecl *__ZNK18IOMemoryDescriptor12getDirectionEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZNK18IOMemoryDescriptor9getLengthEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor6setTagEj)(IOMemoryDescriptor *this, UInt32 tag);
  IOOptionBits (__cdecl *__ZN18IOMemoryDescriptor6getTagEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor9readBytesEyPvy)(IOMemoryDescriptor *this, IOByteCount64 offset, void *bytes, IOByteCount64 withLength);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor10writeBytesEyPKvy)(IOMemoryDescriptor *this, IOByteCount64 offset, const void *bytes, IOByteCount64 withLength);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor7prepareEj)(IOMemoryDescriptor *this, IOOptionBits forDirection);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor8completeEj)(IOMemoryDescriptor *this, IOOptionBits forDirection);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor3mapEj)(IOMemoryDescriptor *this, UInt32 options);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor10setMappingEP4taskyj)(IOMemoryDescriptor *this, struct task *task, mach_vm_address_t mapAddress, UInt32 options);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor8redirectEP4taskb)(IOMemoryDescriptor *this, struct task *safeTask, bool redirect);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor11makeMappingEPS_P4taskyjyy)(IOMemoryDescriptor *this, IOMemoryDescriptor *owner, struct task *intoTask, mach_vm_address_t atAddress, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  void (__cdecl *__ZN18IOMemoryDescriptor10addMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  void (__cdecl *__ZN18IOMemoryDescriptor13removeMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor5doMapEP7_vm_mapPyjyy)();
  __int64 (__fastcall *__ZN18IOMemoryDescriptor7doUnmapEP7_vm_mapyy)();
};

/* 597 */
struct IOMapper
{
  struct vtable_IOMapper *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
};

/* 4326 */
struct vtable_IOMapper
{
  __int64 (__fastcall *__ZN8IOMapperD1Ev)(IOMapper *__hidden this);
  __int64 (__fastcall *__ZN8IOMapperD0Ev)(IOMapper *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK8IOMapper12getMetaClassEv)(IOMapper *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8IOMapper4freeEv)(IOMapper *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN8IOMapper5startEPS_)(IOMapper *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  void (__fastcall __noreturn *___cxa_pure_virtual)();
  void (__fastcall __noreturn *___cxa_pure_virtual267)();
  void (__fastcall __noreturn *___cxa_pure_virtual268)();
  void (__fastcall __noreturn *___cxa_pure_virtual269)();
  void (__fastcall __noreturn *___cxa_pure_virtual270)();
  void (__fastcall __noreturn *___cxa_pure_virtual271)();
  void (__cdecl *__ZN8IOMapper18_RESERVEDIOMapper0Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper18_RESERVEDIOMapper1Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper18_RESERVEDIOMapper2Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper18_RESERVEDIOMapper3Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper18_RESERVEDIOMapper4Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper18_RESERVEDIOMapper5Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper18_RESERVEDIOMapper6Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper18_RESERVEDIOMapper7Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper18_RESERVEDIOMapper8Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper18_RESERVEDIOMapper9Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper19_RESERVEDIOMapper10Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper19_RESERVEDIOMapper11Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper19_RESERVEDIOMapper12Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper19_RESERVEDIOMapper13Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper19_RESERVEDIOMapper14Ev)(IOMapper *this);
  void (__cdecl *__ZN8IOMapper19_RESERVEDIOMapper15Ev)(IOMapper *this);
};

/* 559 */
struct _IOServiceInterestNotifier
{
  struct vtable__IOServiceInterestNotifier *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
};

/* 4188 */
struct vtable__IOServiceInterestNotifier
{
  __int64 (__fastcall *__ZN26_IOServiceInterestNotifierD1Ev)(_IOServiceInterestNotifier *__hidden this);
  __int64 (__fastcall *__ZN26_IOServiceInterestNotifierD0Ev)(_IOServiceInterestNotifier *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK26_IOServiceInterestNotifier12getMetaClassEv)(_IOServiceInterestNotifier *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN26_IOServiceInterestNotifier4initEv)(_IOServiceInterestNotifier *this);
  void (__cdecl *__ZN26_IOServiceInterestNotifier4freeEv)(_IOServiceInterestNotifier *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN26_IOServiceInterestNotifier6removeEv)(_IOServiceInterestNotifier *this);
  bool (__cdecl *__ZN26_IOServiceInterestNotifier7disableEv)(_IOServiceInterestNotifier *this);
  void (__cdecl *__ZN26_IOServiceInterestNotifier6enableEb)(_IOServiceInterestNotifier *this, bool was);
  void (__cdecl *__ZN26_IOServiceInterestNotifier4waitEv)(_IOServiceInterestNotifier *this);
};

/* 560 */
struct _IOOpenServiceIterator
{
  struct vtable__IOOpenServiceIterator *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 4190 */
struct vtable__IOOpenServiceIterator
{
  __int64 (__fastcall *__ZN22_IOOpenServiceIteratorD1Ev)(_IOOpenServiceIterator *__hidden this);
  __int64 (__fastcall *__ZN22_IOOpenServiceIteratorD0Ev)(_IOOpenServiceIterator *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK22_IOOpenServiceIterator12getMetaClassEv)(_IOOpenServiceIterator *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN22_IOOpenServiceIterator4freeEv)(_IOOpenServiceIterator *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN22_IOOpenServiceIterator5resetEv)(_IOOpenServiceIterator *this);
  bool (__cdecl *__ZN22_IOOpenServiceIterator7isValidEv)(_IOOpenServiceIterator *this);
  OSObject *(__cdecl *__ZN22_IOOpenServiceIterator13getNextObjectEv)(_IOOpenServiceIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator0Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator1Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator2Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator3Ev)(OSIterator *this);
};

/* 561 */
struct _IOServiceNotifier
{
  struct vtable__IOServiceNotifier *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
};

/* 4194 */
struct vtable__IOServiceNotifier
{
  __int64 (__fastcall *__ZN18_IOServiceNotifierD1Ev)(_IOServiceNotifier *__hidden this);
  __int64 (__fastcall *__ZN18_IOServiceNotifierD0Ev)(_IOServiceNotifier *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK18_IOServiceNotifier12getMetaClassEv)(_IOServiceNotifier *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN18_IOServiceNotifier4freeEv)(_IOServiceNotifier *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN18_IOServiceNotifier6removeEv)(_IOServiceNotifier *this);
  bool (__cdecl *__ZN18_IOServiceNotifier7disableEv)(_IOServiceNotifier *this);
  void (__cdecl *__ZN18_IOServiceNotifier6enableEb)(_IOServiceNotifier *this, bool was);
  void (__cdecl *__ZN18_IOServiceNotifier4waitEv)(_IOServiceNotifier *this);
};

/* 562 */
struct _IOConfigThread
{
  struct vtable__IOConfigThread *vtable;
  __int64 member1;
};

/* 4196 */
struct vtable__IOConfigThread
{
  __int64 (__fastcall *__ZN15_IOConfigThreadD1Ev)(_IOConfigThread *__hidden this);
  __int64 (__fastcall *__ZN15_IOConfigThreadD0Ev)(_IOConfigThread *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15_IOConfigThread12getMetaClassEv)(_IOConfigThread *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 563 */
struct _IOServiceJob
{
  struct vtable__IOServiceJob *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4192 */
struct vtable__IOServiceJob
{
  __int64 (__fastcall *__ZN13_IOServiceJobD1Ev)(_IOServiceJob *__hidden this);
  __int64 (__fastcall *__ZN13_IOServiceJobD0Ev)(_IOServiceJob *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK13_IOServiceJob12getMetaClassEv)(_IOServiceJob *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 564 */
struct _IOServiceNullNotifier
{
  struct vtable__IOServiceNullNotifier *vtable;
  __int64 member1;
};

/* 4202 */
struct vtable__IOServiceNullNotifier
{
  __int64 (__fastcall *__ZN22_IOServiceNullNotifierD1Ev)(_IOServiceNullNotifier *__hidden this);
  __int64 (__fastcall *__ZN22_IOServiceNullNotifierD0Ev)(_IOServiceNullNotifier *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK22_IOServiceNullNotifier12getMetaClassEv)(_IOServiceNullNotifier *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  __int64 (__fastcall *__ZNK22_IOServiceNullNotifier12taggedRetainEPKv)(_IOServiceNullNotifier *__hidden this, const void *);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK22_IOServiceNullNotifier13taggedReleaseEPKvi)(_IOServiceNullNotifier *this, const void *tag, const int when);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN22_IOServiceNullNotifier4freeEv)(_IOServiceNullNotifier *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN22_IOServiceNullNotifier6removeEv)(_IOServiceNullNotifier *this);
  bool (__cdecl *__ZN22_IOServiceNullNotifier7disableEv)(_IOServiceNullNotifier *this);
  void (__cdecl *__ZN22_IOServiceNullNotifier6enableEb)(_IOServiceNullNotifier *this, bool was);
  void (__cdecl *__ZN22_IOServiceNullNotifier4waitEv)(_IOServiceNullNotifier *this);
};

/* 565 */
struct IOResources
{
  struct vtable_IOResources *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
};

/* 4212 */
struct vtable_IOResources
{
  __int64 (__fastcall *__ZN11IOResourcesD1Ev)(IOResources *__hidden this);
  __int64 (__fastcall *__ZN11IOResourcesD0Ev)(IOResources *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11IOResources12getMetaClassEv)(IOResources *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN11IOResources4initEP12OSDictionary)(IOResources *__hidden this, OSDictionary *);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN11IOResources13setPropertiesEP8OSObject)(IOResources *__hidden this, OSObject *);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN11IOResources18matchPropertyTableEP12OSDictionary)(IOResources *__hidden this, OSDictionary *);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK11IOResources11getWorkLoopEv)(IOResources *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  __int64 (__fastcall *__ZN11IOResources13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOResources *__hidden this, task *, void *, unsigned int, OSDictionary *, IOUserClient **);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
};

/* 566 */
struct IOUserResources
{
  struct vtable_IOUserResources *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
};

/* 4216 */
struct vtable_IOUserResources
{
  __int64 (__fastcall *__ZN15IOUserResourcesD1Ev)(IOUserResources *__hidden this);
  __int64 (__fastcall *__ZN15IOUserResourcesD0Ev)(IOUserResources *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15IOUserResources12getMetaClassEv)(IOUserResources *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN15IOUserResources4initEP12OSDictionary)(IOUserResources *__hidden this, OSDictionary *);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN15IOUserResources18matchPropertyTableEP12OSDictionary)(IOUserResources *__hidden this, OSDictionary *);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK15IOUserResources11getWorkLoopEv)(IOUserResources *__hidden this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  __int64 (__fastcall *__ZN15IOUserResources13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOUserResources *__hidden this, task *, void *, unsigned int, OSDictionary *, IOUserClient **);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
};

/* 568 */
struct IONotifier::MetaClass
{
  struct vtable_IONotifier::MetaClass *vtable;
};

/* 4224 */
struct vtable_IONotifier::MetaClass
{
  __int64 (__fastcall *__ZN10IONotifier9MetaClassD1Ev)(IONotifier::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN10IONotifier9MetaClassD0Ev)(IONotifier::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK10IONotifier9MetaClass5allocEv)(IONotifier::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 569 */
struct IOPMRequest
{
  struct vtable_IOPMRequest *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
};

/* 4226 */
struct vtable_IOPMRequest
{
  __int64 (__fastcall *__ZN11IOPMRequestD1Ev)(IOPMRequest *__hidden this);
  __int64 (__fastcall *__ZN11IOPMRequestD0Ev)(IOPMRequest *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11IOPMRequest12getMetaClassEv)(IOPMRequest *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN9IOCommand4initEv)(IOCommand *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 588 */
struct IOCommand
{
  struct vtable_IOCommand *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4294 */
struct vtable_IOCommand
{
  __int64 (__fastcall *__ZN9IOCommandD1Ev)(IOCommand *__hidden this);
  __int64 (__fastcall *__ZN9IOCommandD0Ev)(IOCommand *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK9IOCommand12getMetaClassEv)(IOCommand *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN9IOCommand4initEv)(IOCommand *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 570 */
struct IOPMRequestQueue
{
  struct vtable_IOPMRequestQueue *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
};

/* 4230 */
struct vtable_IOPMRequestQueue
{
  __int64 (__fastcall *__ZN16IOPMRequestQueueD1Ev)(IOPMRequestQueue *__hidden this);
  __int64 (__fastcall *__ZN16IOPMRequestQueueD0Ev)(IOPMRequestQueue *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK16IOPMRequestQueue12getMetaClassEv)(IOPMRequestQueue *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN16IOPMRequestQueue4freeEv)(IOPMRequestQueue *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN13IOEventSource4initEP8OSObjectPFvS1_zE)(IOEventSource *this, OSObject *owner, void (*action)(OSObject *, ...));
  bool (__cdecl *__ZN16IOPMRequestQueue12checkForWorkEv)(IOPMRequestQueue *this);
  void (__cdecl *__ZN13IOEventSource11setWorkLoopEP10IOWorkLoop)(IOEventSource *this, IOWorkLoop *workLoop);
  void (__cdecl *__ZN13IOEventSource7setNextEPS_)(IOEventSource *this, IOEventSource *next);
  IOEventSource *(__cdecl *__ZNK13IOEventSource7getNextEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource9setActionEPFvP8OSObjectzE)(IOEventSource *this, void (*action)(OSObject *, ...));
  __int64 (__fastcall *__ZNK13IOEventSource9getActionEv)(IOEventSource *__hidden this);
  void (__cdecl *__ZN13IOEventSource6enableEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource7disableEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource9isEnabledEv)(IOEventSource *this);
  IOWorkLoop *(__cdecl *__ZNK13IOEventSource11getWorkLoopEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource8onThreadEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource0Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource1Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource2Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource3Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource4Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource5Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource6Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource7Ev)(IOEventSource *this);
  __int64 (__fastcall *__ZN16IOPMRequestQueue4initEP9IOServicePFbS1_P11IOPMRequestPS_E)(IOPMRequestQueue *__hidden this, IOService *, bool (__cdecl *)(IOService *, IOPMRequest *, IOPMRequestQueue *));
};

/* 571 */
struct IOPMWorkQueue
{
  struct vtable_IOPMWorkQueue *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
};

/* 4234 */
struct vtable_IOPMWorkQueue
{
  __int64 (__fastcall *__ZN13IOPMWorkQueueD1Ev)(IOPMWorkQueue *__hidden this);
  __int64 (__fastcall *__ZN13IOPMWorkQueueD0Ev)(IOPMWorkQueue *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK13IOPMWorkQueue12getMetaClassEv)(IOPMWorkQueue *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN13IOEventSource4freeEv)(IOEventSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN13IOEventSource4initEP8OSObjectPFvS1_zE)(IOEventSource *this, OSObject *owner, void (*action)(OSObject *, ...));
  bool (__cdecl *__ZN13IOPMWorkQueue12checkForWorkEv)(IOPMWorkQueue *this);
  void (__cdecl *__ZN13IOEventSource11setWorkLoopEP10IOWorkLoop)(IOEventSource *this, IOWorkLoop *workLoop);
  void (__cdecl *__ZN13IOEventSource7setNextEPS_)(IOEventSource *this, IOEventSource *next);
  IOEventSource *(__cdecl *__ZNK13IOEventSource7getNextEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource9setActionEPFvP8OSObjectzE)(IOEventSource *this, void (*action)(OSObject *, ...));
  __int64 (__fastcall *__ZNK13IOEventSource9getActionEv)(IOEventSource *__hidden this);
  void (__cdecl *__ZN13IOEventSource6enableEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource7disableEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource9isEnabledEv)(IOEventSource *this);
  IOWorkLoop *(__cdecl *__ZNK13IOEventSource11getWorkLoopEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource8onThreadEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource0Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource1Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource2Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource3Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource4Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource5Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource6Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource7Ev)(IOEventSource *this);
  __int64 (__fastcall *__ZN13IOPMWorkQueue4initEP9IOServicePFbS1_P11IOPMRequestPS_ES6_)(IOPMWorkQueue *__hidden this, IOService *, bool (__cdecl *)(IOService *, IOPMRequest *, IOPMWorkQueue *), bool (__cdecl *)(IOService *, IOPMRequest *, IOPMWorkQueue *));
};

/* 572 */
struct IOPMCompletionQueue
{
  struct vtable_IOPMCompletionQueue *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
};

/* 4238 */
struct vtable_IOPMCompletionQueue
{
  __int64 (__fastcall *__ZN19IOPMCompletionQueueD1Ev)(IOPMCompletionQueue *__hidden this);
  __int64 (__fastcall *__ZN19IOPMCompletionQueueD0Ev)(IOPMCompletionQueue *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK19IOPMCompletionQueue12getMetaClassEv)(IOPMCompletionQueue *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN13IOEventSource4freeEv)(IOEventSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN13IOEventSource4initEP8OSObjectPFvS1_zE)(IOEventSource *this, OSObject *owner, void (*action)(OSObject *, ...));
  bool (__cdecl *__ZN19IOPMCompletionQueue12checkForWorkEv)(IOPMCompletionQueue *this);
  void (__cdecl *__ZN13IOEventSource11setWorkLoopEP10IOWorkLoop)(IOEventSource *this, IOWorkLoop *workLoop);
  void (__cdecl *__ZN13IOEventSource7setNextEPS_)(IOEventSource *this, IOEventSource *next);
  IOEventSource *(__cdecl *__ZNK13IOEventSource7getNextEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource9setActionEPFvP8OSObjectzE)(IOEventSource *this, void (*action)(OSObject *, ...));
  __int64 (__fastcall *__ZNK13IOEventSource9getActionEv)(IOEventSource *__hidden this);
  void (__cdecl *__ZN13IOEventSource6enableEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource7disableEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource9isEnabledEv)(IOEventSource *this);
  IOWorkLoop *(__cdecl *__ZNK13IOEventSource11getWorkLoopEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource8onThreadEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource0Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource1Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource2Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource3Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource4Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource5Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource6Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource7Ev)(IOEventSource *this);
  __int64 (__fastcall *__ZN19IOPMCompletionQueue4initEP9IOServicePFbS1_P11IOPMRequestPS_E)(IOPMCompletionQueue *__hidden this, IOService *, bool (__cdecl *)(IOService *, IOPMRequest *, IOPMCompletionQueue *));
};

/* 573 */
struct IOServicePM
{
  struct vtable_IOServicePM *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
  __int64 member28;
  __int64 member29;
  __int64 member30;
  __int64 member31;
  __int64 member32;
  __int64 member33;
  __int64 member34;
  __int64 member35;
  __int64 member36;
  __int64 member37;
  __int64 member38;
  __int64 member39;
  __int64 member40;
  __int64 member41;
  __int64 member42;
  __int64 member43;
  __int64 member44;
  __int64 member45;
  __int64 member46;
  __int64 member47;
  __int64 member48;
  __int64 member49;
  __int64 member50;
  __int64 member51;
  __int64 member52;
  __int64 member53;
  __int64 member54;
  __int64 member55;
  __int64 member56;
  __int64 member57;
  __int64 member58;
  __int64 member59;
  __int64 member60;
  __int64 member61;
  __int64 member62;
  __int64 member63;
  __int64 member64;
  __int64 member65;
  __int64 member66;
  __int64 member67;
  __int64 member68;
  __int64 member69;
  __int64 member70;
  __int64 member71;
  __int64 member72;
  __int64 member73;
  __int64 member74;
  __int64 member75;
  __int64 member76;
  __int64 member77;
  __int64 member78;
  __int64 member79;
  __int64 member80;
  __int64 member81;
};

/* 4242 */
struct vtable_IOServicePM
{
  __int64 (__fastcall *__ZN11IOServicePMD1Ev)(IOServicePM *__hidden this);
  __int64 (__fastcall *__ZN11IOServicePMD0Ev)(IOServicePM *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK11IOServicePM9serializeEP11OSSerialize)(IOServicePM *this, OSSerialize *s);
  const OSMetaClass *(__cdecl *__ZNK11IOServicePM12getMetaClassEv)(IOServicePM *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 574 */
struct IOPMinformee
{
  struct vtable_IOPMinformee *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
};

/* 4246 */
struct vtable_IOPMinformee
{
  __int64 (__fastcall *__ZN12IOPMinformeeD1Ev)(IOPMinformee *__hidden this);
  __int64 (__fastcall *__ZN12IOPMinformeeD0Ev)(IOPMinformee *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK12IOPMinformee12getMetaClassEv)(IOPMinformee *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN12IOPMinformee4freeEv)(IOPMinformee *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 575 */
struct IOPMinformeeList
{
  struct vtable_IOPMinformeeList *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4250 */
struct vtable_IOPMinformeeList
{
  __int64 (__fastcall *__ZN16IOPMinformeeListD1Ev)(IOPMinformeeList *__hidden this);
  __int64 (__fastcall *__ZN16IOPMinformeeListD0Ev)(IOPMinformeeList *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK16IOPMinformeeList12getMetaClassEv)(IOPMinformeeList *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN16IOPMinformeeList4freeEv)(IOPMinformeeList *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 576 */
struct IOPMPowerStateQueue
{
  struct vtable_IOPMPowerStateQueue *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
};

/* 4254 */
struct vtable_IOPMPowerStateQueue
{
  __int64 (__fastcall *__ZN19IOPMPowerStateQueueD1Ev)(IOPMPowerStateQueue *__hidden this);
  __int64 (__fastcall *__ZN19IOPMPowerStateQueueD0Ev)(IOPMPowerStateQueue *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK19IOPMPowerStateQueue12getMetaClassEv)(IOPMPowerStateQueue *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN13IOEventSource4freeEv)(IOEventSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN19IOPMPowerStateQueue4initEP8OSObjectPFvS1_zE)(IOPMPowerStateQueue *this, OSObject *owner, void (*action)(OSObject *, ...));
  bool (__cdecl *__ZN19IOPMPowerStateQueue12checkForWorkEv)(IOPMPowerStateQueue *this);
  void (__cdecl *__ZN13IOEventSource11setWorkLoopEP10IOWorkLoop)(IOEventSource *this, IOWorkLoop *workLoop);
  void (__cdecl *__ZN13IOEventSource7setNextEPS_)(IOEventSource *this, IOEventSource *next);
  IOEventSource *(__cdecl *__ZNK13IOEventSource7getNextEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource9setActionEPFvP8OSObjectzE)(IOEventSource *this, void (*action)(OSObject *, ...));
  __int64 (__fastcall *__ZNK13IOEventSource9getActionEv)(IOEventSource *__hidden this);
  void (__cdecl *__ZN13IOEventSource6enableEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource7disableEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource9isEnabledEv)(IOEventSource *this);
  IOWorkLoop *(__cdecl *__ZNK13IOEventSource11getWorkLoopEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource8onThreadEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource0Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource1Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource2Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource3Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource4Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource5Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource6Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource7Ev)(IOEventSource *this);
};

/* 577 */
struct IOCatalogue
{
  struct vtable_IOCatalogue *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
};

/* 4258 */
struct vtable_IOCatalogue
{
  __int64 (__fastcall *__ZN11IOCatalogueD1Ev)(IOCatalogue *__hidden this);
  __int64 (__fastcall *__ZN11IOCatalogueD0Ev)(IOCatalogue *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK11IOCatalogue9serializeEP11OSSerialize)(IOCatalogue *this, OSSerialize *s);
  const OSMetaClass *(__cdecl *__ZNK11IOCatalogue12getMetaClassEv)(IOCatalogue *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN11IOCatalogue4freeEv)(IOCatalogue *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 578 */
struct IOPMPowerSource
{
  struct vtable_IOPMPowerSource *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
  __int64 member28;
  __int64 member29;
  __int64 member30;
  __int64 member31;
  __int64 member32;
  __int64 member33;
  __int64 member34;
  __int64 member35;
  __int64 member36;
  __int64 member37;
  __int64 member38;
};

/* 4262 */
struct vtable_IOPMPowerSource
{
  __int64 (__fastcall *__ZN15IOPMPowerSourceD1Ev)(IOPMPowerSource *__hidden this);
  __int64 (__fastcall *__ZN15IOPMPowerSourceD0Ev)(IOPMPowerSource *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15IOPMPowerSource12getMetaClassEv)(IOPMPowerSource *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN15IOPMPowerSource4initEv)(IOPMPowerSource *this);
  void (__cdecl *__ZN15IOPMPowerSource4freeEv)(IOPMPowerSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  void (__cdecl *__ZN15IOPMPowerSource12updateStatusEv)(IOPMPowerSource *this);
};

/* 579 */
struct IOPMPowerSourceList
{
  struct vtable_IOPMPowerSourceList *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4266 */
struct vtable_IOPMPowerSourceList
{
  __int64 (__fastcall *__ZN19IOPMPowerSourceListD1Ev)(IOPMPowerSourceList *__hidden this);
  __int64 (__fastcall *__ZN19IOPMPowerSourceListD0Ev)(IOPMPowerSourceList *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK19IOPMPowerSourceList12getMetaClassEv)(IOPMPowerSourceList *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN19IOPMPowerSourceList4freeEv)(IOPMPowerSourceList *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 580 */
struct IOPolledInterface
{
  struct vtable_IOPolledInterface *vtable;
  __int64 member1;
  __int64 member2;
};

/* 4270 */
struct vtable_IOPolledInterface
{
  __int64 (__fastcall *__ZN17IOPolledInterfaceD1Ev)(IOPolledInterface *__hidden this);
  __int64 (__fastcall *__ZN17IOPolledInterfaceD0Ev)(IOPolledInterface *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK17IOPolledInterface12getMetaClassEv)(IOPolledInterface *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__fastcall __noreturn *___cxa_pure_virtual)();
  void (__fastcall __noreturn *___cxa_pure_virtual36)();
  void (__fastcall __noreturn *___cxa_pure_virtual37)();
  void (__fastcall __noreturn *___cxa_pure_virtual38)();
  void (__fastcall __noreturn *___cxa_pure_virtual39)();
  IOReturn (__cdecl *__ZN17IOPolledInterface16setEncryptionKeyEPKhm)(IOPolledInterface *this, const unsigned __int8 *key, __darwin_size_t keySize);
  void (__cdecl *__ZN17IOPolledInterface27_RESERVEDIOPolledInterface1Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface27_RESERVEDIOPolledInterface2Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface27_RESERVEDIOPolledInterface3Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface27_RESERVEDIOPolledInterface4Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface27_RESERVEDIOPolledInterface5Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface27_RESERVEDIOPolledInterface6Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface27_RESERVEDIOPolledInterface7Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface27_RESERVEDIOPolledInterface8Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface27_RESERVEDIOPolledInterface9Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface28_RESERVEDIOPolledInterface10Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface28_RESERVEDIOPolledInterface11Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface28_RESERVEDIOPolledInterface12Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface28_RESERVEDIOPolledInterface13Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface28_RESERVEDIOPolledInterface14Ev)(IOPolledInterface *this);
  void (__cdecl *__ZN17IOPolledInterface28_RESERVEDIOPolledInterface15Ev)(IOPolledInterface *this);
};

/* 581 */
struct IOPolledInterface::MetaClass
{
  struct vtable_IOPolledInterface::MetaClass *vtable;
};

/* 4272 */
struct vtable_IOPolledInterface::MetaClass
{
  __int64 (__fastcall *__ZN17IOPolledInterface9MetaClassD1Ev)(IOPolledInterface::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN17IOPolledInterface9MetaClassD0Ev)(IOPolledInterface::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK17IOPolledInterface9MetaClass5allocEv)(IOPolledInterface::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 582 */
struct IOPolledFilePollers
{
  struct vtable_IOPolledFilePollers *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
};

/* 4274 */
struct vtable_IOPolledFilePollers
{
  __int64 (__fastcall *__ZN19IOPolledFilePollersD1Ev)(IOPolledFilePollers *__hidden this);
  __int64 (__fastcall *__ZN19IOPolledFilePollersD0Ev)(IOPolledFilePollers *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK19IOPolledFilePollers12getMetaClassEv)(IOPolledFilePollers *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 585 */
struct IOEventSource::MetaClass
{
  struct vtable_IOEventSource::MetaClass *vtable;
};

/* 4284 */
struct vtable_IOEventSource::MetaClass
{
  __int64 (__fastcall *__ZN13IOEventSource9MetaClassD1Ev)(IOEventSource::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN13IOEventSource9MetaClassD0Ev)(IOEventSource::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK13IOEventSource9MetaClass5allocEv)(IOEventSource::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 586 */
struct IOInterruptEventSource
{
  struct vtable_IOInterruptEventSource *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
};

/* 4286 */
struct vtable_IOInterruptEventSource
{
  __int64 (__fastcall *__ZN22IOInterruptEventSourceD1Ev)(IOInterruptEventSource *__hidden this);
  __int64 (__fastcall *__ZN22IOInterruptEventSourceD0Ev)(IOInterruptEventSource *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK22IOInterruptEventSource12getMetaClassEv)(IOInterruptEventSource *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN22IOInterruptEventSource4freeEv)(IOInterruptEventSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN13IOEventSource4initEP8OSObjectPFvS1_zE)(IOEventSource *this, OSObject *owner, void (*action)(OSObject *, ...));
  bool (__cdecl *__ZN22IOInterruptEventSource12checkForWorkEv)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource11setWorkLoopEP10IOWorkLoop)(IOInterruptEventSource *this, IOWorkLoop *inWorkLoop);
  void (__cdecl *__ZN13IOEventSource7setNextEPS_)(IOEventSource *this, IOEventSource *next);
  IOEventSource *(__cdecl *__ZNK13IOEventSource7getNextEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource9setActionEPFvP8OSObjectzE)(IOEventSource *this, void (*action)(OSObject *, ...));
  __int64 (__fastcall *__ZNK13IOEventSource9getActionEv)(IOEventSource *__hidden this);
  void (__cdecl *__ZN22IOInterruptEventSource6enableEv)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource7disableEv)(IOInterruptEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource9isEnabledEv)(IOEventSource *this);
  IOWorkLoop *(__cdecl *__ZNK13IOEventSource11getWorkLoopEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource8onThreadEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource0Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource1Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource2Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource3Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource4Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource5Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource6Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource7Ev)(IOEventSource *this);
  bool (__cdecl *__ZN22IOInterruptEventSource4initEP8OSObjectPFvS1_PS_iEP9IOServicei)(IOInterruptEventSource *this, OSObject *owner, void (__cdecl *action)(OSObject *, IOInterruptEventSource *, int), IOService *provider, int intIndex);
  const IOService *(__cdecl *__ZNK22IOInterruptEventSource11getProviderEv)(IOInterruptEventSource *this);
  int (__cdecl *__ZNK22IOInterruptEventSource11getIntIndexEv)(IOInterruptEventSource *this);
  bool (__cdecl *__ZNK22IOInterruptEventSource14getAutoDisableEv)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource17interruptOccurredEPvP9IOServicei)(IOInterruptEventSource *this, void *, IOService *nub, int ind);
  void (__cdecl *__ZN22IOInterruptEventSource23normalInterruptOccurredEPvP9IOServicei)(IOInterruptEventSource *this, void *, IOService *nub, int ind);
  void (__cdecl *__ZN22IOInterruptEventSource24disableInterruptOccurredEPvP9IOServicei)(IOInterruptEventSource *this, void *, IOService *nub, int ind);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource0Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource1Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource2Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource3Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource4Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource5Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource6Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource7Ev)(IOInterruptEventSource *this);
};

/* 587 */
struct IOCommandGate
{
  struct vtable_IOCommandGate *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
};

/* 4290 */
struct vtable_IOCommandGate
{
  __int64 (__fastcall *__ZN13IOCommandGateD1Ev)(IOCommandGate *__hidden this);
  __int64 (__fastcall *__ZN13IOCommandGateD0Ev)(IOCommandGate *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK13IOCommandGate12getMetaClassEv)(IOCommandGate *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN13IOCommandGate4freeEv)(IOCommandGate *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN13IOEventSource4initEP8OSObjectPFvS1_zE)(IOEventSource *this, OSObject *owner, void (*action)(OSObject *, ...));
  bool (__cdecl *__ZN13IOEventSource12checkForWorkEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOCommandGate11setWorkLoopEP10IOWorkLoop)(IOCommandGate *this, IOWorkLoop *inWorkLoop);
  void (__cdecl *__ZN13IOEventSource7setNextEPS_)(IOEventSource *this, IOEventSource *next);
  IOEventSource *(__cdecl *__ZNK13IOEventSource7getNextEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource9setActionEPFvP8OSObjectzE)(IOEventSource *this, void (*action)(OSObject *, ...));
  __int64 (__fastcall *__ZNK13IOEventSource9getActionEv)(IOEventSource *__hidden this);
  void (__cdecl *__ZN13IOCommandGate6enableEv)(IOCommandGate *this);
  void (__cdecl *__ZN13IOCommandGate7disableEv)(IOCommandGate *this);
  bool (__cdecl *__ZNK13IOEventSource9isEnabledEv)(IOEventSource *this);
  IOWorkLoop *(__cdecl *__ZNK13IOEventSource11getWorkLoopEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource8onThreadEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource0Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource1Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource2Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource3Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource4Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource5Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource6Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource7Ev)(IOEventSource *this);
  bool (__cdecl *__ZN13IOCommandGate4initEP8OSObjectPFiS1_PvS2_S2_S2_E)(IOCommandGate *this, OSObject *owner, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *));
  IOReturn (__cdecl *__ZN13IOCommandGate10runCommandEPvS0_S0_S0_)(IOCommandGate *this, void *arg0, void *arg1, void *arg2, void *arg3);
  IOReturn (__cdecl *__ZN13IOCommandGate9runActionEPFiP8OSObjectPvS2_S2_S2_ES2_S2_S2_S2_)(IOCommandGate *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), void *arg0, void *arg1, void *arg2, void *arg3);
  IOReturn (__cdecl *__ZN13IOCommandGate14attemptCommandEPvS0_S0_S0_)(IOCommandGate *this, void *arg0, void *arg1, void *arg2, void *arg3);
  IOReturn (__cdecl *__ZN13IOCommandGate13attemptActionEPFiP8OSObjectPvS2_S2_S2_ES2_S2_S2_S2_)(IOCommandGate *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), void *arg0, void *arg1, void *arg2, void *arg3);
  IOReturn (__cdecl *__ZN13IOCommandGate12commandSleepEPvj)(IOCommandGate *this, void *event, unsigned int interruptible);
  void (__cdecl *__ZN13IOCommandGate13commandWakeupEPvb)(IOCommandGate *this, void *event, bool oneThread);
  IOReturn (__cdecl *__ZN13IOCommandGate12commandSleepEPvyj)(IOCommandGate *this, void *event, UInt64 deadline, unsigned int interruptible);
  void (__cdecl *__ZN13IOCommandGate23_RESERVEDIOCommandGate0Ev)(IOCommandGate *this);
  void (__cdecl *__ZN13IOCommandGate23_RESERVEDIOCommandGate1Ev)(IOCommandGate *this);
  void (__cdecl *__ZN13IOCommandGate23_RESERVEDIOCommandGate2Ev)(IOCommandGate *this);
  void (__cdecl *__ZN13IOCommandGate23_RESERVEDIOCommandGate3Ev)(IOCommandGate *this);
  void (__cdecl *__ZN13IOCommandGate23_RESERVEDIOCommandGate4Ev)(IOCommandGate *this);
  void (__cdecl *__ZN13IOCommandGate23_RESERVEDIOCommandGate5Ev)(IOCommandGate *this);
  void (__cdecl *__ZN13IOCommandGate23_RESERVEDIOCommandGate6Ev)(IOCommandGate *this);
  void (__cdecl *__ZN13IOCommandGate23_RESERVEDIOCommandGate7Ev)(IOCommandGate *this);
};

/* 589 */
struct IOCommandPool
{
  struct vtable_IOCommandPool *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
};

/* 4298 */
struct vtable_IOCommandPool
{
  __int64 (__fastcall *__ZN13IOCommandPoolD1Ev)(IOCommandPool *__hidden this);
  __int64 (__fastcall *__ZN13IOCommandPoolD0Ev)(IOCommandPool *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK13IOCommandPool12getMetaClassEv)(IOCommandPool *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN13IOCommandPool4freeEv)(IOCommandPool *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN13IOCommandPool16initWithWorkLoopEP10IOWorkLoop)(IOCommandPool *this, IOWorkLoop *workLoop);
  bool (__cdecl *__ZN13IOCommandPool4initEP9IOServiceP10IOWorkLoopj)(IOCommandPool *this, IOService *inOwner, IOWorkLoop *inWorkLoop, unsigned int inSize);
  IOCommand *(__cdecl *__ZN13IOCommandPool10getCommandEb)(IOCommandPool *this, bool blockForCommand);
  void (__cdecl *__ZN13IOCommandPool13returnCommandEP9IOCommand)(IOCommandPool *this, IOCommand *command);
  IOReturn (__cdecl *__ZN13IOCommandPool15gatedGetCommandEPP9IOCommandb)(IOCommandPool *this, IOCommand **command, bool blockForCommand);
  IOReturn (__cdecl *__ZN13IOCommandPool18gatedReturnCommandEP9IOCommand)(IOCommandPool *this, IOCommand *command);
  void (__cdecl *__ZN13IOCommandPool23_RESERVEDIOCommandPool0Ev)(IOCommandPool *this);
  void (__cdecl *__ZN13IOCommandPool23_RESERVEDIOCommandPool1Ev)(IOCommandPool *this);
  void (__cdecl *__ZN13IOCommandPool23_RESERVEDIOCommandPool2Ev)(IOCommandPool *this);
  void (__cdecl *__ZN13IOCommandPool23_RESERVEDIOCommandPool3Ev)(IOCommandPool *this);
  void (__cdecl *__ZN13IOCommandPool23_RESERVEDIOCommandPool4Ev)(IOCommandPool *this);
  void (__cdecl *__ZN13IOCommandPool23_RESERVEDIOCommandPool5Ev)(IOCommandPool *this);
  void (__cdecl *__ZN13IOCommandPool23_RESERVEDIOCommandPool6Ev)(IOCommandPool *this);
  void (__cdecl *__ZN13IOCommandPool23_RESERVEDIOCommandPool7Ev)(IOCommandPool *this);
};

/* 590 */
struct IODMAEventSource
{
  struct vtable_IODMAEventSource *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
};

/* 2400 */
typedef UnsignedWide AbsoluteTime;

/* 4302 */
struct vtable_IODMAEventSource
{
  __int64 (__fastcall *__ZN16IODMAEventSourceD1Ev)(IODMAEventSource *__hidden this);
  __int64 (__fastcall *__ZN16IODMAEventSourceD0Ev)(IODMAEventSource *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK16IODMAEventSource12getMetaClassEv)(IODMAEventSource *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN16IODMAEventSource4freeEv)(IODMAEventSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN13IOEventSource4initEP8OSObjectPFvS1_zE)(IOEventSource *this, OSObject *owner, void (*action)(OSObject *, ...));
  bool (__cdecl *__ZN16IODMAEventSource12checkForWorkEv)(IODMAEventSource *this);
  void (__cdecl *__ZN13IOEventSource11setWorkLoopEP10IOWorkLoop)(IOEventSource *this, IOWorkLoop *workLoop);
  void (__cdecl *__ZN13IOEventSource7setNextEPS_)(IOEventSource *this, IOEventSource *next);
  IOEventSource *(__cdecl *__ZNK13IOEventSource7getNextEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource9setActionEPFvP8OSObjectzE)(IOEventSource *this, void (*action)(OSObject *, ...));
  __int64 (__fastcall *__ZNK13IOEventSource9getActionEv)(IOEventSource *__hidden this);
  void (__cdecl *__ZN13IOEventSource6enableEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource7disableEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource9isEnabledEv)(IOEventSource *this);
  IOWorkLoop *(__cdecl *__ZNK13IOEventSource11getWorkLoopEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource8onThreadEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource0Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource1Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource2Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource3Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource4Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource5Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource6Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource7Ev)(IOEventSource *this);
  void (__cdecl *__ZN16IODMAEventSource18completeDMACommandEP12IODMACommand)(IODMAEventSource *this, IODMACommand *dmaCommand);
  void (__cdecl *__ZN16IODMAEventSource16notifyDMACommandEP12IODMACommandiyy)(IODMAEventSource *this, IODMACommand *dmaCommand, kern_return_t status, IOByteCount64 actualByteCount, UInt64 timeStamp);
  IOReturn (__cdecl *__ZN16IODMAEventSource15startDMACommandEP12IODMACommandjyy)(IODMAEventSource *this, IODMACommand *dmaCommand, IOOptionBits direction, IOByteCount64 byteCount, IOByteCount64 byteOffset);
  IOReturn (__cdecl *__ZN16IODMAEventSource14stopDMACommandEby)(IODMAEventSource *this, bool flush, u_int64_t timeout);
  IOReturn (__cdecl *__ZN16IODMAEventSource15queryDMACommandEPP12IODMACommandPyb)(IODMAEventSource *this, IODMACommand **dmaCommand, unsigned __int64 *transferCount, bool waitForIdle);
  IOByteCount (__cdecl *__ZN16IODMAEventSource12getFIFODepthEj)(IODMAEventSource *this, IOOptionBits direction);
  IOReturn (__cdecl *__ZN16IODMAEventSource12setFIFODepthEy)(IODMAEventSource *this, IOByteCount64 depth);
  IOByteCount (__cdecl *__ZN16IODMAEventSource14validFIFODepthEyj)(IODMAEventSource *this, IOByteCount64 depth, IOOptionBits direction);
  IOReturn (__cdecl *__ZN16IODMAEventSource12setFrameSizeEh)(IODMAEventSource *this, unsigned __int8 byteCount);
  IOReturn (__cdecl *__ZN16IODMAEventSource12setDMAConfigEj)(IODMAEventSource *this, unsigned int dmaIndex);
  bool (__cdecl *__ZN16IODMAEventSource14validDMAConfigEj)(IODMAEventSource *this, unsigned int dmaIndex);
  bool (__cdecl *__ZN16IODMAEventSource4initEP8OSObjectP9IOServicePFvS1_PS_P12IODMACommandiyyES8_j)(IODMAEventSource *this, OSObject *owner, IOService *provider, void (__cdecl *completion)(OSObject *, IODMAEventSource *, IODMACommand *, IOReturn, IOByteCount, AbsoluteTime), void (__cdecl *notification)(OSObject *, IODMAEventSource *, IODMACommand *, IOReturn, IOByteCount, AbsoluteTime), unsigned int dmaIndex);
};

/* 594 */
struct IODMACommand
{
  struct vtable_IODMACommand *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
};

/* 4318 */
struct vtable_IODMACommand
{
  __int64 (__fastcall *__ZN12IODMACommandD1Ev)(IODMACommand *__hidden this);
  __int64 (__fastcall *__ZN12IODMACommandD0Ev)(IODMACommand *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK12IODMACommand12getMetaClassEv)(IODMACommand *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN9IOCommand4initEv)(IOCommand *this);
  void (__cdecl *__ZN12IODMACommand4freeEv)(IODMACommand *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  IODMACommand *(__cdecl *__ZN12IODMACommand12cloneCommandEPv)(IODMACommand *this, void *refCon);
  __int64 (__fastcall *__ZN12IODMACommand21initWithSpecificationEPFbPS_NS_9Segment64EPvjEhyNS_14MappingOptionsEyjP8IOMapperS2_)(int, int, __int64, __int64);
  IOReturn (__cdecl *__ZN12IODMACommand19setMemoryDescriptorEPK18IOMemoryDescriptorb)(IODMACommand *this, const IOMemoryDescriptor *mem, bool autoPrepare);
  IOReturn (__cdecl *__ZN12IODMACommand21clearMemoryDescriptorEb)(IODMACommand *this, bool autoComplete);
  const IOMemoryDescriptor *(__cdecl *__ZNK12IODMACommand19getMemoryDescriptorEv)(IODMACommand *this);
  IOReturn (__cdecl *__ZN12IODMACommand7prepareEyybb)(IODMACommand *this, unsigned __int64 offset, unsigned __int64 length, bool flushCache, bool synchronize);
  IOReturn (__cdecl *__ZN12IODMACommand8completeEbb)(IODMACommand *this, bool invalidateCache, bool synchronize);
  IOReturn (__cdecl *__ZN12IODMACommand11synchronizeEj)(IODMACommand *this, UInt32 options);
  IOReturn (__cdecl *__ZN12IODMACommand15genIOVMSegmentsEPyPvPj)(IODMACommand *this, unsigned __int64 *offset, void *segments, unsigned int *numSegments);
  UInt64 (__cdecl *__ZN12IODMACommand8transferEjyPvy)(IODMACommand *this, UInt32 transferOp, unsigned __int64 offset, void *buffer, unsigned __int64 length);
  __int64 (__fastcall *__ZN12IODMACommand24prepareWithSpecificationEPFbPS_NS_9Segment64EPvjEhyNS_14MappingOptionsEyjP8IOMapperyybb)(int, int, __int64, __int64, __int64, char, int, char);
  IOReturn (__cdecl *__ZN12IODMACommand26getPreparedOffsetAndLengthEPyS0_)(IODMACommand *this, unsigned __int64 *offset, unsigned __int64 *length);
  bool (__cdecl *__ZN12IODMACommand14initWithRefConEPv)(IODMACommand *this, void *refCon);
  __int64 (__fastcall *__ZN12IODMACommand21initWithSpecificationEPFbPS_NS_9Segment64EPvjEPKNS_14SegmentOptionsEjP8IOMapperS2_)();
  __int64 (__fastcall *__ZN12IODMACommand24prepareWithSpecificationEPFbPS_NS_9Segment64EPvjEPKNS_14SegmentOptionsEjP8IOMapperyybb)(__int64, char, int, char);
  IOBufferMemoryDescriptor *(__cdecl *__ZN12IODMACommand16createCopyBufferEjy)(IODMACommand *this, IOOptionBits direction, unsigned __int64 length);
  void (__cdecl *__ZN12IODMACommand22_RESERVEDIODMACommand7Ev)(IODMACommand *this);
  void (__cdecl *__ZN12IODMACommand22_RESERVEDIODMACommand8Ev)(IODMACommand *this);
  void (__cdecl *__ZN12IODMACommand22_RESERVEDIODMACommand9Ev)(IODMACommand *this);
  void (__cdecl *__ZN12IODMACommand23_RESERVEDIODMACommand10Ev)(IODMACommand *this);
  void (__cdecl *__ZN12IODMACommand23_RESERVEDIODMACommand11Ev)(IODMACommand *this);
  void (__cdecl *__ZN12IODMACommand23_RESERVEDIODMACommand12Ev)(IODMACommand *this);
  void (__cdecl *__ZN12IODMACommand23_RESERVEDIODMACommand13Ev)(IODMACommand *this);
  void (__cdecl *__ZN12IODMACommand23_RESERVEDIODMACommand14Ev)(IODMACommand *this);
  void (__cdecl *__ZN12IODMACommand23_RESERVEDIODMACommand15Ev)(IODMACommand *this);
};

/* 593 */
struct IOBufferMemoryDescriptor
{
  struct vtable_IOBufferMemoryDescriptor *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
  __int64 member28;
};

/* 4314 */
struct vtable_IOBufferMemoryDescriptor
{
  __int64 (__fastcall *__ZN24IOBufferMemoryDescriptorD1Ev)(IOBufferMemoryDescriptor *__hidden this);
  __int64 (__fastcall *__ZN24IOBufferMemoryDescriptorD0Ev)(IOBufferMemoryDescriptor *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK25IOGeneralMemoryDescriptor9serializeEP11OSSerialize)(IOGeneralMemoryDescriptor *this, OSSerialize *s);
  const OSMetaClass *(__cdecl *__ZNK24IOBufferMemoryDescriptor12getMetaClassEv)(IOBufferMemoryDescriptor *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN24IOBufferMemoryDescriptor8DispatchE5IORPC)(__int64, __int64, __int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor4freeEv)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN25IOGeneralMemoryDescriptor15initWithOptionsEPvjjP4taskjP8IOMapper)(IOGeneralMemoryDescriptor *this, void *buffers, unsigned int count, unsigned int offset, struct task *task, UInt32 options, IOMapper *mapper);
  IOReturn (__cdecl *__ZN25IOGeneralMemoryDescriptor12setPurgeableEjPj)(IOGeneralMemoryDescriptor *this, UInt32 newState, unsigned int *oldState);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor16performOperationEjyy)(IOMemoryDescriptor *this, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  IOReturn (__cdecl *__ZNK25IOGeneralMemoryDescriptor19dmaCommandOperationEjPvj)(IOGeneralMemoryDescriptor *this, IOOptionBits op, void *vData, unsigned int dataSize);
  addr64_t (__cdecl *__ZN25IOGeneralMemoryDescriptor18getPhysicalSegmentEyPyj)(IOGeneralMemoryDescriptor *this, IOByteCount64 offset, unsigned __int64 *length, UInt32 options);
  uint64_t (__cdecl *__ZN25IOGeneralMemoryDescriptor16getPreparationIDEv)(IOGeneralMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor1Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor2Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor3Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor4Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor5Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor6Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor7Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor8Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor9Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor10Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor11Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor12Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor13Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor14Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor15Ev)(IOMemoryDescriptor *this);
  IODirection (__cdecl *__ZNK18IOMemoryDescriptor12getDirectionEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZNK18IOMemoryDescriptor9getLengthEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor6setTagEj)(IOMemoryDescriptor *this, UInt32 tag);
  IOOptionBits (__cdecl *__ZN18IOMemoryDescriptor6getTagEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor9readBytesEyPvy)(IOMemoryDescriptor *this, IOByteCount64 offset, void *bytes, IOByteCount64 withLength);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor10writeBytesEyPKvy)(IOMemoryDescriptor *this, IOByteCount64 offset, const void *bytes, IOByteCount64 withLength);
  IOReturn (__cdecl *__ZN25IOGeneralMemoryDescriptor7prepareEj)(IOGeneralMemoryDescriptor *this, IOOptionBits forDirection);
  IOReturn (__cdecl *__ZN25IOGeneralMemoryDescriptor8completeEj)(IOGeneralMemoryDescriptor *this, IOOptionBits forDirection);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor3mapEj)(IOMemoryDescriptor *this, UInt32 options);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor10setMappingEP4taskyj)(IOMemoryDescriptor *this, struct task *task, mach_vm_address_t mapAddress, UInt32 options);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor8redirectEP4taskb)(IOMemoryDescriptor *this, struct task *safeTask, bool redirect);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor11makeMappingEPS_P4taskyjyy)(IOMemoryDescriptor *this, IOMemoryDescriptor *owner, struct task *intoTask, mach_vm_address_t atAddress, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  void (__cdecl *__ZN18IOMemoryDescriptor10addMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  void (__cdecl *__ZN18IOMemoryDescriptor13removeMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  __int64 (__fastcall *__ZN25IOGeneralMemoryDescriptor5doMapEP7_vm_mapPyjyy)();
  __int64 (__fastcall *__ZN25IOGeneralMemoryDescriptor7doUnmapEP7_vm_mapyy)();
  bool (__cdecl *__ZN24IOBufferMemoryDescriptor20initWithPhysicalMaskEP4taskjyyy)(IOBufferMemoryDescriptor *this, struct task *inTask, UInt32 options, uint64_t capacity, uint64_t alignment, uint64_t physicalMask);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor0Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor1Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor2Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor3Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor4Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor5Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor6Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor7Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor8Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor9Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor10Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor11Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor12Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor13Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor14Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor15Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor9setLengthEm)(IOBufferMemoryDescriptor *this, uintptr_t length);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor12setDirectionEj)(IOBufferMemoryDescriptor *this, IOOptionBits direction);
  vm_size_t (__cdecl *__ZNK24IOBufferMemoryDescriptor11getCapacityEv)(IOBufferMemoryDescriptor *this);
  void *(__cdecl *__ZN24IOBufferMemoryDescriptor14getBytesNoCopyEv)(IOBufferMemoryDescriptor *this);
  void *(__cdecl *__ZN24IOBufferMemoryDescriptor14getBytesNoCopyEmm)(IOBufferMemoryDescriptor *this, uintptr_t start, uintptr_t withLength);
  bool (__cdecl *__ZN24IOBufferMemoryDescriptor11appendBytesEPKvm)(IOBufferMemoryDescriptor *this, const void *bytes, uintptr_t withLength);
};

/* 604 */
struct IOGeneralMemoryDescriptor
{
  struct vtable_IOGeneralMemoryDescriptor *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
};

/* 4348 */
struct vtable_IOGeneralMemoryDescriptor
{
  __int64 (__fastcall *__ZN25IOGeneralMemoryDescriptorD1Ev)(IOGeneralMemoryDescriptor *__hidden this);
  __int64 (__fastcall *__ZN25IOGeneralMemoryDescriptorD0Ev)(IOGeneralMemoryDescriptor *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK25IOGeneralMemoryDescriptor9serializeEP11OSSerialize)(IOGeneralMemoryDescriptor *this, OSSerialize *s);
  const OSMetaClass *(__cdecl *__ZNK25IOGeneralMemoryDescriptor12getMetaClassEv)(IOGeneralMemoryDescriptor *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN25IOGeneralMemoryDescriptor4freeEv)(IOGeneralMemoryDescriptor *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN25IOGeneralMemoryDescriptor15initWithOptionsEPvjjP4taskjP8IOMapper)(IOGeneralMemoryDescriptor *this, void *buffers, unsigned int count, unsigned int offset, struct task *task, UInt32 options, IOMapper *mapper);
  IOReturn (__cdecl *__ZN25IOGeneralMemoryDescriptor12setPurgeableEjPj)(IOGeneralMemoryDescriptor *this, UInt32 newState, unsigned int *oldState);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor16performOperationEjyy)(IOMemoryDescriptor *this, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  IOReturn (__cdecl *__ZNK25IOGeneralMemoryDescriptor19dmaCommandOperationEjPvj)(IOGeneralMemoryDescriptor *this, IOOptionBits op, void *vData, unsigned int dataSize);
  addr64_t (__cdecl *__ZN25IOGeneralMemoryDescriptor18getPhysicalSegmentEyPyj)(IOGeneralMemoryDescriptor *this, IOByteCount64 offset, unsigned __int64 *length, UInt32 options);
  uint64_t (__cdecl *__ZN25IOGeneralMemoryDescriptor16getPreparationIDEv)(IOGeneralMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor1Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor2Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor3Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor4Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor5Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor6Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor7Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor8Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor9Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor10Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor11Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor12Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor13Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor14Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor15Ev)(IOMemoryDescriptor *this);
  IODirection (__cdecl *__ZNK18IOMemoryDescriptor12getDirectionEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZNK18IOMemoryDescriptor9getLengthEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor6setTagEj)(IOMemoryDescriptor *this, UInt32 tag);
  IOOptionBits (__cdecl *__ZN18IOMemoryDescriptor6getTagEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor9readBytesEyPvy)(IOMemoryDescriptor *this, IOByteCount64 offset, void *bytes, IOByteCount64 withLength);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor10writeBytesEyPKvy)(IOMemoryDescriptor *this, IOByteCount64 offset, const void *bytes, IOByteCount64 withLength);
  IOReturn (__cdecl *__ZN25IOGeneralMemoryDescriptor7prepareEj)(IOGeneralMemoryDescriptor *this, IOOptionBits forDirection);
  IOReturn (__cdecl *__ZN25IOGeneralMemoryDescriptor8completeEj)(IOGeneralMemoryDescriptor *this, IOOptionBits forDirection);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor3mapEj)(IOMemoryDescriptor *this, UInt32 options);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor10setMappingEP4taskyj)(IOMemoryDescriptor *this, struct task *task, mach_vm_address_t mapAddress, UInt32 options);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor8redirectEP4taskb)(IOMemoryDescriptor *this, struct task *safeTask, bool redirect);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor11makeMappingEPS_P4taskyjyy)(IOMemoryDescriptor *this, IOMemoryDescriptor *owner, struct task *intoTask, mach_vm_address_t atAddress, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  void (__cdecl *__ZN18IOMemoryDescriptor10addMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  void (__cdecl *__ZN18IOMemoryDescriptor13removeMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  __int64 (__fastcall *__ZN25IOGeneralMemoryDescriptor5doMapEP7_vm_mapPyjyy)();
  __int64 (__fastcall *__ZN25IOGeneralMemoryDescriptor7doUnmapEP7_vm_mapyy)();
};

/* 591 */
struct IOFilterInterruptEventSource
{
  struct vtable_IOFilterInterruptEventSource *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
};

/* 4306 */
struct vtable_IOFilterInterruptEventSource
{
  __int64 (__fastcall *__ZN28IOFilterInterruptEventSourceD1Ev)(IOFilterInterruptEventSource *__hidden this);
  __int64 (__fastcall *__ZN28IOFilterInterruptEventSourceD0Ev)(IOFilterInterruptEventSource *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK28IOFilterInterruptEventSource12getMetaClassEv)(IOFilterInterruptEventSource *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN28IOFilterInterruptEventSource4freeEv)(IOFilterInterruptEventSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN13IOEventSource4initEP8OSObjectPFvS1_zE)(IOEventSource *this, OSObject *owner, void (*action)(OSObject *, ...));
  bool (__cdecl *__ZN22IOInterruptEventSource12checkForWorkEv)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource11setWorkLoopEP10IOWorkLoop)(IOInterruptEventSource *this, IOWorkLoop *inWorkLoop);
  void (__cdecl *__ZN13IOEventSource7setNextEPS_)(IOEventSource *this, IOEventSource *next);
  IOEventSource *(__cdecl *__ZNK13IOEventSource7getNextEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource9setActionEPFvP8OSObjectzE)(IOEventSource *this, void (*action)(OSObject *, ...));
  __int64 (__fastcall *__ZNK13IOEventSource9getActionEv)(IOEventSource *__hidden this);
  void (__cdecl *__ZN22IOInterruptEventSource6enableEv)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource7disableEv)(IOInterruptEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource9isEnabledEv)(IOEventSource *this);
  IOWorkLoop *(__cdecl *__ZNK13IOEventSource11getWorkLoopEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource8onThreadEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource0Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource1Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource2Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource3Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource4Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource5Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource6Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource7Ev)(IOEventSource *this);
  bool (__cdecl *__ZN28IOFilterInterruptEventSource4initEP8OSObjectPFvS1_PS_iEP9IOServicei)(IOFilterInterruptEventSource *this, OSObject *inOwner, void (__cdecl *inAction)(OSObject *, IOInterruptEventSource *, int), IOService *inProvider, int inIntIndex);
  const IOService *(__cdecl *__ZNK22IOInterruptEventSource11getProviderEv)(IOInterruptEventSource *this);
  int (__cdecl *__ZNK22IOInterruptEventSource11getIntIndexEv)(IOInterruptEventSource *this);
  bool (__cdecl *__ZNK22IOInterruptEventSource14getAutoDisableEv)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource17interruptOccurredEPvP9IOServicei)(IOInterruptEventSource *this, void *, IOService *nub, int ind);
  void (__cdecl *__ZN28IOFilterInterruptEventSource23normalInterruptOccurredEPvP9IOServicei)(IOFilterInterruptEventSource *this, void *self, IOService *prov, int ind);
  void (__cdecl *__ZN28IOFilterInterruptEventSource24disableInterruptOccurredEPvP9IOServicei)(IOFilterInterruptEventSource *this, void *self, IOService *prov, int ind);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource0Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource1Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource2Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource3Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource4Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource5Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource6Ev)(IOInterruptEventSource *this);
  void (__cdecl *__ZN22IOInterruptEventSource32_RESERVEDIOInterruptEventSource7Ev)(IOInterruptEventSource *this);
  bool (__cdecl *__ZN28IOFilterInterruptEventSource4initEP8OSObjectPFvS1_P22IOInterruptEventSourceiEPFbS1_PS_EP9IOServicei)(IOFilterInterruptEventSource *this, OSObject *owner, void (__cdecl *action)(OSObject *, IOInterruptEventSource *, int), bool (__cdecl *filter)(OSObject *, IOFilterInterruptEventSource *), IOService *provider, int intIndex);
  void (__cdecl *__ZN28IOFilterInterruptEventSource15signalInterruptEv)(IOFilterInterruptEventSource *this);
  __int64 (__fastcall *__ZNK28IOFilterInterruptEventSource15getFilterActionEv)(IOFilterInterruptEventSource *__hidden this);
  void (__cdecl *__ZN28IOFilterInterruptEventSource38_RESERVEDIOFilterInterruptEventSource0Ev)(IOFilterInterruptEventSource *this);
  void (__cdecl *__ZN28IOFilterInterruptEventSource38_RESERVEDIOFilterInterruptEventSource1Ev)(IOFilterInterruptEventSource *this);
  void (__cdecl *__ZN28IOFilterInterruptEventSource38_RESERVEDIOFilterInterruptEventSource2Ev)(IOFilterInterruptEventSource *this);
  void (__cdecl *__ZN28IOFilterInterruptEventSource38_RESERVEDIOFilterInterruptEventSource3Ev)(IOFilterInterruptEventSource *this);
  void (__cdecl *__ZN28IOFilterInterruptEventSource38_RESERVEDIOFilterInterruptEventSource4Ev)(IOFilterInterruptEventSource *this);
  void (__cdecl *__ZN28IOFilterInterruptEventSource38_RESERVEDIOFilterInterruptEventSource5Ev)(IOFilterInterruptEventSource *this);
  void (__cdecl *__ZN28IOFilterInterruptEventSource38_RESERVEDIOFilterInterruptEventSource6Ev)(IOFilterInterruptEventSource *this);
  void (__cdecl *__ZN28IOFilterInterruptEventSource38_RESERVEDIOFilterInterruptEventSource7Ev)(IOFilterInterruptEventSource *this);
};

/* 592 */
struct IOTimerEventSource
{
  struct vtable_IOTimerEventSource *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
};

/* 4310 */
struct vtable_IOTimerEventSource
{
  __int64 (__fastcall *__ZN18IOTimerEventSourceD1Ev)(IOTimerEventSource *__hidden this);
  __int64 (__fastcall *__ZN18IOTimerEventSourceD0Ev)(IOTimerEventSource *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK18IOTimerEventSource12getMetaClassEv)(IOTimerEventSource *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN18IOTimerEventSource4freeEv)(IOTimerEventSource *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN13IOEventSource4initEP8OSObjectPFvS1_zE)(IOEventSource *this, OSObject *owner, void (*action)(OSObject *, ...));
  bool (__cdecl *__ZN18IOTimerEventSource12checkForWorkEv)(IOTimerEventSource *this);
  void (__cdecl *__ZN18IOTimerEventSource11setWorkLoopEP10IOWorkLoop)(IOTimerEventSource *this, IOWorkLoop *workLoop);
  void (__cdecl *__ZN13IOEventSource7setNextEPS_)(IOEventSource *this, IOEventSource *next);
  IOEventSource *(__cdecl *__ZNK13IOEventSource7getNextEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource9setActionEPFvP8OSObjectzE)(IOEventSource *this, void (*action)(OSObject *, ...));
  __int64 (__fastcall *__ZNK13IOEventSource9getActionEv)(IOEventSource *__hidden this);
  void (__cdecl *__ZN18IOTimerEventSource6enableEv)(IOTimerEventSource *this);
  void (__cdecl *__ZN18IOTimerEventSource7disableEv)(IOTimerEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource9isEnabledEv)(IOEventSource *this);
  IOWorkLoop *(__cdecl *__ZNK13IOEventSource11getWorkLoopEv)(IOEventSource *this);
  bool (__cdecl *__ZNK13IOEventSource8onThreadEv)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource0Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource1Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource2Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource3Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource4Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource5Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource6Ev)(IOEventSource *this);
  void (__cdecl *__ZN13IOEventSource23_RESERVEDIOEventSource7Ev)(IOEventSource *this);
  void (__cdecl *__ZN18IOTimerEventSource14setTimeoutFuncEv)(IOTimerEventSource *this);
  bool (__cdecl *__ZN18IOTimerEventSource4initEP8OSObjectPFvS1_PS_E)(IOTimerEventSource *this, OSObject *owner, void (__cdecl *action)(OSObject *, IOTimerEventSource *));
  IOReturn (__cdecl *__ZN18IOTimerEventSource15setTimeoutTicksEj)(IOTimerEventSource *this, unsigned int ticks);
  IOReturn (__cdecl *__ZN18IOTimerEventSource12setTimeoutMSEj)(IOTimerEventSource *this, unsigned int ms);
  IOReturn (__cdecl *__ZN18IOTimerEventSource12setTimeoutUSEj)(IOTimerEventSource *this, unsigned int us);
  IOReturn (__cdecl *__ZN18IOTimerEventSource10setTimeoutEjj)(IOTimerEventSource *this, unsigned int interval, unsigned int scale_factor);
  IOReturn (__cdecl *__ZN18IOTimerEventSource10setTimeoutEy)(IOTimerEventSource *this, UInt64 interval);
  IOReturn (__cdecl *__ZN18IOTimerEventSource15wakeAtTimeTicksEj)(IOTimerEventSource *this, unsigned int ticks);
  IOReturn (__cdecl *__ZN18IOTimerEventSource12wakeAtTimeMSEj)(IOTimerEventSource *this, unsigned int ms);
  IOReturn (__cdecl *__ZN18IOTimerEventSource12wakeAtTimeUSEj)(IOTimerEventSource *this, unsigned int us);
  IOReturn (__cdecl *__ZN18IOTimerEventSource10wakeAtTimeEjj)(IOTimerEventSource *this, unsigned int abstime, unsigned int scale_factor);
  IOReturn (__cdecl *__ZN18IOTimerEventSource10wakeAtTimeEy)(IOTimerEventSource *this, UInt64 abstime);
  void (__cdecl *__ZN18IOTimerEventSource13cancelTimeoutEv)(IOTimerEventSource *this);
  bool (__cdecl *__ZN18IOTimerEventSource4initEjP8OSObjectPFvS1_PS_E)(IOTimerEventSource *this, u_int32_t options, OSObject *inOwner, void (__cdecl *inAction)(OSObject *, IOTimerEventSource *));
  IOReturn (__cdecl *__ZN18IOTimerEventSource10setTimeoutEjyy)(IOTimerEventSource *this, u_int32_t options, UInt64 interval, UInt64 leeway);
  IOReturn (__cdecl *__ZN18IOTimerEventSource10wakeAtTimeEjyy)(IOTimerEventSource *this, u_int32_t options, UInt64 abstime, UInt64 leeway);
  void (__cdecl *__ZN18IOTimerEventSource28_RESERVEDIOTimerEventSource3Ev)(IOTimerEventSource *this);
  void (__cdecl *__ZN18IOTimerEventSource28_RESERVEDIOTimerEventSource4Ev)(IOTimerEventSource *this);
  void (__cdecl *__ZN18IOTimerEventSource28_RESERVEDIOTimerEventSource5Ev)(IOTimerEventSource *this);
  void (__cdecl *__ZN18IOTimerEventSource28_RESERVEDIOTimerEventSource6Ev)(IOTimerEventSource *this);
  void (__cdecl *__ZN18IOTimerEventSource28_RESERVEDIOTimerEventSource7Ev)(IOTimerEventSource *this);
};

/* 596 */
struct IOInterleavedMemoryDescriptor
{
  struct vtable_IOInterleavedMemoryDescriptor *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
};

/* 4322 */
struct vtable_IOInterleavedMemoryDescriptor
{
  __int64 (__fastcall *__ZN29IOInterleavedMemoryDescriptorD1Ev)(IOInterleavedMemoryDescriptor *__hidden this);
  __int64 (__fastcall *__ZN29IOInterleavedMemoryDescriptorD0Ev)(IOInterleavedMemoryDescriptor *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK29IOInterleavedMemoryDescriptor12getMetaClassEv)(IOInterleavedMemoryDescriptor *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN29IOInterleavedMemoryDescriptor4freeEv)(IOInterleavedMemoryDescriptor *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN18IOMemoryDescriptor15initWithOptionsEPvjjP4taskjP8IOMapper)(IOMemoryDescriptor *this, void *buffers, unsigned int count, unsigned int offset, struct task *task, UInt32 options, IOMapper *mapper);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor12setPurgeableEjPj)(IOMemoryDescriptor *this, UInt32 newState, unsigned int *oldState);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor16performOperationEjyy)(IOMemoryDescriptor *this, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  IOReturn (__cdecl *__ZNK18IOMemoryDescriptor19dmaCommandOperationEjPvj)(IOMemoryDescriptor *this, IOOptionBits op, void *vData, unsigned int dataSize);
  addr64_t (__cdecl *__ZN29IOInterleavedMemoryDescriptor18getPhysicalSegmentEyPyj)(IOInterleavedMemoryDescriptor *this, IOByteCount64 offset, unsigned __int64 *length, UInt32 options);
  uint64_t (__cdecl *__ZN18IOMemoryDescriptor16getPreparationIDEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor1Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor2Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor3Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor4Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor5Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor6Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor7Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor8Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor9Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor10Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor11Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor12Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor13Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor14Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor15Ev)(IOMemoryDescriptor *this);
  IODirection (__cdecl *__ZNK18IOMemoryDescriptor12getDirectionEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZNK18IOMemoryDescriptor9getLengthEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor6setTagEj)(IOMemoryDescriptor *this, UInt32 tag);
  IOOptionBits (__cdecl *__ZN18IOMemoryDescriptor6getTagEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor9readBytesEyPvy)(IOMemoryDescriptor *this, IOByteCount64 offset, void *bytes, IOByteCount64 withLength);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor10writeBytesEyPKvy)(IOMemoryDescriptor *this, IOByteCount64 offset, const void *bytes, IOByteCount64 withLength);
  IOReturn (__cdecl *__ZN29IOInterleavedMemoryDescriptor7prepareEj)(IOInterleavedMemoryDescriptor *this, IOOptionBits forDirection);
  IOReturn (__cdecl *__ZN29IOInterleavedMemoryDescriptor8completeEj)(IOInterleavedMemoryDescriptor *this, IOOptionBits forDirection);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor3mapEj)(IOMemoryDescriptor *this, UInt32 options);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor10setMappingEP4taskyj)(IOMemoryDescriptor *this, struct task *task, mach_vm_address_t mapAddress, UInt32 options);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor8redirectEP4taskb)(IOMemoryDescriptor *this, struct task *safeTask, bool redirect);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor11makeMappingEPS_P4taskyjyy)(IOMemoryDescriptor *this, IOMemoryDescriptor *owner, struct task *intoTask, mach_vm_address_t atAddress, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  void (__cdecl *__ZN18IOMemoryDescriptor10addMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  void (__cdecl *__ZN18IOMemoryDescriptor13removeMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor5doMapEP7_vm_mapPyjyy)();
  __int64 (__fastcall *__ZN18IOMemoryDescriptor7doUnmapEP7_vm_mapyy)();
  bool (__cdecl *__ZN29IOInterleavedMemoryDescriptor16initWithCapacityEyj)(IOInterleavedMemoryDescriptor *this, IOByteCount64 capacity, IOOptionBits direction);
  void (__cdecl *__ZN29IOInterleavedMemoryDescriptor22clearMemoryDescriptorsEj)(IOInterleavedMemoryDescriptor *this, IOOptionBits direction);
  bool (__cdecl *__ZN29IOInterleavedMemoryDescriptor19setMemoryDescriptorEP18IOMemoryDescriptoryy)(IOInterleavedMemoryDescriptor *this, IOMemoryDescriptor *descriptor, IOByteCount64 offset, IOByteCount64 length);
};

/* 598 */
struct IOMapper::MetaClass
{
  struct vtable_IOMapper::MetaClass *vtable;
};

/* 4328 */
struct vtable_IOMapper::MetaClass
{
  __int64 (__fastcall *__ZN8IOMapper9MetaClassD1Ev)(IOMapper::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN8IOMapper9MetaClassD0Ev)(IOMapper::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK8IOMapper9MetaClass5allocEv)(IOMapper::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 599 */
struct IOMemoryCursor
{
  struct vtable_IOMemoryCursor *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 4330 */
struct vtable_IOMemoryCursor
{
  __int64 (__fastcall *__ZN14IOMemoryCursorD1Ev)(IOMemoryCursor *__hidden this);
  __int64 (__fastcall *__ZN14IOMemoryCursorD0Ev)(IOMemoryCursor *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK14IOMemoryCursor12getMetaClassEv)(IOMemoryCursor *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  __int64 (__fastcall *__ZN14IOMemoryCursor21initWithSpecificationEPFvNS_15PhysicalSegmentEPvjEyyy)();
  UInt32 (__cdecl *__ZN14IOMemoryCursor19genPhysicalSegmentsEP18IOMemoryDescriptoryPvjjPy)(IOMemoryCursor *this, IOMemoryDescriptor *descriptor, IOByteCount64 fromPosition, void *segments, unsigned int maxSegments, unsigned int maxTransferSize, unsigned __int64 *transferSize);
};

/* 600 */
struct IONaturalMemoryCursor
{
  struct vtable_IONaturalMemoryCursor *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 2411 */
typedef UInt64 IOPhysicalLength64;

/* 4334 */
struct vtable_IONaturalMemoryCursor
{
  __int64 (__fastcall *__ZN21IONaturalMemoryCursorD1Ev)(IONaturalMemoryCursor *__hidden this);
  __int64 (__fastcall *__ZN21IONaturalMemoryCursorD0Ev)(IONaturalMemoryCursor *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK21IONaturalMemoryCursor12getMetaClassEv)(IONaturalMemoryCursor *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  __int64 (__fastcall *__ZN14IOMemoryCursor21initWithSpecificationEPFvNS_15PhysicalSegmentEPvjEyyy)();
  UInt32 (__cdecl *__ZN14IOMemoryCursor19genPhysicalSegmentsEP18IOMemoryDescriptoryPvjjPy)(IOMemoryCursor *this, IOMemoryDescriptor *descriptor, IOByteCount64 fromPosition, void *segments, unsigned int maxSegments, unsigned int maxTransferSize, unsigned __int64 *transferSize);
  bool (__cdecl *__ZN21IONaturalMemoryCursor21initWithSpecificationEyyy)(IONaturalMemoryCursor *this, IOPhysicalLength64 maxSegmentSize, IOPhysicalLength64 maxTransferSize, IOPhysicalLength64 alignment);
  __int64 (__fastcall *__ZN21IONaturalMemoryCursor19getPhysicalSegmentsEP18IOMemoryDescriptoryPN14IOMemoryCursor15PhysicalSegmentEjjPy)();
};

/* 601 */
struct IOBigMemoryCursor
{
  struct vtable_IOBigMemoryCursor *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 4338 */
struct vtable_IOBigMemoryCursor
{
  __int64 (__fastcall *__ZN17IOBigMemoryCursorD1Ev)(IOBigMemoryCursor *__hidden this);
  __int64 (__fastcall *__ZN17IOBigMemoryCursorD0Ev)(IOBigMemoryCursor *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK17IOBigMemoryCursor12getMetaClassEv)(IOBigMemoryCursor *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  __int64 (__fastcall *__ZN14IOMemoryCursor21initWithSpecificationEPFvNS_15PhysicalSegmentEPvjEyyy)();
  UInt32 (__cdecl *__ZN14IOMemoryCursor19genPhysicalSegmentsEP18IOMemoryDescriptoryPvjjPy)(IOMemoryCursor *this, IOMemoryDescriptor *descriptor, IOByteCount64 fromPosition, void *segments, unsigned int maxSegments, unsigned int maxTransferSize, unsigned __int64 *transferSize);
  bool (__cdecl *__ZN17IOBigMemoryCursor21initWithSpecificationEyyy)(IOBigMemoryCursor *this, IOPhysicalLength64 maxSegmentSize, IOPhysicalLength64 maxTransferSize, IOPhysicalLength64 alignment);
  __int64 (__fastcall *__ZN17IOBigMemoryCursor19getPhysicalSegmentsEP18IOMemoryDescriptoryPN14IOMemoryCursor15PhysicalSegmentEjjPy)();
};

/* 602 */
struct IOLittleMemoryCursor
{
  struct vtable_IOLittleMemoryCursor *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 4342 */
struct vtable_IOLittleMemoryCursor
{
  __int64 (__fastcall *__ZN20IOLittleMemoryCursorD1Ev)(IOLittleMemoryCursor *__hidden this);
  __int64 (__fastcall *__ZN20IOLittleMemoryCursorD0Ev)(IOLittleMemoryCursor *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK20IOLittleMemoryCursor12getMetaClassEv)(IOLittleMemoryCursor *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  __int64 (__fastcall *__ZN14IOMemoryCursor21initWithSpecificationEPFvNS_15PhysicalSegmentEPvjEyyy)();
  UInt32 (__cdecl *__ZN14IOMemoryCursor19genPhysicalSegmentsEP18IOMemoryDescriptoryPvjjPy)(IOMemoryCursor *this, IOMemoryDescriptor *descriptor, IOByteCount64 fromPosition, void *segments, unsigned int maxSegments, unsigned int maxTransferSize, unsigned __int64 *transferSize);
  bool (__cdecl *__ZN20IOLittleMemoryCursor21initWithSpecificationEyyy)(IOLittleMemoryCursor *this, IOPhysicalLength64 maxSegmentSize, IOPhysicalLength64 maxTransferSize, IOPhysicalLength64 alignment);
  __int64 (__fastcall *__ZN20IOLittleMemoryCursor19getPhysicalSegmentsEP18IOMemoryDescriptoryPN14IOMemoryCursor15PhysicalSegmentEjjPy)();
};

/* 606 */
struct IOMemoryDescriptor::MetaClass
{
  struct vtable_IOMemoryDescriptor::MetaClass *vtable;
};

/* 4352 */
struct vtable_IOMemoryDescriptor::MetaClass
{
  __int64 (__fastcall *__ZN18IOMemoryDescriptor9MetaClassD1Ev)(IOMemoryDescriptor::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor9MetaClassD0Ev)(IOMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor9MetaClass8DispatchE5IORPC)(__int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK18IOMemoryDescriptor9MetaClass5allocEv)(IOMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 607 */
struct IOMultiMemoryDescriptor
{
  struct vtable_IOMultiMemoryDescriptor *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
};

/* 4358 */
struct vtable_IOMultiMemoryDescriptor
{
  __int64 (__fastcall *__ZN23IOMultiMemoryDescriptorD1Ev)(IOMultiMemoryDescriptor *__hidden this);
  __int64 (__fastcall *__ZN23IOMultiMemoryDescriptorD0Ev)(IOMultiMemoryDescriptor *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK23IOMultiMemoryDescriptor12getMetaClassEv)(IOMultiMemoryDescriptor *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN23IOMultiMemoryDescriptor4freeEv)(IOMultiMemoryDescriptor *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN18IOMemoryDescriptor15initWithOptionsEPvjjP4taskjP8IOMapper)(IOMemoryDescriptor *this, void *buffers, unsigned int count, unsigned int offset, struct task *task, UInt32 options, IOMapper *mapper);
  IOReturn (__cdecl *__ZN23IOMultiMemoryDescriptor12setPurgeableEjPj)(IOMultiMemoryDescriptor *this, UInt32 newState, unsigned int *oldState);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor16performOperationEjyy)(IOMemoryDescriptor *this, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  IOReturn (__cdecl *__ZNK18IOMemoryDescriptor19dmaCommandOperationEjPvj)(IOMemoryDescriptor *this, IOOptionBits op, void *vData, unsigned int dataSize);
  addr64_t (__cdecl *__ZN23IOMultiMemoryDescriptor18getPhysicalSegmentEyPyj)(IOMultiMemoryDescriptor *this, IOByteCount64 offset, unsigned __int64 *length, UInt32 options);
  uint64_t (__cdecl *__ZN23IOMultiMemoryDescriptor16getPreparationIDEv)(IOMultiMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor1Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor2Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor3Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor4Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor5Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor6Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor7Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor8Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor9Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor10Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor11Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor12Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor13Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor14Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor15Ev)(IOMemoryDescriptor *this);
  IODirection (__cdecl *__ZNK18IOMemoryDescriptor12getDirectionEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZNK18IOMemoryDescriptor9getLengthEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor6setTagEj)(IOMemoryDescriptor *this, UInt32 tag);
  IOOptionBits (__cdecl *__ZN18IOMemoryDescriptor6getTagEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor9readBytesEyPvy)(IOMemoryDescriptor *this, IOByteCount64 offset, void *bytes, IOByteCount64 withLength);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor10writeBytesEyPKvy)(IOMemoryDescriptor *this, IOByteCount64 offset, const void *bytes, IOByteCount64 withLength);
  IOReturn (__cdecl *__ZN23IOMultiMemoryDescriptor7prepareEj)(IOMultiMemoryDescriptor *this, IOOptionBits forDirection);
  IOReturn (__cdecl *__ZN23IOMultiMemoryDescriptor8completeEj)(IOMultiMemoryDescriptor *this, IOOptionBits forDirection);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor3mapEj)(IOMemoryDescriptor *this, UInt32 options);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor10setMappingEP4taskyj)(IOMemoryDescriptor *this, struct task *task, mach_vm_address_t mapAddress, UInt32 options);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor8redirectEP4taskb)(IOMemoryDescriptor *this, struct task *safeTask, bool redirect);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor11makeMappingEPS_P4taskyjyy)(IOMemoryDescriptor *this, IOMemoryDescriptor *owner, struct task *intoTask, mach_vm_address_t atAddress, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  void (__cdecl *__ZN18IOMemoryDescriptor10addMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  void (__cdecl *__ZN18IOMemoryDescriptor13removeMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  __int64 (__fastcall *__ZN23IOMultiMemoryDescriptor5doMapEP7_vm_mapPyjyy)();
  __int64 (__fastcall *__ZN18IOMemoryDescriptor7doUnmapEP7_vm_mapyy)();
  bool (__cdecl *__ZN23IOMultiMemoryDescriptor19initWithDescriptorsEPP18IOMemoryDescriptorjjb)(IOMultiMemoryDescriptor *this, IOMemoryDescriptor **descriptors, unsigned int withCount, IOOptionBits withDirection, bool asReference);
};

/* 608 */
struct IORangeAllocator
{
  struct vtable_IORangeAllocator *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 2866 */
typedef IOByteCount IORangeScalar;

/* 4362 */
struct vtable_IORangeAllocator
{
  __int64 (__fastcall *__ZN16IORangeAllocatorD1Ev)(IORangeAllocator *__hidden this);
  __int64 (__fastcall *__ZN16IORangeAllocatorD0Ev)(IORangeAllocator *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK16IORangeAllocator9serializeEP11OSSerialize)(IORangeAllocator *this, OSSerialize *s);
  const OSMetaClass *(__cdecl *__ZNK16IORangeAllocator12getMetaClassEv)(IORangeAllocator *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN16IORangeAllocator4freeEv)(IORangeAllocator *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN16IORangeAllocator12allocElementEj)(IORangeAllocator *this, unsigned int index);
  void (__cdecl *__ZN16IORangeAllocator14deallocElementEj)(IORangeAllocator *this, unsigned int index);
  bool (__cdecl *__ZN16IORangeAllocator4initEyyjj)(IORangeAllocator *this, IOByteCount endOfRange, IOByteCount defaultAlignment, unsigned int capacity, UInt32 options);
  UInt32 (__cdecl *__ZN16IORangeAllocator16getFragmentCountEv)(IORangeAllocator *this);
  UInt32 (__cdecl *__ZN16IORangeAllocator19getFragmentCapacityEv)(IORangeAllocator *this);
  void (__cdecl *__ZN16IORangeAllocator28setFragmentCapacityIncrementEj)(IORangeAllocator *this, unsigned int count);
  IORangeScalar (__cdecl *__ZN16IORangeAllocator12getFreeCountEv)(IORangeAllocator *this);
  bool (__cdecl *__ZN16IORangeAllocator8allocateEyPyy)(IORangeAllocator *this, IOByteCount size, unsigned __int64 *result, IOByteCount alignment);
  bool (__cdecl *__ZN16IORangeAllocator13allocateRangeEyy)(IORangeAllocator *this, IOByteCount start, IOByteCount size);
  void (__cdecl *__ZN16IORangeAllocator10deallocateEyy)(IORangeAllocator *this, IOByteCount start, IOByteCount size);
};

/* 609 */
struct IOSubMemoryDescriptor
{
  struct vtable_IOSubMemoryDescriptor *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
};

/* 4366 */
struct vtable_IOSubMemoryDescriptor
{
  __int64 (__fastcall *__ZN21IOSubMemoryDescriptorD1Ev)(IOSubMemoryDescriptor *__hidden this);
  __int64 (__fastcall *__ZN21IOSubMemoryDescriptorD0Ev)(IOSubMemoryDescriptor *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK21IOSubMemoryDescriptor12getMetaClassEv)(IOSubMemoryDescriptor *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN21IOSubMemoryDescriptor4freeEv)(IOSubMemoryDescriptor *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN18IOMemoryDescriptor15initWithOptionsEPvjjP4taskjP8IOMapper)(IOMemoryDescriptor *this, void *buffers, unsigned int count, unsigned int offset, struct task *task, UInt32 options, IOMapper *mapper);
  IOReturn (__cdecl *__ZN21IOSubMemoryDescriptor12setPurgeableEjPj)(IOSubMemoryDescriptor *this, UInt32 newState, unsigned int *oldState);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor16performOperationEjyy)(IOMemoryDescriptor *this, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  IOReturn (__cdecl *__ZNK18IOMemoryDescriptor19dmaCommandOperationEjPvj)(IOMemoryDescriptor *this, IOOptionBits op, void *vData, unsigned int dataSize);
  addr64_t (__cdecl *__ZN21IOSubMemoryDescriptor18getPhysicalSegmentEyPyj)(IOSubMemoryDescriptor *this, IOByteCount64 offset, unsigned __int64 *length, UInt32 options);
  uint64_t (__cdecl *__ZN21IOSubMemoryDescriptor16getPreparationIDEv)(IOSubMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor1Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor2Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor3Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor4Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor5Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor6Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor7Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor8Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor9Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor10Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor11Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor12Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor13Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor14Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor15Ev)(IOMemoryDescriptor *this);
  IODirection (__cdecl *__ZNK18IOMemoryDescriptor12getDirectionEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZNK18IOMemoryDescriptor9getLengthEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor6setTagEj)(IOMemoryDescriptor *this, UInt32 tag);
  IOOptionBits (__cdecl *__ZN18IOMemoryDescriptor6getTagEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor9readBytesEyPvy)(IOMemoryDescriptor *this, IOByteCount64 offset, void *bytes, IOByteCount64 withLength);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor10writeBytesEyPKvy)(IOMemoryDescriptor *this, IOByteCount64 offset, const void *bytes, IOByteCount64 withLength);
  IOReturn (__cdecl *__ZN21IOSubMemoryDescriptor7prepareEj)(IOSubMemoryDescriptor *this, IOOptionBits forDirection);
  IOReturn (__cdecl *__ZN21IOSubMemoryDescriptor8completeEj)(IOSubMemoryDescriptor *this, IOOptionBits forDirection);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor3mapEj)(IOMemoryDescriptor *this, UInt32 options);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor10setMappingEP4taskyj)(IOMemoryDescriptor *this, struct task *task, mach_vm_address_t mapAddress, UInt32 options);
  IOReturn (__cdecl *__ZN21IOSubMemoryDescriptor8redirectEP4taskb)(IOSubMemoryDescriptor *this, struct task *safeTask, bool redirect);
  IOMemoryMap *(__cdecl *__ZN21IOSubMemoryDescriptor11makeMappingEPS_P4taskyjyy)(IOSubMemoryDescriptor *this, IOMemoryDescriptor *owner, struct task *intoTask, mach_vm_address_t atAddress, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  void (__cdecl *__ZN18IOMemoryDescriptor10addMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  void (__cdecl *__ZN18IOMemoryDescriptor13removeMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor5doMapEP7_vm_mapPyjyy)();
  __int64 (__fastcall *__ZN18IOMemoryDescriptor7doUnmapEP7_vm_mapyy)();
  bool (__cdecl *__ZN21IOSubMemoryDescriptor12initSubRangeEP18IOMemoryDescriptoryyj)(IOSubMemoryDescriptor *this, IOMemoryDescriptor *parent, IOByteCount64 offset, IOByteCount64 length, IOOptionBits withDirection);
};

/* 610 */
struct IOPlatformExpert
{
  struct vtable_IOPlatformExpert *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
};

/* 4370 */
struct vtable_IOPlatformExpert
{
  __int64 (__fastcall *__ZN16IOPlatformExpertD1Ev)(IOPlatformExpert *__hidden this);
  __int64 (__fastcall *__ZN16IOPlatformExpertD0Ev)(IOPlatformExpert *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK16IOPlatformExpert12getMetaClassEv)(IOPlatformExpert *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN16IOPlatformExpert5startEPS_)(IOPlatformExpert *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN16IOPlatformExpert6attachEPS_)(IOPlatformExpert *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN16IOPlatformExpert20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOPlatformExpert *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  void (__cdecl *__ZN16IOPlatformExpert14setBootROMTypeEl)(IOPlatformExpert *this, __int64 peBootROMType);
  void (__cdecl *__ZN16IOPlatformExpert14setChipSetTypeEl)(IOPlatformExpert *this, __int64 peChipSetType);
  void (__cdecl *__ZN16IOPlatformExpert14setMachineTypeEl)(IOPlatformExpert *this, __int64 peMachineType);
  bool (__cdecl *__ZN16IOPlatformExpert12CheckSubTreeEP7OSArrayP9IOServiceS3_P12OSDictionary)(IOPlatformExpert *this, OSArray *inSubTree, IOService *theNub, IOService *theDevice, OSDictionary *theParent);
  bool (__cdecl *__ZN16IOPlatformExpert21RegisterServiceInTreeEP9IOServiceP12OSDictionaryS3_S1_)(IOPlatformExpert *this, IOService *theService, OSDictionary *theTreeNode, OSDictionary *theTreeParentNode, IOService *theProvider);
  void (__cdecl *__ZN16IOPlatformExpert25PMInstantiatePowerDomainsEv)(IOPlatformExpert *this);
  bool (__cdecl *__ZN16IOPlatformExpert9configureEP9IOService)(IOPlatformExpert *this, IOService *provider);
  IOService *(__cdecl *__ZN16IOPlatformExpert9createNubEP12OSDictionary)(IOPlatformExpert *this, OSDictionary *from);
  bool (__cdecl *__ZNK16IOPlatformExpert14compareNubNameEPK9IOServiceP8OSStringPS4_)(IOPlatformExpert *this, const IOService *nub, OSString *name, OSString **matched);
  IOReturn (__cdecl *__ZN16IOPlatformExpert15getNubResourcesEP9IOService)(IOPlatformExpert *this, IOService *nub);
  __int64 (__cdecl *__ZN16IOPlatformExpert14getBootROMTypeEv)(IOPlatformExpert *this);
  __int64 (__cdecl *__ZN16IOPlatformExpert14getChipSetTypeEv)(IOPlatformExpert *this);
  __int64 (__cdecl *__ZN16IOPlatformExpert14getMachineTypeEv)(IOPlatformExpert *this);
  bool (__cdecl *__ZN16IOPlatformExpert12getModelNameEPci)(IOPlatformExpert *this, char *name, int maxLength);
  bool (__cdecl *__ZN16IOPlatformExpert14getMachineNameEPci)(IOPlatformExpert *this, char *name, int maxLength);
  int (__cdecl *__ZN16IOPlatformExpert11haltRestartEj)(IOPlatformExpert *this, unsigned int type);
  void (__cdecl *__ZN16IOPlatformExpert11sleepKernelEv)(IOPlatformExpert *this);
  __int64 (__cdecl *__ZN16IOPlatformExpert15getGMTTimeOfDayEv)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert15setGMTTimeOfDayEl)(IOPlatformExpert *this, __int64 secs);
  IOReturn (__cdecl *__ZN16IOPlatformExpert14getConsoleInfoEP8PE_Video)(IOPlatformExpert *this, PE_Video *consoleInfo);
  IOReturn (__cdecl *__ZN16IOPlatformExpert14setConsoleInfoEP8PE_Videoj)(IOPlatformExpert *this, PE_Video *consoleInfo, unsigned int op);
  __int64 (__fastcall *__ZN16IOPlatformExpert23registerNVRAMControllerEP17IONVRAMController)();
  IOReturn (__cdecl *__ZN16IOPlatformExpert27registerInterruptControllerEP8OSSymbolP21IOInterruptController)(IOPlatformExpert *this, OSSymbol *name, IOInterruptController *interruptController);
  IOInterruptController *(__cdecl *__ZN16IOPlatformExpert25lookUpInterruptControllerEP8OSSymbol)(IOPlatformExpert *this, OSSymbol *name);
  void (__cdecl *__ZN16IOPlatformExpert25setCPUInterruptPropertiesEP9IOService)(IOPlatformExpert *this, IOService *service);
  bool (__cdecl *__ZN16IOPlatformExpert16atInterruptLevelEv)(IOPlatformExpert *this);
  IORangeAllocator *(__cdecl *__ZN16IOPlatformExpert25getPhysicalRangeAllocatorEv)(IOPlatformExpert *this);
  bool (__cdecl *__ZN16IOPlatformExpert21platformAdjustServiceEP9IOService)(IOPlatformExpert *this, IOService *service);
  void (__cdecl *__ZN16IOPlatformExpert16PMRegisterDeviceEP9IOServiceS1_)(IOPlatformExpert *this, IOService *theNub, IOService *theDevice);
  void (__cdecl *__ZN16IOPlatformExpert5PMLogEPKcmmm)(IOPlatformExpert *this, const char *, unsigned __int64, unsigned __int64, unsigned __int64);
  bool (__cdecl *__ZN16IOPlatformExpert12hasPMFeatureEm)(IOPlatformExpert *this, unsigned __int64 featureMask);
  bool (__cdecl *__ZN16IOPlatformExpert16hasPrivPMFeatureEm)(IOPlatformExpert *this, unsigned __int64 privFeatureMask);
  int (__cdecl *__ZN16IOPlatformExpert21numBatteriesSupportedEv)(IOPlatformExpert *this);
  IOByteCount (__cdecl *__ZN16IOPlatformExpert13savePanicInfoEPhy)(IOPlatformExpert *this, unsigned __int8 *buffer, IOByteCount64 length);
  OSString *(__cdecl *__ZN16IOPlatformExpert30createSystemSerialNumberStringEP6OSData)(IOPlatformExpert *this, OSData *myProperty);
  IOReturn (__cdecl *__ZN16IOPlatformExpert29deregisterInterruptControllerEP8OSSymbol)(IOPlatformExpert *this, OSSymbol *name);
  void (__cdecl *__ZN16IOPlatformExpert15getUTCTimeOfDayEPmPj)(IOPlatformExpert *this, unsigned __int64 *secs, unsigned int *nsecs);
  void (__cdecl *__ZN16IOPlatformExpert15setUTCTimeOfDayEmj)(IOPlatformExpert *this, unsigned __int64 secs, unsigned int nsecs);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert5Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert6Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert7Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert8Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert9Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert27_RESERVEDIOPlatformExpert10Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert27_RESERVEDIOPlatformExpert11Ev)(IOPlatformExpert *this);
};

/* 1439 */
struct PE_Video
{
  unsigned __int64 v_baseAddr;
  unsigned __int64 v_rowBytes;
  unsigned __int64 v_width;
  unsigned __int64 v_height;
  unsigned __int64 v_depth;
  unsigned __int64 v_display;
  char v_pixelFormat[64];
  unsigned __int64 v_offset;
  unsigned __int64 v_length;
  unsigned __int8 v_rotate;
  unsigned __int8 v_scale;
  char reserved1[2];
  __int64 reserved2;
};

/* 622 */
struct IOInterruptController
{
  struct vtable_IOInterruptController *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
};

/* 2582 */
typedef void (__cdecl *IOInterruptAction)(OSObject *target, void *refCon, IOService *nub, int source);

/* 4406 */
struct vtable_IOInterruptController
{
  __int64 (__fastcall *__ZN21IOInterruptControllerD1Ev)(IOInterruptController *__hidden this);
  __int64 (__fastcall *__ZN21IOInterruptControllerD0Ev)(IOInterruptController *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK21IOInterruptController12getMetaClassEv)(IOInterruptController *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN21IOInterruptController17registerInterruptEP9IOServiceiPvPFvS2_S2_S2_iES2_)(IOInterruptController *this, IOService *nub, int source, void *target, void (__cdecl *handler)(void *, void *, void *, int), void *refCon);
  IOReturn (__cdecl *__ZN21IOInterruptController19unregisterInterruptEP9IOServicei)(IOInterruptController *this, IOService *nub, int source);
  IOReturn (__cdecl *__ZN21IOInterruptController16getInterruptTypeEP9IOServiceiPi)(IOInterruptController *this, IOService *nub, int source, int *interruptType);
  IOReturn (__cdecl *__ZN21IOInterruptController15enableInterruptEP9IOServicei)(IOInterruptController *this, IOService *nub, int source);
  IOReturn (__cdecl *__ZN21IOInterruptController16disableInterruptEP9IOServicei)(IOInterruptController *this, IOService *nub, int source);
  IOReturn (__cdecl *__ZN21IOInterruptController14causeInterruptEP9IOServicei)(IOInterruptController *this, IOService *nub, int source);
  IOInterruptAction (__cdecl *__ZN21IOInterruptController26getInterruptHandlerAddressEv)(IOInterruptController *this);
  IOReturn (__cdecl *__ZN21IOInterruptController15handleInterruptEPvP9IOServicei)(IOInterruptController *this, void *refCon, IOService *nub, int source);
  bool (__cdecl *__ZN21IOInterruptController17vectorCanBeSharedEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController10initVectorEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  int (__cdecl *__ZN21IOInterruptController13getVectorTypeEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController17disableVectorHardEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController12enableVectorEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController11causeVectorEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController0Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController1Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController2Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController3Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController4Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController5Ev)(IOInterruptController *this);
};

/* 2445 */
struct _IOLock;

/* 2446 */
typedef struct _IOLock IOLock;

/* 1423 */
typedef void (__cdecl *IOInterruptHandler)(void *target, void *refCon, void *nub, int source);

/* 2630 */
struct IOInterruptVector
{
  volatile char interruptActive;
  volatile char interruptDisabledSoft;
  volatile char interruptDisabledHard;
  volatile char interruptRegistered;
  IOLock *interruptLock;
  IOService *nub;
  int source;
  void *target;
  IOInterruptHandler handler;
  void *refCon;
  IOSharedInterruptController *sharedController;
};

/* 623 */
struct IOSharedInterruptController
{
  struct vtable_IOSharedInterruptController *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
};

/* 4408 */
struct vtable_IOSharedInterruptController
{
  __int64 (__fastcall *__ZN27IOSharedInterruptControllerD1Ev)(IOSharedInterruptController *__hidden this);
  __int64 (__fastcall *__ZN27IOSharedInterruptControllerD0Ev)(IOSharedInterruptController *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK27IOSharedInterruptController12getMetaClassEv)(IOSharedInterruptController *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN27IOSharedInterruptController17registerInterruptEP9IOServiceiPvPFvS2_S2_S2_iES2_)(IOSharedInterruptController *this, IOService *nub, int source, void *target, void (__cdecl *handler)(void *, void *, void *, int), void *refCon);
  IOReturn (__cdecl *__ZN27IOSharedInterruptController19unregisterInterruptEP9IOServicei)(IOSharedInterruptController *this, IOService *nub, int source);
  IOReturn (__cdecl *__ZN27IOSharedInterruptController16getInterruptTypeEP9IOServiceiPi)(IOSharedInterruptController *this, IOService *nub, int source, int *interruptType);
  IOReturn (__cdecl *__ZN27IOSharedInterruptController15enableInterruptEP9IOServicei)(IOSharedInterruptController *this, IOService *nub, int source);
  IOReturn (__cdecl *__ZN27IOSharedInterruptController16disableInterruptEP9IOServicei)(IOSharedInterruptController *this, IOService *nub, int source);
  IOReturn (__cdecl *__ZN21IOInterruptController14causeInterruptEP9IOServicei)(IOInterruptController *this, IOService *nub, int source);
  IOInterruptAction (__cdecl *__ZN27IOSharedInterruptController26getInterruptHandlerAddressEv)(IOSharedInterruptController *this);
  IOReturn (__cdecl *__ZN27IOSharedInterruptController15handleInterruptEPvP9IOServicei)(IOSharedInterruptController *this, void *refCon, IOService *nub, int source);
  bool (__cdecl *__ZN21IOInterruptController17vectorCanBeSharedEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController10initVectorEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  int (__cdecl *__ZN21IOInterruptController13getVectorTypeEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController17disableVectorHardEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController12enableVectorEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController11causeVectorEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController0Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController1Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController2Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController3Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController4Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController5Ev)(IOInterruptController *this);
  IOReturn (__cdecl *__ZN27IOSharedInterruptController23initInterruptControllerEP21IOInterruptControllerP6OSData)(IOSharedInterruptController *this, IOInterruptController *parentController, OSData *parentSource);
  void (__cdecl *__ZN27IOSharedInterruptController37_RESERVEDIOSharedInterruptController0Ev)(IOSharedInterruptController *this);
  void (__cdecl *__ZN27IOSharedInterruptController37_RESERVEDIOSharedInterruptController1Ev)(IOSharedInterruptController *this);
  void (__cdecl *__ZN27IOSharedInterruptController37_RESERVEDIOSharedInterruptController2Ev)(IOSharedInterruptController *this);
  void (__cdecl *__ZN27IOSharedInterruptController37_RESERVEDIOSharedInterruptController3Ev)(IOSharedInterruptController *this);
};

/* 611 */
struct IOPlatformDevice
{
  struct vtable_IOPlatformDevice *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
};

/* 4372 */
struct vtable_IOPlatformDevice
{
  __int64 (__fastcall *__ZN16IOPlatformDeviceD1Ev)(IOPlatformDevice *__hidden this);
  __int64 (__fastcall *__ZN16IOPlatformDeviceD0Ev)(IOPlatformDevice *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK16IOPlatformDevice12getMetaClassEv)(IOPlatformDevice *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK16IOPlatformDevice11compareNameEP8OSStringPS1_)(IOPlatformDevice *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN16IOPlatformDevice13matchLocationEPS_)(IOPlatformDevice *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN16IOPlatformDevice12getResourcesEv)(IOPlatformDevice *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  void (__cdecl *__ZN16IOPlatformDevice26_RESERVEDIOPlatformDevice0Ev)(IOPlatformDevice *this);
  void (__cdecl *__ZN16IOPlatformDevice26_RESERVEDIOPlatformDevice1Ev)(IOPlatformDevice *this);
  void (__cdecl *__ZN16IOPlatformDevice26_RESERVEDIOPlatformDevice2Ev)(IOPlatformDevice *this);
  void (__cdecl *__ZN16IOPlatformDevice26_RESERVEDIOPlatformDevice3Ev)(IOPlatformDevice *this);
};

/* 612 */
struct IODTPlatformExpert
{
  struct vtable_IODTPlatformExpert *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
  __int64 member28;
  __int64 member29;
};

/* 4376 */
struct vtable_IODTPlatformExpert
{
  __int64 (__fastcall *__ZN18IODTPlatformExpertD1Ev)(IODTPlatformExpert *__hidden this);
  __int64 (__fastcall *__ZN18IODTPlatformExpertD0Ev)(IODTPlatformExpert *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK18IODTPlatformExpert12getMetaClassEv)(IODTPlatformExpert *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN18IODTPlatformExpert5probeEPS_Pi)(IODTPlatformExpert *this, IOService *provider, int *score);
  bool (__cdecl *__ZN16IOPlatformExpert5startEPS_)(IOPlatformExpert *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN16IOPlatformExpert6attachEPS_)(IOPlatformExpert *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN16IOPlatformExpert20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOPlatformExpert *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  void (__cdecl *__ZN16IOPlatformExpert14setBootROMTypeEl)(IOPlatformExpert *this, __int64 peBootROMType);
  void (__cdecl *__ZN16IOPlatformExpert14setChipSetTypeEl)(IOPlatformExpert *this, __int64 peChipSetType);
  void (__cdecl *__ZN16IOPlatformExpert14setMachineTypeEl)(IOPlatformExpert *this, __int64 peMachineType);
  bool (__cdecl *__ZN16IOPlatformExpert12CheckSubTreeEP7OSArrayP9IOServiceS3_P12OSDictionary)(IOPlatformExpert *this, OSArray *inSubTree, IOService *theNub, IOService *theDevice, OSDictionary *theParent);
  bool (__cdecl *__ZN16IOPlatformExpert21RegisterServiceInTreeEP9IOServiceP12OSDictionaryS3_S1_)(IOPlatformExpert *this, IOService *theService, OSDictionary *theTreeNode, OSDictionary *theTreeParentNode, IOService *theProvider);
  void (__cdecl *__ZN16IOPlatformExpert25PMInstantiatePowerDomainsEv)(IOPlatformExpert *this);
  bool (__cdecl *__ZN18IODTPlatformExpert9configureEP9IOService)(IODTPlatformExpert *this, IOService *provider);
  IOService *(__cdecl *__ZN16IOPlatformExpert9createNubEP12OSDictionary)(IOPlatformExpert *this, OSDictionary *from);
  bool (__cdecl *__ZNK18IODTPlatformExpert14compareNubNameEPK9IOServiceP8OSStringPS4_)(IODTPlatformExpert *this, const IOService *nub, OSString *name, OSString **matched);
  IOReturn (__cdecl *__ZN18IODTPlatformExpert15getNubResourcesEP9IOService)(IODTPlatformExpert *this, IOService *nub);
  __int64 (__cdecl *__ZN16IOPlatformExpert14getBootROMTypeEv)(IOPlatformExpert *this);
  __int64 (__cdecl *__ZN16IOPlatformExpert14getChipSetTypeEv)(IOPlatformExpert *this);
  __int64 (__cdecl *__ZN16IOPlatformExpert14getMachineTypeEv)(IOPlatformExpert *this);
  bool (__cdecl *__ZN18IODTPlatformExpert12getModelNameEPci)(IODTPlatformExpert *this, char *name, int maxLength);
  bool (__cdecl *__ZN18IODTPlatformExpert14getMachineNameEPci)(IODTPlatformExpert *this, char *name, int maxLength);
  int (__cdecl *__ZN18IODTPlatformExpert11haltRestartEj)(IODTPlatformExpert *this, unsigned int type);
  void (__cdecl *__ZN16IOPlatformExpert11sleepKernelEv)(IOPlatformExpert *this);
  __int64 (__cdecl *__ZN16IOPlatformExpert15getGMTTimeOfDayEv)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert15setGMTTimeOfDayEl)(IOPlatformExpert *this, __int64 secs);
  IOReturn (__cdecl *__ZN16IOPlatformExpert14getConsoleInfoEP8PE_Video)(IOPlatformExpert *this, PE_Video *consoleInfo);
  IOReturn (__cdecl *__ZN16IOPlatformExpert14setConsoleInfoEP8PE_Videoj)(IOPlatformExpert *this, PE_Video *consoleInfo, unsigned int op);
  __int64 (__fastcall *__ZN18IODTPlatformExpert23registerNVRAMControllerEP17IONVRAMController)();
  IOReturn (__cdecl *__ZN16IOPlatformExpert27registerInterruptControllerEP8OSSymbolP21IOInterruptController)(IOPlatformExpert *this, OSSymbol *name, IOInterruptController *interruptController);
  IOInterruptController *(__cdecl *__ZN16IOPlatformExpert25lookUpInterruptControllerEP8OSSymbol)(IOPlatformExpert *this, OSSymbol *name);
  void (__cdecl *__ZN16IOPlatformExpert25setCPUInterruptPropertiesEP9IOService)(IOPlatformExpert *this, IOService *service);
  bool (__cdecl *__ZN16IOPlatformExpert16atInterruptLevelEv)(IOPlatformExpert *this);
  IORangeAllocator *(__cdecl *__ZN16IOPlatformExpert25getPhysicalRangeAllocatorEv)(IOPlatformExpert *this);
  bool (__cdecl *__ZN16IOPlatformExpert21platformAdjustServiceEP9IOService)(IOPlatformExpert *this, IOService *service);
  void (__cdecl *__ZN16IOPlatformExpert16PMRegisterDeviceEP9IOServiceS1_)(IOPlatformExpert *this, IOService *theNub, IOService *theDevice);
  void (__cdecl *__ZN16IOPlatformExpert5PMLogEPKcmmm)(IOPlatformExpert *this, const char *, unsigned __int64, unsigned __int64, unsigned __int64);
  bool (__cdecl *__ZN16IOPlatformExpert12hasPMFeatureEm)(IOPlatformExpert *this, unsigned __int64 featureMask);
  bool (__cdecl *__ZN16IOPlatformExpert16hasPrivPMFeatureEm)(IOPlatformExpert *this, unsigned __int64 privFeatureMask);
  int (__cdecl *__ZN16IOPlatformExpert21numBatteriesSupportedEv)(IOPlatformExpert *this);
  IOByteCount (__cdecl *__ZN18IODTPlatformExpert13savePanicInfoEPhy)(IODTPlatformExpert *this, unsigned __int8 *buffer, IOByteCount64 length);
  OSString *(__cdecl *__ZN18IODTPlatformExpert30createSystemSerialNumberStringEP6OSData)(IODTPlatformExpert *this, OSData *myProperty);
  IOReturn (__cdecl *__ZN16IOPlatformExpert29deregisterInterruptControllerEP8OSSymbol)(IOPlatformExpert *this, OSSymbol *name);
  void (__cdecl *__ZN16IOPlatformExpert15getUTCTimeOfDayEPmPj)(IOPlatformExpert *this, unsigned __int64 *secs, unsigned int *nsecs);
  void (__cdecl *__ZN16IOPlatformExpert15setUTCTimeOfDayEmj)(IOPlatformExpert *this, unsigned __int64 secs, unsigned int nsecs);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert5Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert6Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert7Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert8Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert9Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert27_RESERVEDIOPlatformExpert10Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert27_RESERVEDIOPlatformExpert11Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN18IODTPlatformExpert15processTopLevelEP15IORegistryEntry)(IODTPlatformExpert *this, IORegistryEntry *root);
  void (__fastcall __noreturn *___cxa_pure_virtual)();
  void (__fastcall __noreturn *___cxa_pure_virtual313)();
  IOService *(__cdecl *__ZN18IODTPlatformExpert9createNubEP15IORegistryEntry)(IODTPlatformExpert *this, IORegistryEntry *from);
  bool (__cdecl *__ZN18IODTPlatformExpert10createNubsEP9IOServiceP10OSIterator)(IODTPlatformExpert *this, IOService *parent, OSIterator *iter);
  IOReturn (__cdecl *__ZN18IODTPlatformExpert17readNVRAMPropertyEP15IORegistryEntryPPK8OSSymbolPP6OSData)(IODTPlatformExpert *this, IORegistryEntry *entry, const OSSymbol **name, OSData **value);
  IOReturn (__cdecl *__ZN18IODTPlatformExpert18writeNVRAMPropertyEP15IORegistryEntryPK8OSSymbolP6OSData)(IODTPlatformExpert *this, IORegistryEntry *entry, const OSSymbol *name, OSData *value);
  void (__cdecl *__ZN18IODTPlatformExpert28_RESERVEDIODTPlatformExpert0Ev)(IODTPlatformExpert *this);
  void (__cdecl *__ZN18IODTPlatformExpert28_RESERVEDIODTPlatformExpert1Ev)(IODTPlatformExpert *this);
  void (__cdecl *__ZN18IODTPlatformExpert28_RESERVEDIODTPlatformExpert2Ev)(IODTPlatformExpert *this);
  void (__cdecl *__ZN18IODTPlatformExpert28_RESERVEDIODTPlatformExpert3Ev)(IODTPlatformExpert *this);
  void (__cdecl *__ZN18IODTPlatformExpert28_RESERVEDIODTPlatformExpert4Ev)(IODTPlatformExpert *this);
  void (__cdecl *__ZN18IODTPlatformExpert28_RESERVEDIODTPlatformExpert5Ev)(IODTPlatformExpert *this);
  void (__cdecl *__ZN18IODTPlatformExpert28_RESERVEDIODTPlatformExpert6Ev)(IODTPlatformExpert *this);
  void (__cdecl *__ZN18IODTPlatformExpert28_RESERVEDIODTPlatformExpert7Ev)(IODTPlatformExpert *this);
};

/* 613 */
struct IODTPlatformExpert::MetaClass
{
  struct vtable_IODTPlatformExpert::MetaClass *vtable;
};

/* 4378 */
struct vtable_IODTPlatformExpert::MetaClass
{
  __int64 (__fastcall *__ZN18IODTPlatformExpert9MetaClassD1Ev)(IODTPlatformExpert::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN18IODTPlatformExpert9MetaClassD0Ev)(IODTPlatformExpert::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK18IODTPlatformExpert9MetaClass5allocEv)(IODTPlatformExpert::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 614 */
struct IOPlatformExpertDevice
{
  struct vtable_IOPlatformExpertDevice *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
};

/* 4380 */
struct vtable_IOPlatformExpertDevice
{
  __int64 (__fastcall *__ZN22IOPlatformExpertDeviceD1Ev)(IOPlatformExpertDevice *__hidden this);
  __int64 (__fastcall *__ZN22IOPlatformExpertDeviceD0Ev)(IOPlatformExpertDevice *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK22IOPlatformExpertDevice12getMetaClassEv)(IOPlatformExpertDevice *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN22IOPlatformExpertDevice4freeEv)(IOPlatformExpertDevice *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN22IOPlatformExpertDevice13setPropertiesEP8OSObject)(IOPlatformExpertDevice *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK22IOPlatformExpertDevice11compareNameEP8OSStringPS1_)(IOPlatformExpertDevice *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK22IOPlatformExpertDevice11getWorkLoopEv)(IOPlatformExpertDevice *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN22IOPlatformExpertDevice13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOPlatformExpertDevice *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  bool (__cdecl *__ZN22IOPlatformExpertDevice12initWithArgsEPvS0_S0_S0_)(IOPlatformExpertDevice *this, void *p1, void *p2, void *p3, void *p4);
  void (__cdecl *__ZN22IOPlatformExpertDevice32_RESERVEDIOPlatformExpertDevice0Ev)(IOPlatformExpertDevice *this);
  void (__cdecl *__ZN22IOPlatformExpertDevice32_RESERVEDIOPlatformExpertDevice1Ev)(IOPlatformExpertDevice *this);
  void (__cdecl *__ZN22IOPlatformExpertDevice32_RESERVEDIOPlatformExpertDevice2Ev)(IOPlatformExpertDevice *this);
  void (__cdecl *__ZN22IOPlatformExpertDevice32_RESERVEDIOPlatformExpertDevice3Ev)(IOPlatformExpertDevice *this);
};

/* 615 */
struct IOPanicPlatform
{
  struct vtable_IOPanicPlatform *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
};

/* 4386 */
struct vtable_IOPanicPlatform
{
  __int64 (__fastcall *__ZN15IOPanicPlatformD1Ev)(IOPanicPlatform *__hidden this);
  __int64 (__fastcall *__ZN15IOPanicPlatformD0Ev)(IOPanicPlatform *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15IOPanicPlatform12getMetaClassEv)(IOPanicPlatform *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN15IOPanicPlatform5startEPS_)(IOPanicPlatform *__hidden this, IOService *);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN16IOPlatformExpert6attachEPS_)(IOPlatformExpert *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN16IOPlatformExpert20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOPlatformExpert *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  void (__cdecl *__ZN16IOPlatformExpert14setBootROMTypeEl)(IOPlatformExpert *this, __int64 peBootROMType);
  void (__cdecl *__ZN16IOPlatformExpert14setChipSetTypeEl)(IOPlatformExpert *this, __int64 peChipSetType);
  void (__cdecl *__ZN16IOPlatformExpert14setMachineTypeEl)(IOPlatformExpert *this, __int64 peMachineType);
  bool (__cdecl *__ZN16IOPlatformExpert12CheckSubTreeEP7OSArrayP9IOServiceS3_P12OSDictionary)(IOPlatformExpert *this, OSArray *inSubTree, IOService *theNub, IOService *theDevice, OSDictionary *theParent);
  bool (__cdecl *__ZN16IOPlatformExpert21RegisterServiceInTreeEP9IOServiceP12OSDictionaryS3_S1_)(IOPlatformExpert *this, IOService *theService, OSDictionary *theTreeNode, OSDictionary *theTreeParentNode, IOService *theProvider);
  void (__cdecl *__ZN16IOPlatformExpert25PMInstantiatePowerDomainsEv)(IOPlatformExpert *this);
  bool (__cdecl *__ZN16IOPlatformExpert9configureEP9IOService)(IOPlatformExpert *this, IOService *provider);
  IOService *(__cdecl *__ZN16IOPlatformExpert9createNubEP12OSDictionary)(IOPlatformExpert *this, OSDictionary *from);
  bool (__cdecl *__ZNK16IOPlatformExpert14compareNubNameEPK9IOServiceP8OSStringPS4_)(IOPlatformExpert *this, const IOService *nub, OSString *name, OSString **matched);
  IOReturn (__cdecl *__ZN16IOPlatformExpert15getNubResourcesEP9IOService)(IOPlatformExpert *this, IOService *nub);
  __int64 (__cdecl *__ZN16IOPlatformExpert14getBootROMTypeEv)(IOPlatformExpert *this);
  __int64 (__cdecl *__ZN16IOPlatformExpert14getChipSetTypeEv)(IOPlatformExpert *this);
  __int64 (__cdecl *__ZN16IOPlatformExpert14getMachineTypeEv)(IOPlatformExpert *this);
  bool (__cdecl *__ZN16IOPlatformExpert12getModelNameEPci)(IOPlatformExpert *this, char *name, int maxLength);
  bool (__cdecl *__ZN16IOPlatformExpert14getMachineNameEPci)(IOPlatformExpert *this, char *name, int maxLength);
  int (__cdecl *__ZN16IOPlatformExpert11haltRestartEj)(IOPlatformExpert *this, unsigned int type);
  void (__cdecl *__ZN16IOPlatformExpert11sleepKernelEv)(IOPlatformExpert *this);
  __int64 (__cdecl *__ZN16IOPlatformExpert15getGMTTimeOfDayEv)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert15setGMTTimeOfDayEl)(IOPlatformExpert *this, __int64 secs);
  IOReturn (__cdecl *__ZN16IOPlatformExpert14getConsoleInfoEP8PE_Video)(IOPlatformExpert *this, PE_Video *consoleInfo);
  IOReturn (__cdecl *__ZN16IOPlatformExpert14setConsoleInfoEP8PE_Videoj)(IOPlatformExpert *this, PE_Video *consoleInfo, unsigned int op);
  __int64 (__fastcall *__ZN16IOPlatformExpert23registerNVRAMControllerEP17IONVRAMController)();
  IOReturn (__cdecl *__ZN16IOPlatformExpert27registerInterruptControllerEP8OSSymbolP21IOInterruptController)(IOPlatformExpert *this, OSSymbol *name, IOInterruptController *interruptController);
  IOInterruptController *(__cdecl *__ZN16IOPlatformExpert25lookUpInterruptControllerEP8OSSymbol)(IOPlatformExpert *this, OSSymbol *name);
  void (__cdecl *__ZN16IOPlatformExpert25setCPUInterruptPropertiesEP9IOService)(IOPlatformExpert *this, IOService *service);
  bool (__cdecl *__ZN16IOPlatformExpert16atInterruptLevelEv)(IOPlatformExpert *this);
  IORangeAllocator *(__cdecl *__ZN16IOPlatformExpert25getPhysicalRangeAllocatorEv)(IOPlatformExpert *this);
  bool (__cdecl *__ZN16IOPlatformExpert21platformAdjustServiceEP9IOService)(IOPlatformExpert *this, IOService *service);
  void (__cdecl *__ZN16IOPlatformExpert16PMRegisterDeviceEP9IOServiceS1_)(IOPlatformExpert *this, IOService *theNub, IOService *theDevice);
  void (__cdecl *__ZN16IOPlatformExpert5PMLogEPKcmmm)(IOPlatformExpert *this, const char *, unsigned __int64, unsigned __int64, unsigned __int64);
  bool (__cdecl *__ZN16IOPlatformExpert12hasPMFeatureEm)(IOPlatformExpert *this, unsigned __int64 featureMask);
  bool (__cdecl *__ZN16IOPlatformExpert16hasPrivPMFeatureEm)(IOPlatformExpert *this, unsigned __int64 privFeatureMask);
  int (__cdecl *__ZN16IOPlatformExpert21numBatteriesSupportedEv)(IOPlatformExpert *this);
  IOByteCount (__cdecl *__ZN16IOPlatformExpert13savePanicInfoEPhy)(IOPlatformExpert *this, unsigned __int8 *buffer, IOByteCount64 length);
  OSString *(__cdecl *__ZN16IOPlatformExpert30createSystemSerialNumberStringEP6OSData)(IOPlatformExpert *this, OSData *myProperty);
  IOReturn (__cdecl *__ZN16IOPlatformExpert29deregisterInterruptControllerEP8OSSymbol)(IOPlatformExpert *this, OSSymbol *name);
  void (__cdecl *__ZN16IOPlatformExpert15getUTCTimeOfDayEPmPj)(IOPlatformExpert *this, unsigned __int64 *secs, unsigned int *nsecs);
  void (__cdecl *__ZN16IOPlatformExpert15setUTCTimeOfDayEmj)(IOPlatformExpert *this, unsigned __int64 secs, unsigned int nsecs);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert5Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert6Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert7Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert8Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert26_RESERVEDIOPlatformExpert9Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert27_RESERVEDIOPlatformExpert10Ev)(IOPlatformExpert *this);
  void (__cdecl *__ZN16IOPlatformExpert27_RESERVEDIOPlatformExpert11Ev)(IOPlatformExpert *this);
};

/* 616 */
struct IOCPU
{
  struct vtable_IOCPU *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
};

/* 1144 */
typedef struct processor *processor_t;

/* 4390 */
struct vtable_IOCPU
{
  __int64 (__fastcall *__ZN5IOCPUD1Ev)(IOCPU *__hidden this);
  __int64 (__fastcall *__ZN5IOCPUD0Ev)(IOCPU *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK5IOCPU12getMetaClassEv)(IOCPU *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN5IOCPU11setPropertyEPK8OSSymbolP8OSObject)(IOCPU *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK5IOCPU11getPropertyEPK8OSSymbol)(IOCPU *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK5IOCPU19serializePropertiesEP11OSSerialize)(IOCPU *this, OSSerialize *serialize);
  IOReturn (__cdecl *__ZN5IOCPU13setPropertiesEP8OSObject)(IOCPU *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN5IOCPU5startEPS_)(IOCPU *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  void (__cdecl *__ZN5IOCPU12setCPUNumberEj)(IOCPU *this, unsigned int cpuNumber);
  void (__cdecl *__ZN5IOCPU11setCPUStateEj)(IOCPU *this, unsigned int cpuState);
  void (__fastcall __noreturn *___cxa_pure_virtual)();
  void (__fastcall __noreturn *___cxa_pure_virtual269)();
  void (__fastcall __noreturn *___cxa_pure_virtual270)();
  void (__fastcall __noreturn *___cxa_pure_virtual271)();
  void (__cdecl *__ZN5IOCPU9signalCPUEPS_)(IOCPU *this, IOCPU *target);
  void (__cdecl *__ZN5IOCPU17signalCPUDeferredEPS_)(IOCPU *this, IOCPU *target);
  void (__cdecl *__ZN5IOCPU15signalCPUCancelEPS_)(IOCPU *this, IOCPU *target);
  void (__cdecl *__ZN5IOCPU17enableCPUTimeBaseEb)(IOCPU *this, bool enable);
  UInt32 (__cdecl *__ZN5IOCPU12getCPUNumberEv)(IOCPU *this);
  UInt32 (__cdecl *__ZN5IOCPU11getCPUStateEv)(IOCPU *this);
  OSArray *(__cdecl *__ZN5IOCPU11getCPUGroupEv)(IOCPU *this);
  UInt32 (__cdecl *__ZN5IOCPU15getCPUGroupSizeEv)(IOCPU *this);
  processor_t (__cdecl *__ZN5IOCPU16getMachProcessorEv)(IOCPU *this);
  void (__fastcall __noreturn *___cxa_pure_virtual281)();
  void (__cdecl *__ZN5IOCPU15_RESERVEDIOCPU0Ev)(IOCPU *this);
  void (__cdecl *__ZN5IOCPU15_RESERVEDIOCPU1Ev)(IOCPU *this);
  void (__cdecl *__ZN5IOCPU15_RESERVEDIOCPU2Ev)(IOCPU *this);
  void (__cdecl *__ZN5IOCPU15_RESERVEDIOCPU3Ev)(IOCPU *this);
  void (__cdecl *__ZN5IOCPU15_RESERVEDIOCPU4Ev)(IOCPU *this);
  void (__cdecl *__ZN5IOCPU15_RESERVEDIOCPU5Ev)(IOCPU *this);
  void (__cdecl *__ZN5IOCPU15_RESERVEDIOCPU6Ev)(IOCPU *this);
  void (__cdecl *__ZN5IOCPU15_RESERVEDIOCPU7Ev)(IOCPU *this);
};

/* 1155 */
struct processor;

/* 617 */
struct IOCPU::MetaClass
{
  struct vtable_IOCPU::MetaClass *vtable;
};

/* 4392 */
struct vtable_IOCPU::MetaClass
{
  __int64 (__fastcall *__ZN5IOCPU9MetaClassD1Ev)(IOCPU::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN5IOCPU9MetaClassD0Ev)(IOCPU::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK5IOCPU9MetaClass5allocEv)(IOCPU::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 618 */
struct IOCPUInterruptController
{
  struct vtable_IOCPUInterruptController *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
};

/* 4394 */
struct vtable_IOCPUInterruptController
{
  __int64 (__fastcall *__ZN24IOCPUInterruptControllerD1Ev)(IOCPUInterruptController *__hidden this);
  __int64 (__fastcall *__ZN24IOCPUInterruptControllerD0Ev)(IOCPUInterruptController *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK24IOCPUInterruptController12getMetaClassEv)(IOCPUInterruptController *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN24IOCPUInterruptController17registerInterruptEP9IOServiceiPvPFvS2_S2_S2_iES2_)(IOCPUInterruptController *this, IOService *nub, int source, void *target, void (__cdecl *handler)(void *, void *, void *, int), void *refCon);
  IOReturn (__cdecl *__ZN21IOInterruptController19unregisterInterruptEP9IOServicei)(IOInterruptController *this, IOService *nub, int source);
  IOReturn (__cdecl *__ZN24IOCPUInterruptController16getInterruptTypeEP9IOServiceiPi)(IOCPUInterruptController *this, IOService *nub, int source, int *interruptType);
  IOReturn (__cdecl *__ZN24IOCPUInterruptController15enableInterruptEP9IOServicei)(IOCPUInterruptController *this, IOService *nub, int source);
  IOReturn (__cdecl *__ZN24IOCPUInterruptController16disableInterruptEP9IOServicei)(IOCPUInterruptController *this, IOService *nub, int source);
  IOReturn (__cdecl *__ZN24IOCPUInterruptController14causeInterruptEP9IOServicei)(IOCPUInterruptController *this, IOService *nub, int source);
  IOInterruptAction (__cdecl *__ZN21IOInterruptController26getInterruptHandlerAddressEv)(IOInterruptController *this);
  IOReturn (__cdecl *__ZN24IOCPUInterruptController15handleInterruptEPvP9IOServicei)(IOCPUInterruptController *this, void *refCon, IOService *nub, int source);
  bool (__cdecl *__ZN21IOInterruptController17vectorCanBeSharedEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController10initVectorEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  int (__cdecl *__ZN21IOInterruptController13getVectorTypeEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController17disableVectorHardEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController12enableVectorEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController11causeVectorEiP17IOInterruptVector)(IOInterruptController *this, int32_t vectorNumber, IOInterruptVector *vector);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController0Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController1Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController2Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController3Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController4Ev)(IOInterruptController *this);
  void (__cdecl *__ZN21IOInterruptController31_RESERVEDIOInterruptController5Ev)(IOInterruptController *this);
  IOReturn (__cdecl *__ZN24IOCPUInterruptController26initCPUInterruptControllerEi)(IOCPUInterruptController *this, int sources);
  void (__cdecl *__ZN24IOCPUInterruptController30registerCPUInterruptControllerEv)(IOCPUInterruptController *this);
  void (__cdecl *__ZN24IOCPUInterruptController25setCPUInterruptPropertiesEP9IOService)(IOCPUInterruptController *this, IOService *service);
  void (__cdecl *__ZN24IOCPUInterruptController18enableCPUInterruptEP5IOCPU)(IOCPUInterruptController *this, IOCPU *cpu);
  IOReturn (__cdecl *__ZN24IOCPUInterruptController26initCPUInterruptControllerEii)(IOCPUInterruptController *this, int sources, int cpus);
  void (__cdecl *__ZN24IOCPUInterruptController34_RESERVEDIOCPUInterruptController1Ev)(IOCPUInterruptController *this);
  void (__cdecl *__ZN24IOCPUInterruptController34_RESERVEDIOCPUInterruptController2Ev)(IOCPUInterruptController *this);
  void (__cdecl *__ZN24IOCPUInterruptController34_RESERVEDIOCPUInterruptController3Ev)(IOCPUInterruptController *this);
  void (__cdecl *__ZN24IOCPUInterruptController34_RESERVEDIOCPUInterruptController4Ev)(IOCPUInterruptController *this);
  void (__cdecl *__ZN24IOCPUInterruptController34_RESERVEDIOCPUInterruptController5Ev)(IOCPUInterruptController *this);
};

/* 619 */
struct IODTNVRAM
{
  struct vtable_IODTNVRAM *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
  __int64 member28;
  __int64 member29;
  __int64 member30;
  __int64 member31;
  __int64 member32;
  __int64 member33;
  __int64 member34;
};

/* 4398 */
struct vtable_IODTNVRAM
{
  __int64 (__fastcall *__ZN9IODTNVRAMD1Ev)(IODTNVRAM *__hidden this);
  __int64 (__fastcall *__ZN9IODTNVRAMD0Ev)(IODTNVRAM *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK9IODTNVRAM12getMetaClassEv)(IODTNVRAM *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN9IODTNVRAM11setPropertyEPK8OSSymbolP8OSObject)(IODTNVRAM *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN9IODTNVRAM14removePropertyEPK8OSSymbol)(IODTNVRAM *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK9IODTNVRAM11getPropertyEPK8OSSymbol)(IODTNVRAM *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK9IODTNVRAM11getPropertyEPKc)(IODTNVRAM *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK9IODTNVRAM12copyPropertyEPK8OSSymbol)(IODTNVRAM *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK9IODTNVRAM12copyPropertyEPKc)(IODTNVRAM *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IODTNVRAM19serializePropertiesEP11OSSerialize)(IODTNVRAM *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN9IODTNVRAM13setPropertiesEP8OSObject)(IODTNVRAM *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IODTNVRAM4initEPS_PK15IORegistryPlane)(IODTNVRAM *this, IORegistryEntry *old, const IORegistryPlane *plane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  UInt8 (__cdecl *__ZN9IODTNVRAM26calculatePartitionChecksumEPh)(IODTNVRAM *this, unsigned __int8 *partitionHeader);
  IOReturn (__cdecl *__ZN9IODTNVRAM15initOFVariablesEv)(IODTNVRAM *this);
  IOReturn (__cdecl *__ZN9IODTNVRAM15syncOFVariablesEv)(IODTNVRAM *this);
  UInt32 (__cdecl *__ZNK9IODTNVRAM17getOFVariableTypeEPK8OSSymbol)(IODTNVRAM *this, const OSSymbol *propSymbol);
  UInt32 (__cdecl *__ZNK9IODTNVRAM17getOFVariablePermEPK8OSSymbol)(IODTNVRAM *this, const OSSymbol *propSymbol);
  bool (__cdecl *__ZN9IODTNVRAM17getOWVariableInfoEjPPK8OSSymbolPjS4_)(IODTNVRAM *this, unsigned int variableNumber, const OSSymbol **propSymbol, unsigned int *propType, unsigned int *propOffset);
  bool (__cdecl *__ZN9IODTNVRAM19convertPropToObjectEPhjS0_jPPK8OSSymbolPP8OSObject)(IODTNVRAM *this, unsigned __int8 *propName, unsigned int propNameLength, unsigned __int8 *propData, unsigned int propDataLength, const OSSymbol **propSymbol, OSObject **propObject);
  bool (__cdecl *__ZN9IODTNVRAM19convertObjectToPropEPhPjPK8OSSymbolP8OSObject)(IODTNVRAM *this, unsigned __int8 *buffer, unsigned int *length, const OSSymbol *propSymbol, OSObject *propObject);
  UInt16 (__cdecl *__ZN9IODTNVRAM18generateOWChecksumEPh)(IODTNVRAM *this, unsigned __int8 *buffer);
  bool (__cdecl *__ZN9IODTNVRAM18validateOWChecksumEPh)(IODTNVRAM *this, unsigned __int8 *buffer);
  void (__cdecl *__ZN9IODTNVRAM16updateOWBootArgsEPK8OSSymbolP8OSObject)(IODTNVRAM *this, const OSSymbol *key, OSObject *value);
  bool (__cdecl *__ZN9IODTNVRAM19searchNVRAMPropertyEP17IONVRAMDescriptorPj)(IODTNVRAM *this, IONVRAMDescriptor *hdr, unsigned int *where);
  IOReturn (__cdecl *__ZN9IODTNVRAM22readNVRAMPropertyType0EP15IORegistryEntryPPK8OSSymbolPP6OSData)(IODTNVRAM *this, IORegistryEntry *entry, const OSSymbol **name, OSData **value);
  IOReturn (__cdecl *__ZN9IODTNVRAM23writeNVRAMPropertyType0EP15IORegistryEntryPK8OSSymbolP6OSData)(IODTNVRAM *this, IORegistryEntry *entry, const OSSymbol *name, OSData *value);
  OSData *(__cdecl *__ZN9IODTNVRAM19unescapeBytesToDataEPKhj)(IODTNVRAM *this, const unsigned __int8 *bytes, unsigned int length);
  OSData *(__cdecl *__ZN9IODTNVRAM16escapeDataToDataEP6OSData)(IODTNVRAM *this, OSData *value);
  IOReturn (__cdecl *__ZN9IODTNVRAM22readNVRAMPropertyType1EP15IORegistryEntryPPK8OSSymbolPP6OSData)(IODTNVRAM *this, IORegistryEntry *entry, const OSSymbol **name, OSData **value);
  IOReturn (__cdecl *__ZN9IODTNVRAM23writeNVRAMPropertyType1EP15IORegistryEntryPK8OSSymbolP6OSData)(IODTNVRAM *this, IORegistryEntry *entry, const OSSymbol *name, OSData *value);
  __int64 (__fastcall *__ZN9IODTNVRAM23registerNVRAMControllerEP17IONVRAMController)(IODTNVRAM *this);
  void (__cdecl *__ZN9IODTNVRAM4syncEv)(IODTNVRAM *this);
  IOReturn (__cdecl *__ZN9IODTNVRAM9readXPRAMEyPhy)(IODTNVRAM *this, IOByteCount64 offset, unsigned __int8 *buffer, IOByteCount64 length);
  IOReturn (__cdecl *__ZN9IODTNVRAM10writeXPRAMEyPhy)(IODTNVRAM *this, IOByteCount64 offset, unsigned __int8 *buffer, IOByteCount64 length);
  IOReturn (__cdecl *__ZN9IODTNVRAM17readNVRAMPropertyEP15IORegistryEntryPPK8OSSymbolPP6OSData)(IODTNVRAM *this, IORegistryEntry *entry, const OSSymbol **name, OSData **value);
  IOReturn (__cdecl *__ZN9IODTNVRAM18writeNVRAMPropertyEP15IORegistryEntryPK8OSSymbolP6OSData)(IODTNVRAM *this, IORegistryEntry *entry, const OSSymbol *name, OSData *value);
  OSDictionary *(__cdecl *__ZN9IODTNVRAM18getNVRAMPartitionsEv)(IODTNVRAM *this);
  IOReturn (__cdecl *__ZN9IODTNVRAM18readNVRAMPartitionEPK8OSSymbolyPhy)(IODTNVRAM *this, const OSSymbol *partitionID, IOByteCount64 offset, unsigned __int8 *buffer, IOByteCount64 length);
  IOReturn (__cdecl *__ZN9IODTNVRAM19writeNVRAMPartitionEPK8OSSymbolyPhy)(IODTNVRAM *this, const OSSymbol *partitionID, IOByteCount64 offset, unsigned __int8 *buffer, IOByteCount64 length);
  IOByteCount (__cdecl *__ZN9IODTNVRAM13savePanicInfoEPhy)(IODTNVRAM *this, unsigned __int8 *buffer, IOByteCount64 length);
  bool (__cdecl *__ZN9IODTNVRAM10safeToSyncEv)(IODTNVRAM *this);
};

/* 2468 */
struct IONVRAMDescriptor
{
  unsigned __int32 format : 4;
  unsigned __int32 marker : 1;
  unsigned __int32 bridgeCount : 3;
  unsigned __int32 busNum : 2;
  unsigned __int32 bridgeDevices : 30;
  unsigned __int32 functionNum : 3;
  unsigned __int32 deviceNum : 5;
};

/* 620 */
struct IODMAController
{
  struct vtable_IODMAController *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
};

/* 4402 */
struct vtable_IODMAController
{
  __int64 (__fastcall *__ZN15IODMAControllerD1Ev)(IODMAController *__hidden this);
  __int64 (__fastcall *__ZN15IODMAControllerD0Ev)(IODMAController *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15IODMAController12getMetaClassEv)(IODMAController *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN15IODMAController5startEPS_)(IODMAController *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  void (__cdecl *__ZN15IODMAController21registerDMAControllerEj)(IODMAController *this, UInt32 options);
  void (__fastcall __noreturn *___cxa_pure_virtual)();
  void (__fastcall __noreturn *___cxa_pure_virtual268)();
  void (__fastcall __noreturn *___cxa_pure_virtual269)();
  void (__cdecl *__ZN15IODMAController18completeDMACommandEP16IODMAEventSourceP12IODMACommand)(IODMAController *this, IODMAEventSource *dmaES, IODMACommand *dmaCommand);
  void (__cdecl *__ZN15IODMAController16notifyDMACommandEP16IODMAEventSourceP12IODMACommandiyy)(IODMAController *this, IODMAEventSource *dmaES, IODMACommand *dmaCommand, kern_return_t status, IOByteCount64 actualByteCount, UInt64 timeStamp);
  void (__fastcall __noreturn *___cxa_pure_virtual272)();
  void (__fastcall __noreturn *___cxa_pure_virtual273)();
  void (__fastcall __noreturn *___cxa_pure_virtual274)();
  void (__fastcall __noreturn *___cxa_pure_virtual275)();
  void (__fastcall __noreturn *___cxa_pure_virtual276)();
  void (__fastcall __noreturn *___cxa_pure_virtual277)();
  void (__fastcall __noreturn *___cxa_pure_virtual278)();
};

/* 621 */
struct IODMAController::MetaClass
{
  struct vtable_IODMAController::MetaClass *vtable;
};

/* 4404 */
struct vtable_IODMAController::MetaClass
{
  __int64 (__fastcall *__ZN15IODMAController9MetaClassD1Ev)(IODMAController::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IODMAController9MetaClassD0Ev)(IODMAController::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IODMAController9MetaClass5allocEv)(IODMAController::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 624 */
struct IOInterruptController::MetaClass
{
  struct vtable_IOInterruptController::MetaClass *vtable;
};

/* 4410 */
struct vtable_IOInterruptController::MetaClass
{
  __int64 (__fastcall *__ZN21IOInterruptController9MetaClassD1Ev)(IOInterruptController::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN21IOInterruptController9MetaClassD0Ev)(IOInterruptController::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK21IOInterruptController9MetaClass5allocEv)(IOInterruptController::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 625 */
struct IOMachPort
{
  struct vtable_IOMachPort *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 4414 */
struct vtable_IOMachPort
{
  __int64 (__fastcall *__ZN10IOMachPortD1Ev)(IOMachPort *__hidden this);
  __int64 (__fastcall *__ZN10IOMachPortD0Ev)(IOMachPort *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK10IOMachPort12getMetaClassEv)(IOMachPort *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN10IOMachPort4freeEv)(IOMachPort *__hidden this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 626 */
struct IOUserIterator
{
  struct vtable_IOUserIterator *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4418 */
struct vtable_IOUserIterator
{
  __int64 (__fastcall *__ZN14IOUserIteratorD1Ev)(IOUserIterator *__hidden this);
  __int64 (__fastcall *__ZN14IOUserIteratorD0Ev)(IOUserIterator *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK14IOUserIterator12getMetaClassEv)(IOUserIterator *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZN14IOUserIterator4initEv)(IOUserIterator *__hidden this);
  __int64 (__fastcall *__ZN14IOUserIterator4freeEv)(IOUserIterator *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN14IOUserIterator5resetEv)(IOUserIterator *__hidden this);
  bool (__cdecl *__ZN14IOUserIterator7isValidEv)(IOUserIterator *__hidden this);
  OSObject *(__cdecl *__ZN14IOUserIterator13getNextObjectEv)(IOUserIterator *__hidden this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator0Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator1Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator2Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator3Ev)(OSIterator *this);
  __int64 (__fastcall *__ZN14IOUserIterator14copyNextObjectEv)(IOUserIterator *__hidden this);
};

/* 627 */
struct IOUserNotification
{
  struct vtable_IOUserNotification *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4422 */
struct vtable_IOUserNotification
{
  __int64 (__fastcall *__ZN18IOUserNotificationD1Ev)(IOUserNotification *__hidden this);
  __int64 (__fastcall *__ZN18IOUserNotificationD0Ev)(IOUserNotification *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK18IOUserNotification12getMetaClassEv)(IOUserNotification *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZN14IOUserIterator4initEv)(IOUserIterator *__hidden this);
  __int64 (__fastcall *__ZN18IOUserNotification4freeEv)(IOUserNotification *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN18IOUserNotification5resetEv)(IOUserNotification *__hidden this);
  bool (__cdecl *__ZN18IOUserNotification7isValidEv)(IOUserNotification *__hidden this);
  OSObject *(__cdecl *__ZN14IOUserIterator13getNextObjectEv)(IOUserIterator *__hidden this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator0Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator1Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator2Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator3Ev)(OSIterator *this);
  __int64 (__fastcall *__ZN14IOUserIterator14copyNextObjectEv)(IOUserIterator *__hidden this);
  __int64 (__fastcall *__ZN18IOUserNotification15setNotificationEP10IONotifier)(IOUserNotification *__hidden this, IONotifier *);
};

/* 628 */
struct IOUserNotification::MetaClass
{
  struct vtable_IOUserNotification::MetaClass *vtable;
};

/* 4424 */
struct vtable_IOUserNotification::MetaClass
{
  __int64 (__fastcall *__ZN18IOUserNotification9MetaClassD1Ev)(IOUserNotification::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN18IOUserNotification9MetaClassD0Ev)(IOUserNotification::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK18IOUserNotification9MetaClass5allocEv)(IOUserNotification::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 629 */
struct IOServiceUserNotification
{
  struct vtable_IOServiceUserNotification *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
};

/* 4426 */
struct vtable_IOServiceUserNotification
{
  __int64 (__fastcall *__ZN25IOServiceUserNotificationD1Ev)(IOServiceUserNotification *__hidden this);
  __int64 (__fastcall *__ZN25IOServiceUserNotificationD0Ev)(IOServiceUserNotification *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK25IOServiceUserNotification12getMetaClassEv)(IOServiceUserNotification *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZN14IOUserIterator4initEv)(IOUserIterator *__hidden this);
  __int64 (__fastcall *__ZN25IOServiceUserNotification4freeEv)(IOServiceUserNotification *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN18IOUserNotification5resetEv)(IOUserNotification *__hidden this);
  bool (__cdecl *__ZN18IOUserNotification7isValidEv)(IOUserNotification *__hidden this);
  OSObject *(__cdecl *__ZN25IOServiceUserNotification13getNextObjectEv)(IOServiceUserNotification *__hidden this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator0Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator1Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator2Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator3Ev)(OSIterator *this);
  __int64 (__fastcall *__ZN25IOServiceUserNotification14copyNextObjectEv)(IOServiceUserNotification *__hidden this);
  __int64 (__fastcall *__ZN18IOUserNotification15setNotificationEP10IONotifier)(IOUserNotification *__hidden this, IONotifier *);
  _QWORD (__cdecl *__ZN25IOServiceUserNotification4initEP8ipc_portjPvmb)(IOServiceUserNotification *__hidden this, ipc_port *, unsigned int, void *, unsigned __int64, bool);
  __int64 (__fastcall *__ZN25IOServiceUserNotification7handlerEPvP9IOService)(IOServiceUserNotification *__hidden this, void *, IOService *);
};

/* 630 */
struct IOServiceMessageUserNotification
{
  struct vtable_IOServiceMessageUserNotification *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
};

/* 4430 */
struct vtable_IOServiceMessageUserNotification
{
  __int64 (__fastcall *__ZN32IOServiceMessageUserNotificationD1Ev)(IOServiceMessageUserNotification *__hidden this);
  __int64 (__fastcall *__ZN32IOServiceMessageUserNotificationD0Ev)(IOServiceMessageUserNotification *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK32IOServiceMessageUserNotification12getMetaClassEv)(IOServiceMessageUserNotification *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZN14IOUserIterator4initEv)(IOUserIterator *__hidden this);
  __int64 (__fastcall *__ZN32IOServiceMessageUserNotification4freeEv)(IOServiceMessageUserNotification *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN18IOUserNotification5resetEv)(IOUserNotification *__hidden this);
  bool (__cdecl *__ZN18IOUserNotification7isValidEv)(IOUserNotification *__hidden this);
  OSObject *(__cdecl *__ZN32IOServiceMessageUserNotification13getNextObjectEv)(IOServiceMessageUserNotification *__hidden this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator0Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator1Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator2Ev)(OSIterator *this);
  void (__cdecl *__ZN10OSIterator20_RESERVEDOSIterator3Ev)(OSIterator *this);
  __int64 (__fastcall *__ZN32IOServiceMessageUserNotification14copyNextObjectEv)(IOServiceMessageUserNotification *__hidden this);
  __int64 (__fastcall *__ZN18IOUserNotification15setNotificationEP10IONotifier)(IOUserNotification *__hidden this, IONotifier *);
  _QWORD (__cdecl *__ZN32IOServiceMessageUserNotification4initEP8ipc_portjPvmmb)(IOServiceMessageUserNotification *__hidden this, ipc_port *, unsigned int, void *, unsigned __int64, unsigned __int64, bool);
  _QWORD (__cdecl *__ZN32IOServiceMessageUserNotification7handlerEPvjP9IOServiceS0_m)(IOServiceMessageUserNotification *__hidden this, void *, unsigned int, IOService *, void *, unsigned __int64);
};

/* 632 */
struct IOUserClient::MetaClass
{
  struct vtable_IOUserClient::MetaClass *vtable;
};

/* 4436 */
struct vtable_IOUserClient::MetaClass
{
  __int64 (__fastcall *__ZN12IOUserClient9MetaClassD1Ev)(IOUserClient::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN12IOUserClient9MetaClassD0Ev)(IOUserClient::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK12IOUserClient9MetaClass5allocEv)(IOUserClient::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 633 */
struct IOKitDiagnostics
{
  struct vtable_IOKitDiagnostics *vtable;
  __int64 member1;
};

/* 4438 */
struct vtable_IOKitDiagnostics
{
  __int64 (__fastcall *__ZN16IOKitDiagnosticsD1Ev)(IOKitDiagnostics *__hidden this);
  __int64 (__fastcall *__ZN16IOKitDiagnosticsD0Ev)(IOKitDiagnostics *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK16IOKitDiagnostics9serializeEP11OSSerialize)(IOKitDiagnostics *this, OSSerialize *s);
  const OSMetaClass *(__cdecl *__ZNK16IOKitDiagnostics12getMetaClassEv)(IOKitDiagnostics *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 634 */
struct IOKitDiagnosticsClient
{
  struct vtable_IOKitDiagnosticsClient *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
};

/* 4442 */
struct vtable_IOKitDiagnosticsClient
{
  __int64 (__fastcall *__ZN22IOKitDiagnosticsClientD1Ev)(IOKitDiagnosticsClient *__hidden this);
  __int64 (__fastcall *__ZN22IOKitDiagnosticsClientD0Ev)(IOKitDiagnosticsClient *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK22IOKitDiagnosticsClient12getMetaClassEv)(IOKitDiagnosticsClient *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN12IOUserClient4initEv)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient4freeEv)(IOUserClient *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN12IOUserClient4initEP12OSDictionary)(IOUserClient *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN22IOKitDiagnosticsClient13setPropertiesEP8OSObject)(IOKitDiagnosticsClient *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN22IOKitDiagnosticsClient14externalMethodEjP25IOExternalMethodArgumentsP24IOExternalMethodDispatchP8OSObjectPv)(IOKitDiagnosticsClient *this, u_int32_t selector, IOExternalMethodArguments *args, IOExternalMethodDispatch *dispatch, OSObject *target, void *reference);
  IOReturn (__cdecl *__ZN12IOUserClient24registerNotificationPortEP8ipc_portjy)(IOUserClient *this, ipc_port_t port, unsigned int type, uint64_t refCon);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient0Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient1Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient2Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient3Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient4Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient5Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient6Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient7Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient8Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient9Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient10Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient11Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient12Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient13Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient14Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient15Ev)(IOUserClient *this);
  bool (__cdecl *__ZN12IOUserClient12initWithTaskEP4taskPvjP12OSDictionary)(IOUserClient *this, struct task *owningTask, void *securityToken, unsigned int type, OSDictionary *properties);
  bool (__cdecl *__ZN12IOUserClient12initWithTaskEP4taskPvj)(IOUserClient *this, struct task *owningTask, void *securityToken, unsigned int type);
  IOReturn (__cdecl *__ZN22IOKitDiagnosticsClient11clientCloseEv)(IOKitDiagnosticsClient *this);
  IOReturn (__cdecl *__ZN12IOUserClient10clientDiedEv)(IOUserClient *this);
  IOService *(__cdecl *__ZN12IOUserClient10getServiceEv)(IOUserClient *this);
  IOReturn (__cdecl *__ZN12IOUserClient24registerNotificationPortEP8ipc_portjj)(IOUserClient *this, ipc_port_t port, unsigned int type, unsigned int refCon);
  IOReturn (__cdecl *__ZN12IOUserClient24getNotificationSemaphoreEjPP9semaphore)(IOUserClient *this, unsigned int notification_type, semaphore **semaphore);
  IOReturn (__cdecl *__ZN12IOUserClient13connectClientEPS_)(IOUserClient *this, IOUserClient *client);
  IOReturn (__cdecl *__ZN12IOUserClient19clientMemoryForTypeEjPjPP18IOMemoryDescriptor)(IOUserClient *this, unsigned int type, unsigned int *options, IOMemoryDescriptor **memory);
  IOReturn (__cdecl *__ZN12IOUserClient20exportObjectToClientEP4taskP8OSObjectPS3_)(IOUserClient *this, struct task *task, OSObject *obj, OSObject **clientObj);
  IOExternalMethod *(__cdecl *__ZN12IOUserClient25getExternalMethodForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalAsyncMethod *(__cdecl *__ZN12IOUserClient30getExternalAsyncMethodForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalMethod *(__cdecl *__ZN12IOUserClient26getTargetAndMethodForIndexEPP9IOServicej)(IOUserClient *this, IOService **targetP, unsigned int index);
  IOExternalAsyncMethod *(__cdecl *__ZN12IOUserClient31getAsyncTargetAndMethodForIndexEPP9IOServicej)(IOUserClient *this, IOService **targetP, unsigned int index);
  IOExternalTrap *(__cdecl *__ZN12IOUserClient23getExternalTrapForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalTrap *(__cdecl *__ZN12IOUserClient24getTargetAndTrapForIndexEPP9IOServicej)(IOUserClient *this, IOService **targetP, unsigned int index);
};

/* 635 */
struct IODataQueue
{
  struct vtable_IODataQueue *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4446 */
struct vtable_IODataQueue
{
  __int64 (__fastcall *__ZN11IODataQueueD1Ev)(IODataQueue *__hidden this);
  __int64 (__fastcall *__ZN11IODataQueueD0Ev)(IODataQueue *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11IODataQueue12getMetaClassEv)(IODataQueue *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN11IODataQueue4freeEv)(IODataQueue *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN11IODataQueue29sendDataAvailableNotificationEv)(IODataQueue *this);
  Boolean (__cdecl *__ZN11IODataQueue16initWithCapacityEj)(IODataQueue *this, unsigned int size);
  Boolean (__cdecl *__ZN11IODataQueue15initWithEntriesEjj)(IODataQueue *this, unsigned int numEntries, unsigned int entrySize);
  Boolean (__cdecl *__ZN11IODataQueue7enqueueEPvj)(IODataQueue *this, void *data, unsigned int dataSize);
  void (__cdecl *__ZN11IODataQueue19setNotificationPortEP8ipc_port)(IODataQueue *this, ipc_port_t port);
  IOMemoryDescriptor *(__cdecl *__ZN11IODataQueue19getMemoryDescriptorEv)(IODataQueue *this);
};

/* 636 */
struct IOSharedDataQueue
{
  struct vtable_IOSharedDataQueue *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
};

/* 2521 */
typedef struct _IODataQueueEntry IODataQueueEntry;

/* 4450 */
struct vtable_IOSharedDataQueue
{
  __int64 (__fastcall *__ZN17IOSharedDataQueueD1Ev)(IOSharedDataQueue *__hidden this);
  __int64 (__fastcall *__ZN17IOSharedDataQueueD0Ev)(IOSharedDataQueue *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK17IOSharedDataQueue12getMetaClassEv)(IOSharedDataQueue *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN17IOSharedDataQueue4freeEv)(IOSharedDataQueue *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN11IODataQueue29sendDataAvailableNotificationEv)(IODataQueue *this);
  Boolean (__cdecl *__ZN17IOSharedDataQueue16initWithCapacityEj)(IOSharedDataQueue *this, unsigned int size);
  Boolean (__cdecl *__ZN11IODataQueue15initWithEntriesEjj)(IODataQueue *this, unsigned int numEntries, unsigned int entrySize);
  Boolean (__cdecl *__ZN17IOSharedDataQueue7enqueueEPvj)(IOSharedDataQueue *this, void *data, unsigned int dataSize);
  void (__cdecl *__ZN11IODataQueue19setNotificationPortEP8ipc_port)(IODataQueue *this, ipc_port_t port);
  IOMemoryDescriptor *(__cdecl *__ZN17IOSharedDataQueue19getMemoryDescriptorEv)(IOSharedDataQueue *this);
  IODataQueueEntry *(__cdecl *__ZN17IOSharedDataQueue4peekEv)(IOSharedDataQueue *this);
  Boolean (__cdecl *__ZN17IOSharedDataQueue7dequeueEPvPj)(IOSharedDataQueue *this, void *data, unsigned int *dataSize);
  void (__cdecl *__ZN17IOSharedDataQueue27_RESERVEDIOSharedDataQueue0Ev)(IOSharedDataQueue *this);
  void (__cdecl *__ZN17IOSharedDataQueue27_RESERVEDIOSharedDataQueue1Ev)(IOSharedDataQueue *this);
  void (__cdecl *__ZN17IOSharedDataQueue27_RESERVEDIOSharedDataQueue2Ev)(IOSharedDataQueue *this);
  void (__cdecl *__ZN17IOSharedDataQueue27_RESERVEDIOSharedDataQueue3Ev)(IOSharedDataQueue *this);
  void (__cdecl *__ZN17IOSharedDataQueue27_RESERVEDIOSharedDataQueue4Ev)(IOSharedDataQueue *this);
  void (__cdecl *__ZN17IOSharedDataQueue27_RESERVEDIOSharedDataQueue5Ev)(IOSharedDataQueue *this);
  void (__cdecl *__ZN17IOSharedDataQueue27_RESERVEDIOSharedDataQueue6Ev)(IOSharedDataQueue *this);
  void (__cdecl *__ZN17IOSharedDataQueue27_RESERVEDIOSharedDataQueue7Ev)(IOSharedDataQueue *this);
};

/* 2520 */
struct _IODataQueueEntry
{
  UInt32 size;
  UInt8 data[4];
};

/* 637 */
struct IOReporter
{
  struct vtable_IOReporter *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
};

/* 2509 */
typedef struct $D93714C8BBE6D2A33F086219D2EEC2F2 IOReportElementValues;

/* 4454 */
struct vtable_IOReporter
{
  __int64 (__fastcall *__ZN10IOReporterD1Ev)(IOReporter *__hidden this);
  __int64 (__fastcall *__ZN10IOReporterD0Ev)(IOReporter *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK10IOReporter12getMetaClassEv)(IOReporter *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN10IOReporter4freeEv)(IOReporter *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN10IOReporter4initEP9IOService19IOReportChannelTypey)(IOReporter *this, IOService *reportingService, struct IOReportChannelType channelType, uint64_t unit);
  IOReturn (__cdecl *__ZN10IOReporter17handleSwapPrepareEi)(IOReporter *this, int newNChannels);
  IOReturn (__cdecl *__ZN10IOReporter20handleAddChannelSwapEyPK8OSSymbol)(IOReporter *this, u_int64_t channel_id, const OSSymbol *symChannelName);
  void (__cdecl *__ZN10IOReporter17handleSwapCleanupEi)(IOReporter *this, int swapNChannels);
  IOReturn (__cdecl *__ZN10IOReporter21handleConfigureReportEP19IOReportChannelListjPvS2_)(IOReporter *this, IOReportChannelList *channelList, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN10IOReporter18handleUpdateReportEP19IOReportChannelListjPvS2_)(IOReporter *this, IOReportChannelList *channelList, uint32_t action, void *result, void *destination);
  __int64 (__fastcall *__ZN10IOReporter18handleCreateLegendEv)(IOReporter *__hidden this);
  IOReturn (__cdecl *__ZN10IOReporter19updateChannelValuesEi)(IOReporter *this, int channel_index);
  IOReturn (__cdecl *__ZN10IOReporter16setElementValuesEiP21IOReportElementValuesy)(IOReporter *this, int element_index, IOReportElementValues *values, u_int64_t record_time);
  const IOReportElementValues *(__cdecl *__ZN10IOReporter16getElementValuesEi)(IOReporter *this, int element_index);
  IOReturn (__cdecl *__ZN10IOReporter20getFirstElementIndexEyPi)(IOReporter *this, u_int64_t channel_id, int *element_index);
  IOReturn (__cdecl *__ZN10IOReporter15getChannelIndexEyPi)(IOReporter *this, u_int64_t channel_id, int *channel_index);
  IOReturn (__cdecl *__ZN10IOReporter17getChannelIndicesEyPiS0_)(IOReporter *this, u_int64_t channel_id, int *channel_index, int *element_index);
  IOReturn (__cdecl *__ZN10IOReporter17copyElementValuesEiP21IOReportElementValues)(IOReporter *this, int element_index, IOReportElementValues *elementValues);
};

/* 2508 */
struct $D93714C8BBE6D2A33F086219D2EEC2F2
{
  uint64_t v[4];
};

/* 638 */
struct IOSimpleReporter
{
  struct vtable_IOSimpleReporter *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
};

/* 4458 */
struct vtable_IOSimpleReporter
{
  __int64 (__fastcall *__ZN16IOSimpleReporterD1Ev)(IOSimpleReporter *__hidden this);
  __int64 (__fastcall *__ZN16IOSimpleReporterD0Ev)(IOSimpleReporter *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK16IOSimpleReporter12getMetaClassEv)(IOSimpleReporter *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN10IOReporter4freeEv)(IOReporter *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN10IOReporter4initEP9IOService19IOReportChannelTypey)(IOReporter *this, IOService *reportingService, struct IOReportChannelType channelType, uint64_t unit);
  IOReturn (__cdecl *__ZN10IOReporter17handleSwapPrepareEi)(IOReporter *this, int newNChannels);
  IOReturn (__cdecl *__ZN10IOReporter20handleAddChannelSwapEyPK8OSSymbol)(IOReporter *this, u_int64_t channel_id, const OSSymbol *symChannelName);
  void (__cdecl *__ZN10IOReporter17handleSwapCleanupEi)(IOReporter *this, int swapNChannels);
  IOReturn (__cdecl *__ZN10IOReporter21handleConfigureReportEP19IOReportChannelListjPvS2_)(IOReporter *this, IOReportChannelList *channelList, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN10IOReporter18handleUpdateReportEP19IOReportChannelListjPvS2_)(IOReporter *this, IOReportChannelList *channelList, uint32_t action, void *result, void *destination);
  __int64 (__fastcall *__ZN10IOReporter18handleCreateLegendEv)(IOReporter *__hidden this);
  IOReturn (__cdecl *__ZN10IOReporter19updateChannelValuesEi)(IOReporter *this, int channel_index);
  IOReturn (__cdecl *__ZN10IOReporter16setElementValuesEiP21IOReportElementValuesy)(IOReporter *this, int element_index, IOReportElementValues *values, u_int64_t record_time);
  const IOReportElementValues *(__cdecl *__ZN10IOReporter16getElementValuesEi)(IOReporter *this, int element_index);
  IOReturn (__cdecl *__ZN10IOReporter20getFirstElementIndexEyPi)(IOReporter *this, u_int64_t channel_id, int *element_index);
  IOReturn (__cdecl *__ZN10IOReporter15getChannelIndexEyPi)(IOReporter *this, u_int64_t channel_id, int *channel_index);
  IOReturn (__cdecl *__ZN10IOReporter17getChannelIndicesEyPiS0_)(IOReporter *this, u_int64_t channel_id, int *channel_index, int *element_index);
  IOReturn (__cdecl *__ZN10IOReporter17copyElementValuesEiP21IOReportElementValues)(IOReporter *this, int element_index, IOReportElementValues *elementValues);
  bool (__cdecl *__ZN16IOSimpleReporter8initWithEP9IOServicety)(IOSimpleReporter *this, IOService *reportingService, uint16_t categories, uint64_t unit);
};

/* 639 */
struct IOStateReporter
{
  struct vtable_IOStateReporter *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
};

/* 4462 */
struct vtable_IOStateReporter
{
  __int64 (__fastcall *__ZN15IOStateReporterD1Ev)(IOStateReporter *__hidden this);
  __int64 (__fastcall *__ZN15IOStateReporterD0Ev)(IOStateReporter *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15IOStateReporter12getMetaClassEv)(IOStateReporter *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN15IOStateReporter4freeEv)(IOStateReporter *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN10IOReporter4initEP9IOService19IOReportChannelTypey)(IOReporter *this, IOService *reportingService, struct IOReportChannelType channelType, uint64_t unit);
  IOReturn (__cdecl *__ZN15IOStateReporter17handleSwapPrepareEi)(IOStateReporter *this, int newNChannels);
  IOReturn (__cdecl *__ZN15IOStateReporter20handleAddChannelSwapEyPK8OSSymbol)(IOStateReporter *this, u_int64_t channel_id, const OSSymbol *symChannelName);
  void (__cdecl *__ZN15IOStateReporter17handleSwapCleanupEi)(IOStateReporter *this, int swapNChannels);
  IOReturn (__cdecl *__ZN10IOReporter21handleConfigureReportEP19IOReportChannelListjPvS2_)(IOReporter *this, IOReportChannelList *channelList, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN10IOReporter18handleUpdateReportEP19IOReportChannelListjPvS2_)(IOReporter *this, IOReportChannelList *channelList, uint32_t action, void *result, void *destination);
  __int64 (__fastcall *__ZN10IOReporter18handleCreateLegendEv)(IOReporter *__hidden this);
  IOReturn (__cdecl *__ZN15IOStateReporter19updateChannelValuesEi)(IOStateReporter *this, int channel_index);
  IOReturn (__cdecl *__ZN10IOReporter16setElementValuesEiP21IOReportElementValuesy)(IOReporter *this, int element_index, IOReportElementValues *values, u_int64_t record_time);
  const IOReportElementValues *(__cdecl *__ZN10IOReporter16getElementValuesEi)(IOReporter *this, int element_index);
  IOReturn (__cdecl *__ZN10IOReporter20getFirstElementIndexEyPi)(IOReporter *this, u_int64_t channel_id, int *element_index);
  IOReturn (__cdecl *__ZN10IOReporter15getChannelIndexEyPi)(IOReporter *this, u_int64_t channel_id, int *channel_index);
  IOReturn (__cdecl *__ZN10IOReporter17getChannelIndicesEyPiS0_)(IOReporter *this, u_int64_t channel_id, int *channel_index, int *element_index);
  IOReturn (__cdecl *__ZN10IOReporter17copyElementValuesEiP21IOReportElementValues)(IOReporter *this, int element_index, IOReportElementValues *elementValues);
  bool (__cdecl *__ZN15IOStateReporter8initWithEP9IOServicetsy)(IOStateReporter *this, IOService *reportingService, uint16_t categories, __int16 nstates, uint64_t unit);
  IOReturn (__cdecl *__ZN15IOStateReporter23handleSetStateByIndicesEiiyy)(IOStateReporter *this, int channel_index, int new_state_index, u_int64_t last_intransition, u_int64_t prev_state_residency);
  IOReturn (__cdecl *__ZN15IOStateReporter16handleSetStateIDEyiy)(IOStateReporter *this, u_int64_t channel_id, int state_index, u_int64_t state_id);
  IOReturn (__cdecl *__ZN15IOStateReporter35handleOverrideChannelStateByIndicesEiiyyy)(IOStateReporter *this, int channel_index, int state_index, u_int64_t time_in_state, u_int64_t intransitions, u_int64_t last_intransition);
  IOReturn (__cdecl *__ZN15IOStateReporter36handleIncrementChannelStateByIndicesEiiyyy)(IOStateReporter *this, int channel_index, int state_index, u_int64_t time_in_state, u_int64_t intransitions, u_int64_t last_intransition);
};

/* 640 */
struct IOHistogramReporter
{
  struct vtable_IOHistogramReporter *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
};

/* 2617 */
typedef struct $FCB00A11B4535F29AAC7A131B72B7D4F IOHistogramSegmentConfig;

/* 4466 */
struct vtable_IOHistogramReporter
{
  __int64 (__fastcall *__ZN19IOHistogramReporterD1Ev)(IOHistogramReporter *__hidden this);
  __int64 (__fastcall *__ZN19IOHistogramReporterD0Ev)(IOHistogramReporter *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK19IOHistogramReporter12getMetaClassEv)(IOHistogramReporter *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN19IOHistogramReporter4freeEv)(IOHistogramReporter *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN10IOReporter4initEP9IOService19IOReportChannelTypey)(IOReporter *this, IOService *reportingService, struct IOReportChannelType channelType, uint64_t unit);
  IOReturn (__cdecl *__ZN10IOReporter17handleSwapPrepareEi)(IOReporter *this, int newNChannels);
  IOReturn (__cdecl *__ZN10IOReporter20handleAddChannelSwapEyPK8OSSymbol)(IOReporter *this, u_int64_t channel_id, const OSSymbol *symChannelName);
  void (__cdecl *__ZN10IOReporter17handleSwapCleanupEi)(IOReporter *this, int swapNChannels);
  IOReturn (__cdecl *__ZN10IOReporter21handleConfigureReportEP19IOReportChannelListjPvS2_)(IOReporter *this, IOReportChannelList *channelList, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN10IOReporter18handleUpdateReportEP19IOReportChannelListjPvS2_)(IOReporter *this, IOReportChannelList *channelList, uint32_t action, void *result, void *destination);
  __int64 (__fastcall *__ZN19IOHistogramReporter18handleCreateLegendEv)(IOHistogramReporter *__hidden this);
  IOReturn (__cdecl *__ZN10IOReporter19updateChannelValuesEi)(IOReporter *this, int channel_index);
  IOReturn (__cdecl *__ZN10IOReporter16setElementValuesEiP21IOReportElementValuesy)(IOReporter *this, int element_index, IOReportElementValues *values, u_int64_t record_time);
  const IOReportElementValues *(__cdecl *__ZN10IOReporter16getElementValuesEi)(IOReporter *this, int element_index);
  IOReturn (__cdecl *__ZN10IOReporter20getFirstElementIndexEyPi)(IOReporter *this, u_int64_t channel_id, int *element_index);
  IOReturn (__cdecl *__ZN10IOReporter15getChannelIndexEyPi)(IOReporter *this, u_int64_t channel_id, int *channel_index);
  IOReturn (__cdecl *__ZN10IOReporter17getChannelIndicesEyPiS0_)(IOReporter *this, u_int64_t channel_id, int *channel_index, int *element_index);
  IOReturn (__cdecl *__ZN10IOReporter17copyElementValuesEiP21IOReportElementValues)(IOReporter *this, int element_index, IOReportElementValues *elementValues);
  bool (__cdecl *__ZN19IOHistogramReporter8initWithEP9IOServicetyPK8OSSymbolyiP24IOHistogramSegmentConfig)(IOHistogramReporter *this, IOService *reportingService, uint16_t categories, u_int64_t channelID, const OSSymbol *channelName, uint64_t unit, int nSegments, IOHistogramSegmentConfig *config);
};

/* 2616 */
struct $FCB00A11B4535F29AAC7A131B72B7D4F
{
  uint32_t base_bucket_width;
  uint32_t scale_flag;
  uint32_t segment_idx;
  uint32_t segment_bucket_count;
};

/* 641 */
struct IOReportLegend
{
  struct vtable_IOReportLegend *vtable;
  __int64 member1;
  __int64 member2;
};

/* 4470 */
struct vtable_IOReportLegend
{
  __int64 (__fastcall *__ZN14IOReportLegendD1Ev)(IOReportLegend *__hidden this);
  __int64 (__fastcall *__ZN14IOReportLegendD0Ev)(IOReportLegend *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK14IOReportLegend12getMetaClassEv)(IOReportLegend *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN14IOReportLegend4freeEv)(IOReportLegend *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 642 */
struct IORTC
{
  struct vtable_IORTC *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
};

/* 4474 */
struct vtable_IORTC
{
  __int64 (__fastcall *__ZN5IORTCD1Ev)(IORTC *__hidden this);
  __int64 (__fastcall *__ZN5IORTCD0Ev)(IORTC *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK5IORTC12getMetaClassEv)(IORTC *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  void (__fastcall __noreturn *___cxa_pure_virtual)();
  void (__fastcall __noreturn *___cxa_pure_virtual267)();
  void (__cdecl *__ZN5IORTC15getUTCTimeOfDayEPmPj)(IORTC *this, unsigned __int64 *secs, unsigned int *nsecs);
  void (__cdecl *__ZN5IORTC15setUTCTimeOfDayEmj)(IORTC *this, unsigned __int64 secs, unsigned int nsecs);
  void (__fastcall __noreturn *___cxa_pure_virtual270)();
  IOReturn (__cdecl *__ZN5IORTC23getMonotonicClockOffsetEPx)(IORTC *this, __int64 *usecs);
  IOReturn (__cdecl *__ZN5IORTC23setMonotonicClockOffsetEx)(IORTC *this, __int64 usecs);
  IOReturn (__cdecl *__ZN5IORTC29getMonotonicClockAndTimestampEPyS0_)(IORTC *this, unsigned __int64 *usecs, unsigned __int64 *mach_absolute_time);
  void (__cdecl *__ZN5IORTC15_RESERVEDIORTC0Ev)(IORTC *this);
  void (__cdecl *__ZN5IORTC15_RESERVEDIORTC1Ev)(IORTC *this);
  void (__cdecl *__ZN5IORTC15_RESERVEDIORTC2Ev)(IORTC *this);
  void (__cdecl *__ZN5IORTC15_RESERVEDIORTC3Ev)(IORTC *this);
  void (__cdecl *__ZN5IORTC15_RESERVEDIORTC4Ev)(IORTC *this);
  void (__cdecl *__ZN5IORTC15_RESERVEDIORTC5Ev)(IORTC *this);
  void (__cdecl *__ZN5IORTC15_RESERVEDIORTC6Ev)(IORTC *this);
  void (__cdecl *__ZN5IORTC15_RESERVEDIORTC7Ev)(IORTC *this);
};

/* 643 */
struct IORTC::MetaClass
{
  struct vtable_IORTC::MetaClass *vtable;
};

/* 4476 */
struct vtable_IORTC::MetaClass
{
  __int64 (__fastcall *__ZN5IORTC9MetaClassD1Ev)(IORTC::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN5IORTC9MetaClassD0Ev)(IORTC::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK5IORTC9MetaClass5allocEv)(IORTC::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 644 */
struct OSUserMetaClass
{
  struct vtable_OSUserMetaClass *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
};

/* 4478 */
struct vtable_OSUserMetaClass
{
  __int64 (__fastcall *__ZN15OSUserMetaClassD1Ev)(OSUserMetaClass *__hidden this);
  __int64 (__fastcall *__ZN15OSUserMetaClassD0Ev)(OSUserMetaClass *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15OSUserMetaClass12getMetaClassEv)(OSUserMetaClass *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSUserMetaClass8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN15OSUserMetaClass4freeEv)(OSUserMetaClass *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 645 */
struct IOUserService
{
  struct vtable_IOUserService *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
};

/* 4482 */
struct vtable_IOUserService
{
  __int64 (__fastcall *__ZN13IOUserServiceD1Ev)(IOUserService *__hidden this);
  __int64 (__fastcall *__ZN13IOUserServiceD0Ev)(IOUserService *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK13IOUserService12getMetaClassEv)(IOUserService *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN13IOUserService13setPropertiesEP8OSObject)(IOUserService *__hidden this, OSObject *);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN13IOUserService5startEPS_)(IOUserService *__hidden this, IOService *);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
};

/* 646 */
struct IOUserServer
{
  struct vtable_IOUserServer *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
  __int64 member28;
  __int64 member29;
  __int64 member30;
  __int64 member31;
  __int64 member32;
  __int64 member33;
  __int64 member34;
  __int64 member35;
  __int64 member36;
};

/* 4486 */
struct vtable_IOUserServer
{
  __int64 (__fastcall *__ZN12IOUserServerD1Ev)(IOUserServer *__hidden this);
  __int64 (__fastcall *__ZN12IOUserServerD0Ev)(IOUserServer *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK12IOUserServer12getMetaClassEv)(IOUserServer *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN12IOUserServer8DispatchE5IORPC)(__int64, __int64, __int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN12IOUserClient4initEv)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserServer4freeEv)(IOUserServer *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN12IOUserClient4initEP12OSDictionary)(IOUserClient *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN12IOUserServer13setPropertiesEP8OSObject)(IOUserServer *__hidden this, OSObject *);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN9IOService5startEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN12IOUserServer4stopEPS_)(IOUserServer *__hidden this, IOService *);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN12IOUserServer8finalizeEj)(IOUserServer *this, unsigned int);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN12IOUserServer13setPowerStateEmPS_)(IOUserServer *__hidden this, unsigned __int64, IOService *);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN12IOUserServer22powerStateWillChangeToEmmPS_)(IOUserServer *__hidden this, unsigned __int64, unsigned __int64, IOService *);
  IOReturn (__cdecl *__ZN12IOUserServer21powerStateDidChangeToEmmPS_)(IOUserServer *__hidden this, unsigned __int64, unsigned __int64, IOService *);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  __int64 (__fastcall *__ZN12IOUserServer14externalMethodEjP25IOExternalMethodArgumentsP24IOExternalMethodDispatchP8OSObjectPv)(IOUserServer *__hidden this, unsigned int, IOExternalMethodArguments *, IOExternalMethodDispatch *, OSObject *, void *);
  IOReturn (__cdecl *__ZN12IOUserClient24registerNotificationPortEP8ipc_portjy)(IOUserClient *this, ipc_port_t port, unsigned int type, uint64_t refCon);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient0Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient1Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient2Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient3Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient4Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient5Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient6Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient7Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient8Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient9Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient10Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient11Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient12Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient13Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient14Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient15Ev)(IOUserClient *this);
  bool (__cdecl *__ZN12IOUserClient12initWithTaskEP4taskPvjP12OSDictionary)(IOUserClient *this, struct task *owningTask, void *securityToken, unsigned int type, OSDictionary *properties);
  bool (__cdecl *__ZN12IOUserClient12initWithTaskEP4taskPvj)(IOUserClient *this, struct task *owningTask, void *securityToken, unsigned int type);
  IOReturn (__cdecl *__ZN12IOUserServer11clientCloseEv)(IOUserServer *__hidden this);
  IOReturn (__cdecl *__ZN12IOUserClient10clientDiedEv)(IOUserClient *this);
  IOService *(__cdecl *__ZN12IOUserClient10getServiceEv)(IOUserClient *this);
  IOReturn (__cdecl *__ZN12IOUserClient24registerNotificationPortEP8ipc_portjj)(IOUserClient *this, ipc_port_t port, unsigned int type, unsigned int refCon);
  IOReturn (__cdecl *__ZN12IOUserClient24getNotificationSemaphoreEjPP9semaphore)(IOUserClient *this, unsigned int notification_type, semaphore **semaphore);
  IOReturn (__cdecl *__ZN12IOUserClient13connectClientEPS_)(IOUserClient *this, IOUserClient *client);
  IOReturn (__cdecl *__ZN12IOUserClient19clientMemoryForTypeEjPjPP18IOMemoryDescriptor)(IOUserClient *this, unsigned int type, unsigned int *options, IOMemoryDescriptor **memory);
  IOReturn (__cdecl *__ZN12IOUserClient20exportObjectToClientEP4taskP8OSObjectPS3_)(IOUserClient *this, struct task *task, OSObject *obj, OSObject **clientObj);
  IOExternalMethod *(__cdecl *__ZN12IOUserClient25getExternalMethodForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalAsyncMethod *(__cdecl *__ZN12IOUserClient30getExternalAsyncMethodForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalMethod *(__cdecl *__ZN12IOUserClient26getTargetAndMethodForIndexEPP9IOServicej)(IOUserClient *this, IOService **targetP, unsigned int index);
  IOExternalAsyncMethod *(__cdecl *__ZN12IOUserClient31getAsyncTargetAndMethodForIndexEPP9IOServicej)(IOUserClient *this, IOService **targetP, unsigned int index);
  IOExternalTrap *(__cdecl *__ZN12IOUserClient23getExternalTrapForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalTrap *(__cdecl *__ZN12IOUserServer24getTargetAndTrapForIndexEPP9IOServicej)(IOUserServer *__hidden this, IOService **, unsigned int);
};

/* 647 */
struct RootDomainUserClient
{
  struct vtable_RootDomainUserClient *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
  __int64 member28;
};

/* 4490 */
struct vtable_RootDomainUserClient
{
  __int64 (__fastcall *__ZN20RootDomainUserClientD1Ev)(RootDomainUserClient *__hidden this);
  __int64 (__fastcall *__ZN20RootDomainUserClientD0Ev)(RootDomainUserClient *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK20RootDomainUserClient12getMetaClassEv)(RootDomainUserClient *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN12IOUserClient4initEv)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient4freeEv)(IOUserClient *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN12IOUserClient4initEP12OSDictionary)(IOUserClient *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN20RootDomainUserClient5startEPS_)(RootDomainUserClient *this, IOService *provider);
  void (__cdecl *__ZN20RootDomainUserClient4stopEPS_)(RootDomainUserClient *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN20RootDomainUserClient14externalMethodEjP25IOExternalMethodArgumentsP24IOExternalMethodDispatchP8OSObjectPv)(RootDomainUserClient *this, u_int32_t selector, IOExternalMethodArguments *arguments, IOExternalMethodDispatch *dispatch, OSObject *target, void *reference);
  IOReturn (__cdecl *__ZN12IOUserClient24registerNotificationPortEP8ipc_portjy)(IOUserClient *this, ipc_port_t port, unsigned int type, uint64_t refCon);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient0Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient1Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient2Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient3Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient4Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient5Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient6Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient7Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient8Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient22_RESERVEDIOUserClient9Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient10Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient11Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient12Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient13Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient14Ev)(IOUserClient *this);
  void (__cdecl *__ZN12IOUserClient23_RESERVEDIOUserClient15Ev)(IOUserClient *this);
  bool (__cdecl *__ZN20RootDomainUserClient12initWithTaskEP4taskPvjP12OSDictionary)(RootDomainUserClient *this, struct task *owningTask, void *security_id, unsigned int type, OSDictionary *properties);
  bool (__cdecl *__ZN12IOUserClient12initWithTaskEP4taskPvj)(IOUserClient *this, struct task *owningTask, void *securityToken, unsigned int type);
  IOReturn (__cdecl *__ZN20RootDomainUserClient11clientCloseEv)(RootDomainUserClient *this);
  IOReturn (__cdecl *__ZN12IOUserClient10clientDiedEv)(IOUserClient *this);
  IOService *(__cdecl *__ZN12IOUserClient10getServiceEv)(IOUserClient *this);
  IOReturn (__cdecl *__ZN12IOUserClient24registerNotificationPortEP8ipc_portjj)(IOUserClient *this, ipc_port_t port, unsigned int type, unsigned int refCon);
  IOReturn (__cdecl *__ZN12IOUserClient24getNotificationSemaphoreEjPP9semaphore)(IOUserClient *this, unsigned int notification_type, semaphore **semaphore);
  IOReturn (__cdecl *__ZN12IOUserClient13connectClientEPS_)(IOUserClient *this, IOUserClient *client);
  IOReturn (__cdecl *__ZN12IOUserClient19clientMemoryForTypeEjPjPP18IOMemoryDescriptor)(IOUserClient *this, unsigned int type, unsigned int *options, IOMemoryDescriptor **memory);
  IOReturn (__cdecl *__ZN12IOUserClient20exportObjectToClientEP4taskP8OSObjectPS3_)(IOUserClient *this, struct task *task, OSObject *obj, OSObject **clientObj);
  IOExternalMethod *(__cdecl *__ZN12IOUserClient25getExternalMethodForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalAsyncMethod *(__cdecl *__ZN12IOUserClient30getExternalAsyncMethodForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalMethod *(__cdecl *__ZN20RootDomainUserClient26getTargetAndMethodForIndexEPP9IOServicej)(RootDomainUserClient *this, IOService **targetP, unsigned int index);
  IOExternalAsyncMethod *(__cdecl *__ZN12IOUserClient31getAsyncTargetAndMethodForIndexEPP9IOServicej)(IOUserClient *this, IOService **targetP, unsigned int index);
  IOExternalTrap *(__cdecl *__ZN12IOUserClient23getExternalTrapForIndexEj)(IOUserClient *this, unsigned int index);
  IOExternalTrap *(__cdecl *__ZN12IOUserClient24getTargetAndTrapForIndexEPP9IOServicej)(IOUserClient *this, IOService **targetP, unsigned int index);
};

/* 649 */
struct IOWatchDogTimer
{
  struct vtable_IOWatchDogTimer *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
};

/* 4498 */
struct vtable_IOWatchDogTimer
{
  __int64 (__fastcall *__ZN15IOWatchDogTimerD1Ev)(IOWatchDogTimer *__hidden this);
  __int64 (__fastcall *__ZN15IOWatchDogTimerD0Ev)(IOWatchDogTimer *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15IOWatchDogTimer12getMetaClassEv)(IOWatchDogTimer *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IOWatchDogTimer13setPropertiesEP8OSObject)(IOWatchDogTimer *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN15IOWatchDogTimer5startEPS_)(IOWatchDogTimer *this, IOService *provider);
  void (__cdecl *__ZN15IOWatchDogTimer4stopEPS_)(IOWatchDogTimer *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
  void (__fastcall __noreturn *___cxa_pure_virtual)();
  void (__cdecl *__ZN15IOWatchDogTimer25_RESERVEDIOWatchDogTimer0Ev)(IOWatchDogTimer *this);
  void (__cdecl *__ZN15IOWatchDogTimer25_RESERVEDIOWatchDogTimer1Ev)(IOWatchDogTimer *this);
  void (__cdecl *__ZN15IOWatchDogTimer25_RESERVEDIOWatchDogTimer2Ev)(IOWatchDogTimer *this);
  void (__cdecl *__ZN15IOWatchDogTimer25_RESERVEDIOWatchDogTimer3Ev)(IOWatchDogTimer *this);
};

/* 650 */
struct IOWatchDogTimer::MetaClass
{
  struct vtable_IOWatchDogTimer::MetaClass *vtable;
};

/* 4500 */
struct vtable_IOWatchDogTimer::MetaClass
{
  __int64 (__fastcall *__ZN15IOWatchDogTimer9MetaClassD1Ev)(IOWatchDogTimer::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IOWatchDogTimer9MetaClassD0Ev)(IOWatchDogTimer::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IOWatchDogTimer9MetaClass5allocEv)(IOWatchDogTimer::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 651 */
struct IOPerfControlClient
{
  struct vtable_IOPerfControlClient *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
};

/* 4502 */
struct vtable_IOPerfControlClient
{
  __int64 (__fastcall *__ZN19IOPerfControlClientD1Ev)(IOPerfControlClient *__hidden this);
  __int64 (__fastcall *__ZN19IOPerfControlClientD0Ev)(IOPerfControlClient *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK19IOPerfControlClient12getMetaClassEv)(IOPerfControlClient *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  __int64 (__fastcall *__ZN19IOPerfControlClient4initEP9IOServicey)(IOPerfControlClient *__hidden this, IOService *, unsigned __int64);
  __int64 (__fastcall *__ZN19IOPerfControlClient14registerDeviceEP9IOServiceS1_)(IOPerfControlClient *__hidden this, IOService *, IOService *);
  __int64 (__fastcall *__ZN19IOPerfControlClient16unregisterDeviceEP9IOServiceS1_)(IOPerfControlClient *__hidden this, IOService *, IOService *);
  __int64 (__fastcall *__ZN19IOPerfControlClient10workSubmitEP9IOServicePNS_14WorkSubmitArgsE)();
  __int64 (__fastcall *__ZN19IOPerfControlClient18workSubmitAndBeginEP9IOServicePNS_14WorkSubmitArgsEPNS_13WorkBeginArgsE)();
  __int64 (__fastcall *__ZN19IOPerfControlClient9workBeginEP9IOServiceyPNS_13WorkBeginArgsE)();
  __int64 (__fastcall *__ZN19IOPerfControlClient7workEndEP9IOServiceyPNS_11WorkEndArgsEb)();
  __int64 (__fastcall *__ZN19IOPerfControlClient29registerPerformanceControllerENS_23PerfControllerInterfaceE)(char);
};

/* 652 */
struct IOSKRegionMapper
{
  struct vtable_IOSKRegionMapper *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 4506 */
struct vtable_IOSKRegionMapper
{
  __int64 (__fastcall *__ZN16IOSKRegionMapperD1Ev)(IOSKRegionMapper *__hidden this);
  __int64 (__fastcall *__ZN16IOSKRegionMapperD0Ev)(IOSKRegionMapper *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK16IOSKRegionMapper12getMetaClassEv)(IOSKRegionMapper *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN16IOSKRegionMapper4freeEv)(IOSKRegionMapper *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 653 */
struct IOSKMapper
{
  struct vtable_IOSKMapper *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
};

/* 4510 */
struct vtable_IOSKMapper
{
  __int64 (__fastcall *__ZN10IOSKMapperD1Ev)(IOSKMapper *__hidden this);
  __int64 (__fastcall *__ZN10IOSKMapperD0Ev)(IOSKMapper *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK10IOSKMapper12getMetaClassEv)(IOSKMapper *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN10IOSKMapper4freeEv)(IOSKMapper *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 654 */
struct IOSKArena
{
  struct vtable_IOSKArena *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 4514 */
struct vtable_IOSKArena
{
  __int64 (__fastcall *__ZN9IOSKArenaD1Ev)(IOSKArena *__hidden this);
  __int64 (__fastcall *__ZN9IOSKArenaD0Ev)(IOSKArena *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK9IOSKArena12getMetaClassEv)(IOSKArena *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOSKArena4freeEv)(IOSKArena *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 655 */
struct IOSKRegion
{
  struct vtable_IOSKRegion *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
};

/* 4518 */
struct vtable_IOSKRegion
{
  __int64 (__fastcall *__ZN10IOSKRegionD1Ev)(IOSKRegion *__hidden this);
  __int64 (__fastcall *__ZN10IOSKRegionD0Ev)(IOSKRegion *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK10IOSKRegion12getMetaClassEv)(IOSKRegion *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN10IOSKRegion4freeEv)(IOSKRegion *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 656 */
struct IOSKMemoryArray
{
  struct vtable_IOSKMemoryArray *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
};

/* 4522 */
struct vtable_IOSKMemoryArray
{
  __int64 (__fastcall *__ZN15IOSKMemoryArrayD1Ev)(IOSKMemoryArray *__hidden this);
  __int64 (__fastcall *__ZN15IOSKMemoryArrayD0Ev)(IOSKMemoryArray *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15IOSKMemoryArray12getMetaClassEv)(IOSKMemoryArray *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN18IOMemoryDescriptor8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN23IOMultiMemoryDescriptor4freeEv)(IOMultiMemoryDescriptor *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN18IOMemoryDescriptor15initWithOptionsEPvjjP4taskjP8IOMapper)(IOMemoryDescriptor *this, void *buffers, unsigned int count, unsigned int offset, struct task *task, UInt32 options, IOMapper *mapper);
  IOReturn (__cdecl *__ZN23IOMultiMemoryDescriptor12setPurgeableEjPj)(IOMultiMemoryDescriptor *this, UInt32 newState, unsigned int *oldState);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor16performOperationEjyy)(IOMemoryDescriptor *this, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  IOReturn (__cdecl *__ZNK18IOMemoryDescriptor19dmaCommandOperationEjPvj)(IOMemoryDescriptor *this, IOOptionBits op, void *vData, unsigned int dataSize);
  addr64_t (__cdecl *__ZN23IOMultiMemoryDescriptor18getPhysicalSegmentEyPyj)(IOMultiMemoryDescriptor *this, IOByteCount64 offset, unsigned __int64 *length, UInt32 options);
  uint64_t (__cdecl *__ZN23IOMultiMemoryDescriptor16getPreparationIDEv)(IOMultiMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor1Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor2Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor3Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor4Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor5Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor6Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor7Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor8Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor9Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor10Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor11Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor12Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor13Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor14Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor15Ev)(IOMemoryDescriptor *this);
  IODirection (__cdecl *__ZNK18IOMemoryDescriptor12getDirectionEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZNK18IOMemoryDescriptor9getLengthEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor6setTagEj)(IOMemoryDescriptor *this, UInt32 tag);
  IOOptionBits (__cdecl *__ZN18IOMemoryDescriptor6getTagEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor9readBytesEyPvy)(IOMemoryDescriptor *this, IOByteCount64 offset, void *bytes, IOByteCount64 withLength);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor10writeBytesEyPKvy)(IOMemoryDescriptor *this, IOByteCount64 offset, const void *bytes, IOByteCount64 withLength);
  IOReturn (__cdecl *__ZN23IOMultiMemoryDescriptor7prepareEj)(IOMultiMemoryDescriptor *this, IOOptionBits forDirection);
  IOReturn (__cdecl *__ZN23IOMultiMemoryDescriptor8completeEj)(IOMultiMemoryDescriptor *this, IOOptionBits forDirection);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor3mapEj)(IOMemoryDescriptor *this, UInt32 options);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor10setMappingEP4taskyj)(IOMemoryDescriptor *this, struct task *task, mach_vm_address_t mapAddress, UInt32 options);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor8redirectEP4taskb)(IOMemoryDescriptor *this, struct task *safeTask, bool redirect);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor11makeMappingEPS_P4taskyjyy)(IOMemoryDescriptor *this, IOMemoryDescriptor *owner, struct task *intoTask, mach_vm_address_t atAddress, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  void (__cdecl *__ZN18IOMemoryDescriptor10addMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  void (__cdecl *__ZN18IOMemoryDescriptor13removeMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  __int64 (__fastcall *__ZN23IOMultiMemoryDescriptor5doMapEP7_vm_mapPyjyy)();
  __int64 (__fastcall *__ZN18IOMemoryDescriptor7doUnmapEP7_vm_mapyy)();
  bool (__cdecl *__ZN23IOMultiMemoryDescriptor19initWithDescriptorsEPP18IOMemoryDescriptorjjb)(IOMultiMemoryDescriptor *this, IOMemoryDescriptor **descriptors, unsigned int withCount, IOOptionBits withDirection, bool asReference);
};

/* 657 */
struct IOSKMemoryBuffer
{
  struct vtable_IOSKMemoryBuffer *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
  __int64 member28;
  __int64 member29;
  __int64 member30;
};

/* 4526 */
struct vtable_IOSKMemoryBuffer
{
  __int64 (__fastcall *__ZN16IOSKMemoryBufferD1Ev)(IOSKMemoryBuffer *__hidden this);
  __int64 (__fastcall *__ZN16IOSKMemoryBufferD0Ev)(IOSKMemoryBuffer *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK25IOGeneralMemoryDescriptor9serializeEP11OSSerialize)(IOGeneralMemoryDescriptor *this, OSSerialize *s);
  const OSMetaClass *(__cdecl *__ZNK16IOSKMemoryBuffer12getMetaClassEv)(IOSKMemoryBuffer *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN24IOBufferMemoryDescriptor8DispatchE5IORPC)(__int64, __int64, __int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor4freeEv)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  bool (__cdecl *__ZN25IOGeneralMemoryDescriptor15initWithOptionsEPvjjP4taskjP8IOMapper)(IOGeneralMemoryDescriptor *this, void *buffers, unsigned int count, unsigned int offset, struct task *task, UInt32 options, IOMapper *mapper);
  IOReturn (__cdecl *__ZN25IOGeneralMemoryDescriptor12setPurgeableEjPj)(IOGeneralMemoryDescriptor *this, UInt32 newState, unsigned int *oldState);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor16performOperationEjyy)(IOMemoryDescriptor *this, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  IOReturn (__cdecl *__ZNK25IOGeneralMemoryDescriptor19dmaCommandOperationEjPvj)(IOGeneralMemoryDescriptor *this, IOOptionBits op, void *vData, unsigned int dataSize);
  addr64_t (__cdecl *__ZN25IOGeneralMemoryDescriptor18getPhysicalSegmentEyPyj)(IOGeneralMemoryDescriptor *this, IOByteCount64 offset, unsigned __int64 *length, UInt32 options);
  uint64_t (__cdecl *__ZN25IOGeneralMemoryDescriptor16getPreparationIDEv)(IOGeneralMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor1Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor2Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor3Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor4Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor5Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor6Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor7Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor8Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor28_RESERVEDIOMemoryDescriptor9Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor10Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor11Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor12Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor13Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor14Ev)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor29_RESERVEDIOMemoryDescriptor15Ev)(IOMemoryDescriptor *this);
  IODirection (__cdecl *__ZNK18IOMemoryDescriptor12getDirectionEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZNK18IOMemoryDescriptor9getLengthEv)(IOMemoryDescriptor *this);
  void (__cdecl *__ZN18IOMemoryDescriptor6setTagEj)(IOMemoryDescriptor *this, UInt32 tag);
  IOOptionBits (__cdecl *__ZN18IOMemoryDescriptor6getTagEv)(IOMemoryDescriptor *this);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor9readBytesEyPvy)(IOMemoryDescriptor *this, IOByteCount64 offset, void *bytes, IOByteCount64 withLength);
  IOByteCount (__cdecl *__ZN18IOMemoryDescriptor10writeBytesEyPKvy)(IOMemoryDescriptor *this, IOByteCount64 offset, const void *bytes, IOByteCount64 withLength);
  IOReturn (__cdecl *__ZN25IOGeneralMemoryDescriptor7prepareEj)(IOGeneralMemoryDescriptor *this, IOOptionBits forDirection);
  IOReturn (__cdecl *__ZN25IOGeneralMemoryDescriptor8completeEj)(IOGeneralMemoryDescriptor *this, IOOptionBits forDirection);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor3mapEj)(IOMemoryDescriptor *this, UInt32 options);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor10setMappingEP4taskyj)(IOMemoryDescriptor *this, struct task *task, mach_vm_address_t mapAddress, UInt32 options);
  IOReturn (__cdecl *__ZN18IOMemoryDescriptor8redirectEP4taskb)(IOMemoryDescriptor *this, struct task *safeTask, bool redirect);
  IOMemoryMap *(__cdecl *__ZN18IOMemoryDescriptor11makeMappingEPS_P4taskyjyy)(IOMemoryDescriptor *this, IOMemoryDescriptor *owner, struct task *intoTask, mach_vm_address_t atAddress, UInt32 options, IOByteCount64 offset, IOByteCount64 length);
  void (__cdecl *__ZN18IOMemoryDescriptor10addMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  void (__cdecl *__ZN18IOMemoryDescriptor13removeMappingEP11IOMemoryMap)(IOMemoryDescriptor *this, IOMemoryMap *mapping);
  __int64 (__fastcall *__ZN25IOGeneralMemoryDescriptor5doMapEP7_vm_mapPyjyy)();
  __int64 (__fastcall *__ZN25IOGeneralMemoryDescriptor7doUnmapEP7_vm_mapyy)();
  bool (__cdecl *__ZN24IOBufferMemoryDescriptor20initWithPhysicalMaskEP4taskjyyy)(IOBufferMemoryDescriptor *this, struct task *inTask, UInt32 options, uint64_t capacity, uint64_t alignment, uint64_t physicalMask);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor0Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor1Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor2Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor3Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor4Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor5Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor6Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor7Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor8Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor34_RESERVEDIOBufferMemoryDescriptor9Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor10Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor11Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor12Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor13Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor14Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor35_RESERVEDIOBufferMemoryDescriptor15Ev)(IOBufferMemoryDescriptor *this);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor9setLengthEm)(IOBufferMemoryDescriptor *this, uintptr_t length);
  void (__cdecl *__ZN24IOBufferMemoryDescriptor12setDirectionEj)(IOBufferMemoryDescriptor *this, IOOptionBits direction);
  vm_size_t (__cdecl *__ZNK24IOBufferMemoryDescriptor11getCapacityEv)(IOBufferMemoryDescriptor *this);
  void *(__cdecl *__ZN24IOBufferMemoryDescriptor14getBytesNoCopyEv)(IOBufferMemoryDescriptor *this);
  void *(__cdecl *__ZN24IOBufferMemoryDescriptor14getBytesNoCopyEmm)(IOBufferMemoryDescriptor *this, uintptr_t start, uintptr_t withLength);
  bool (__cdecl *__ZN24IOBufferMemoryDescriptor11appendBytesEPKvm)(IOBufferMemoryDescriptor *this, const void *bytes, uintptr_t withLength);
};

/* 658 */
struct IOSyncer
{
  struct vtable_IOSyncer *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
};

/* 4530 */
struct vtable_IOSyncer
{
  __int64 (__fastcall *__ZN8IOSyncerD1Ev)(IOSyncer *__hidden this);
  __int64 (__fastcall *__ZN8IOSyncerD0Ev)(IOSyncer *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK8IOSyncer12getMetaClassEv)(IOSyncer *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8IOSyncer4freeEv)(IOSyncer *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN8IOSyncer13privateSignalEv)(IOSyncer *this);
  bool (__cdecl *__ZN8IOSyncer4initEb)(IOSyncer *this, bool twoRetains);
  void (__cdecl *__ZN8IOSyncer6reinitEv)(IOSyncer *this);
  IOReturn (__cdecl *__ZN8IOSyncer4waitEb)(IOSyncer *this, bool autoRelease);
  void (__cdecl *__ZN8IOSyncer6signalEib)(IOSyncer *this, kern_return_t res, bool autoRelease);
};

/* 659 */
struct PMAssertionsTracker
{
  struct vtable_PMAssertionsTracker *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
};

/* 4534 */
struct vtable_PMAssertionsTracker
{
  __int64 (__fastcall *__ZN19PMAssertionsTrackerD1Ev)(PMAssertionsTracker *__hidden this);
  __int64 (__fastcall *__ZN19PMAssertionsTrackerD0Ev)(PMAssertionsTracker *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK19PMAssertionsTracker12getMetaClassEv)(PMAssertionsTracker *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 660 */
struct PMHaltWorker
{
  struct vtable_PMHaltWorker *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
};

/* 4538 */
struct vtable_PMHaltWorker
{
  __int64 (__fastcall *__ZN12PMHaltWorkerD1Ev)(PMHaltWorker *__hidden this);
  __int64 (__fastcall *__ZN12PMHaltWorkerD0Ev)(PMHaltWorker *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK12PMHaltWorker12getMetaClassEv)(PMHaltWorker *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN12PMHaltWorker4freeEv)(PMHaltWorker *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 661 */
struct IOPMrootDomain
{
  struct vtable_IOPMrootDomain *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
  __int64 member17;
  __int64 member18;
  __int64 member19;
  __int64 member20;
  __int64 member21;
  __int64 member22;
  __int64 member23;
  __int64 member24;
  __int64 member25;
  __int64 member26;
  __int64 member27;
  __int64 member28;
  __int64 member29;
  __int64 member30;
  __int64 member31;
  __int64 member32;
  __int64 member33;
  __int64 member34;
  __int64 member35;
  __int64 member36;
  __int64 member37;
  __int64 member38;
  __int64 member39;
  __int64 member40;
  __int64 member41;
  __int64 member42;
  __int64 member43;
  __int64 member44;
  __int64 member45;
  __int64 member46;
  __int64 member47;
  __int64 member48;
  __int64 member49;
  __int64 member50;
  __int64 member51;
  __int64 member52;
  __int64 member53;
  __int64 member54;
  __int64 member55;
  __int64 member56;
  __int64 member57;
  __int64 member58;
  __int64 member59;
  __int64 member60;
  __int64 member61;
  __int64 member62;
  __int64 member63;
  __int64 member64;
  __int64 member65;
  __int64 member66;
  __int64 member67;
  __int64 member68;
  __int64 member69;
  __int64 member70;
  __int64 member71;
  __int64 member72;
  __int64 member73;
  __int64 member74;
  __int64 member75;
  __int64 member76;
  __int64 member77;
  __int64 member78;
  __int64 member79;
  __int64 member80;
  __int64 member81;
  __int64 member82;
  __int64 member83;
  __int64 member84;
  __int64 member85;
  __int64 member86;
  __int64 member87;
  __int64 member88;
  __int64 member89;
  __int64 member90;
  __int64 member91;
  __int64 member92;
  __int64 member93;
  __int64 member94;
  __int64 member95;
  __int64 member96;
  __int64 member97;
  __int64 member98;
  __int64 member99;
};

/* 4542 */
struct vtable_IOPMrootDomain
{
  __int64 (__fastcall *__ZN14IOPMrootDomainD1Ev)(IOPMrootDomain *__hidden this);
  __int64 (__fastcall *__ZN14IOPMrootDomainD0Ev)(IOPMrootDomain *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK14IOPMrootDomain12getMetaClassEv)(IOPMrootDomain *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK14IOPMrootDomain12copyPropertyEPKc)(IOPMrootDomain *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK14IOPMrootDomain19serializePropertiesEP11OSSerialize)(IOPMrootDomain *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN14IOPMrootDomain13setPropertiesEP8OSObject)(IOPMrootDomain *this, OSObject *);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN14IOPMrootDomain15configureReportEP19IOReportChannelListjPvS2_)(IOPMrootDomain *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN14IOPMrootDomain12updateReportEP19IOReportChannelListjPvS2_)(IOPMrootDomain *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN14IOPMrootDomain5startEPS_)(IOPMrootDomain *this, IOService *provider);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN14IOPMrootDomain20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOPMrootDomain *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN14IOPMrootDomain16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOPMrootDomain *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN14IOPMrootDomain23requestPowerDomainStateEmP17IOPowerConnectionm)(IOPMrootDomain *this, unsigned __int64, IOPowerConnection *, unsigned __int64);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN14IOPMrootDomain17setAggressivenessEmm)(IOPMrootDomain *this, unsigned __int64, unsigned __int64);
  IOReturn (__cdecl *__ZN14IOPMrootDomain17getAggressivenessEmPm)(IOPMrootDomain *this, unsigned __int64, unsigned __int64 *);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN14IOPMrootDomain13askChangeDownEm)(IOPMrootDomain *this, unsigned __int64);
  bool (__cdecl *__ZN14IOPMrootDomain14tellChangeDownEm)(IOPMrootDomain *this, unsigned __int64);
  void (__cdecl *__ZN14IOPMrootDomain16tellNoChangeDownEm)(IOPMrootDomain *this, unsigned __int64);
  void (__cdecl *__ZN14IOPMrootDomain12tellChangeUpEm)(IOPMrootDomain *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN14IOPMrootDomain15powerChangeDoneEm)(IOPMrootDomain *this, unsigned __int64);
  IOReturn (__cdecl *__ZN14IOPMrootDomain11sleepSystemEv)(IOPMrootDomain *this);
  IOReturn (__cdecl *__ZN14IOPMrootDomain24receivePowerNotificationEj)(IOPMrootDomain *this, unsigned int msg);
  void (__cdecl *__ZN14IOPMrootDomain17setSleepSupportedEj)(IOPMrootDomain *this, UInt32 flags);
  IOOptionBits (__cdecl *__ZN14IOPMrootDomain17getSleepSupportedEv)(IOPMrootDomain *this);
  IOReturn (__cdecl *__ZN14IOPMrootDomain18changePowerStateToEm)(IOPMrootDomain *this, unsigned __int64 ordinal);
  IOReturn (__cdecl *__ZN14IOPMrootDomain22changePowerStateToPrivEm)(IOPMrootDomain *this, unsigned __int64 ordinal);
};

/* 662 */
struct IOPMServiceInterestNotifier
{
  struct vtable_IOPMServiceInterestNotifier *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
};

/* 4544 */
struct vtable_IOPMServiceInterestNotifier
{
  __int64 (__fastcall *__ZN27IOPMServiceInterestNotifierD1Ev)(IOPMServiceInterestNotifier *__hidden this);
  __int64 (__fastcall *__ZN27IOPMServiceInterestNotifierD0Ev)(IOPMServiceInterestNotifier *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK27IOPMServiceInterestNotifier12getMetaClassEv)(IOPMServiceInterestNotifier *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN26_IOServiceInterestNotifier4initEv)(_IOServiceInterestNotifier *this);
  void (__cdecl *__ZN26_IOServiceInterestNotifier4freeEv)(_IOServiceInterestNotifier *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  void (__cdecl *__ZN26_IOServiceInterestNotifier6removeEv)(_IOServiceInterestNotifier *this);
  bool (__cdecl *__ZN26_IOServiceInterestNotifier7disableEv)(_IOServiceInterestNotifier *this);
  void (__cdecl *__ZN26_IOServiceInterestNotifier6enableEb)(_IOServiceInterestNotifier *this, bool was);
  void (__cdecl *__ZN26_IOServiceInterestNotifier4waitEv)(_IOServiceInterestNotifier *this);
};

/* 663 */
struct IORootParent
{
  struct vtable_IORootParent *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
  __int64 member12;
  __int64 member13;
  __int64 member14;
  __int64 member15;
  __int64 member16;
};

/* 4546 */
struct vtable_IORootParent
{
  __int64 (__fastcall *__ZN12IORootParentD1Ev)(IORootParent *__hidden this);
  __int64 (__fastcall *__ZN12IORootParentD0Ev)(IORootParent *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK12IORootParent12getMetaClassEv)(IORootParent *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN9IOService4freeEv)(IOService *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry15copyParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14copyChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  IOReturn (__cdecl *__ZN15IORegistryEntry17runPropertyActionEPFiP8OSObjectPvS2_S2_S2_ES1_S2_S2_S2_S2_)(IORegistryEntry *this, IOReturn (__cdecl *action)(OSObject *, void *, void *, void *, void *), OSObject *target, void *arg0, void *arg1, void *arg2, void *arg3);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry0Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry1Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry2Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry3Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry4Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry5Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry6Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry7Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry8Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry25_RESERVEDIORegistryEntry9Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry10Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry11Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry12Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry13Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry14Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry15Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry16Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry17Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry18Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry19Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry20Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry21Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry22Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry23Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry24Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry25Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry26Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry27Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry28Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry29Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry30Ev)(IORegistryEntry *this);
  void (__cdecl *__ZN15IORegistryEntry26_RESERVEDIORegistryEntry31Ev)(IORegistryEntry *this);
  bool (__cdecl *__ZN9IOService4initEP12OSDictionary)(IOService *this, OSDictionary *dictionary);
  void (__cdecl *__ZN15IORegistryEntry16setPropertyTableEP12OSDictionary)(IORegistryEntry *this, OSDictionary *dict);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSSymbolP8OSObject)(IORegistryEntry *this, const OSSymbol *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPK8OSStringP8OSObject)(IORegistryEntry *this, const OSString *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcP8OSObject)(IORegistryEntry *this, const char *aKey, OSObject *anObject);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcS1_)(IORegistryEntry *this, const char *aKey, const char *aString);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcb)(IORegistryEntry *this, const char *aKey, bool aBoolean);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcyj)(IORegistryEntry *this, const char *aKey, unsigned __int64 aValue, unsigned int aNumberOfBits);
  bool (__cdecl *__ZN15IORegistryEntry11setPropertyEPKcPvj)(IORegistryEntry *this, const char *aKey, void *bytes, unsigned int length);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  void (__cdecl *__ZN15IORegistryEntry14removePropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKc)(IORegistryEntry *this, const char *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSSymbolPK15IORegistryPlanej)(IORegistryEntry *this, const OSSymbol *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPK8OSStringPK15IORegistryPlanej)(IORegistryEntry *this, const OSString *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry11getPropertyEPKcPK15IORegistryPlanej)(IORegistryEntry *this, const char *aKey, const IORegistryPlane *plane, UInt32 options);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSSymbol)(IORegistryEntry *this, const OSSymbol *aKey);
  OSObject *(__cdecl *__ZNK15IORegistryEntry12copyPropertyEPK8OSString)(IORegistryEntry *this, const OSString *aKey);
  OSObject *(__cdecl *__ZNK12IORootParent12copyPropertyEPKc)(IORootParent *this, const char *aKey);
  OSDictionary *(__cdecl *__ZNK15IORegistryEntry24dictionaryWithPropertiesEv)(IORegistryEntry *this);
  bool (__cdecl *__ZNK9IOService19serializePropertiesEP11OSSerialize)(IOService *this, OSSerialize *s);
  IOReturn (__cdecl *__ZN15IORegistryEntry13setPropertiesEP8OSObject)(IORegistryEntry *this, OSObject *properties);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry17getParentIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry14applyToParentsEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry14getParentEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  OSIterator *(__cdecl *__ZNK15IORegistryEntry16getChildIteratorEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZNK15IORegistryEntry15applyToChildrenEPFvPS_PvES1_PK15IORegistryPlane)(IORegistryEntry *this, void (__cdecl *applier)(IORegistryEntry *, void *), void *context, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZNK15IORegistryEntry13getChildEntryEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7isChildEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane, bool onlyChild);
  bool (__cdecl *__ZNK15IORegistryEntry8isParentEPS_PK15IORegistryPlaneb)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane, bool onlyParent);
  bool (__cdecl *__ZNK15IORegistryEntry7inPlaneEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  unsigned int (__cdecl *__ZNK15IORegistryEntry8getDepthEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry14attachToParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry16detachFromParentEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *parent, const IORegistryPlane *plane);
  bool (__cdecl *__ZN15IORegistryEntry13attachToChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry15detachFromChildEPS_PK15IORegistryPlane)(IORegistryEntry *this, IORegistryEntry *child, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11detachAboveEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry9detachAllEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry7getNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry8copyNameEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry12compareNamesEP8OSObjectPP8OSString)(IORegistryEntry *this, OSObject *name, OSString **matched);
  bool (__cdecl *__ZNK15IORegistryEntry11compareNameEP8OSStringPS1_)(IORegistryEntry *this, OSString *name, OSString **matched);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *name, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry7setNameEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *name, const IORegistryPlane *plane);
  const char *(__cdecl *__ZNK15IORegistryEntry11getLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  const OSSymbol *(__cdecl *__ZNK15IORegistryEntry12copyLocationEPK15IORegistryPlane)(IORegistryEntry *this, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPK8OSSymbolPK15IORegistryPlane)(IORegistryEntry *this, const OSSymbol *location, const IORegistryPlane *plane);
  void (__cdecl *__ZN15IORegistryEntry11setLocationEPKcPK15IORegistryPlane)(IORegistryEntry *this, const char *location, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry7getPathEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  bool (__cdecl *__ZNK15IORegistryEntry16getPathComponentEPcPiPK15IORegistryPlane)(IORegistryEntry *this, char *path, int *length, const IORegistryPlane *plane);
  IORegistryEntry *(__cdecl *__ZN15IORegistryEntry13childFromPathEPKcPK15IORegistryPlanePcPi)(IORegistryEntry *this, const char *path, const IORegistryPlane *plane, char *residualPath, int *residualLength);
  bool (__cdecl *__ZN9IOService4initEPS_PK15IORegistryPlane)(IOService *this, IORegistryEntry *from, const IORegistryPlane *inPlane);
  bool (__cdecl *__ZN9IOService16requestTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService13willTerminateEPS_j)(IOService *this, IOService *provider, UInt32 options);
  bool (__cdecl *__ZN9IOService12didTerminateEPS_jPb)(IOService *this, IOService *provider, UInt32 options, bool *defer);
  SInt32 (__cdecl *__ZN9IOService15nextIdleTimeoutEyyj)(IOService *this, UInt64 currentTime, UInt64 lastActivity, unsigned int powerState);
  void (__cdecl *__ZN9IOService18systemWillShutdownEj)(IOService *this, UInt32 specifier);
  IOService *(__cdecl *__ZN9IOService22copyClientWithCategoryEPK8OSSymbol)(IOService *this, const OSSymbol *category);
  IOReturn (__cdecl *__ZN9IOService15configureReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  IOReturn (__cdecl *__ZN9IOService12updateReportEP19IOReportChannelListjPvS2_)(IOService *this, IOReportChannelList *channels, uint32_t action, void *result, void *destination);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService2Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService3Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService4Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService5Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService6Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService7Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService8Ev)(IOService *this);
  void (__cdecl *__ZN9IOService19_RESERVEDIOService9Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService10Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService11Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService12Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService13Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService14Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService15Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService16Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService17Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService18Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService19Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService20Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService21Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService22Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService23Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService24Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService25Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService26Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService27Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService28Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService29Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService30Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService31Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService32Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService33Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService34Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService35Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService36Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService37Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService38Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService39Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService40Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService41Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService42Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService43Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService44Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService45Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService46Ev)(IOService *this);
  void (__cdecl *__ZN9IOService20_RESERVEDIOService47Ev)(IOService *this);
  IOOptionBits (__cdecl *__ZNK9IOService8getStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService15registerServiceEj)(IOService *this, UInt32 options);
  IOService *(__cdecl *__ZN9IOService5probeEPS_Pi)(IOService *this, IOService *provider, int *score);
  bool (__cdecl *__ZN12IORootParent5startEPS_)(IORootParent *this, IOService *nub);
  void (__cdecl *__ZN9IOService4stopEPS_)(IOService *this, IOService *provider);
  bool (__cdecl *__ZN9IOService4openEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService5closeEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService6isOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService10handleOpenEPS_jPv)(IOService *this, IOService *forClient, UInt32 options, void *arg);
  void (__cdecl *__ZN9IOService11handleCloseEPS_j)(IOService *this, IOService *forClient, UInt32 options);
  bool (__cdecl *__ZNK9IOService12handleIsOpenEPKS_)(IOService *this, const IOService *forClient);
  bool (__cdecl *__ZN9IOService9terminateEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService8finalizeEj)(IOService *this, UInt32 options);
  bool (__cdecl *__ZN9IOService18lockForArbitrationEb)(IOService *this, bool isSuccessRequired);
  void (__cdecl *__ZN9IOService20unlockForArbitrationEv)(IOService *this);
  bool (__cdecl *__ZN9IOService15terminateClientEPS_j)(IOService *this, IOService *client, UInt32 options);
  UInt32 (__cdecl *__ZN9IOService12getBusyStateEv)(IOService *this);
  void (__cdecl *__ZN9IOService10adjustBusyEi)(IOService *this, int delta);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionaryPi)(IOService *this, OSDictionary *table, int *score);
  bool (__cdecl *__ZN9IOService18matchPropertyTableEP12OSDictionary)(IOService *this, OSDictionary *table);
  IOService *(__cdecl *__ZN9IOService13matchLocationEPS_)(IOService *this, IOService *client);
  bool (__cdecl *__ZN9IOService17addNeededResourceEPKc)(IOService *this, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPKc)(IOService *this, OSDictionary *matching, const char *key);
  bool (__cdecl *__ZN9IOService15comparePropertyEP12OSDictionaryPK8OSString)(IOService *this, OSDictionary *matching, const OSString *key);
  bool (__cdecl *__ZN9IOService17comparePropertiesEP12OSDictionaryP12OSCollection)(IOService *this, OSDictionary *matching, OSCollection *keys);
  bool (__cdecl *__ZN9IOService6attachEPS_)(IOService *this, IOService *provider);
  void (__cdecl *__ZN9IOService6detachEPS_)(IOService *this, IOService *provider);
  IOService *(__cdecl *__ZNK9IOService11getProviderEv)(IOService *this);
  IOWorkLoop *(__cdecl *__ZNK9IOService11getWorkLoopEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService19getProviderIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService23getOpenProviderIteratorEv)(IOService *this);
  IOService *(__cdecl *__ZNK9IOService9getClientEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService17getClientIteratorEv)(IOService *this);
  OSIterator *(__cdecl *__ZNK9IOService21getOpenClientIteratorEv)(IOService *this);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_)(IOService *this, const OSSymbol *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService20callPlatformFunctionEPKcbPvS2_S2_S2_)(IOService *this, const char *functionName, bool waitForFunction, void *param1, void *param2, void *param3, void *param4);
  IOReturn (__cdecl *__ZN9IOService12getResourcesEv)(IOService *this);
  IOItemCount (__cdecl *__ZN9IOService20getDeviceMemoryCountEv)(IOService *this);
  IODeviceMemory *(__cdecl *__ZN9IOService24getDeviceMemoryWithIndexEj)(IOService *this, unsigned int index);
  IOMemoryMap *(__cdecl *__ZN9IOService24mapDeviceMemoryWithIndexEjj)(IOService *this, unsigned int index, UInt32 options);
  OSArray *(__cdecl *__ZN9IOService15getDeviceMemoryEv)(IOService *this);
  void (__cdecl *__ZN9IOService15setDeviceMemoryEP7OSArray)(IOService *this, OSArray *array);
  IOReturn (__cdecl *__ZN9IOService17registerInterruptEiP8OSObjectPFvS1_PvPS_iES2_)(IOService *this, int source, OSObject *target, void (__cdecl *handler)(OSObject *, void *, IOService *, int), void *refCon);
  IOReturn (__cdecl *__ZN9IOService19unregisterInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16getInterruptTypeEiPi)(IOService *this, int source, int *interruptType);
  IOReturn (__cdecl *__ZN9IOService15enableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService16disableInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService14causeInterruptEi)(IOService *this, int source);
  IOReturn (__cdecl *__ZN9IOService12requestProbeEj)(IOService *this, UInt32 options);
  IOReturn (__cdecl *__ZN9IOService7messageEjPS_Pv)(IOService *this, unsigned int type, IOService *provider, void *argument);
  IOReturn (__cdecl *__ZN9IOService13messageClientEjP8OSObjectPvm)(IOService *this, unsigned int messageType, OSObject *client, void *messageArgument, uintptr_t argSize);
  IOReturn (__cdecl *__ZN9IOService14messageClientsEjPvm)(IOService *this, unsigned int type, void *argument, uintptr_t argSize);
  IONotifier *(__cdecl *__ZN9IOService16registerInterestEPK8OSSymbolPFiPvS3_jPS_S3_mES3_S3_)(IOService *this, const OSSymbol *typeOfInterest, IOReturn (__cdecl *handler)(void *, void *, UInt32, IOService *, void *, vm_size_t), void *target, void *ref);
  void (__cdecl *__ZN9IOService16applyToProvidersEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService14applyToClientsEPFvPS_PvES1_)(IOService *this, void (__cdecl *applier)(IOService *, void *), void *context);
  void (__cdecl *__ZN9IOService17applyToInterestedEPK8OSSymbolPFvP8OSObjectPvES5_)(IOService *this, const OSSymbol *typeOfInterest, void (__cdecl *applier)(OSObject *, void *), void *context);
  IOReturn (__cdecl *__ZN9IOService23acknowledgeNotificationEPvj)(IOService *this, void *notification, UInt32 response);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjP12OSDictionaryPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, OSDictionary *properties, IOUserClient **handler);
  IOReturn (__cdecl *__ZN9IOService13newUserClientEP4taskPvjPP12IOUserClient)(IOService *this, struct task *owningTask, void *securityID, unsigned int type, IOUserClient **handler);
  const char *(__cdecl *__ZN9IOService16stringFromReturnEi)(IOService *this, kern_return_t rtn);
  int (__cdecl *__ZN9IOService15errnoFromReturnEi)(IOService *this, kern_return_t rtn);
  void (__cdecl *__ZN9IOService6PMinitEv)(IOService *this);
  void (__cdecl *__ZN9IOService6PMstopEv)(IOService *this);
  void (__cdecl *__ZN9IOService10joinPMtreeEPS_)(IOService *this, IOService *driver);
  IOReturn (__cdecl *__ZN9IOService19registerPowerDriverEPS_P14IOPMPowerStatem)(IOService *this, IOService *controllingDriver, IOPMPowerState *powerStates, unsigned __int64 numberOfStates);
  IOReturn (__cdecl *__ZN9IOService23requestPowerDomainStateEmP17IOPowerConnectionm)(IOService *this, unsigned __int64 desiredState, IOPowerConnection *whichChild, unsigned __int64 specificationFlags);
  bool (__cdecl *__ZN9IOService14activityTickleEmm)(IOService *this, unsigned __int64 type, unsigned __int64 stateNumber);
  IOReturn (__cdecl *__ZN9IOService17setAggressivenessEmm)(IOService *this, unsigned __int64 type, unsigned __int64 newLevel);
  IOReturn (__cdecl *__ZN9IOService17getAggressivenessEmPm)(IOService *this, unsigned __int64 type, unsigned __int64 *currentLevel);
  IOReturn (__cdecl *__ZN9IOService13addPowerChildEPS_)(IOService *this, IOService *theChild);
  IOReturn (__cdecl *__ZN9IOService16removePowerChildEP17IOPowerConnection)(IOService *this, IOPowerConnection *theChild);
  IOReturn (__cdecl *__ZN9IOService18setIdleTimerPeriodEm)(IOService *this, unsigned __int64 period);
  IOReturn (__cdecl *__ZN9IOService13setPowerStateEmPS_)(IOService *this, unsigned __int64 powerStateOrdinal, IOService *whatDevice);
  unsigned __int64 (__cdecl *__ZN9IOService27maxCapabilityForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService31initialPowerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  unsigned __int64 (__cdecl *__ZN9IOService24powerStateForDomainStateEm)(IOService *this, unsigned __int64 domainState);
  IOReturn (__cdecl *__ZN9IOService22powerStateWillChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  IOReturn (__cdecl *__ZN9IOService21powerStateDidChangeToEmmPS_)(IOService *this, unsigned __int64 capabilities, unsigned __int64 stateNumber, IOService *whatDevice);
  bool (__cdecl *__ZN9IOService13askChangeDownEm)(IOService *this, unsigned __int64);
  bool (__cdecl *__ZN9IOService14tellChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService16tellNoChangeDownEm)(IOService *this, unsigned __int64);
  void (__cdecl *__ZN9IOService12tellChangeUpEm)(IOService *this, unsigned __int64);
  IOReturn (__cdecl *__ZN9IOService16allowPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  IOReturn (__cdecl *__ZN9IOService17cancelPowerChangeEm)(IOService *this, unsigned __int64 refcon);
  void (__cdecl *__ZN9IOService15powerChangeDoneEm)(IOService *this, unsigned __int64 stateNumber);
};

/* 664 */
struct PMTraceWorker
{
  struct vtable_PMTraceWorker *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
};

/* 4552 */
struct vtable_PMTraceWorker
{
  __int64 (__fastcall *__ZN13PMTraceWorkerD1Ev)(PMTraceWorker *__hidden this);
  __int64 (__fastcall *__ZN13PMTraceWorkerD0Ev)(PMTraceWorker *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK13PMTraceWorker9serializeEP11OSSerialize)(PMTraceWorker *__hidden this, OSSerialize *);
  const OSMetaClass *(__cdecl *__ZNK13PMTraceWorker12getMetaClassEv)(PMTraceWorker *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject4freeEv)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 665 */
struct PMSettingHandle
{
  struct vtable_PMSettingHandle *vtable;
  __int64 member1;
  __int64 member2;
};

/* 4556 */
struct vtable_PMSettingHandle
{
  __int64 (__fastcall *__ZN15PMSettingHandleD1Ev)(PMSettingHandle *__hidden this);
  __int64 (__fastcall *__ZN15PMSettingHandleD0Ev)(PMSettingHandle *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15PMSettingHandle12getMetaClassEv)(PMSettingHandle *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN15PMSettingHandle4freeEv)(PMSettingHandle *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 666 */
struct PMSettingObject
{
  struct vtable_PMSettingObject *vtable;
  __int64 member1;
  __int64 member2;
  __int64 member3;
  __int64 member4;
  __int64 member5;
  __int64 member6;
  __int64 member7;
  __int64 member8;
  __int64 member9;
  __int64 member10;
  __int64 member11;
};

/* 4560 */
struct vtable_PMSettingObject
{
  __int64 (__fastcall *__ZN15PMSettingObjectD1Ev)(PMSettingObject *__hidden this);
  __int64 (__fastcall *__ZN15PMSettingObjectD0Ev)(PMSettingObject *__hidden this);
  void (__cdecl *__ZNK8OSObject7releaseEi)(OSObject *this, int freeWhen);
  int (__cdecl *__ZNK8OSObject14getRetainCountEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject6retainEv)(OSObject *this);
  void (__cdecl *__ZNK8OSObject7releaseEv)(OSObject *this);
  bool (__cdecl *__ZNK8OSObject9serializeEP11OSSerialize)(OSObject *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK15PMSettingObject12getMetaClassEv)(PMSettingObject *__hidden this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK8OSObject12taggedRetainEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKv)(OSObject *this, const void *tag);
  void (__cdecl *__ZNK8OSObject13taggedReleaseEPKvi)(OSObject *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSObject8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  bool (__cdecl *__ZN8OSObject4initEv)(OSObject *this);
  void (__cdecl *__ZN15PMSettingObject4freeEv)(PMSettingObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject0Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject1Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject2Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject3Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject4Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject5Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject6Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject7Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject8Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject18_RESERVEDOSObject9Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject10Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject11Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject12Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject13Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject14Ev)(OSObject *this);
  void (__cdecl *__ZN8OSObject19_RESERVEDOSObject15Ev)(OSObject *this);
};

/* 667 */
struct KLDBootstrap;

/* 668 */
struct OSArray::MetaClass
{
  struct vtable_OSArray::MetaClass *vtable;
};

/* 4090 */
struct vtable_OSArray::MetaClass
{
  __int64 (__fastcall *__ZN7OSArray9MetaClassD1Ev)(OSArray::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN7OSArray9MetaClassD0Ev)(OSArray::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK7OSArray9MetaClass5allocEv)(OSArray::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 669 */
struct OSBoolean::MetaClass
{
  struct vtable_OSBoolean::MetaClass *vtable;
};

/* 4094 */
struct vtable_OSBoolean::MetaClass
{
  __int64 (__fastcall *__ZN9OSBoolean9MetaClassD1Ev)(OSBoolean::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN9OSBoolean9MetaClassD0Ev)(OSBoolean::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK9OSBoolean9MetaClass5allocEv)(OSBoolean::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 670 */
struct OSCollectionIterator::MetaClass
{
  struct vtable_OSCollectionIterator::MetaClass *vtable;
};

/* 4102 */
struct vtable_OSCollectionIterator::MetaClass
{
  __int64 (__fastcall *__ZN20OSCollectionIterator9MetaClassD1Ev)(OSCollectionIterator::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN20OSCollectionIterator9MetaClassD0Ev)(OSCollectionIterator::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK20OSCollectionIterator9MetaClass5allocEv)(OSCollectionIterator::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 671 */
struct OSData::MetaClass
{
  struct vtable_OSData::MetaClass *vtable;
};

/* 4106 */
struct vtable_OSData::MetaClass
{
  __int64 (__fastcall *__ZN6OSData9MetaClassD1Ev)(OSData::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN6OSData9MetaClassD0Ev)(OSData::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK6OSData9MetaClass5allocEv)(OSData::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 672 */
struct OSDictionary::MetaClass
{
  struct vtable_OSDictionary::MetaClass *vtable;
};

/* 4110 */
struct vtable_OSDictionary::MetaClass
{
  __int64 (__fastcall *__ZN12OSDictionary9MetaClassD1Ev)(OSDictionary::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN12OSDictionary9MetaClassD0Ev)(OSDictionary::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK12OSDictionary9MetaClass5allocEv)(OSDictionary::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 673 */
struct OSKext::MetaClass
{
  struct vtable_OSKext::MetaClass *vtable;
};

/* 4118 */
struct vtable_OSKext::MetaClass
{
  __int64 (__fastcall *__ZN6OSKext9MetaClassD1Ev)(OSKext::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN6OSKext9MetaClassD0Ev)(OSKext::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK6OSKext9MetaClass5allocEv)(OSKext::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 674 */
struct OSNumber::MetaClass
{
  struct vtable_OSNumber::MetaClass *vtable;
};

/* 4122 */
struct vtable_OSNumber::MetaClass
{
  __int64 (__fastcall *__ZN8OSNumber9MetaClassD1Ev)(OSNumber::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN8OSNumber9MetaClassD0Ev)(OSNumber::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK8OSNumber9MetaClass5allocEv)(OSNumber::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 675 */
struct OSOrderedSet::MetaClass
{
  struct vtable_OSOrderedSet::MetaClass *vtable;
};

/* 4126 */
struct vtable_OSOrderedSet::MetaClass
{
  __int64 (__fastcall *__ZN12OSOrderedSet9MetaClassD1Ev)(OSOrderedSet::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN12OSOrderedSet9MetaClassD0Ev)(OSOrderedSet::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK12OSOrderedSet9MetaClass5allocEv)(OSOrderedSet::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 677 */
typedef struct kmod_reference kmod_reference_t;

/* 680 */
typedef uintptr_t vm_offset_t;

/* 679 */
typedef vm_offset_t vm_address_t;

/* 682 */
typedef kern_return_t __cdecl kmod_start_func_t(struct kmod_info *ki, void *data);

/* 684 */
typedef kern_return_t __cdecl kmod_stop_func_t(struct kmod_info *ki, void *data);

/* 676 */
struct kmod_info
{
  struct kmod_info *next;
  int32_t info_version;
  uint32_t id;
  char name[64];
  char version[64];
  int32_t reference_count;
  kmod_reference_t *reference_list;
  vm_address_t address;
  vm_size_t size;
  vm_size_t hdr_size;
  kmod_start_func_t *start;
  kmod_stop_func_t *stop;
};

/* 678 */
struct kmod_reference
{
  struct kmod_reference *next;
  struct kmod_info *info;
};

/* 685 */
struct OSSerialize::MetaClass
{
  struct vtable_OSSerialize::MetaClass *vtable;
};

/* 4130 */
struct vtable_OSSerialize::MetaClass
{
  __int64 (__fastcall *__ZN11OSSerialize9MetaClassD1Ev)(OSSerialize::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN11OSSerialize9MetaClassD0Ev)(OSSerialize::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK11OSSerialize9MetaClass5allocEv)(OSSerialize::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 686 */
struct OSSerializer::MetaClass
{
  struct vtable_OSSerializer::MetaClass *vtable;
};

/* 4134 */
struct vtable_OSSerializer::MetaClass
{
  __int64 (__fastcall *__ZN12OSSerializer9MetaClassD1Ev)(OSSerializer::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN12OSSerializer9MetaClassD0Ev)(OSSerializer::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK12OSSerializer9MetaClass5allocEv)(OSSerializer::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 687 */
struct OSSet::MetaClass
{
  struct vtable_OSSet::MetaClass *vtable;
};

/* 4138 */
struct vtable_OSSet::MetaClass
{
  __int64 (__fastcall *__ZN5OSSet9MetaClassD1Ev)(OSSet::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN5OSSet9MetaClassD0Ev)(OSSet::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK5OSSet9MetaClass5allocEv)(OSSet::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 688 */
struct OSString::MetaClass
{
  struct vtable_OSString::MetaClass *vtable;
};

/* 4142 */
struct vtable_OSString::MetaClass
{
  __int64 (__fastcall *__ZN8OSString9MetaClassD1Ev)(OSString::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN8OSString9MetaClassD0Ev)(OSString::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK8OSString9MetaClass5allocEv)(OSString::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 689 */
struct OSSymbol::MetaClass
{
  struct vtable_OSSymbol::MetaClass *vtable;
};

/* 4148 */
struct vtable_OSSymbol::MetaClass
{
  __int64 (__fastcall *__ZN8OSSymbol9MetaClassD1Ev)(OSSymbol::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN8OSSymbol9MetaClassD0Ev)(OSSymbol::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK8OSSymbol9MetaClass5allocEv)(OSSymbol::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 690 */
struct OSAction::MetaClass
{
  struct vtable_OSAction::MetaClass *vtable;
};

/* 4152 */
struct vtable_OSAction::MetaClass
{
  __int64 (__fastcall *__ZN8OSAction9MetaClassD1Ev)(OSAction::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN8OSAction9MetaClassD0Ev)(OSAction::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN8OSAction9MetaClass8DispatchE5IORPC)(__int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK8OSAction9MetaClass5allocEv)(OSAction::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 691 */
struct IODispatchSource::MetaClass
{
  struct vtable_IODispatchSource::MetaClass *vtable;
};

/* 4156 */
struct vtable_IODispatchSource::MetaClass
{
  __int64 (__fastcall *__ZN16IODispatchSource9MetaClassD1Ev)(IODispatchSource::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IODispatchSource9MetaClassD0Ev)(IODispatchSource::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN16IODispatchSource9MetaClass8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IODispatchSource9MetaClass5allocEv)(IODispatchSource::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 692 */
struct IODispatchQueue::MetaClass
{
  struct vtable_IODispatchQueue::MetaClass *vtable;
};

/* 4160 */
struct vtable_IODispatchQueue::MetaClass
{
  __int64 (__fastcall *__ZN15IODispatchQueue9MetaClassD1Ev)(IODispatchQueue::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IODispatchQueue9MetaClassD0Ev)(IODispatchQueue::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15IODispatchQueue9MetaClass8DispatchE5IORPC)(__int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IODispatchQueue9MetaClass5allocEv)(IODispatchQueue::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 693 */
struct IOInterruptDispatchSource::MetaClass
{
  struct vtable_IOInterruptDispatchSource::MetaClass *vtable;
};

/* 4164 */
struct vtable_IOInterruptDispatchSource::MetaClass
{
  __int64 (__fastcall *__ZN25IOInterruptDispatchSource9MetaClassD1Ev)(IOInterruptDispatchSource::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN25IOInterruptDispatchSource9MetaClassD0Ev)(IOInterruptDispatchSource::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN25IOInterruptDispatchSource9MetaClass8DispatchE5IORPC)(__int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK25IOInterruptDispatchSource9MetaClass5allocEv)(IOInterruptDispatchSource::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 694 */
struct IODataQueueDispatchSource::MetaClass
{
  struct vtable_IODataQueueDispatchSource::MetaClass *vtable;
};

/* 4168 */
struct vtable_IODataQueueDispatchSource::MetaClass
{
  __int64 (__fastcall *__ZN25IODataQueueDispatchSource9MetaClassD1Ev)(IODataQueueDispatchSource::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN25IODataQueueDispatchSource9MetaClassD0Ev)(IODataQueueDispatchSource::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN25IODataQueueDispatchSource9MetaClass8DispatchE5IORPC)(__int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK25IODataQueueDispatchSource9MetaClass5allocEv)(IODataQueueDispatchSource::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 695 */
struct __va_list_tag
{
  unsigned int gp_offset;
  unsigned int fp_offset;
  void *overflow_arg_area;
  void *reg_save_area;
};

/* 696 */
typedef __builtin_va_list __gnuc_va_list;

/* 697 */
struct IOConditionLock::MetaClass
{
  struct vtable_IOConditionLock::MetaClass *vtable;
};

/* 4172 */
struct vtable_IOConditionLock::MetaClass
{
  __int64 (__fastcall *__ZN15IOConditionLock9MetaClassD1Ev)(IOConditionLock::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IOConditionLock9MetaClassD0Ev)(IOConditionLock::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IOConditionLock9MetaClass5allocEv)(IOConditionLock::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 698 */
struct IORegistryEntry::MetaClass
{
  struct vtable_IORegistryEntry::MetaClass *vtable;
};

/* 4178 */
struct vtable_IORegistryEntry::MetaClass
{
  __int64 (__fastcall *__ZN15IORegistryEntry9MetaClassD1Ev)(IORegistryEntry::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IORegistryEntry9MetaClassD0Ev)(IORegistryEntry::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IORegistryEntry9MetaClass5allocEv)(IORegistryEntry::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 699 */
struct IORegistryPlane::MetaClass
{
  struct vtable_IORegistryPlane::MetaClass *vtable;
};

/* 4182 */
struct vtable_IORegistryPlane::MetaClass
{
  __int64 (__fastcall *__ZN15IORegistryPlane9MetaClassD1Ev)(IORegistryPlane::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IORegistryPlane9MetaClassD0Ev)(IORegistryPlane::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IORegistryPlane9MetaClass5allocEv)(IORegistryPlane::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 700 */
struct IORegistryIterator::MetaClass
{
  struct vtable_IORegistryIterator::MetaClass *vtable;
};

/* 4184 */
struct vtable_IORegistryIterator::MetaClass
{
  __int64 (__fastcall *__ZN18IORegistryIterator9MetaClassD1Ev)(IORegistryIterator::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN18IORegistryIterator9MetaClassD0Ev)(IORegistryIterator::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK18IORegistryIterator9MetaClass5allocEv)(IORegistryIterator::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 701 */
struct IOService::MetaClass
{
  struct vtable_IOService::MetaClass *vtable;
};

/* 4198 */
struct vtable_IOService::MetaClass
{
  __int64 (__fastcall *__ZN9IOService9MetaClassD1Ev)(IOService::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN9IOService9MetaClassD0Ev)(IOService::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN9IOService9MetaClass8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK9IOService9MetaClass5allocEv)(IOService::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 702 */
struct _IOServiceNotifier::MetaClass
{
  struct vtable__IOServiceNotifier::MetaClass *vtable;
};

/* 4200 */
struct vtable__IOServiceNotifier::MetaClass
{
  __int64 (__fastcall *__ZN18_IOServiceNotifier9MetaClassD1Ev)(_IOServiceNotifier::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN18_IOServiceNotifier9MetaClassD0Ev)(_IOServiceNotifier::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK18_IOServiceNotifier9MetaClass5allocEv)(_IOServiceNotifier::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 703 */
struct _IOServiceNullNotifier::MetaClass
{
  struct vtable__IOServiceNullNotifier::MetaClass *vtable;
};

/* 4204 */
struct vtable__IOServiceNullNotifier::MetaClass
{
  __int64 (__fastcall *__ZN22_IOServiceNullNotifier9MetaClassD1Ev)(_IOServiceNullNotifier::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN22_IOServiceNullNotifier9MetaClassD0Ev)(_IOServiceNullNotifier::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK22_IOServiceNullNotifier9MetaClass5allocEv)(_IOServiceNullNotifier::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 704 */
struct _IOServiceInterestNotifier::MetaClass
{
  struct vtable__IOServiceInterestNotifier::MetaClass *vtable;
};

/* 4206 */
struct vtable__IOServiceInterestNotifier::MetaClass
{
  __int64 (__fastcall *__ZN26_IOServiceInterestNotifier9MetaClassD1Ev)(_IOServiceInterestNotifier::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN26_IOServiceInterestNotifier9MetaClassD0Ev)(_IOServiceInterestNotifier::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK26_IOServiceInterestNotifier9MetaClass5allocEv)(_IOServiceInterestNotifier::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 705 */
struct _IOConfigThread::MetaClass
{
  struct vtable__IOConfigThread::MetaClass *vtable;
};

/* 4208 */
struct vtable__IOConfigThread::MetaClass
{
  __int64 (__fastcall *__ZN15_IOConfigThread9MetaClassD1Ev)(_IOConfigThread::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15_IOConfigThread9MetaClassD0Ev)(_IOConfigThread::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15_IOConfigThread9MetaClass5allocEv)(_IOConfigThread::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 706 */
struct _IOServiceJob::MetaClass
{
  struct vtable__IOServiceJob::MetaClass *vtable;
};

/* 4210 */
struct vtable__IOServiceJob::MetaClass
{
  __int64 (__fastcall *__ZN13_IOServiceJob9MetaClassD1Ev)(_IOServiceJob::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN13_IOServiceJob9MetaClassD0Ev)(_IOServiceJob::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK13_IOServiceJob9MetaClass5allocEv)(_IOServiceJob::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 707 */
struct IOResources::MetaClass
{
  struct vtable_IOResources::MetaClass *vtable;
};

/* 4214 */
struct vtable_IOResources::MetaClass
{
  __int64 (__fastcall *__ZN11IOResources9MetaClassD1Ev)(IOResources::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN11IOResources9MetaClassD0Ev)(IOResources::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK11IOResources9MetaClass5allocEv)(IOResources::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 708 */
struct IOUserResources::MetaClass
{
  struct vtable_IOUserResources::MetaClass *vtable;
};

/* 4218 */
struct vtable_IOUserResources::MetaClass
{
  __int64 (__fastcall *__ZN15IOUserResources9MetaClassD1Ev)(IOUserResources::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IOUserResources9MetaClassD0Ev)(IOUserResources::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IOUserResources9MetaClass5allocEv)(IOUserResources::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 709 */
struct _IOOpenServiceIterator::MetaClass
{
  struct vtable__IOOpenServiceIterator::MetaClass *vtable;
};

/* 4220 */
struct vtable__IOOpenServiceIterator::MetaClass
{
  __int64 (__fastcall *__ZN22_IOOpenServiceIterator9MetaClassD1Ev)(_IOOpenServiceIterator::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN22_IOOpenServiceIterator9MetaClassD0Ev)(_IOOpenServiceIterator::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK22_IOOpenServiceIterator9MetaClass5allocEv)(_IOOpenServiceIterator::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 710 */
struct IOPMRequest::MetaClass
{
  struct vtable_IOPMRequest::MetaClass *vtable;
};

/* 4228 */
struct vtable_IOPMRequest::MetaClass
{
  __int64 (__fastcall *__ZN11IOPMRequest9MetaClassD1Ev)(IOPMRequest::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN11IOPMRequest9MetaClassD0Ev)(IOPMRequest::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK11IOPMRequest9MetaClass5allocEv)(IOPMRequest::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 711 */
struct IOPMRequestQueue::MetaClass
{
  struct vtable_IOPMRequestQueue::MetaClass *vtable;
};

/* 4232 */
struct vtable_IOPMRequestQueue::MetaClass
{
  __int64 (__fastcall *__ZN16IOPMRequestQueue9MetaClassD1Ev)(IOPMRequestQueue::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IOPMRequestQueue9MetaClassD0Ev)(IOPMRequestQueue::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IOPMRequestQueue9MetaClass5allocEv)(IOPMRequestQueue::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 712 */
struct IOPMWorkQueue::MetaClass
{
  struct vtable_IOPMWorkQueue::MetaClass *vtable;
};

/* 4236 */
struct vtable_IOPMWorkQueue::MetaClass
{
  __int64 (__fastcall *__ZN13IOPMWorkQueue9MetaClassD1Ev)(IOPMWorkQueue::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN13IOPMWorkQueue9MetaClassD0Ev)(IOPMWorkQueue::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK13IOPMWorkQueue9MetaClass5allocEv)(IOPMWorkQueue::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 713 */
struct IOPMCompletionQueue::MetaClass
{
  struct vtable_IOPMCompletionQueue::MetaClass *vtable;
};

/* 4240 */
struct vtable_IOPMCompletionQueue::MetaClass
{
  __int64 (__fastcall *__ZN19IOPMCompletionQueue9MetaClassD1Ev)(IOPMCompletionQueue::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN19IOPMCompletionQueue9MetaClassD0Ev)(IOPMCompletionQueue::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK19IOPMCompletionQueue9MetaClass5allocEv)(IOPMCompletionQueue::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 714 */
struct IOServicePM::MetaClass
{
  struct vtable_IOServicePM::MetaClass *vtable;
};

/* 4244 */
struct vtable_IOServicePM::MetaClass
{
  __int64 (__fastcall *__ZN11IOServicePM9MetaClassD1Ev)(IOServicePM::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN11IOServicePM9MetaClassD0Ev)(IOServicePM::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK11IOServicePM9MetaClass5allocEv)(IOServicePM::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 715 */
struct IOPMinformee::MetaClass
{
  struct vtable_IOPMinformee::MetaClass *vtable;
};

/* 4248 */
struct vtable_IOPMinformee::MetaClass
{
  __int64 (__fastcall *__ZN12IOPMinformee9MetaClassD1Ev)(IOPMinformee::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN12IOPMinformee9MetaClassD0Ev)(IOPMinformee::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK12IOPMinformee9MetaClass5allocEv)(IOPMinformee::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 716 */
struct IOPMinformeeList::MetaClass
{
  struct vtable_IOPMinformeeList::MetaClass *vtable;
};

/* 4252 */
struct vtable_IOPMinformeeList::MetaClass
{
  __int64 (__fastcall *__ZN16IOPMinformeeList9MetaClassD1Ev)(IOPMinformeeList::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IOPMinformeeList9MetaClassD0Ev)(IOPMinformeeList::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IOPMinformeeList9MetaClass5allocEv)(IOPMinformeeList::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 717 */
struct IOPMPowerStateQueue::MetaClass
{
  struct vtable_IOPMPowerStateQueue::MetaClass *vtable;
};

/* 4256 */
struct vtable_IOPMPowerStateQueue::MetaClass
{
  __int64 (__fastcall *__ZN19IOPMPowerStateQueue9MetaClassD1Ev)(IOPMPowerStateQueue::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN19IOPMPowerStateQueue9MetaClassD0Ev)(IOPMPowerStateQueue::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK19IOPMPowerStateQueue9MetaClass5allocEv)(IOPMPowerStateQueue::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 718 */
struct IOCatalogue::MetaClass
{
  struct vtable_IOCatalogue::MetaClass *vtable;
};

/* 4260 */
struct vtable_IOCatalogue::MetaClass
{
  __int64 (__fastcall *__ZN11IOCatalogue9MetaClassD1Ev)(IOCatalogue::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN11IOCatalogue9MetaClassD0Ev)(IOCatalogue::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK11IOCatalogue9MetaClass5allocEv)(IOCatalogue::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 719 */
struct IOPMPowerSource::MetaClass
{
  struct vtable_IOPMPowerSource::MetaClass *vtable;
};

/* 4264 */
struct vtable_IOPMPowerSource::MetaClass
{
  __int64 (__fastcall *__ZN15IOPMPowerSource9MetaClassD1Ev)(IOPMPowerSource::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IOPMPowerSource9MetaClassD0Ev)(IOPMPowerSource::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IOPMPowerSource9MetaClass5allocEv)(IOPMPowerSource::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 720 */
struct IOPMPowerSourceList::MetaClass
{
  struct vtable_IOPMPowerSourceList::MetaClass *vtable;
};

/* 4268 */
struct vtable_IOPMPowerSourceList::MetaClass
{
  __int64 (__fastcall *__ZN19IOPMPowerSourceList9MetaClassD1Ev)(IOPMPowerSourceList::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN19IOPMPowerSourceList9MetaClassD0Ev)(IOPMPowerSourceList::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK19IOPMPowerSourceList9MetaClass5allocEv)(IOPMPowerSourceList::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 721 */
struct IOPolledFilePollers::MetaClass
{
  struct vtable_IOPolledFilePollers::MetaClass *vtable;
};

/* 4276 */
struct vtable_IOPolledFilePollers::MetaClass
{
  __int64 (__fastcall *__ZN19IOPolledFilePollers9MetaClassD1Ev)(IOPolledFilePollers::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN19IOPolledFilePollers9MetaClassD0Ev)(IOPolledFilePollers::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK19IOPolledFilePollers9MetaClass5allocEv)(IOPolledFilePollers::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 722 */
struct IOWorkLoop::MetaClass
{
  struct vtable_IOWorkLoop::MetaClass *vtable;
};

/* 4280 */
struct vtable_IOWorkLoop::MetaClass
{
  __int64 (__fastcall *__ZN10IOWorkLoop9MetaClassD1Ev)(IOWorkLoop::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN10IOWorkLoop9MetaClassD0Ev)(IOWorkLoop::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK10IOWorkLoop9MetaClass5allocEv)(IOWorkLoop::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 723 */
struct IOInterruptEventSource::MetaClass
{
  struct vtable_IOInterruptEventSource::MetaClass *vtable;
};

/* 4288 */
struct vtable_IOInterruptEventSource::MetaClass
{
  __int64 (__fastcall *__ZN22IOInterruptEventSource9MetaClassD1Ev)(IOInterruptEventSource::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN22IOInterruptEventSource9MetaClassD0Ev)(IOInterruptEventSource::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK22IOInterruptEventSource9MetaClass5allocEv)(IOInterruptEventSource::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 724 */
struct IOCommandGate::MetaClass
{
  struct vtable_IOCommandGate::MetaClass *vtable;
};

/* 4292 */
struct vtable_IOCommandGate::MetaClass
{
  __int64 (__fastcall *__ZN13IOCommandGate9MetaClassD1Ev)(IOCommandGate::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN13IOCommandGate9MetaClassD0Ev)(IOCommandGate::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK13IOCommandGate9MetaClass5allocEv)(IOCommandGate::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 725 */
struct IOCommand::MetaClass
{
  struct vtable_IOCommand::MetaClass *vtable;
};

/* 4296 */
struct vtable_IOCommand::MetaClass
{
  __int64 (__fastcall *__ZN9IOCommand9MetaClassD1Ev)(IOCommand::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN9IOCommand9MetaClassD0Ev)(IOCommand::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK9IOCommand9MetaClass5allocEv)(IOCommand::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 726 */
struct IOCommandPool::MetaClass
{
  struct vtable_IOCommandPool::MetaClass *vtable;
};

/* 4300 */
struct vtable_IOCommandPool::MetaClass
{
  __int64 (__fastcall *__ZN13IOCommandPool9MetaClassD1Ev)(IOCommandPool::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN13IOCommandPool9MetaClassD0Ev)(IOCommandPool::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK13IOCommandPool9MetaClass5allocEv)(IOCommandPool::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 727 */
struct IODMAEventSource::MetaClass
{
  struct vtable_IODMAEventSource::MetaClass *vtable;
};

/* 4304 */
struct vtable_IODMAEventSource::MetaClass
{
  __int64 (__fastcall *__ZN16IODMAEventSource9MetaClassD1Ev)(IODMAEventSource::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IODMAEventSource9MetaClassD0Ev)(IODMAEventSource::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IODMAEventSource9MetaClass5allocEv)(IODMAEventSource::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 728 */
struct IOFilterInterruptEventSource::MetaClass
{
  struct vtable_IOFilterInterruptEventSource::MetaClass *vtable;
};

/* 4308 */
struct vtable_IOFilterInterruptEventSource::MetaClass
{
  __int64 (__fastcall *__ZN28IOFilterInterruptEventSource9MetaClassD1Ev)(IOFilterInterruptEventSource::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN28IOFilterInterruptEventSource9MetaClassD0Ev)(IOFilterInterruptEventSource::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK28IOFilterInterruptEventSource9MetaClass5allocEv)(IOFilterInterruptEventSource::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 729 */
struct IOTimerEventSource::MetaClass
{
  struct vtable_IOTimerEventSource::MetaClass *vtable;
};

/* 4312 */
struct vtable_IOTimerEventSource::MetaClass
{
  __int64 (__fastcall *__ZN18IOTimerEventSource9MetaClassD1Ev)(IOTimerEventSource::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN18IOTimerEventSource9MetaClassD0Ev)(IOTimerEventSource::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK18IOTimerEventSource9MetaClass5allocEv)(IOTimerEventSource::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 730 */
struct IOBufferMemoryDescriptor::MetaClass
{
  struct vtable_IOBufferMemoryDescriptor::MetaClass *vtable;
};

/* 4316 */
struct vtable_IOBufferMemoryDescriptor::MetaClass
{
  __int64 (__fastcall *__ZN24IOBufferMemoryDescriptor9MetaClassD1Ev)(IOBufferMemoryDescriptor::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN24IOBufferMemoryDescriptor9MetaClassD0Ev)(IOBufferMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN24IOBufferMemoryDescriptor9MetaClass8DispatchE5IORPC)(__int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK24IOBufferMemoryDescriptor9MetaClass5allocEv)(IOBufferMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 731 */
struct IODMACommand::MetaClass
{
  struct vtable_IODMACommand::MetaClass *vtable;
};

/* 4320 */
struct vtable_IODMACommand::MetaClass
{
  __int64 (__fastcall *__ZN12IODMACommand9MetaClassD1Ev)(IODMACommand::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN12IODMACommand9MetaClassD0Ev)(IODMACommand::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK12IODMACommand9MetaClass5allocEv)(IODMACommand::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 732 */
struct IOInterleavedMemoryDescriptor::MetaClass
{
  struct vtable_IOInterleavedMemoryDescriptor::MetaClass *vtable;
};

/* 4324 */
struct vtable_IOInterleavedMemoryDescriptor::MetaClass
{
  __int64 (__fastcall *__ZN29IOInterleavedMemoryDescriptor9MetaClassD1Ev)(IOInterleavedMemoryDescriptor::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN29IOInterleavedMemoryDescriptor9MetaClassD0Ev)(IOInterleavedMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK29IOInterleavedMemoryDescriptor9MetaClass5allocEv)(IOInterleavedMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 733 */
struct IOMemoryCursor::MetaClass
{
  struct vtable_IOMemoryCursor::MetaClass *vtable;
};

/* 4332 */
struct vtable_IOMemoryCursor::MetaClass
{
  __int64 (__fastcall *__ZN14IOMemoryCursor9MetaClassD1Ev)(IOMemoryCursor::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN14IOMemoryCursor9MetaClassD0Ev)(IOMemoryCursor::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK14IOMemoryCursor9MetaClass5allocEv)(IOMemoryCursor::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 734 */
struct IONaturalMemoryCursor::MetaClass
{
  struct vtable_IONaturalMemoryCursor::MetaClass *vtable;
};

/* 4336 */
struct vtable_IONaturalMemoryCursor::MetaClass
{
  __int64 (__fastcall *__ZN21IONaturalMemoryCursor9MetaClassD1Ev)(IONaturalMemoryCursor::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN21IONaturalMemoryCursor9MetaClassD0Ev)(IONaturalMemoryCursor::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK21IONaturalMemoryCursor9MetaClass5allocEv)(IONaturalMemoryCursor::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 735 */
struct IOBigMemoryCursor::MetaClass
{
  struct vtable_IOBigMemoryCursor::MetaClass *vtable;
};

/* 4340 */
struct vtable_IOBigMemoryCursor::MetaClass
{
  __int64 (__fastcall *__ZN17IOBigMemoryCursor9MetaClassD1Ev)(IOBigMemoryCursor::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN17IOBigMemoryCursor9MetaClassD0Ev)(IOBigMemoryCursor::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK17IOBigMemoryCursor9MetaClass5allocEv)(IOBigMemoryCursor::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 736 */
struct IOLittleMemoryCursor::MetaClass
{
  struct vtable_IOLittleMemoryCursor::MetaClass *vtable;
};

/* 4344 */
struct vtable_IOLittleMemoryCursor::MetaClass
{
  __int64 (__fastcall *__ZN20IOLittleMemoryCursor9MetaClassD1Ev)(IOLittleMemoryCursor::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN20IOLittleMemoryCursor9MetaClassD0Ev)(IOLittleMemoryCursor::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK20IOLittleMemoryCursor9MetaClass5allocEv)(IOLittleMemoryCursor::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 737 */
struct IOGeneralMemoryDescriptor::MetaClass
{
  struct vtable_IOGeneralMemoryDescriptor::MetaClass *vtable;
};

/* 4354 */
struct vtable_IOGeneralMemoryDescriptor::MetaClass
{
  __int64 (__fastcall *__ZN25IOGeneralMemoryDescriptor9MetaClassD1Ev)(IOGeneralMemoryDescriptor::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN25IOGeneralMemoryDescriptor9MetaClassD0Ev)(IOGeneralMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK25IOGeneralMemoryDescriptor9MetaClass5allocEv)(IOGeneralMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 738 */
struct IOMemoryMap::MetaClass
{
  struct vtable_IOMemoryMap::MetaClass *vtable;
};

/* 4356 */
struct vtable_IOMemoryMap::MetaClass
{
  __int64 (__fastcall *__ZN11IOMemoryMap9MetaClassD1Ev)(IOMemoryMap::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN11IOMemoryMap9MetaClassD0Ev)(IOMemoryMap::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN11IOMemoryMap9MetaClass8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK11IOMemoryMap9MetaClass5allocEv)(IOMemoryMap::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 739 */
struct IOMultiMemoryDescriptor::MetaClass
{
  struct vtable_IOMultiMemoryDescriptor::MetaClass *vtable;
};

/* 4360 */
struct vtable_IOMultiMemoryDescriptor::MetaClass
{
  __int64 (__fastcall *__ZN23IOMultiMemoryDescriptor9MetaClassD1Ev)(IOMultiMemoryDescriptor::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN23IOMultiMemoryDescriptor9MetaClassD0Ev)(IOMultiMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK23IOMultiMemoryDescriptor9MetaClass5allocEv)(IOMultiMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 740 */
struct IORangeAllocator::MetaClass
{
  struct vtable_IORangeAllocator::MetaClass *vtable;
};

/* 4364 */
struct vtable_IORangeAllocator::MetaClass
{
  __int64 (__fastcall *__ZN16IORangeAllocator9MetaClassD1Ev)(IORangeAllocator::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IORangeAllocator9MetaClassD0Ev)(IORangeAllocator::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IORangeAllocator9MetaClass5allocEv)(IORangeAllocator::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 741 */
struct IOSubMemoryDescriptor::MetaClass
{
  struct vtable_IOSubMemoryDescriptor::MetaClass *vtable;
};

/* 4368 */
struct vtable_IOSubMemoryDescriptor::MetaClass
{
  __int64 (__fastcall *__ZN21IOSubMemoryDescriptor9MetaClassD1Ev)(IOSubMemoryDescriptor::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN21IOSubMemoryDescriptor9MetaClassD0Ev)(IOSubMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK21IOSubMemoryDescriptor9MetaClass5allocEv)(IOSubMemoryDescriptor::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 742 */
struct IOPlatformExpert::MetaClass
{
  struct vtable_IOPlatformExpert::MetaClass *vtable;
};

/* 4374 */
struct vtable_IOPlatformExpert::MetaClass
{
  __int64 (__fastcall *__ZN16IOPlatformExpert9MetaClassD1Ev)(IOPlatformExpert::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IOPlatformExpert9MetaClassD0Ev)(IOPlatformExpert::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IOPlatformExpert9MetaClass5allocEv)(IOPlatformExpert::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 743 */
struct IOPlatformExpertDevice::MetaClass
{
  struct vtable_IOPlatformExpertDevice::MetaClass *vtable;
};

/* 4382 */
struct vtable_IOPlatformExpertDevice::MetaClass
{
  __int64 (__fastcall *__ZN22IOPlatformExpertDevice9MetaClassD1Ev)(IOPlatformExpertDevice::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN22IOPlatformExpertDevice9MetaClassD0Ev)(IOPlatformExpertDevice::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK22IOPlatformExpertDevice9MetaClass5allocEv)(IOPlatformExpertDevice::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 744 */
struct IOPlatformDevice::MetaClass
{
  struct vtable_IOPlatformDevice::MetaClass *vtable;
};

/* 4384 */
struct vtable_IOPlatformDevice::MetaClass
{
  __int64 (__fastcall *__ZN16IOPlatformDevice9MetaClassD1Ev)(IOPlatformDevice::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IOPlatformDevice9MetaClassD0Ev)(IOPlatformDevice::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IOPlatformDevice9MetaClass5allocEv)(IOPlatformDevice::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 745 */
struct IOPanicPlatform::MetaClass
{
  struct vtable_IOPanicPlatform::MetaClass *vtable;
};

/* 4388 */
struct vtable_IOPanicPlatform::MetaClass
{
  __int64 (__fastcall *__ZN15IOPanicPlatform9MetaClassD1Ev)(IOPanicPlatform::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IOPanicPlatform9MetaClassD0Ev)(IOPanicPlatform::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IOPanicPlatform9MetaClass5allocEv)(IOPanicPlatform::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 746 */
struct IOCPUInterruptController::MetaClass
{
  struct vtable_IOCPUInterruptController::MetaClass *vtable;
};

/* 4396 */
struct vtable_IOCPUInterruptController::MetaClass
{
  __int64 (__fastcall *__ZN24IOCPUInterruptController9MetaClassD1Ev)(IOCPUInterruptController::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN24IOCPUInterruptController9MetaClassD0Ev)(IOCPUInterruptController::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK24IOCPUInterruptController9MetaClass5allocEv)(IOCPUInterruptController::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 747 */
struct IODTNVRAM::MetaClass
{
  struct vtable_IODTNVRAM::MetaClass *vtable;
};

/* 4400 */
struct vtable_IODTNVRAM::MetaClass
{
  __int64 (__fastcall *__ZN9IODTNVRAM9MetaClassD1Ev)(IODTNVRAM::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN9IODTNVRAM9MetaClassD0Ev)(IODTNVRAM::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK9IODTNVRAM9MetaClass5allocEv)(IODTNVRAM::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 748 */
struct IOSharedInterruptController::MetaClass
{
  struct vtable_IOSharedInterruptController::MetaClass *vtable;
};

/* 4412 */
struct vtable_IOSharedInterruptController::MetaClass
{
  __int64 (__fastcall *__ZN27IOSharedInterruptController9MetaClassD1Ev)(IOSharedInterruptController::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN27IOSharedInterruptController9MetaClassD0Ev)(IOSharedInterruptController::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK27IOSharedInterruptController9MetaClass5allocEv)(IOSharedInterruptController::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 749 */
struct IOMachPort::MetaClass
{
  struct vtable_IOMachPort::MetaClass *vtable;
};

/* 4416 */
struct vtable_IOMachPort::MetaClass
{
  __int64 (__fastcall *__ZN10IOMachPort9MetaClassD1Ev)(IOMachPort::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN10IOMachPort9MetaClassD0Ev)(IOMachPort::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK10IOMachPort9MetaClass5allocEv)(IOMachPort::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 750 */
struct IOUserIterator::MetaClass
{
  struct vtable_IOUserIterator::MetaClass *vtable;
};

/* 4420 */
struct vtable_IOUserIterator::MetaClass
{
  __int64 (__fastcall *__ZN14IOUserIterator9MetaClassD1Ev)(IOUserIterator::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN14IOUserIterator9MetaClassD0Ev)(IOUserIterator::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK14IOUserIterator9MetaClass5allocEv)(IOUserIterator::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 751 */
struct IOServiceUserNotification::MetaClass
{
  struct vtable_IOServiceUserNotification::MetaClass *vtable;
};

/* 4428 */
struct vtable_IOServiceUserNotification::MetaClass
{
  __int64 (__fastcall *__ZN25IOServiceUserNotification9MetaClassD1Ev)(IOServiceUserNotification::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN25IOServiceUserNotification9MetaClassD0Ev)(IOServiceUserNotification::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK25IOServiceUserNotification9MetaClass5allocEv)(IOServiceUserNotification::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 752 */
struct IOServiceMessageUserNotification::MetaClass
{
  struct vtable_IOServiceMessageUserNotification::MetaClass *vtable;
};

/* 4432 */
struct vtable_IOServiceMessageUserNotification::MetaClass
{
  __int64 (__fastcall *__ZN32IOServiceMessageUserNotification9MetaClassD1Ev)(IOServiceMessageUserNotification::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN32IOServiceMessageUserNotification9MetaClassD0Ev)(IOServiceMessageUserNotification::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK32IOServiceMessageUserNotification9MetaClass5allocEv)(IOServiceMessageUserNotification::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 753 */
struct IOKitDiagnostics::MetaClass
{
  struct vtable_IOKitDiagnostics::MetaClass *vtable;
};

/* 4440 */
struct vtable_IOKitDiagnostics::MetaClass
{
  __int64 (__fastcall *__ZN16IOKitDiagnostics9MetaClassD1Ev)(IOKitDiagnostics::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IOKitDiagnostics9MetaClassD0Ev)(IOKitDiagnostics::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IOKitDiagnostics9MetaClass5allocEv)(IOKitDiagnostics::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 754 */
struct IOKitDiagnosticsClient::MetaClass
{
  struct vtable_IOKitDiagnosticsClient::MetaClass *vtable;
};

/* 4444 */
struct vtable_IOKitDiagnosticsClient::MetaClass
{
  __int64 (__fastcall *__ZN22IOKitDiagnosticsClient9MetaClassD1Ev)(IOKitDiagnosticsClient::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN22IOKitDiagnosticsClient9MetaClassD0Ev)(IOKitDiagnosticsClient::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK22IOKitDiagnosticsClient9MetaClass5allocEv)(IOKitDiagnosticsClient::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 755 */
struct IODataQueue::MetaClass
{
  struct vtable_IODataQueue::MetaClass *vtable;
};

/* 4448 */
struct vtable_IODataQueue::MetaClass
{
  __int64 (__fastcall *__ZN11IODataQueue9MetaClassD1Ev)(IODataQueue::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN11IODataQueue9MetaClassD0Ev)(IODataQueue::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK11IODataQueue9MetaClass5allocEv)(IODataQueue::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 756 */
struct IOSharedDataQueue::MetaClass
{
  struct vtable_IOSharedDataQueue::MetaClass *vtable;
};

/* 4452 */
struct vtable_IOSharedDataQueue::MetaClass
{
  __int64 (__fastcall *__ZN17IOSharedDataQueue9MetaClassD1Ev)(IOSharedDataQueue::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN17IOSharedDataQueue9MetaClassD0Ev)(IOSharedDataQueue::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK17IOSharedDataQueue9MetaClass5allocEv)(IOSharedDataQueue::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 757 */
struct IOStatistics;

/* 758 */
struct IOReporter::MetaClass
{
  struct vtable_IOReporter::MetaClass *vtable;
};

/* 4456 */
struct vtable_IOReporter::MetaClass
{
  __int64 (__fastcall *__ZN10IOReporter9MetaClassD1Ev)(IOReporter::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN10IOReporter9MetaClassD0Ev)(IOReporter::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK10IOReporter9MetaClass5allocEv)(IOReporter::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 759 */
struct IOSimpleReporter::MetaClass
{
  struct vtable_IOSimpleReporter::MetaClass *vtable;
};

/* 4460 */
struct vtable_IOSimpleReporter::MetaClass
{
  __int64 (__fastcall *__ZN16IOSimpleReporter9MetaClassD1Ev)(IOSimpleReporter::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IOSimpleReporter9MetaClassD0Ev)(IOSimpleReporter::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IOSimpleReporter9MetaClass5allocEv)(IOSimpleReporter::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 760 */
struct IOStateReporter::MetaClass
{
  struct vtable_IOStateReporter::MetaClass *vtable;
};

/* 4464 */
struct vtable_IOStateReporter::MetaClass
{
  __int64 (__fastcall *__ZN15IOStateReporter9MetaClassD1Ev)(IOStateReporter::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IOStateReporter9MetaClassD0Ev)(IOStateReporter::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IOStateReporter9MetaClass5allocEv)(IOStateReporter::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 761 */
struct IOHistogramReporter::MetaClass
{
  struct vtable_IOHistogramReporter::MetaClass *vtable;
};

/* 4468 */
struct vtable_IOHistogramReporter::MetaClass
{
  __int64 (__fastcall *__ZN19IOHistogramReporter9MetaClassD1Ev)(IOHistogramReporter::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN19IOHistogramReporter9MetaClassD0Ev)(IOHistogramReporter::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK19IOHistogramReporter9MetaClass5allocEv)(IOHistogramReporter::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 762 */
struct IOReportLegend::MetaClass
{
  struct vtable_IOReportLegend::MetaClass *vtable;
};

/* 4472 */
struct vtable_IOReportLegend::MetaClass
{
  __int64 (__fastcall *__ZN14IOReportLegend9MetaClassD1Ev)(IOReportLegend::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN14IOReportLegend9MetaClassD0Ev)(IOReportLegend::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK14IOReportLegend9MetaClass5allocEv)(IOReportLegend::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 763 */
struct OSUserMetaClass::MetaClass
{
  struct vtable_OSUserMetaClass::MetaClass *vtable;
};

/* 4480 */
struct vtable_OSUserMetaClass::MetaClass
{
  __int64 (__fastcall *__ZN15OSUserMetaClass9MetaClassD1Ev)(OSUserMetaClass::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15OSUserMetaClass9MetaClassD0Ev)(OSUserMetaClass::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15OSUserMetaClass9MetaClass5allocEv)(OSUserMetaClass::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 764 */
struct IOUserService::MetaClass
{
  struct vtable_IOUserService::MetaClass *vtable;
};

/* 4484 */
struct vtable_IOUserService::MetaClass
{
  __int64 (__fastcall *__ZN13IOUserService9MetaClassD1Ev)(IOUserService::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN13IOUserService9MetaClassD0Ev)(IOUserService::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK13IOUserService9MetaClass5allocEv)(IOUserService::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 765 */
struct IOUserServer::MetaClass
{
  struct vtable_IOUserServer::MetaClass *vtable;
};

/* 4488 */
struct vtable_IOUserServer::MetaClass
{
  __int64 (__fastcall *__ZN12IOUserServer9MetaClassD1Ev)(IOUserServer::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN12IOUserServer9MetaClassD0Ev)(IOUserServer::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN12IOUserServer9MetaClass8DispatchE5IORPC)(__int64);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK12IOUserServer9MetaClass5allocEv)(IOUserServer::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 766 */
struct RootDomainUserClient::MetaClass
{
  struct vtable_RootDomainUserClient::MetaClass *vtable;
};

/* 4492 */
struct vtable_RootDomainUserClient::MetaClass
{
  __int64 (__fastcall *__ZN20RootDomainUserClient9MetaClassD1Ev)(RootDomainUserClient::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN20RootDomainUserClient9MetaClassD0Ev)(RootDomainUserClient::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK20RootDomainUserClient9MetaClass5allocEv)(RootDomainUserClient::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 767 */
struct IOPowerConnection::MetaClass
{
  struct vtable_IOPowerConnection::MetaClass *vtable;
};

/* 4496 */
struct vtable_IOPowerConnection::MetaClass
{
  __int64 (__fastcall *__ZN17IOPowerConnection9MetaClassD1Ev)(IOPowerConnection::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN17IOPowerConnection9MetaClassD0Ev)(IOPowerConnection::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK17IOPowerConnection9MetaClass5allocEv)(IOPowerConnection::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 768 */
struct IOPerfControlClient::MetaClass
{
  struct vtable_IOPerfControlClient::MetaClass *vtable;
};

/* 4504 */
struct vtable_IOPerfControlClient::MetaClass
{
  __int64 (__fastcall *__ZN19IOPerfControlClient9MetaClassD1Ev)(IOPerfControlClient::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN19IOPerfControlClient9MetaClassD0Ev)(IOPerfControlClient::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK19IOPerfControlClient9MetaClass5allocEv)(IOPerfControlClient::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 769 */
struct IOSKRegionMapper::MetaClass
{
  struct vtable_IOSKRegionMapper::MetaClass *vtable;
};

/* 4508 */
struct vtable_IOSKRegionMapper::MetaClass
{
  __int64 (__fastcall *__ZN16IOSKRegionMapper9MetaClassD1Ev)(IOSKRegionMapper::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IOSKRegionMapper9MetaClassD0Ev)(IOSKRegionMapper::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IOSKRegionMapper9MetaClass5allocEv)(IOSKRegionMapper::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 770 */
struct IOSKMapper::MetaClass
{
  struct vtable_IOSKMapper::MetaClass *vtable;
};

/* 4512 */
struct vtable_IOSKMapper::MetaClass
{
  __int64 (__fastcall *__ZN10IOSKMapper9MetaClassD1Ev)(IOSKMapper::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN10IOSKMapper9MetaClassD0Ev)(IOSKMapper::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK10IOSKMapper9MetaClass5allocEv)(IOSKMapper::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 771 */
struct IOSKArena::MetaClass
{
  struct vtable_IOSKArena::MetaClass *vtable;
};

/* 4516 */
struct vtable_IOSKArena::MetaClass
{
  __int64 (__fastcall *__ZN9IOSKArena9MetaClassD1Ev)(IOSKArena::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN9IOSKArena9MetaClassD0Ev)(IOSKArena::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK9IOSKArena9MetaClass5allocEv)(IOSKArena::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 772 */
struct IOSKRegion::MetaClass
{
  struct vtable_IOSKRegion::MetaClass *vtable;
};

/* 4520 */
struct vtable_IOSKRegion::MetaClass
{
  __int64 (__fastcall *__ZN10IOSKRegion9MetaClassD1Ev)(IOSKRegion::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN10IOSKRegion9MetaClassD0Ev)(IOSKRegion::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK10IOSKRegion9MetaClass5allocEv)(IOSKRegion::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 773 */
struct IOSKMemoryArray::MetaClass
{
  struct vtable_IOSKMemoryArray::MetaClass *vtable;
};

/* 4524 */
struct vtable_IOSKMemoryArray::MetaClass
{
  __int64 (__fastcall *__ZN15IOSKMemoryArray9MetaClassD1Ev)(IOSKMemoryArray::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15IOSKMemoryArray9MetaClassD0Ev)(IOSKMemoryArray::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15IOSKMemoryArray9MetaClass5allocEv)(IOSKMemoryArray::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 774 */
struct IOSKMemoryBuffer::MetaClass
{
  struct vtable_IOSKMemoryBuffer::MetaClass *vtable;
};

/* 4528 */
struct vtable_IOSKMemoryBuffer::MetaClass
{
  __int64 (__fastcall *__ZN16IOSKMemoryBuffer9MetaClassD1Ev)(IOSKMemoryBuffer::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN16IOSKMemoryBuffer9MetaClassD0Ev)(IOSKMemoryBuffer::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK16IOSKMemoryBuffer9MetaClass5allocEv)(IOSKMemoryBuffer::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 775 */
struct IOSyncer::MetaClass
{
  struct vtable_IOSyncer::MetaClass *vtable;
};

/* 4532 */
struct vtable_IOSyncer::MetaClass
{
  __int64 (__fastcall *__ZN8IOSyncer9MetaClassD1Ev)(IOSyncer::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN8IOSyncer9MetaClassD0Ev)(IOSyncer::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK8IOSyncer9MetaClass5allocEv)(IOSyncer::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 776 */
struct PMAssertionsTracker::MetaClass
{
  struct vtable_PMAssertionsTracker::MetaClass *vtable;
};

/* 4536 */
struct vtable_PMAssertionsTracker::MetaClass
{
  __int64 (__fastcall *__ZN19PMAssertionsTracker9MetaClassD1Ev)(PMAssertionsTracker::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN19PMAssertionsTracker9MetaClassD0Ev)(PMAssertionsTracker::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK19PMAssertionsTracker9MetaClass5allocEv)(PMAssertionsTracker::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 777 */
struct PMHaltWorker::MetaClass
{
  struct vtable_PMHaltWorker::MetaClass *vtable;
};

/* 4540 */
struct vtable_PMHaltWorker::MetaClass
{
  __int64 (__fastcall *__ZN12PMHaltWorker9MetaClassD1Ev)(PMHaltWorker::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN12PMHaltWorker9MetaClassD0Ev)(PMHaltWorker::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK12PMHaltWorker9MetaClass5allocEv)(PMHaltWorker::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 778 */
struct IOPMrootDomain::MetaClass
{
  struct vtable_IOPMrootDomain::MetaClass *vtable;
};

/* 4548 */
struct vtable_IOPMrootDomain::MetaClass
{
  __int64 (__fastcall *__ZN14IOPMrootDomain9MetaClassD1Ev)(IOPMrootDomain::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN14IOPMrootDomain9MetaClassD0Ev)(IOPMrootDomain::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK14IOPMrootDomain9MetaClass5allocEv)(IOPMrootDomain::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 779 */
struct IOPMServiceInterestNotifier::MetaClass
{
  struct vtable_IOPMServiceInterestNotifier::MetaClass *vtable;
};

/* 4550 */
struct vtable_IOPMServiceInterestNotifier::MetaClass
{
  __int64 (__fastcall *__ZN27IOPMServiceInterestNotifier9MetaClassD1Ev)(IOPMServiceInterestNotifier::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN27IOPMServiceInterestNotifier9MetaClassD0Ev)(IOPMServiceInterestNotifier::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK27IOPMServiceInterestNotifier9MetaClass5allocEv)(IOPMServiceInterestNotifier::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 780 */
struct PMTraceWorker::MetaClass
{
  struct vtable_PMTraceWorker::MetaClass *vtable;
};

/* 4554 */
struct vtable_PMTraceWorker::MetaClass
{
  __int64 (__fastcall *__ZN13PMTraceWorker9MetaClassD1Ev)(PMTraceWorker::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN13PMTraceWorker9MetaClassD0Ev)(PMTraceWorker::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK13PMTraceWorker9MetaClass5allocEv)(PMTraceWorker::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 781 */
struct PMSettingHandle::MetaClass
{
  struct vtable_PMSettingHandle::MetaClass *vtable;
};

/* 4558 */
struct vtable_PMSettingHandle::MetaClass
{
  __int64 (__fastcall *__ZN15PMSettingHandle9MetaClassD1Ev)(PMSettingHandle::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15PMSettingHandle9MetaClassD0Ev)(PMSettingHandle::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15PMSettingHandle9MetaClass5allocEv)(PMSettingHandle::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 782 */
struct PMSettingObject::MetaClass
{
  struct vtable_PMSettingObject::MetaClass *vtable;
};

/* 4562 */
struct vtable_PMSettingObject::MetaClass
{
  __int64 (__fastcall *__ZN15PMSettingObject9MetaClassD1Ev)(PMSettingObject::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN15PMSettingObject9MetaClassD0Ev)(PMSettingObject::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK15PMSettingObject9MetaClass5allocEv)(PMSettingObject::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 783 */
struct IORootParent::MetaClass
{
  struct vtable_IORootParent::MetaClass *vtable;
};

/* 4564 */
struct vtable_IORootParent::MetaClass
{
  __int64 (__fastcall *__ZN12IORootParent9MetaClassD1Ev)(IORootParent::MetaClass *__hidden this);
  __int64 (__fastcall *__ZN12IORootParent9MetaClassD0Ev)(IORootParent::MetaClass *__hidden this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEi)(OSMetaClass *this, int freeWhen);
  int (__cdecl *__ZNK11OSMetaClass14getRetainCountEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass6retainEv)(OSMetaClass *this);
  void (__cdecl *__ZNK11OSMetaClass7releaseEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK11OSMetaClass9serializeEP11OSSerialize)(OSMetaClass *this, OSSerialize *serializer);
  const OSMetaClass *(__cdecl *__ZNK11OSMetaClass12getMetaClassEv)(OSMetaClass *this);
  bool (__cdecl *__ZNK15OSMetaClassBase9isEqualToEPKS_)(OSMetaClassBase *this, const OSMetaClassBase *anObject);
  void (__cdecl *__ZNK11OSMetaClass12taggedRetainEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKv)(OSMetaClass *this, const void *tag);
  void (__cdecl *__ZNK11OSMetaClass13taggedReleaseEPKvi)(OSMetaClass *this, const void *tag, const int freeWhen);
  __int64 (__fastcall *__ZN15OSMetaClassBase8DispatchE5IORPC)();
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase4Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase5Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase6Ev)(OSMetaClassBase *this);
  void (__cdecl *__ZN15OSMetaClassBase25_RESERVEDOSMetaClassBase7Ev)(OSMetaClassBase *this);
  __int64 (__fastcall *__ZNK12IORootParent9MetaClass5allocEv)(IORootParent::MetaClass *__hidden this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass0Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass1Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass2Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass3Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass4Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass5Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass6Ev)(OSMetaClass *this);
  void (__cdecl *__ZN11OSMetaClass21_RESERVEDOSMetaClass7Ev)(OSMetaClass *this);
};

/* 784 */
typedef __int64 __darwin_ptrdiff_t;

/* 785 */
typedef __uint32_t __darwin_ino_t;

/* 786 */
typedef __uint64_t user64_addr_t;

/* 787 */
typedef __uint64_t user64_size_t;

/* 788 */
typedef __int64_t user64_ssize_t;

/* 789 */
typedef __int64_t user64_long_t;

/* 790 */
typedef __uint64_t user64_ulong_t;

/* 791 */
typedef __int64_t user64_time_t;

/* 792 */
typedef __int64_t user64_off_t;

/* 793 */
typedef __uint32_t user32_addr_t;

/* 794 */
typedef __uint32_t user32_size_t;

/* 795 */
typedef __int32_t user32_ssize_t;

/* 796 */
typedef __int32_t user32_long_t;

/* 797 */
typedef __uint32_t user32_ulong_t;

/* 798 */
typedef __int32_t user32_time_t;

/* 799 */
typedef __int64_t user32_off_t;

/* 800 */
typedef __darwin_size_t rsize_t;

/* 801 */
struct fd_set
{
  __int32_t fds_bits[32];
};

/* 803 */
struct timeval64
{
  __int64_t tv_sec;
  __int64_t tv_usec;
};

/* 804 */
struct user_timespec
{
  user_time_t tv_sec;
  user_long_t tv_nsec;
};

/* 805 */
struct user32_timespec
{
  user32_time_t tv_sec;
  user32_long_t tv_nsec;
};

/* 806 */
struct user64_timespec
{
  user64_time_t tv_sec;
  user64_long_t tv_nsec;
};

/* 807 */
struct user_timeval
{
  user_time_t tv_sec;
  __int32_t tv_usec;
};

/* 808 */
struct user32_timeval
{
  user32_time_t tv_sec;
  __int32_t tv_usec;
};

/* 809 */
struct user64_timeval
{
  user64_time_t tv_sec;
  __int32_t tv_usec;
};

/* 810 */
struct user32_itimerval
{
  struct user32_timeval it_interval;
  struct user32_timeval it_value;
};

/* 811 */
struct user64_itimerval
{
  struct user64_timeval it_interval;
  struct user64_timeval it_value;
};

/* 812 */
struct itimerval
{
  struct timeval it_interval;
  struct timeval it_value;
};

/* 813 */
struct rusage
{
  struct timeval ru_utime;
  struct timeval ru_stime;
  __int64 ru_maxrss;
  __int64 ru_ixrss;
  __int64 ru_idrss;
  __int64 ru_isrss;
  __int64 ru_minflt;
  __int64 ru_majflt;
  __int64 ru_nswap;
  __int64 ru_inblock;
  __int64 ru_oublock;
  __int64 ru_msgsnd;
  __int64 ru_msgrcv;
  __int64 ru_nsignals;
  __int64 ru_nvcsw;
  __int64 ru_nivcsw;
};

/* 814 */
typedef void *rusage_info_t;

/* 815 */
struct rusage_info_v0
{
  uint8_t ri_uuid[16];
  uint64_t ri_user_time;
  uint64_t ri_system_time;
  uint64_t ri_pkg_idle_wkups;
  uint64_t ri_interrupt_wkups;
  uint64_t ri_pageins;
  uint64_t ri_wired_size;
  uint64_t ri_resident_size;
  uint64_t ri_phys_footprint;
  uint64_t ri_proc_start_abstime;
  uint64_t ri_proc_exit_abstime;
};

/* 816 */
struct rusage_info_v1
{
  uint8_t ri_uuid[16];
  uint64_t ri_user_time;
  uint64_t ri_system_time;
  uint64_t ri_pkg_idle_wkups;
  uint64_t ri_interrupt_wkups;
  uint64_t ri_pageins;
  uint64_t ri_wired_size;
  uint64_t ri_resident_size;
  uint64_t ri_phys_footprint;
  uint64_t ri_proc_start_abstime;
  uint64_t ri_proc_exit_abstime;
  uint64_t ri_child_user_time;
  uint64_t ri_child_system_time;
  uint64_t ri_child_pkg_idle_wkups;
  uint64_t ri_child_interrupt_wkups;
  uint64_t ri_child_pageins;
  uint64_t ri_child_elapsed_abstime;
};

/* 817 */
struct rusage_info_v2
{
  uint8_t ri_uuid[16];
  uint64_t ri_user_time;
  uint64_t ri_system_time;
  uint64_t ri_pkg_idle_wkups;
  uint64_t ri_interrupt_wkups;
  uint64_t ri_pageins;
  uint64_t ri_wired_size;
  uint64_t ri_resident_size;
  uint64_t ri_phys_footprint;
  uint64_t ri_proc_start_abstime;
  uint64_t ri_proc_exit_abstime;
  uint64_t ri_child_user_time;
  uint64_t ri_child_system_time;
  uint64_t ri_child_pkg_idle_wkups;
  uint64_t ri_child_interrupt_wkups;
  uint64_t ri_child_pageins;
  uint64_t ri_child_elapsed_abstime;
  uint64_t ri_diskio_bytesread;
  uint64_t ri_diskio_byteswritten;
};

/* 818 */
struct rusage_info_v3
{
  uint8_t ri_uuid[16];
  uint64_t ri_user_time;
  uint64_t ri_system_time;
  uint64_t ri_pkg_idle_wkups;
  uint64_t ri_interrupt_wkups;
  uint64_t ri_pageins;
  uint64_t ri_wired_size;
  uint64_t ri_resident_size;
  uint64_t ri_phys_footprint;
  uint64_t ri_proc_start_abstime;
  uint64_t ri_proc_exit_abstime;
  uint64_t ri_child_user_time;
  uint64_t ri_child_system_time;
  uint64_t ri_child_pkg_idle_wkups;
  uint64_t ri_child_interrupt_wkups;
  uint64_t ri_child_pageins;
  uint64_t ri_child_elapsed_abstime;
  uint64_t ri_diskio_bytesread;
  uint64_t ri_diskio_byteswritten;
  uint64_t ri_cpu_time_qos_default;
  uint64_t ri_cpu_time_qos_maintenance;
  uint64_t ri_cpu_time_qos_background;
  uint64_t ri_cpu_time_qos_utility;
  uint64_t ri_cpu_time_qos_legacy;
  uint64_t ri_cpu_time_qos_user_initiated;
  uint64_t ri_cpu_time_qos_user_interactive;
  uint64_t ri_billed_system_time;
  uint64_t ri_serviced_system_time;
};

/* 819 */
struct rusage_info_v4
{
  uint8_t ri_uuid[16];
  uint64_t ri_user_time;
  uint64_t ri_system_time;
  uint64_t ri_pkg_idle_wkups;
  uint64_t ri_interrupt_wkups;
  uint64_t ri_pageins;
  uint64_t ri_wired_size;
  uint64_t ri_resident_size;
  uint64_t ri_phys_footprint;
  uint64_t ri_proc_start_abstime;
  uint64_t ri_proc_exit_abstime;
  uint64_t ri_child_user_time;
  uint64_t ri_child_system_time;
  uint64_t ri_child_pkg_idle_wkups;
  uint64_t ri_child_interrupt_wkups;
  uint64_t ri_child_pageins;
  uint64_t ri_child_elapsed_abstime;
  uint64_t ri_diskio_bytesread;
  uint64_t ri_diskio_byteswritten;
  uint64_t ri_cpu_time_qos_default;
  uint64_t ri_cpu_time_qos_maintenance;
  uint64_t ri_cpu_time_qos_background;
  uint64_t ri_cpu_time_qos_utility;
  uint64_t ri_cpu_time_qos_legacy;
  uint64_t ri_cpu_time_qos_user_initiated;
  uint64_t ri_cpu_time_qos_user_interactive;
  uint64_t ri_billed_system_time;
  uint64_t ri_serviced_system_time;
  uint64_t ri_logical_writes;
  uint64_t ri_lifetime_max_phys_footprint;
  uint64_t ri_instructions;
  uint64_t ri_cycles;
  uint64_t ri_billed_energy;
  uint64_t ri_serviced_energy;
  uint64_t ri_unused[2];
};

/* 820 */
typedef struct rusage_info_v4 rusage_info_current;

/* 821 */
struct rusage_superset
{
  struct rusage ru;
  rusage_info_current ri;
};

/* 822 */
struct rusage_info_child
{
  uint64_t ri_child_user_time;
  uint64_t ri_child_system_time;
  uint64_t ri_child_pkg_idle_wkups;
  uint64_t ri_child_interrupt_wkups;
  uint64_t ri_child_pageins;
  uint64_t ri_child_elapsed_abstime;
};

/* 823 */
struct user64_rusage
{
  struct user64_timeval ru_utime;
  struct user64_timeval ru_stime;
  user64_long_t ru_maxrss;
  user64_long_t ru_ixrss;
  user64_long_t ru_idrss;
  user64_long_t ru_isrss;
  user64_long_t ru_minflt;
  user64_long_t ru_majflt;
  user64_long_t ru_nswap;
  user64_long_t ru_inblock;
  user64_long_t ru_oublock;
  user64_long_t ru_msgsnd;
  user64_long_t ru_msgrcv;
  user64_long_t ru_nsignals;
  user64_long_t ru_nvcsw;
  user64_long_t ru_nivcsw;
};

/* 824 */
struct user32_rusage
{
  struct user32_timeval ru_utime;
  struct user32_timeval ru_stime;
  user32_long_t ru_maxrss;
  user32_long_t ru_ixrss;
  user32_long_t ru_idrss;
  user32_long_t ru_isrss;
  user32_long_t ru_minflt;
  user32_long_t ru_majflt;
  user32_long_t ru_nswap;
  user32_long_t ru_inblock;
  user32_long_t ru_oublock;
  user32_long_t ru_msgsnd;
  user32_long_t ru_msgrcv;
  user32_long_t ru_nsignals;
  user32_long_t ru_nvcsw;
  user32_long_t ru_nivcsw;
};

/* 825 */
struct proc_rlimit_control_wakeupmon
{
  uint32_t wm_flags;
  int32_t wm_rate;
};

/* 826 */
struct auditinfo
{
  au_id_t ai_auid;
  au_mask_t ai_mask;
  au_tid_t ai_termid;
  au_asid_t ai_asid;
};

/* 827 */
struct auditpinfo
{
  pid_t ap_pid;
  au_id_t ap_auid;
  au_mask_t ap_mask;
  au_tid_t ap_termid;
  au_asid_t ap_asid;
};

/* 828 */
struct auditpinfo_addr
{
  pid_t ap_pid;
  au_id_t ap_auid;
  au_mask_t ap_mask;
  au_tid_addr_t ap_termid;
  au_asid_t ap_asid;
  au_asflgs_t ap_flags;
};

/* 829 */
struct audit_fstat
{
  u_int64_t af_filesz;
  u_int64_t af_currsz;
};

/* 831 */
struct xucred
{
  u_int cr_version;
  uid_t cr_uid;
  __int16 cr_ngroups;
  gid_t cr_groups[16];
};

/* 832 */
struct iovec
{
  void *iov_base;
  size_t iov_len;
};

/* 833 */
struct __bufattr;

/* 834 */
typedef struct __bufattr *bufattr_t;

/* 835 */
typedef int kauth_action_t;

/* 836 */
enum uio_seg
{
  UIO_USERSPACE = 0x0,
  UIO_SYSSPACE = 0x2,
  UIO_USERSPACE32 = 0x5,
  UIO_USERSPACE64 = 0x8,
  UIO_SYSSPACE32 = 0xB,
};

/* 837 */
struct i386_thread_state
{
  unsigned int eax;
  unsigned int ebx;
  unsigned int ecx;
  unsigned int edx;
  unsigned int edi;
  unsigned int esi;
  unsigned int ebp;
  unsigned int esp;
  unsigned int ss;
  unsigned int eflags;
  unsigned int eip;
  unsigned int cs;
  unsigned int ds;
  unsigned int es;
  unsigned int fs;
  unsigned int gs;
};

/* 838 */
struct mmst_reg
{
  char mmst_reg[10];
  char mmst_rsrv[6];
};

/* 839 */
struct xmm_reg
{
  char xmm_reg[16];
};

/* 840 */
struct ymm_reg
{
  char ymm_reg[32];
};

/* 841 */
struct zmm_reg
{
  char zmm_reg[64];
};

/* 842 */
struct opmask_reg
{
  char opmask_reg[8];
};

/* 4041 */
struct fp_control
{
  unsigned __int16 invalid : 1;
  unsigned __int16 denorm : 1;
  unsigned __int16 zdiv : 1;
  unsigned __int16 ovrfl : 1;
  unsigned __int16 undfl : 1;
  unsigned __int16 precis : 1;
  unsigned __int16 : 2;
  unsigned __int16 pc : 2;
  unsigned __int16 rc : 2;
  unsigned __int16 : 1;
  unsigned __int16 : 3;
};

/* 4042 */
struct fp_status
{
  unsigned __int16 invalid : 1;
  unsigned __int16 denorm : 1;
  unsigned __int16 zdiv : 1;
  unsigned __int16 ovrfl : 1;
  unsigned __int16 undfl : 1;
  unsigned __int16 precis : 1;
  unsigned __int16 stkflt : 1;
  unsigned __int16 errsumm : 1;
  unsigned __int16 c0 : 1;
  unsigned __int16 c1 : 1;
  unsigned __int16 c2 : 1;
  unsigned __int16 tos : 3;
  unsigned __int16 c3 : 1;
  unsigned __int16 busy : 1;
};

/* 843 */
struct i386_float_state
{
  int fpu_reserved[2];
  struct fp_control fpu_fcw;
  struct fp_status fpu_fsw;
  __uint8_t fpu_ftw;
  __uint8_t fpu_rsrv1;
  __uint16_t fpu_fop;
  __uint32_t fpu_ip;
  __uint16_t fpu_cs;
  __uint16_t fpu_rsrv2;
  __uint32_t fpu_dp;
  __uint16_t fpu_ds;
  __uint16_t fpu_rsrv3;
  __uint32_t fpu_mxcsr;
  __uint32_t fpu_mxcsrmask;
  struct mmst_reg fpu_stmm0;
  struct mmst_reg fpu_stmm1;
  struct mmst_reg fpu_stmm2;
  struct mmst_reg fpu_stmm3;
  struct mmst_reg fpu_stmm4;
  struct mmst_reg fpu_stmm5;
  struct mmst_reg fpu_stmm6;
  struct mmst_reg fpu_stmm7;
  struct xmm_reg fpu_xmm0;
  struct xmm_reg fpu_xmm1;
  struct xmm_reg fpu_xmm2;
  struct xmm_reg fpu_xmm3;
  struct xmm_reg fpu_xmm4;
  struct xmm_reg fpu_xmm5;
  struct xmm_reg fpu_xmm6;
  struct xmm_reg fpu_xmm7;
  char fpu_rsrv4[224];
  int fpu_reserved1;
};

/* 844 */
struct i386_avx_state
{
  int fpu_reserved[2];
  struct fp_control fpu_fcw;
  struct fp_status fpu_fsw;
  __uint8_t fpu_ftw;
  __uint8_t fpu_rsrv1;
  __uint16_t fpu_fop;
  __uint32_t fpu_ip;
  __uint16_t fpu_cs;
  __uint16_t fpu_rsrv2;
  __uint32_t fpu_dp;
  __uint16_t fpu_ds;
  __uint16_t fpu_rsrv3;
  __uint32_t fpu_mxcsr;
  __uint32_t fpu_mxcsrmask;
  struct mmst_reg fpu_stmm0;
  struct mmst_reg fpu_stmm1;
  struct mmst_reg fpu_stmm2;
  struct mmst_reg fpu_stmm3;
  struct mmst_reg fpu_stmm4;
  struct mmst_reg fpu_stmm5;
  struct mmst_reg fpu_stmm6;
  struct mmst_reg fpu_stmm7;
  struct xmm_reg fpu_xmm0;
  struct xmm_reg fpu_xmm1;
  struct xmm_reg fpu_xmm2;
  struct xmm_reg fpu_xmm3;
  struct xmm_reg fpu_xmm4;
  struct xmm_reg fpu_xmm5;
  struct xmm_reg fpu_xmm6;
  struct xmm_reg fpu_xmm7;
  char fpu_rsrv4[224];
  int fpu_reserved1;
  char avx_reserved1[64];
  struct xmm_reg fpu_ymmh0;
  struct xmm_reg fpu_ymmh1;
  struct xmm_reg fpu_ymmh2;
  struct xmm_reg fpu_ymmh3;
  struct xmm_reg fpu_ymmh4;
  struct xmm_reg fpu_ymmh5;
  struct xmm_reg fpu_ymmh6;
  struct xmm_reg fpu_ymmh7;
};

/* 845 */
struct i386_avx512_state
{
  int fpu_reserved[2];
  struct fp_control fpu_fcw;
  struct fp_status fpu_fsw;
  __uint8_t fpu_ftw;
  __uint8_t fpu_rsrv1;
  __uint16_t fpu_fop;
  __uint32_t fpu_ip;
  __uint16_t fpu_cs;
  __uint16_t fpu_rsrv2;
  __uint32_t fpu_dp;
  __uint16_t fpu_ds;
  __uint16_t fpu_rsrv3;
  __uint32_t fpu_mxcsr;
  __uint32_t fpu_mxcsrmask;
  struct mmst_reg fpu_stmm0;
  struct mmst_reg fpu_stmm1;
  struct mmst_reg fpu_stmm2;
  struct mmst_reg fpu_stmm3;
  struct mmst_reg fpu_stmm4;
  struct mmst_reg fpu_stmm5;
  struct mmst_reg fpu_stmm6;
  struct mmst_reg fpu_stmm7;
  struct xmm_reg fpu_xmm0;
  struct xmm_reg fpu_xmm1;
  struct xmm_reg fpu_xmm2;
  struct xmm_reg fpu_xmm3;
  struct xmm_reg fpu_xmm4;
  struct xmm_reg fpu_xmm5;
  struct xmm_reg fpu_xmm6;
  struct xmm_reg fpu_xmm7;
  char fpu_rsrv4[224];
  int fpu_reserved1;
  char avx_reserved1[64];
  struct xmm_reg fpu_ymmh0;
  struct xmm_reg fpu_ymmh1;
  struct xmm_reg fpu_ymmh2;
  struct xmm_reg fpu_ymmh3;
  struct xmm_reg fpu_ymmh4;
  struct xmm_reg fpu_ymmh5;
  struct xmm_reg fpu_ymmh6;
  struct xmm_reg fpu_ymmh7;
  struct opmask_reg fpu_k0;
  struct opmask_reg fpu_k1;
  struct opmask_reg fpu_k2;
  struct opmask_reg fpu_k3;
  struct opmask_reg fpu_k4;
  struct opmask_reg fpu_k5;
  struct opmask_reg fpu_k6;
  struct opmask_reg fpu_k7;
  struct ymm_reg fpu_zmmh0;
  struct ymm_reg fpu_zmmh1;
  struct ymm_reg fpu_zmmh2;
  struct ymm_reg fpu_zmmh3;
  struct ymm_reg fpu_zmmh4;
  struct ymm_reg fpu_zmmh5;
  struct ymm_reg fpu_zmmh6;
  struct ymm_reg fpu_zmmh7;
};

/* 846 */
struct i386_exception_state
{
  __uint16_t trapno;
  __uint16_t cpu;
  __uint32_t err;
  __uint32_t faultvaddr;
};

/* 847 */
struct x86_debug_state32
{
  unsigned int dr0;
  unsigned int dr1;
  unsigned int dr2;
  unsigned int dr3;
  unsigned int dr4;
  unsigned int dr5;
  unsigned int dr6;
  unsigned int dr7;
};

/* 848 */
struct x86_thread_state64
{
  __uint64_t rax;
  __uint64_t rbx;
  __uint64_t rcx;
  __uint64_t rdx;
  __uint64_t rdi;
  __uint64_t rsi;
  __uint64_t rbp;
  __uint64_t rsp;
  __uint64_t r8;
  __uint64_t r9;
  __uint64_t r10;
  __uint64_t r11;
  __uint64_t r12;
  __uint64_t r13;
  __uint64_t r14;
  __uint64_t r15;
  __uint64_t rip;
  __uint64_t rflags;
  __uint64_t cs;
  __uint64_t fs;
  __uint64_t gs;
};

/* 849 */
struct x86_float_state64
{
  int fpu_reserved[2];
  struct fp_control fpu_fcw;
  struct fp_status fpu_fsw;
  __uint8_t fpu_ftw;
  __uint8_t fpu_rsrv1;
  __uint16_t fpu_fop;
  __uint32_t fpu_ip;
  __uint16_t fpu_cs;
  __uint16_t fpu_rsrv2;
  __uint32_t fpu_dp;
  __uint16_t fpu_ds;
  __uint16_t fpu_rsrv3;
  __uint32_t fpu_mxcsr;
  __uint32_t fpu_mxcsrmask;
  struct mmst_reg fpu_stmm0;
  struct mmst_reg fpu_stmm1;
  struct mmst_reg fpu_stmm2;
  struct mmst_reg fpu_stmm3;
  struct mmst_reg fpu_stmm4;
  struct mmst_reg fpu_stmm5;
  struct mmst_reg fpu_stmm6;
  struct mmst_reg fpu_stmm7;
  struct xmm_reg fpu_xmm0;
  struct xmm_reg fpu_xmm1;
  struct xmm_reg fpu_xmm2;
  struct xmm_reg fpu_xmm3;
  struct xmm_reg fpu_xmm4;
  struct xmm_reg fpu_xmm5;
  struct xmm_reg fpu_xmm6;
  struct xmm_reg fpu_xmm7;
  struct xmm_reg fpu_xmm8;
  struct xmm_reg fpu_xmm9;
  struct xmm_reg fpu_xmm10;
  struct xmm_reg fpu_xmm11;
  struct xmm_reg fpu_xmm12;
  struct xmm_reg fpu_xmm13;
  struct xmm_reg fpu_xmm14;
  struct xmm_reg fpu_xmm15;
  char fpu_rsrv4[96];
  int fpu_reserved1;
};

/* 850 */
struct x86_avx_state64
{
  int fpu_reserved[2];
  struct fp_control fpu_fcw;
  struct fp_status fpu_fsw;
  __uint8_t fpu_ftw;
  __uint8_t fpu_rsrv1;
  __uint16_t fpu_fop;
  __uint32_t fpu_ip;
  __uint16_t fpu_cs;
  __uint16_t fpu_rsrv2;
  __uint32_t fpu_dp;
  __uint16_t fpu_ds;
  __uint16_t fpu_rsrv3;
  __uint32_t fpu_mxcsr;
  __uint32_t fpu_mxcsrmask;
  struct mmst_reg fpu_stmm0;
  struct mmst_reg fpu_stmm1;
  struct mmst_reg fpu_stmm2;
  struct mmst_reg fpu_stmm3;
  struct mmst_reg fpu_stmm4;
  struct mmst_reg fpu_stmm5;
  struct mmst_reg fpu_stmm6;
  struct mmst_reg fpu_stmm7;
  struct xmm_reg fpu_xmm0;
  struct xmm_reg fpu_xmm1;
  struct xmm_reg fpu_xmm2;
  struct xmm_reg fpu_xmm3;
  struct xmm_reg fpu_xmm4;
  struct xmm_reg fpu_xmm5;
  struct xmm_reg fpu_xmm6;
  struct xmm_reg fpu_xmm7;
  struct xmm_reg fpu_xmm8;
  struct xmm_reg fpu_xmm9;
  struct xmm_reg fpu_xmm10;
  struct xmm_reg fpu_xmm11;
  struct xmm_reg fpu_xmm12;
  struct xmm_reg fpu_xmm13;
  struct xmm_reg fpu_xmm14;
  struct xmm_reg fpu_xmm15;
  char fpu_rsrv4[96];
  int fpu_reserved1;
  char avx_reserved1[64];
  struct xmm_reg fpu_ymmh0;
  struct xmm_reg fpu_ymmh1;
  struct xmm_reg fpu_ymmh2;
  struct xmm_reg fpu_ymmh3;
  struct xmm_reg fpu_ymmh4;
  struct xmm_reg fpu_ymmh5;
  struct xmm_reg fpu_ymmh6;
  struct xmm_reg fpu_ymmh7;
  struct xmm_reg fpu_ymmh8;
  struct xmm_reg fpu_ymmh9;
  struct xmm_reg fpu_ymmh10;
  struct xmm_reg fpu_ymmh11;
  struct xmm_reg fpu_ymmh12;
  struct xmm_reg fpu_ymmh13;
  struct xmm_reg fpu_ymmh14;
  struct xmm_reg fpu_ymmh15;
};

/* 851 */
struct x86_avx512_state64
{
  int fpu_reserved[2];
  struct fp_control fpu_fcw;
  struct fp_status fpu_fsw;
  __uint8_t fpu_ftw;
  __uint8_t fpu_rsrv1;
  __uint16_t fpu_fop;
  __uint32_t fpu_ip;
  __uint16_t fpu_cs;
  __uint16_t fpu_rsrv2;
  __uint32_t fpu_dp;
  __uint16_t fpu_ds;
  __uint16_t fpu_rsrv3;
  __uint32_t fpu_mxcsr;
  __uint32_t fpu_mxcsrmask;
  struct mmst_reg fpu_stmm0;
  struct mmst_reg fpu_stmm1;
  struct mmst_reg fpu_stmm2;
  struct mmst_reg fpu_stmm3;
  struct mmst_reg fpu_stmm4;
  struct mmst_reg fpu_stmm5;
  struct mmst_reg fpu_stmm6;
  struct mmst_reg fpu_stmm7;
  struct xmm_reg fpu_xmm0;
  struct xmm_reg fpu_xmm1;
  struct xmm_reg fpu_xmm2;
  struct xmm_reg fpu_xmm3;
  struct xmm_reg fpu_xmm4;
  struct xmm_reg fpu_xmm5;
  struct xmm_reg fpu_xmm6;
  struct xmm_reg fpu_xmm7;
  struct xmm_reg fpu_xmm8;
  struct xmm_reg fpu_xmm9;
  struct xmm_reg fpu_xmm10;
  struct xmm_reg fpu_xmm11;
  struct xmm_reg fpu_xmm12;
  struct xmm_reg fpu_xmm13;
  struct xmm_reg fpu_xmm14;
  struct xmm_reg fpu_xmm15;
  char fpu_rsrv4[96];
  int fpu_reserved1;
  char avx_reserved1[64];
  struct xmm_reg fpu_ymmh0;
  struct xmm_reg fpu_ymmh1;
  struct xmm_reg fpu_ymmh2;
  struct xmm_reg fpu_ymmh3;
  struct xmm_reg fpu_ymmh4;
  struct xmm_reg fpu_ymmh5;
  struct xmm_reg fpu_ymmh6;
  struct xmm_reg fpu_ymmh7;
  struct xmm_reg fpu_ymmh8;
  struct xmm_reg fpu_ymmh9;
  struct xmm_reg fpu_ymmh10;
  struct xmm_reg fpu_ymmh11;
  struct xmm_reg fpu_ymmh12;
  struct xmm_reg fpu_ymmh13;
  struct xmm_reg fpu_ymmh14;
  struct xmm_reg fpu_ymmh15;
  struct opmask_reg fpu_k0;
  struct opmask_reg fpu_k1;
  struct opmask_reg fpu_k2;
  struct opmask_reg fpu_k3;
  struct opmask_reg fpu_k4;
  struct opmask_reg fpu_k5;
  struct opmask_reg fpu_k6;
  struct opmask_reg fpu_k7;
  struct ymm_reg fpu_zmmh0;
  struct ymm_reg fpu_zmmh1;
  struct ymm_reg fpu_zmmh2;
  struct ymm_reg fpu_zmmh3;
  struct ymm_reg fpu_zmmh4;
  struct ymm_reg fpu_zmmh5;
  struct ymm_reg fpu_zmmh6;
  struct ymm_reg fpu_zmmh7;
  struct ymm_reg fpu_zmmh8;
  struct ymm_reg fpu_zmmh9;
  struct ymm_reg fpu_zmmh10;
  struct ymm_reg fpu_zmmh11;
  struct ymm_reg fpu_zmmh12;
  struct ymm_reg fpu_zmmh13;
  struct ymm_reg fpu_zmmh14;
  struct ymm_reg fpu_zmmh15;
  struct zmm_reg fpu_zmm16;
  struct zmm_reg fpu_zmm17;
  struct zmm_reg fpu_zmm18;
  struct zmm_reg fpu_zmm19;
  struct zmm_reg fpu_zmm20;
  struct zmm_reg fpu_zmm21;
  struct zmm_reg fpu_zmm22;
  struct zmm_reg fpu_zmm23;
  struct zmm_reg fpu_zmm24;
  struct zmm_reg fpu_zmm25;
  struct zmm_reg fpu_zmm26;
  struct zmm_reg fpu_zmm27;
  struct zmm_reg fpu_zmm28;
  struct zmm_reg fpu_zmm29;
  struct zmm_reg fpu_zmm30;
  struct zmm_reg fpu_zmm31;
};

/* 852 */
struct x86_exception_state64
{
  __uint16_t trapno;
  __uint16_t cpu;
  __uint32_t err;
  __uint64_t faultvaddr;
};

/* 853 */
struct x86_debug_state64
{
  __uint64_t dr0;
  __uint64_t dr1;
  __uint64_t dr2;
  __uint64_t dr3;
  __uint64_t dr4;
  __uint64_t dr5;
  __uint64_t dr6;
  __uint64_t dr7;
};

/* 854 */
struct x86_cpmu_state64
{
  __uint64_t ctrs[16];
};

/* 855 */
struct mcontext32
{
  struct i386_exception_state es;
  struct i386_thread_state ss;
  struct i386_float_state fs;
};

/* 856 */
struct mcontext_avx32
{
  struct i386_exception_state es;
  struct i386_thread_state ss;
  struct i386_avx_state fs;
};

/* 857 */
struct mcontext_avx512_32
{
  struct i386_exception_state es;
  struct i386_thread_state ss;
  struct i386_avx512_state fs;
};

/* 858 */
struct mcontext64
{
  struct x86_exception_state64 es;
  struct x86_thread_state64 ss;
  struct x86_float_state64 fs;
};

/* 859 */
struct mcontext_avx64
{
  struct x86_exception_state64 es;
  struct x86_thread_state64 ss;
  struct x86_avx_state64 fs;
};

/* 860 */
struct mcontext_avx512_64
{
  struct x86_exception_state64 es;
  struct x86_thread_state64 ss;
  struct x86_avx512_state64 fs;
};

/* 861 */
typedef struct mcontext64 *mcontext_t;

/* 862 */
struct sigaltstack
{
  void *ss_sp;
  __darwin_size_t ss_size;
  int ss_flags;
};

/* 863 */
typedef struct sigaltstack stack_t;

/* 864 */
struct ucontext
{
  int uc_onstack;
  __darwin_sigset_t uc_sigmask;
  struct sigaltstack uc_stack;
  struct ucontext *uc_link;
  __darwin_size_t uc_mcsize;
  struct mcontext64 *uc_mcontext;
};

/* 865 */
typedef struct ucontext ucontext_t;

/* 4043 */
union sigval
{
  int sival_int;
  void *sival_ptr;
};

/* 866 */
struct __siginfo
{
  int si_signo;
  int si_errno;
  int si_code;
  pid_t si_pid;
  uid_t si_uid;
  int si_status;
  void *si_addr;
  union sigval si_value;
  __int64 si_band;
  unsigned __int64 __pad[7];
};

/* 867 */
union __sigaction_u
{
  void (__cdecl *__sa_handler)(int);
  void (__cdecl *__sa_sigaction)(int, struct __siginfo *, void *);
};

/* 868 */
struct __sigaction
{
  union __sigaction_u __sigaction_u;
  void (__cdecl *sa_tramp)(void *, int, int, siginfo_t *, void *);
  sigset_t sa_mask;
  int sa_flags;
};

/* 869 */
struct sigaction
{
  union __sigaction_u __sigaction_u;
  sigset_t sa_mask;
  int sa_flags;
};

/* 870 */
struct kevent
{
  uintptr_t ident;
  int16_t filter;
  uint16_t flags;
  uint32_t fflags;
  intptr_t data;
  void *udata;
};

/* 871 */
struct kevent64_s
{
  uint64_t ident;
  int16_t filter;
  uint16_t flags;
  uint32_t fflags;
  int64_t data;
  uint64_t udata;
  uint64_t ext[2];
};

/* 872 */
enum $6DF6EF71ECCCC831806C42F069186FD4
{
  eNoteReapDeprecated = 0x10000000,
};

/* 873 */
enum $6EBFEC8A632E516ECD623CDB219D1621
{
  eNoteExitReparentedDeprecated = 0x80000,
};

/* 874 */
struct selinfo;

/* 875 */
typedef int boolean_t;

/* 876 */
typedef mach_vm_address_t mach_port_context_t;

/* 4047 */
typedef natural_t mach_port_msgcount_t;

/* 880 */
struct mach_port_status
{
  mach_port_rights_t mps_pset;
  mach_port_seqno_t mps_seqno;
  mach_port_mscount_t mps_mscount;
  mach_port_msgcount_t mps_qlimit;
  mach_port_msgcount_t mps_msgcount;
  mach_port_rights_t mps_sorights;
  boolean_t mps_srights;
  boolean_t mps_pdrequest;
  boolean_t mps_nsrequest;
  natural_t mps_flags;
};

/* 4044 */
typedef mach_port_status mach_port_status_t;

/* 881 */
struct mach_port_info_ext
{
  mach_port_status_t mpie_status;
  mach_port_msgcount_t mpie_boost_cnt;
  uint32_t reserved[6];
};

/* 882 */
typedef struct mach_port_info_ext mach_port_info_ext_t;

/* 4046 */
struct mach_port_limits
{
  mach_port_msgcount_t mpl_qlimit;
};

/* 4045 */
typedef mach_port_limits mach_port_limits_t;

/* 883 */
struct mach_port_options
{
  uint32_t flags;
  mach_port_limits_t mpl;
  uint64_t reserved[2];
};

/* 884 */
typedef struct mach_port_options mach_port_options_t;

/* 885 */
typedef mach_port_options_t *mach_port_options_ptr_t;

/* 886 */
enum mach_port_guard_exception_codes
{
  kGUARD_EXC_DESTROY = 0x1,
  kGUARD_EXC_MOD_REFS = 0x2,
  kGUARD_EXC_SET_CONTEXT = 0x4,
  kGUARD_EXC_UNGUARDED = 0x8,
  kGUARD_EXC_INCORRECT_GUARD = 0x10,
};

/* 887 */
typedef mach_port_t port_t;

/* 888 */
typedef mach_port_name_t port_name_t;

/* 889 */
typedef mach_port_name_t *port_name_array_t;

/* 890 */
typedef unsigned int mach_msg_priority_t;

/* 891 */
struct $38745900D7C4FFCB5468C9BC7AE86F5E
{
  natural_t pad1;
  mach_msg_size_t pad2;
  unsigned __int32 pad3 : 24;
  unsigned __int32 type : 8;
};

/* 892 */
typedef struct $38745900D7C4FFCB5468C9BC7AE86F5E mach_msg_type_descriptor_t;

/* 893 */
struct $7FBFFDD45728F41C12E256D105E49796
{
  mach_port_t name;
  mach_msg_size_t pad1;
  unsigned __int32 pad2 : 16;
  unsigned __int32 disposition : 8;
  unsigned __int32 type : 8;
  uint32_t pad_end;
};

/* 894 */
typedef struct $7FBFFDD45728F41C12E256D105E49796 mach_msg_port_descriptor_t;

/* 895 */
struct $1AD94A2DF2BC4E3201D8A7B84729D648
{
  uint32_t address;
  mach_msg_size_t size;
  __int32 deallocate : 8;
  unsigned __int32 copy : 8;
  unsigned __int32 pad1 : 8;
  unsigned __int32 type : 8;
};

/* 896 */
typedef struct $1AD94A2DF2BC4E3201D8A7B84729D648 mach_msg_ool_descriptor32_t;

/* 897 */
struct $01EC570726202E8C071F0EC02B8C338B
{
  uint64_t address;
  __int32 deallocate : 8;
  unsigned __int32 copy : 8;
  unsigned __int32 pad1 : 8;
  unsigned __int32 type : 8;
  mach_msg_size_t size;
};

/* 898 */
typedef struct $01EC570726202E8C071F0EC02B8C338B mach_msg_ool_descriptor64_t;

/* 899 */
struct $0A1D0E828005C9E60FF0C67A29F56E8C
{
  void *address;
  __int32 deallocate : 8;
  unsigned __int32 copy : 8;
  unsigned __int32 pad1 : 8;
  unsigned __int32 type : 8;
  mach_msg_size_t size;
};

/* 900 */
typedef struct $0A1D0E828005C9E60FF0C67A29F56E8C mach_msg_ool_descriptor_t;

/* 901 */
struct $311982ADCFA248D9530C012336AD2B09
{
  uint32_t address;
  mach_msg_size_t count;
  __int32 deallocate : 8;
  unsigned __int32 copy : 8;
  unsigned __int32 disposition : 8;
  unsigned __int32 type : 8;
};

/* 902 */
typedef struct $311982ADCFA248D9530C012336AD2B09 mach_msg_ool_ports_descriptor32_t;

/* 903 */
struct $F21309181A1AB15538F4D8D7E711ED1F
{
  uint64_t address;
  __int32 deallocate : 8;
  unsigned __int32 copy : 8;
  unsigned __int32 disposition : 8;
  unsigned __int32 type : 8;
  mach_msg_size_t count;
};

/* 904 */
typedef struct $F21309181A1AB15538F4D8D7E711ED1F mach_msg_ool_ports_descriptor64_t;

/* 905 */
struct $1D40413AD96F599427817D0D292D485B
{
  void *address;
  __int32 deallocate : 8;
  unsigned __int32 copy : 8;
  unsigned __int32 disposition : 8;
  unsigned __int32 type : 8;
  mach_msg_size_t count;
};

/* 906 */
typedef struct $1D40413AD96F599427817D0D292D485B mach_msg_ool_ports_descriptor_t;

/* 907 */
union $5F728AE5A61FFE9DFB69586888EB0982
{
  mach_msg_port_descriptor_t port;
  mach_msg_ool_descriptor_t out_of_line;
  mach_msg_ool_ports_descriptor_t ool_ports;
  mach_msg_type_descriptor_t type;
};

/* 908 */
typedef union $5F728AE5A61FFE9DFB69586888EB0982 mach_msg_descriptor_t;

/* 909 */
struct $E97267E034E71568AADDE042A76192B8
{
  mach_msg_size_t msgh_descriptor_count;
};

/* 910 */
struct $D5886F697AE80297C93F66682AB6B9C8
{
  mach_msg_bits_t msgh_bits;
  mach_msg_size_t msgh_size;
  mach_port_t msgh_remote_port;
  mach_port_t msgh_local_port;
  mach_port_name_t msgh_voucher_port;
  mach_msg_id_t msgh_id;
};

/* 911 */
typedef struct $D5886F697AE80297C93F66682AB6B9C8 mach_msg_header_t;

/* 4048 */
typedef $E97267E034E71568AADDE042A76192B8 mach_msg_body_t;

/* 912 */
struct $5390EFA6B094430756913D3963543B33
{
  mach_msg_header_t header;
  mach_msg_body_t body;
};

/* 913 */
typedef struct $5390EFA6B094430756913D3963543B33 mach_msg_base_t;

/* 914 */
typedef char *mach_msg_trailer_info_t;

/* 915 */
struct $F105F10DE5C66ECF2E7E726999936688
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
};

/* 916 */
struct $E0DB54FB1236B40874C7451A4BD28FF5
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
};

/* 917 */
struct $778FB25ECA74FDA7CDB06EB207698C4A
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
};

/* 918 */
typedef struct $778FB25ECA74FDA7CDB06EB207698C4A mach_msg_security_trailer_t;

/* 919 */
struct $E6AAF3B82CB2DD0F9621CDAE2FAA23CC
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
};

/* 920 */
typedef struct $E6AAF3B82CB2DD0F9621CDAE2FAA23CC mach_msg_audit_trailer_t;

/* 921 */
struct $04253944F2061CD3B4DFB4616FB4C4B6
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
  mach_port_context_t msgh_context;
};

/* 922 */
typedef struct $04253944F2061CD3B4DFB4616FB4C4B6 mach_msg_context_trailer_t;

/* 923 */
struct $A1BE0EBA393D65D9C9965FE1E31C9EA5
{
  mach_port_name_t sender;
};

/* 4049 */
typedef $A1BE0EBA393D65D9C9965FE1E31C9EA5 msg_labels_t;

/* 924 */
struct $809E100FAEDA8AA9E5A81B1F4104DA53
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
  mach_port_context_t msgh_context;
  int msgh_ad;
  msg_labels_t msgh_labels;
};

/* 925 */
typedef struct $809E100FAEDA8AA9E5A81B1F4104DA53 mach_msg_mac_trailer_t;

/* 926 */
struct $EB36556F2669B9730ABCEE59DC524A72
{
  mach_msg_header_t header;
};

/* 927 */
typedef struct $EB36556F2669B9730ABCEE59DC524A72 mach_msg_empty_send_t;

/* 4050 */
typedef $F105F10DE5C66ECF2E7E726999936688 mach_msg_trailer_t;

/* 928 */
struct $2A2FB0064C7AD997EEF033D3890D6A38
{
  mach_msg_header_t header;
  mach_msg_trailer_t trailer;
};

/* 929 */
typedef struct $2A2FB0064C7AD997EEF033D3890D6A38 mach_msg_empty_rcv_t;

/* 930 */
union $1457A4CFD8C1C93D8610548EDC1D6442
{
  mach_msg_empty_send_t send;
  mach_msg_empty_rcv_t rcv;
};

/* 931 */
typedef union $1457A4CFD8C1C93D8610548EDC1D6442 mach_msg_empty_t;

/* 932 */
struct vm_statistics
{
  natural_t free_count;
  natural_t active_count;
  natural_t inactive_count;
  natural_t wire_count;
  natural_t zero_fill_count;
  natural_t reactivations;
  natural_t pageins;
  natural_t pageouts;
  natural_t faults;
  natural_t cow_faults;
  natural_t lookups;
  natural_t hits;
  natural_t purgeable_count;
  natural_t purges;
  natural_t speculative_count;
};

/* 933 */
struct vm_statistics64
{
  natural_t free_count;
  natural_t active_count;
  natural_t inactive_count;
  natural_t wire_count;
  uint64_t zero_fill_count;
  uint64_t reactivations;
  uint64_t pageins;
  uint64_t pageouts;
  uint64_t faults;
  uint64_t cow_faults;
  uint64_t lookups;
  uint64_t hits;
  uint64_t purges;
  natural_t purgeable_count;
  natural_t speculative_count;
  uint64_t decompressions;
  uint64_t compressions;
  uint64_t swapins;
  uint64_t swapouts;
  natural_t compressor_page_count;
  natural_t throttled_count;
  natural_t external_page_count;
  natural_t internal_page_count;
  uint64_t total_uncompressed_pages_in_compressor;
};

/* 934 */
struct vm_extmod_statistics
{
  int64_t task_for_pid_count;
  int64_t task_for_pid_caller_count;
  int64_t thread_creation_count;
  int64_t thread_creation_caller_count;
  int64_t thread_set_state_count;
  int64_t thread_set_state_caller_count;
};

/* 935 */
struct vm_purgeable_stat
{
  uint64_t count;
  uint64_t size;
};

/* 936 */
typedef struct vm_purgeable_stat vm_purgeable_stat_t;

/* 937 */
struct vm_purgeable_info
{
  vm_purgeable_stat_t fifo_data[8];
  vm_purgeable_stat_t obsolete_data;
  vm_purgeable_stat_t lifo_data[8];
};

/* 938 */
typedef struct vm_purgeable_info *vm_purgeable_info_t;

/* 939 */
struct time_value
{
  integer_t seconds;
  integer_t microseconds;
};

/* 940 */
typedef integer_t host_info_data_t[1024];

/* 941 */
struct host_can_has_debugger_info
{
  boolean_t can_has_debugger;
};

/* 942 */
typedef struct host_can_has_debugger_info host_can_has_debugger_info_data_t;

/* 943 */
typedef struct host_can_has_debugger_info *host_can_has_debugger_info_t;

/* 944 */
struct host_basic_info
{
  integer_t max_cpus;
  integer_t avail_cpus;
  natural_t memory_size;
  cpu_type_t cpu_type;
  cpu_subtype_t cpu_subtype;
  cpu_threadtype_t cpu_threadtype;
  integer_t physical_cpu;
  integer_t physical_cpu_max;
  integer_t logical_cpu;
  integer_t logical_cpu_max;
  uint64_t max_mem;
};

/* 945 */
struct host_sched_info
{
  integer_t min_timeout;
  integer_t min_quantum;
};

/* 946 */
struct kernel_resource_sizes
{
  natural_t task;
  natural_t thread;
  natural_t port;
  natural_t memory_region;
  natural_t memory_object;
};

/* 947 */
struct host_priority_info
{
  integer_t kernel_priority;
  integer_t system_priority;
  integer_t server_priority;
  integer_t user_priority;
  integer_t depress_priority;
  integer_t idle_priority;
  integer_t minimum_priority;
  integer_t maximum_priority;
};

/* 948 */
struct host_load_info
{
  integer_t avenrun[3];
  integer_t mach_factor[3];
};

/* 949 */
typedef struct vm_purgeable_info host_purgable_info_data_t;

/* 950 */
typedef struct vm_purgeable_info *host_purgable_info_t;

/* 951 */
struct host_cpu_load_info
{
  natural_t cpu_ticks[4];
};

/* 952 */
struct memory_object_perf_info
{
  memory_object_cluster_size_t cluster_size;
  boolean_t may_cache;
};

/* 953 */
struct memory_object_attr_info
{
  memory_object_copy_strategy_t copy_strategy;
  memory_object_cluster_size_t cluster_size;
  boolean_t may_cache_object;
  boolean_t temporary;
};

/* 954 */
struct memory_object_behave_info
{
  memory_object_copy_strategy_t copy_strategy;
  boolean_t temporary;
  boolean_t invalidate;
  boolean_t silent_overwrite;
  boolean_t advisory_pageout;
};

/* 955 */
struct upl_page_info
{
  unsigned int opaque[2];
};

/* 956 */
typedef struct upl_page_info upl_page_info_t;

/* 957 */
typedef upl_page_info_t *upl_page_info_array_t;

/* 958 */
typedef upl_page_info_array_t upl_page_list_ptr_t;

/* 959 */
typedef uint32_t upl_offset_t;

/* 960 */
typedef uint32_t upl_size_t;

/* 961 */
typedef uint64_t upl_control_flags_t;

/* 962 */
struct x86_state_hdr
{
  uint32_t flavor;
  uint32_t count;
};

/* 963 */
typedef struct i386_thread_state i386_thread_state_t;

/* 964 */
typedef struct i386_thread_state x86_thread_state32_t;

/* 965 */
typedef struct i386_float_state i386_float_state_t;

/* 966 */
typedef struct i386_float_state x86_float_state32_t;

/* 967 */
typedef struct i386_avx_state x86_avx_state32_t;

/* 968 */
typedef struct i386_avx512_state x86_avx512_state32_t;

/* 969 */
typedef struct i386_exception_state i386_exception_state_t;

/* 970 */
typedef struct i386_exception_state x86_exception_state32_t;

/* 971 */
typedef struct x86_debug_state32 x86_debug_state32_t;

/* 972 */
typedef struct x86_thread_state64 x86_thread_state64_t;

/* 973 */
typedef struct x86_float_state64 x86_float_state64_t;

/* 974 */
typedef struct x86_avx_state64 x86_avx_state64_t;

/* 975 */
typedef struct x86_avx512_state64 x86_avx512_state64_t;

/* 976 */
typedef struct x86_exception_state64 x86_exception_state64_t;

/* 977 */
typedef struct x86_debug_state64 x86_debug_state64_t;

/* 978 */
union x86_thread_state::$19E1E3FB30D1C5C0A3BC26D04805A4D8
{
  x86_thread_state32_t ts32;
  x86_thread_state64_t ts64;
};

/* 4051 */
typedef x86_state_hdr x86_state_hdr_t;

/* 979 */
struct x86_thread_state
{
  x86_state_hdr_t tsh;
  union x86_thread_state::$19E1E3FB30D1C5C0A3BC26D04805A4D8 uts;
};

/* 980 */
union x86_float_state::$EE3F4C74FFFF11AFBA4B98ADA2FEA197
{
  x86_float_state32_t fs32;
  x86_float_state64_t fs64;
};

/* 981 */
struct x86_float_state
{
  x86_state_hdr_t fsh;
  union x86_float_state::$EE3F4C74FFFF11AFBA4B98ADA2FEA197 ufs;
};

/* 982 */
union x86_exception_state::$FED664DD495E27F752EDBF69131B3C19
{
  x86_exception_state32_t es32;
  x86_exception_state64_t es64;
};

/* 983 */
struct x86_exception_state
{
  x86_state_hdr_t esh;
  union x86_exception_state::$FED664DD495E27F752EDBF69131B3C19 ues;
};

/* 984 */
union x86_debug_state::$0BCB8F4A57B32F027073F5AE16E8ECFD
{
  x86_debug_state32_t ds32;
  x86_debug_state64_t ds64;
};

/* 985 */
struct x86_debug_state
{
  x86_state_hdr_t dsh;
  union x86_debug_state::$0BCB8F4A57B32F027073F5AE16E8ECFD uds;
};

/* 987 */
union x86_avx_state::$6F716AF1EEF79E910EF1B10CEB567E36
{
  x86_avx_state32_t as32;
  x86_avx_state64_t as64;
};

/* 986 */
struct x86_avx_state
{
  x86_state_hdr_t ash;
  union x86_avx_state::$6F716AF1EEF79E910EF1B10CEB567E36 ufs;
};

/* 989 */
union x86_avx512_state::$45AB6845D7727966987137D1A3F4A08E
{
  x86_avx512_state32_t as32;
  x86_avx512_state64_t as64;
};

/* 988 */
struct x86_avx512_state
{
  x86_state_hdr_t ash;
  union x86_avx512_state::$45AB6845D7727966987137D1A3F4A08E ufs;
};

/* 990 */
typedef struct x86_avx_state x86_avx_state_t;

/* 991 */
typedef struct x86_avx512_state x86_avx512_state_t;

/* 992 */
typedef mach_port_t mach_voucher_t;

/* 993 */
typedef mach_port_name_t mach_voucher_name_t;

/* 994 */
typedef mach_voucher_name_t *mach_voucher_name_array_t;

/* 995 */
struct ipc_voucher;

/* 996 */
typedef struct ipc_voucher *ipc_voucher_t;

/* 997 */
typedef uint32_t mach_voucher_selector_t;

/* 998 */
typedef uint32_t mach_voucher_attr_key_t;

/* 999 */
typedef mach_voucher_attr_key_t *mach_voucher_attr_key_array_t;

/* 1000 */
typedef uint8_t *mach_voucher_attr_content_t;

/* 1001 */
typedef uint32_t mach_voucher_attr_content_size_t;

/* 1002 */
typedef uint32_t mach_voucher_attr_command_t;

/* 1003 */
typedef uint32_t mach_voucher_attr_recipe_command_t;

/* 1004 */
typedef mach_voucher_attr_recipe_command_t *mach_voucher_attr_recipe_command_array_t;

/* 1005 */
struct mach_voucher_attr_recipe_data
{
  mach_voucher_attr_key_t key;
  mach_voucher_attr_recipe_command_t command;
  mach_voucher_name_t previous_voucher;
  mach_voucher_attr_content_size_t content_size;
  uint8_t content[];
};

/* 1006 */
typedef struct mach_voucher_attr_recipe_data mach_voucher_attr_recipe_data_t;

/* 1007 */
typedef mach_voucher_attr_recipe_data_t *mach_voucher_attr_recipe_t;

/* 1008 */
typedef mach_msg_type_number_t mach_voucher_attr_recipe_size_t;

/* 1009 */
typedef uint8_t *mach_voucher_attr_raw_recipe_t;

/* 1010 */
typedef mach_voucher_attr_raw_recipe_t mach_voucher_attr_raw_recipe_array_t;

/* 1011 */
typedef mach_msg_type_number_t mach_voucher_attr_raw_recipe_size_t;

/* 1012 */
typedef mach_msg_type_number_t mach_voucher_attr_raw_recipe_array_size_t;

/* 1013 */
typedef mach_port_t mach_voucher_attr_manager_t;

/* 1014 */
typedef mach_port_t mach_voucher_attr_control_t;

/* 1015 */
struct ipc_voucher_attr_manager;

/* 1016 */
struct ipc_voucher_attr_control;

/* 1017 */
typedef struct ipc_voucher_attr_manager *ipc_voucher_attr_manager_t;

/* 1018 */
typedef struct ipc_voucher_attr_control *ipc_voucher_attr_control_t;

/* 1019 */
typedef uint64_t mach_voucher_attr_value_handle_t;

/* 1020 */
typedef mach_voucher_attr_value_handle_t *mach_voucher_attr_value_handle_array_t;

/* 1021 */
typedef mach_msg_type_number_t mach_voucher_attr_value_handle_array_size_t;

/* 1022 */
typedef uint32_t mach_voucher_attr_value_reference_t;

/* 1023 */
typedef uint32_t mach_voucher_attr_value_flags_t;

/* 1024 */
typedef uint32_t mach_voucher_attr_control_flags_t;

/* 1025 */
typedef uint32_t mach_voucher_attr_importance_refs;

/* 1026 */
typedef integer_t processor_info_data_t[1024];

/* 1027 */
typedef integer_t processor_set_info_data_t[1024];

/* 1028 */
struct processor_basic_info
{
  cpu_type_t cpu_type;
  cpu_subtype_t cpu_subtype;
  boolean_t running;
  int slot_num;
  boolean_t is_master;
};

/* 1029 */
struct processor_set_load_info
{
  int task_count;
  int thread_count;
  integer_t load_average;
  integer_t mach_factor;
};

/* 1030 */
struct policy_timeshare_base
{
  integer_t base_priority;
};

/* 1031 */
struct policy_timeshare_limit
{
  integer_t max_priority;
};

/* 1032 */
struct policy_timeshare_info
{
  integer_t max_priority;
  integer_t base_priority;
  integer_t cur_priority;
  boolean_t depressed;
  integer_t depress_priority;
};

/* 1033 */
struct policy_rr_base
{
  integer_t base_priority;
  integer_t quantum;
};

/* 1034 */
struct policy_rr_limit
{
  integer_t max_priority;
};

/* 1035 */
struct policy_rr_info
{
  integer_t max_priority;
  integer_t base_priority;
  integer_t quantum;
  boolean_t depressed;
  integer_t depress_priority;
};

/* 1036 */
struct policy_fifo_base
{
  integer_t base_priority;
};

/* 1037 */
struct policy_fifo_limit
{
  integer_t max_priority;
};

/* 1038 */
struct policy_fifo_info
{
  integer_t max_priority;
  integer_t base_priority;
  boolean_t depressed;
  integer_t depress_priority;
};

/* 1039 */
typedef integer_t task_info_data_t[1024];

/* 4052 */
typedef time_value time_value_t;

/* 1040 */
struct task_basic_info_32
{
  integer_t suspend_count;
  natural_t virtual_size;
  natural_t resident_size;
  time_value_t user_time;
  time_value_t system_time;
  policy_t policy;
};

/* 1041 */
struct task_basic_info_64
{
  integer_t suspend_count;
  mach_vm_size_t virtual_size;
  mach_vm_size_t resident_size;
  time_value_t user_time;
  time_value_t system_time;
  policy_t policy;
};

/* 1042 */
struct task_basic_info
{
  integer_t suspend_count;
  vm_size_t virtual_size;
  vm_size_t resident_size;
  time_value_t user_time;
  time_value_t system_time;
  policy_t policy;
};

/* 1043 */
struct task_events_info
{
  integer_t faults;
  integer_t pageins;
  integer_t cow_faults;
  integer_t messages_sent;
  integer_t messages_received;
  integer_t syscalls_mach;
  integer_t syscalls_unix;
  integer_t csw;
};

/* 1044 */
struct task_thread_times_info
{
  time_value_t user_time;
  time_value_t system_time;
};

/* 1045 */
struct task_absolutetime_info
{
  uint64_t total_user;
  uint64_t total_system;
  uint64_t threads_user;
  uint64_t threads_system;
};

/* 1046 */
struct task_kernelmemory_info
{
  uint64_t total_palloc;
  uint64_t total_pfree;
  uint64_t total_salloc;
  uint64_t total_sfree;
};

/* 1047 */
struct task_affinity_tag_info
{
  integer_t set_count;
  integer_t min;
  integer_t max;
  integer_t task_count;
};

/* 1048 */
struct task_dyld_info
{
  mach_vm_address_t all_image_info_addr;
  mach_vm_size_t all_image_info_size;
  integer_t all_image_info_format;
};

/* 4053 */
typedef vm_extmod_statistics vm_extmod_statistics_data_t;

/* 1049 */
struct task_extmod_info
{
  unsigned __int8 task_uuid[16];
  vm_extmod_statistics_data_t extmod_statistics;
};

/* 1050 */
struct mach_task_basic_info
{
  mach_vm_size_t virtual_size;
  mach_vm_size_t resident_size;
  mach_vm_size_t resident_size_max;
  time_value_t user_time;
  time_value_t system_time;
  policy_t policy;
  integer_t suspend_count;
};

/* 1051 */
typedef struct mach_task_basic_info mach_task_basic_info_data_t;

/* 1052 */
typedef struct mach_task_basic_info *mach_task_basic_info_t;

/* 1053 */
struct task_power_info
{
  uint64_t total_user;
  uint64_t total_system;
  uint64_t task_interrupt_wakeups;
  uint64_t task_platform_idle_wakeups;
  uint64_t task_timer_wakeups_bin_1;
  uint64_t task_timer_wakeups_bin_2;
};

/* 1054 */
typedef struct task_power_info task_power_info_data_t;

/* 1055 */
typedef struct task_power_info *task_power_info_t;

/* 1056 */
struct task_vm_info
{
  mach_vm_size_t virtual_size;
  integer_t region_count;
  integer_t page_size;
  mach_vm_size_t resident_size;
  mach_vm_size_t resident_size_peak;
  mach_vm_size_t device;
  mach_vm_size_t device_peak;
  mach_vm_size_t internal;
  mach_vm_size_t internal_peak;
  mach_vm_size_t external;
  mach_vm_size_t external_peak;
  mach_vm_size_t reusable;
  mach_vm_size_t reusable_peak;
  mach_vm_size_t purgeable_volatile_pmap;
  mach_vm_size_t purgeable_volatile_resident;
  mach_vm_size_t purgeable_volatile_virtual;
  mach_vm_size_t compressed;
  mach_vm_size_t compressed_peak;
  mach_vm_size_t compressed_lifetime;
  mach_vm_size_t phys_footprint;
  mach_vm_address_t min_address;
  mach_vm_address_t max_address;
};

/* 1057 */
typedef struct task_vm_info task_vm_info_data_t;

/* 1058 */
typedef struct task_vm_info *task_vm_info_t;

/* 1059 */
typedef struct vm_purgeable_info task_purgable_info_t;

/* 1060 */
struct task_trace_memory_info
{
  uint64_t user_memory_address;
  uint64_t buffer_size;
  uint64_t mailbox_array_size;
};

/* 1061 */
typedef struct task_trace_memory_info task_trace_memory_info_data_t;

/* 1062 */
typedef struct task_trace_memory_info *task_trace_memory_info_t;

/* 1063 */
struct task_wait_state_info
{
  uint64_t total_wait_state_time;
  uint64_t total_wait_sfi_state_time;
  uint32_t _reserved[4];
};

/* 1064 */
typedef struct task_wait_state_info task_wait_state_info_data_t;

/* 1065 */
typedef struct task_wait_state_info *task_wait_state_info_t;

/* 1066 */
struct $C8D957879DF0BEDE33ACB0A2555D3AF6
{
  uint64_t task_gpu_utilisation;
  uint64_t task_gpu_stat_reserved0;
  uint64_t task_gpu_stat_reserved1;
  uint64_t task_gpu_stat_reserved2;
};

/* 1067 */
typedef struct $C8D957879DF0BEDE33ACB0A2555D3AF6 gpu_energy_data;

/* 1068 */
typedef gpu_energy_data *gpu_energy_data_t;

/* 1069 */
struct task_power_info_v2
{
  task_power_info_data_t cpu_energy;
  gpu_energy_data gpu_energy;
  uint64_t task_ptime;
  uint64_t task_pset_switches;
};

/* 1070 */
typedef struct task_power_info_v2 task_power_info_v2_data_t;

/* 1071 */
typedef struct task_power_info_v2 *task_power_info_v2_t;

/* 1072 */
struct task_flags_info
{
  uint32_t flags;
};

/* 1073 */
typedef struct task_flags_info task_flags_info_data_t;

/* 1074 */
typedef struct task_flags_info *task_flags_info_t;

/* 1075 */
typedef natural_t task_inspect_flavor_t;

/* 1076 */
enum task_inspect_flavor
{
  TASK_INSPECT_BASIC_COUNTS = 0x1,
};

/* 1077 */
struct task_inspect_basic_counts
{
  uint64_t instructions;
  uint64_t cycles;
};

/* 1078 */
typedef struct task_inspect_basic_counts task_inspect_basic_counts_data_t;

/* 1079 */
typedef struct task_inspect_basic_counts *task_inspect_basic_counts_t;

/* 1080 */
typedef integer_t *task_inspect_info_t;

/* 1081 */
typedef integer_t task_role_t;

/* 1082 */
struct task_category_policy
{
  task_role_t role;
};

/* 1083 */
enum task_latency_qos
{
  LATENCY_QOS_TIER_UNSPECIFIED = 0x0,
  LATENCY_QOS_TIER_0 = 0xFF0001,
  LATENCY_QOS_TIER_1 = 0xFF0002,
  LATENCY_QOS_TIER_2 = 0xFF0003,
  LATENCY_QOS_TIER_3 = 0xFF0004,
  LATENCY_QOS_TIER_4 = 0xFF0005,
  LATENCY_QOS_TIER_5 = 0xFF0006,
};

/* 1084 */
typedef integer_t task_latency_qos_t;

/* 1085 */
enum task_throughput_qos
{
  THROUGHPUT_QOS_TIER_UNSPECIFIED = 0x0,
  THROUGHPUT_QOS_TIER_0 = 0xFE0001,
  THROUGHPUT_QOS_TIER_1 = 0xFE0002,
  THROUGHPUT_QOS_TIER_2 = 0xFE0003,
  THROUGHPUT_QOS_TIER_3 = 0xFE0004,
  THROUGHPUT_QOS_TIER_4 = 0xFE0005,
  THROUGHPUT_QOS_TIER_5 = 0xFE0006,
};

/* 1086 */
typedef integer_t task_throughput_qos_t;

/* 1087 */
struct task_qos_policy
{
  task_latency_qos_t task_latency_qos_tier;
  task_throughput_qos_t task_throughput_qos_tier;
};

/* 1088 */
typedef struct task_qos_policy *task_qos_policy_t;

/* 1089 */
typedef integer_t thread_info_data_t[32];

/* 1090 */
struct thread_basic_info
{
  time_value_t user_time;
  time_value_t system_time;
  integer_t cpu_usage;
  policy_t policy;
  integer_t run_state;
  integer_t flags;
  integer_t suspend_count;
  integer_t sleep_time;
};

/* 1091 */
struct thread_identifier_info
{
  uint64_t thread_id;
  uint64_t thread_handle;
  uint64_t dispatch_qaddr;
};

/* 1092 */
struct thread_extended_info
{
  uint64_t pth_user_time;
  uint64_t pth_system_time;
  int32_t pth_cpu_usage;
  int32_t pth_policy;
  int32_t pth_run_state;
  int32_t pth_flags;
  int32_t pth_sleep_time;
  int32_t pth_curpri;
  int32_t pth_priority;
  int32_t pth_maxpriority;
  char pth_name[64];
};

/* 1093 */
typedef struct thread_extended_info thread_extended_info_data_t;

/* 1094 */
typedef struct thread_extended_info *thread_extended_info_t;

/* 1095 */
struct io_stat_entry
{
  uint64_t count;
  uint64_t size;
};

/* 1096 */
struct io_stat_info
{
  struct io_stat_entry disk_reads;
  struct io_stat_entry io_priority[4];
  struct io_stat_entry paging;
  struct io_stat_entry metadata;
  struct io_stat_entry total_io;
};

/* 1097 */
typedef struct io_stat_info *io_stat_info_t;

/* 1098 */
struct thread_standard_policy
{
  natural_t no_data;
};

/* 1099 */
struct thread_extended_policy
{
  boolean_t timeshare;
};

/* 1100 */
struct thread_time_constraint_policy
{
  uint32_t period;
  uint32_t computation;
  uint32_t constraint;
  boolean_t preemptible;
};

/* 1101 */
struct thread_precedence_policy
{
  integer_t importance;
};

/* 1102 */
struct thread_affinity_policy
{
  integer_t affinity_tag;
};

/* 1103 */
struct thread_background_policy
{
  integer_t priority;
};

/* 1104 */
typedef integer_t thread_latency_qos_t;

/* 1105 */
struct thread_latency_qos_policy
{
  thread_latency_qos_t thread_latency_qos_tier;
};

/* 1106 */
typedef struct thread_latency_qos_policy thread_latency_qos_policy_data_t;

/* 1107 */
typedef struct thread_latency_qos_policy *thread_latency_qos_policy_t;

/* 1108 */
typedef integer_t thread_throughput_qos_t;

/* 1109 */
struct thread_throughput_qos_policy
{
  thread_throughput_qos_t thread_throughput_qos_tier;
};

/* 1110 */
typedef struct thread_throughput_qos_policy thread_throughput_qos_policy_data_t;

/* 1111 */
typedef struct thread_throughput_qos_policy *thread_throughput_qos_policy_t;

/* 1112 */
struct vm_region_basic_info_64
{
  vm_prot_t protection;
  vm_prot_t max_protection;
  vm_inherit_t inheritance;
  boolean_t shared;
  boolean_t reserved;
  memory_object_offset_t offset;
  vm_behavior_t behavior;
  unsigned __int16 user_wired_count;
};

/* 1113 */
struct vm_region_basic_info
{
  vm_prot_t protection;
  vm_prot_t max_protection;
  vm_inherit_t inheritance;
  boolean_t shared;
  boolean_t reserved;
  uint32_t offset;
  vm_behavior_t behavior;
  unsigned __int16 user_wired_count;
};

/* 1114 */
struct vm_region_extended_info
{
  vm_prot_t protection;
  unsigned int user_tag;
  unsigned int pages_resident;
  unsigned int pages_shared_now_private;
  unsigned int pages_swapped_out;
  unsigned int pages_dirtied;
  unsigned int ref_count;
  unsigned __int16 shadow_depth;
  unsigned __int8 external_pager;
  unsigned __int8 share_mode;
  unsigned int pages_reusable;
};

/* 1115 */
struct vm_region_top_info
{
  unsigned int obj_id;
  unsigned int ref_count;
  unsigned int private_pages_resident;
  unsigned int shared_pages_resident;
  unsigned __int8 share_mode;
};

/* 1116 */
struct vm_region_submap_info
{
  vm_prot_t protection;
  vm_prot_t max_protection;
  vm_inherit_t inheritance;
  uint32_t offset;
  unsigned int user_tag;
  unsigned int pages_resident;
  unsigned int pages_shared_now_private;
  unsigned int pages_swapped_out;
  unsigned int pages_dirtied;
  unsigned int ref_count;
  unsigned __int16 shadow_depth;
  unsigned __int8 external_pager;
  unsigned __int8 share_mode;
  boolean_t is_submap;
  vm_behavior_t behavior;
  vm32_object_id_t object_id;
  unsigned __int16 user_wired_count;
};

/* 1117 */
struct vm_region_submap_info_64
{
  vm_prot_t protection;
  vm_prot_t max_protection;
  vm_inherit_t inheritance;
  memory_object_offset_t offset;
  unsigned int user_tag;
  unsigned int pages_resident;
  unsigned int pages_shared_now_private;
  unsigned int pages_swapped_out;
  unsigned int pages_dirtied;
  unsigned int ref_count;
  unsigned __int16 shadow_depth;
  unsigned __int8 external_pager;
  unsigned __int8 share_mode;
  boolean_t is_submap;
  vm_behavior_t behavior;
  vm32_object_id_t object_id;
  unsigned __int16 user_wired_count;
  unsigned int pages_reusable;
};

/* 1118 */
struct vm_region_submap_short_info_64
{
  vm_prot_t protection;
  vm_prot_t max_protection;
  vm_inherit_t inheritance;
  memory_object_offset_t offset;
  unsigned int user_tag;
  unsigned int ref_count;
  unsigned __int16 shadow_depth;
  unsigned __int8 external_pager;
  unsigned __int8 share_mode;
  boolean_t is_submap;
  vm_behavior_t behavior;
  vm32_object_id_t object_id;
  unsigned __int16 user_wired_count;
};

/* 1119 */
struct vm_read_entry
{
  vm_address_t address;
  vm_size_t size;
};

/* 1120 */
typedef struct vm_read_entry vm_read_entry_t[256];

/* 1121 */
struct kmod_info_32_v1
{
  uint32_t next_addr;
  int32_t info_version;
  uint32_t id;
  uint8_t name[64];
  uint8_t version[64];
  int32_t reference_count;
  uint32_t reference_list_addr;
  uint32_t address;
  uint32_t size;
  uint32_t hdr_size;
  uint32_t start_addr;
  uint32_t stop_addr;
};

/* 1122 */
struct kmod_info_64_v1
{
  uint64_t next_addr;
  int32_t info_version;
  uint32_t id;
  uint8_t name[64];
  uint8_t version[64];
  int32_t reference_count;
  uint64_t reference_list_addr;
  uint64_t address;
  uint64_t size;
  uint64_t hdr_size;
  uint64_t start_addr;
  uint64_t stop_addr;
};

/* 1124 */
struct fsobj_id
{
  u_int32_t fid_objno;
  u_int32_t fid_generation;
};

/* 2086 */
typedef fsobj_id fsobj_id_t;

/* 1125 */
struct dyld_kernel_image_info
{
  uuid_t uuid;
  fsobj_id_t fsobjid;
  fsid_t fsid;
  uint64_t load_addr;
};

/* 1126 */
struct dyld_kernel_process_info
{
  struct dyld_kernel_image_info cache_image_info;
  uint64_t timestamp;
  uint32_t imageCount;
  uint32_t initialImageCount;
  uint8_t dyldState;
  boolean_t no_cache;
  boolean_t private_cache;
};

/* 1127 */
typedef struct dyld_kernel_image_info dyld_kernel_image_info_t;

/* 1128 */
typedef struct dyld_kernel_process_info dyld_kernel_process_info_t;

/* 1129 */
typedef dyld_kernel_image_info_t *dyld_kernel_image_info_array_t;

/* 1130 */
typedef void (__cdecl *os_function_t)(void *);

/* 1131 */
typedef void (*os_block_t)(void);

/* 1133 */
typedef struct task *task_name_t;

/* 1134 */
typedef struct task *task_inspect_t;

/* 1135 */
typedef struct task *task_suspension_token_t;

/* 1136 */
typedef struct thread *thread_act_t;

/* 1137 */
typedef struct thread *thread_inspect_t;

/* 1138 */
typedef struct ipc_space *ipc_space_t;

/* 1139 */
typedef struct ipc_space *ipc_space_inspect_t;

/* 1140 */
typedef struct coalition *coalition_t;

/* 1141 */
typedef struct host *host_t;

/* 1154 */
struct host;

/* 1142 */
typedef struct host *host_priv_t;

/* 1143 */
typedef struct host *host_security_t;

/* 1145 */
typedef struct processor_set *processor_set_t;

/* 1156 */
struct processor_set;

/* 1146 */
typedef struct processor_set *processor_set_control_t;

/* 1147 */
typedef struct semaphore *semaphore_t;

/* 1148 */
typedef struct ledger *ledger_t;

/* 1158 */
struct ledger;

/* 1149 */
typedef struct alarm *alarm_t;

/* 1159 */
struct alarm;

/* 1150 */
typedef struct clock *clock_serv_t;

/* 1160 */
struct clock;

/* 1151 */
typedef struct clock *clock_ctrl_t;

/* 1152 */
typedef struct lock_set *lock_set_t;

/* 1153 */
struct lock_set;

/* 1161 */
typedef int64_t ledger_amount_t;

/* 1162 */
typedef void *event_t;

/* 1163 */
typedef uint64_t event64_t;

/* 1164 */
typedef int wait_result_t;

/* 1165 */
typedef void (__cdecl *thread_continue_t)(void *, wait_result_t);

/* 1166 */
typedef int wait_interrupt_t;

/* 1167 */
typedef int wait_timeout_urgency_t;

/* 1168 */
struct $88A9983F62DAA4F85C92B2E463DE69AB
{
  unsigned __int64 opaque[10];
};

/* 1169 */
struct $667AF0C1C0BBC227EDE71303124D3E99
{
  unsigned __int64 opaque[2];
};

/* 1170 */
typedef struct $88A9983F62DAA4F85C92B2E463DE69AB lck_mtx_ext_t;

/* 1173 */
typedef unsigned int lck_sleep_action_t;

/* 1174 */
struct __lck_grp__;

/* 1175 */
typedef struct __lck_grp__ lck_grp_t;

/* 1176 */
struct __lck_grp_attr__;

/* 1177 */
typedef struct __lck_grp_attr__ lck_grp_attr_t;

/* 1178 */
struct __lck_attr__;

/* 1179 */
typedef struct __lck_attr__ lck_attr_t;

/* 1180 */
typedef unsigned int lck_rw_type_t;

/* 1181 */
typedef __builtin_va_list va_list;

/* 1182 */
struct kcdata_item
{
  uint32_t type;
  uint32_t size;
  uint64_t flags;
  char data[];
};

/* 1183 */
typedef struct kcdata_item *kcdata_item_t;

/* 1184 */
enum KCDATA_SUBTYPE_TYPES
{
  KC_ST_CHAR = 0x1,
  KC_ST_INT8 = 0x2,
  KC_ST_UINT8 = 0x3,
  KC_ST_INT16 = 0x4,
  KC_ST_UINT16 = 0x5,
  KC_ST_INT32 = 0x6,
  KC_ST_UINT32 = 0x7,
  KC_ST_INT64 = 0x8,
  KC_ST_UINT64 = 0x9,
};

/* 1185 */
typedef enum KCDATA_SUBTYPE_TYPES kctype_subtype_t;

/* 1186 */
struct kcdata_subtype_descriptor
{
  uint8_t kcs_flags;
  uint8_t kcs_elem_type;
  uint16_t kcs_elem_offset;
  uint32_t kcs_elem_size;
  char kcs_name[32];
};

/* 1187 */
typedef struct kcdata_subtype_descriptor *kcdata_subtype_descriptor_t;

/* 1188 */
struct kcdata_type_definition
{
  uint32_t kct_type_identifier;
  uint32_t kct_num_elements;
  char kct_name[32];
  struct kcdata_subtype_descriptor kct_elements[];
};

/* 1189 */
struct stack_snapshot_frame32
{
  uint32_t lr;
  uint32_t sp;
};

/* 1190 */
struct stack_snapshot_frame64
{
  uint64_t lr;
  uint64_t sp;
};

/* 1191 */
struct dyld_uuid_info_32
{
  uint32_t imageLoadAddress;
  uuid_t imageUUID;
};

/* 1192 */
struct dyld_uuid_info_64
{
  uint64_t imageLoadAddress;
  uuid_t imageUUID;
};

/* 1193 */
struct dyld_uuid_info_64_v2
{
  uint64_t imageLoadAddress;
  uuid_t imageUUID;
  uint64_t imageSlidBaseAddress;
};

/* 1194 */
struct user32_dyld_uuid_info
{
  uint32_t imageLoadAddress;
  uuid_t imageUUID;
};

/* 1195 */
struct user64_dyld_uuid_info
{
  uint64_t imageLoadAddress;
  uuid_t imageUUID;
};

/* 1196 */
enum task_snapshot_flags
{
  kTaskRsrcFlagged = 0x4,
  kTerminatedSnapshot = 0x8,
  kPidSuspended = 0x10,
  kFrozen = 0x20,
  kTaskDarwinBG = 0x40,
  kTaskExtDarwinBG = 0x80,
  kTaskVisVisible = 0x100,
  kTaskVisNonvisible = 0x200,
  kTaskIsForeground = 0x400,
  kTaskIsBoosted = 0x800,
  kTaskIsSuppressed = 0x1000,
  kTaskIsTimerThrottled = 0x2000,
  kTaskIsImpDonor = 0x4000,
  kTaskIsLiveImpDonor = 0x8000,
  kTaskIsDirty = 0x10000,
  kTaskWqExceededConstrainedThreadLimit = 0x20000,
  kTaskWqExceededTotalThreadLimit = 0x40000,
  kTaskWqFlagsAvailable = 0x80000,
  kTaskUUIDInfoFaultedIn = 0x100000,
  kTaskUUIDInfoMissing = 0x200000,
  kTaskUUIDInfoTriedFault = 0x400000,
  kTaskSharedRegionInfoUnavailable = 0x800000,
};

/* 1197 */
enum thread_snapshot_flags
{
  kHasDispatchSerial = 0x4,
  kStacksPCOnly = 0x8,
  kThreadDarwinBG = 0x10,
  kThreadIOPassive = 0x20,
  kThreadSuspended = 0x40,
  kThreadTruncatedBT = 0x80,
  kGlobalForcedIdle = 0x100,
  kThreadFaultedBT = 0x200,
  kThreadTriedFaultBT = 0x400,
  kThreadOnCore = 0x800,
  kThreadIdleWorker = 0x1000,
  kThreadMain = 0x2000,
};

/* 1198 */
struct mem_and_io_snapshot
{
  uint32_t snapshot_magic;
  uint32_t free_pages;
  uint32_t active_pages;
  uint32_t inactive_pages;
  uint32_t purgeable_pages;
  uint32_t wired_pages;
  uint32_t speculative_pages;
  uint32_t throttled_pages;
  uint32_t filebacked_pages;
  uint32_t compressions;
  uint32_t decompressions;
  uint32_t compressor_size;
  int32_t busy_buffer_count;
  uint32_t pages_wanted;
  uint32_t pages_reclaimed;
  uint8_t pages_wanted_reclaimed_valid;
};

/* 1199 */
struct thread_snapshot_v2
{
  uint64_t ths_thread_id;
  uint64_t ths_wait_event;
  uint64_t ths_continuation;
  uint64_t ths_total_syscalls;
  uint64_t ths_voucher_identifier;
  uint64_t ths_dqserialnum;
  uint64_t ths_user_time;
  uint64_t ths_sys_time;
  uint64_t ths_ss_flags;
  uint64_t ths_last_run_time;
  uint64_t ths_last_made_runnable_time;
  uint32_t ths_state;
  uint32_t ths_sched_flags;
  int16_t ths_base_priority;
  int16_t ths_sched_priority;
  uint8_t ths_eqos;
  uint8_t ths_rqos;
  uint8_t ths_rqos_override;
  uint8_t ths_io_tier;
};

/* 1200 */
struct thread_snapshot_v3
{
  uint64_t ths_thread_id;
  uint64_t ths_wait_event;
  uint64_t ths_continuation;
  uint64_t ths_total_syscalls;
  uint64_t ths_voucher_identifier;
  uint64_t ths_dqserialnum;
  uint64_t ths_user_time;
  uint64_t ths_sys_time;
  uint64_t ths_ss_flags;
  uint64_t ths_last_run_time;
  uint64_t ths_last_made_runnable_time;
  uint32_t ths_state;
  uint32_t ths_sched_flags;
  int16_t ths_base_priority;
  int16_t ths_sched_priority;
  uint8_t ths_eqos;
  uint8_t ths_rqos;
  uint8_t ths_rqos_override;
  uint8_t ths_io_tier;
  uint64_t ths_thread_t;
};

/* 1201 */
struct thread_snapshot_v4
{
  uint64_t ths_thread_id;
  uint64_t ths_wait_event;
  uint64_t ths_continuation;
  uint64_t ths_total_syscalls;
  uint64_t ths_voucher_identifier;
  uint64_t ths_dqserialnum;
  uint64_t ths_user_time;
  uint64_t ths_sys_time;
  uint64_t ths_ss_flags;
  uint64_t ths_last_run_time;
  uint64_t ths_last_made_runnable_time;
  uint32_t ths_state;
  uint32_t ths_sched_flags;
  int16_t ths_base_priority;
  int16_t ths_sched_priority;
  uint8_t ths_eqos;
  uint8_t ths_rqos;
  uint8_t ths_rqos_override;
  uint8_t ths_io_tier;
  uint64_t ths_thread_t;
  uint64_t ths_requested_policy;
  uint64_t ths_effective_policy;
};

/* 1202 */
struct thread_group_snapshot
{
  uint64_t tgs_id;
  char tgs_name[16];
};

/* 1203 */
enum thread_group_flags
{
  kThreadGroupEfficient = 0x1,
  kThreadGroupUIApp = 0x2,
};

/* 1204 */
struct thread_group_snapshot_v2
{
  uint64_t tgs_id;
  char tgs_name[16];
  uint64_t tgs_flags;
};

/* 1205 */
enum coalition_flags
{
  kCoalitionTermRequested = 0x1,
  kCoalitionTerminated = 0x2,
  kCoalitionReaped = 0x4,
  kCoalitionPrivileged = 0x8,
};

/* 1206 */
struct jetsam_coalition_snapshot
{
  uint64_t jcs_id;
  uint64_t jcs_flags;
  uint64_t jcs_thread_group;
  uint64_t jcs_leader_task_uniqueid;
};

/* 1207 */
struct instrs_cycles_snapshot
{
  uint64_t ics_instructions;
  uint64_t ics_cycles;
};

/* 1208 */
struct thread_delta_snapshot_v2
{
  uint64_t tds_thread_id;
  uint64_t tds_voucher_identifier;
  uint64_t tds_ss_flags;
  uint64_t tds_last_made_runnable_time;
  uint32_t tds_state;
  uint32_t tds_sched_flags;
  int16_t tds_base_priority;
  int16_t tds_sched_priority;
  uint8_t tds_eqos;
  uint8_t tds_rqos;
  uint8_t tds_rqos_override;
  uint8_t tds_io_tier;
};

/* 1209 */
struct io_stats_snapshot
{
  uint64_t ss_disk_reads_count;
  uint64_t ss_disk_reads_size;
  uint64_t ss_disk_writes_count;
  uint64_t ss_disk_writes_size;
  uint64_t ss_io_priority_count[4];
  uint64_t ss_io_priority_size[4];
  uint64_t ss_paging_count;
  uint64_t ss_paging_size;
  uint64_t ss_non_paging_count;
  uint64_t ss_non_paging_size;
  uint64_t ss_data_count;
  uint64_t ss_data_size;
  uint64_t ss_metadata_count;
  uint64_t ss_metadata_size;
};

/* 1210 */
struct task_snapshot_v2
{
  uint64_t ts_unique_pid;
  uint64_t ts_ss_flags;
  uint64_t ts_user_time_in_terminated_threads;
  uint64_t ts_system_time_in_terminated_threads;
  uint64_t ts_p_start_sec;
  uint64_t ts_task_size;
  uint64_t ts_max_resident_size;
  uint32_t ts_suspend_count;
  uint32_t ts_faults;
  uint32_t ts_pageins;
  uint32_t ts_cow_faults;
  uint32_t ts_was_throttled;
  uint32_t ts_did_throttle;
  uint32_t ts_latency_qos;
  int32_t ts_pid;
  char ts_p_comm[32];
};

/* 1211 */
struct task_delta_snapshot_v2
{
  uint64_t tds_unique_pid;
  uint64_t tds_ss_flags;
  uint64_t tds_user_time_in_terminated_threads;
  uint64_t tds_system_time_in_terminated_threads;
  uint64_t tds_task_size;
  uint64_t tds_max_resident_size;
  uint32_t tds_suspend_count;
  uint32_t tds_faults;
  uint32_t tds_pageins;
  uint32_t tds_cow_faults;
  uint32_t tds_was_throttled;
  uint32_t tds_did_throttle;
  uint32_t tds_latency_qos;
};

/* 1212 */
struct stackshot_cpu_times
{
  uint64_t user_usec;
  uint64_t system_usec;
};

/* 1213 */
struct stackshot_duration
{
  uint64_t stackshot_duration;
  uint64_t stackshot_duration_outer;
};

/* 1214 */
struct stackshot_fault_stats
{
  uint32_t sfs_pages_faulted_in;
  uint64_t sfs_time_spent_faulting;
  uint64_t sfs_system_max_fault_time;
  uint8_t sfs_stopped_faulting;
};

/* 1215 */
struct stackshot_thread_waitinfo
{
  uint64_t owner;
  uint64_t waiter;
  uint64_t context;
  uint8_t wait_type;
};

/* 1216 */
typedef struct stackshot_thread_waitinfo thread_waitinfo_t;

/* 1217 */
struct exit_reason_snapshot
{
  uint32_t ers_namespace;
  uint64_t ers_code;
  uint64_t ers_flags;
};

/* 1218 */
struct codesigning_exit_reason_info
{
  uint64_t ceri_virt_addr;
  uint64_t ceri_file_offset;
  char ceri_pathname[1024];
  char ceri_filename[1024];
  uint64_t ceri_codesig_modtime_secs;
  uint64_t ceri_codesig_modtime_nsecs;
  uint64_t ceri_page_modtime_secs;
  uint64_t ceri_page_modtime_nsecs;
  uint8_t ceri_path_truncated;
  uint8_t ceri_object_codesigned;
  uint8_t ceri_page_codesig_validated;
  uint8_t ceri_page_codesig_tainted;
  uint8_t ceri_page_codesig_nx;
  uint8_t ceri_page_wpmapped;
  uint8_t ceri_page_slid;
  uint8_t ceri_page_dirty;
  uint32_t ceri_page_shadow_depth;
};

/* 1219 */
struct kcdata_iter
{
  kcdata_item_t item;
  void *end;
};

/* 1220 */
typedef struct kcdata_iter kcdata_iter_t;

/* 1221 */
struct thread_snapshot
{
  uint32_t snapshot_magic;
  uint32_t nkern_frames;
  uint32_t nuser_frames;
  uint64_t wait_event;
  uint64_t continuation;
  uint64_t thread_id;
  uint64_t user_time;
  uint64_t system_time;
  int32_t state;
  int32_t priority;
  int32_t sched_pri;
  int32_t sched_flags;
  char ss_flags;
  char ts_qos;
  char ts_rqos;
  char ts_rqos_override;
  char io_tier;
  char _reserved[3];
  uint64_t disk_reads_count;
  uint64_t disk_reads_size;
  uint64_t disk_writes_count;
  uint64_t disk_writes_size;
  uint64_t io_priority_count[4];
  uint64_t io_priority_size[4];
  uint64_t paging_count;
  uint64_t paging_size;
  uint64_t non_paging_count;
  uint64_t non_paging_size;
  uint64_t data_count;
  uint64_t data_size;
  uint64_t metadata_count;
  uint64_t metadata_size;
  uint64_t voucher_identifier;
  uint64_t total_syscalls;
  char pth_name[64];
};

/* 1222 */
struct task_snapshot
{
  uint32_t snapshot_magic;
  int32_t pid;
  uint64_t uniqueid;
  uint64_t user_time_in_terminated_threads;
  uint64_t system_time_in_terminated_threads;
  uint8_t shared_cache_identifier[16];
  uint64_t shared_cache_slide;
  uint32_t nloadinfos;
  int suspend_count;
  int task_size;
  int faults;
  int pageins;
  int cow_faults;
  uint32_t ss_flags;
  uint64_t p_start_sec;
  uint64_t p_start_usec;
  char p_comm[17];
  uint32_t was_throttled;
  uint32_t did_throttle;
  uint32_t latency_qos;
  uint64_t disk_reads_count;
  uint64_t disk_reads_size;
  uint64_t disk_writes_count;
  uint64_t disk_writes_size;
  uint64_t io_priority_count[4];
  uint64_t io_priority_size[4];
  uint64_t paging_count;
  uint64_t paging_size;
  uint64_t non_paging_count;
  uint64_t non_paging_size;
  uint64_t data_count;
  uint64_t data_size;
  uint64_t metadata_count;
  uint64_t metadata_size;
  uint32_t donating_pid_count;
};

/* 1223 */
struct micro_snapshot
{
  uint32_t snapshot_magic;
  uint32_t ms_cpu;
  uint64_t ms_time;
  uint64_t ms_time_microsecs;
  uint8_t ms_flags;
  uint16_t ms_opaque_flags;
};

/* 1224 */
struct _dyld_cache_header
{
  char magic[16];
  uint32_t mappingOffset;
  uint32_t mappingCount;
  uint32_t imagesOffset;
  uint32_t imagesCount;
  uint64_t dyldBaseAddress;
  uint64_t codeSignatureOffset;
  uint64_t codeSignatureSize;
  uint64_t slideInfoOffset;
  uint64_t slideInfoSize;
  uint64_t localSymbolsOffset;
  uint64_t localSymbolsSize;
  uint8_t uuid[16];
};

/* 1225 */
enum micro_snapshot_flags
{
  kInterruptRecord = 0x1,
  kTimerArmingRecord = 0x2,
  kUserMode = 0x4,
  kIORecord = 0x8,
};

/* 1226 */
enum generic_snapshot_flags
{
  kUser64_p = 0x1,
  kKernel64_p = 0x2,
};

/* 1227 */
enum $CCB236EE2BF77645A1C01B7C329332EE
{
  STACKSHOT_GET_DQ = 0x1,
  STACKSHOT_SAVE_LOADINFO = 0x2,
  STACKSHOT_GET_GLOBAL_MEM_STATS = 0x4,
  STACKSHOT_SAVE_KEXT_LOADINFO = 0x8,
  STACKSHOT_GET_MICROSTACKSHOT = 0x10,
  STACKSHOT_GLOBAL_MICROSTACKSHOT_ENABLE = 0x20,
  STACKSHOT_GLOBAL_MICROSTACKSHOT_DISABLE = 0x40,
  STACKSHOT_SET_MICROSTACKSHOT_MARK = 0x80,
  STACKSHOT_ACTIVE_KERNEL_THREADS_ONLY = 0x100,
  STACKSHOT_GET_BOOT_PROFILE = 0x200,
  STACKSHOT_SAVE_IMP_DONATION_PIDS = 0x2000,
  STACKSHOT_SAVE_IN_KERNEL_BUFFER = 0x4000,
  STACKSHOT_RETRIEVE_EXISTING_BUFFER = 0x8000,
  STACKSHOT_KCDATA_FORMAT = 0x10000,
  STACKSHOT_ENABLE_BT_FAULTING = 0x20000,
  STACKSHOT_COLLECT_DELTA_SNAPSHOT = 0x40000,
  STACKSHOT_TAILSPIN = 0x80000,
  STACKSHOT_TRYLOCK = 0x100000,
  STACKSHOT_ENABLE_UUID_FAULTING = 0x200000,
  STACKSHOT_FROM_PANIC = 0x400000,
  STACKSHOT_NO_IO_STATS = 0x800000,
  STACKSHOT_THREAD_WAITINFO = 0x1000000,
  STACKSHOT_THREAD_GROUP = 0x2000000,
  STACKSHOT_SAVE_JETSAM_COALITIONS = 0x4000000,
  STACKSHOT_INSTRS_CYCLES = 0x8000000,
};

/* 1228 */
struct embedded_panic_header
{
  uint32_t eph_magic;
  uint32_t eph_crc;
  uint32_t eph_version;
  uint64_t eph_panic_flags;
  uint32_t eph_panic_log_offset;
  uint32_t eph_panic_log_len;
  uint32_t eph_stackshot_offset;
  uint32_t eph_stackshot_len;
  uint32_t eph_other_log_offset;
  uint32_t eph_other_log_len;
  unsigned __int64 eph_x86_power_state : 8;
  unsigned __int64 eph_x86_efi_boot_state : 8;
  unsigned __int64 eph_x86_system_state : 8;
  unsigned __int64 eph_x86_unused_bits : 40;
};

/* 1229 */
struct macos_panic_header
{
  uint32_t mph_magic;
  uint32_t mph_crc;
  uint32_t mph_version;
  uint32_t mph_padding;
  uint64_t mph_panic_flags;
  uint32_t mph_panic_log_offset;
  uint32_t mph_panic_log_len;
  uint32_t mph_stackshot_offset;
  uint32_t mph_stackshot_len;
  uint32_t mph_other_log_offset;
  uint32_t mph_other_log_len;
  char mph_data[];
};

/* 1230 */
typedef void (__cdecl *timeout_fcn_t)(void *);

/* 1231 */
typedef struct __throttle_info_handle *throttle_info_handle_t;

/* 1232 */
struct flocktimeout
{
  struct flock fl;
  struct timespec timeout;
};

/* 1233 */
struct radvisory
{
  off_t ra_offset;
  int ra_count;
};

/* 1234 */
struct user32_fcodeblobs
{
  user32_addr_t f_cd_hash;
  user32_size_t f_hash_size;
  user32_addr_t f_cd_buffer;
  user32_size_t f_cd_size;
  user32_addr_t f_out_size;
  int f_arch;
};

/* 1235 */
typedef struct user32_fcodeblobs user32_fcodeblobs_t;

/* 1236 */
struct user64_fcodeblobs
{
  user64_addr_t f_cd_hash;
  user64_size_t f_hash_size;
  user64_addr_t f_cd_buffer;
  user64_size_t f_cd_size;
  user64_addr_t f_out_size;
  int f_arch;
  int __padding;
};

/* 1237 */
typedef struct user64_fcodeblobs user64_fcodeblobs_t;

/* 1238 */
struct user_fcodeblobs
{
  user_addr_t f_cd_hash;
  user_size_t f_hash_size;
  user_addr_t f_cd_buffer;
  user_size_t f_cd_size;
  user_addr_t f_out_size;
  int f_arch;
};

/* 1239 */
typedef struct user_fcodeblobs user_fcodeblobs_t;

/* 1240 */
struct fsignatures
{
  off_t fs_file_start;
  void *fs_blob_start;
  size_t fs_blob_size;
};

/* 1241 */
struct user32_fsignatures
{
  off_t fs_file_start;
  user32_addr_t fs_blob_start;
  user32_size_t fs_blob_size;
};

/* 1242 */
typedef struct user32_fsignatures user32_fsignatures_t;

/* 1243 */
struct user_fsignatures
{
  off_t fs_file_start;
  user_addr_t fs_blob_start;
  user_size_t fs_blob_size;
};

/* 1244 */
typedef struct user_fsignatures user_fsignatures_t;

/* 1245 */
struct fchecklv
{
  off_t lv_file_start;
  size_t lv_error_message_size;
  void *lv_error_message;
};

/* 1246 */
typedef struct fchecklv fchecklv_t;

/* 1247 */
struct user32_fchecklv
{
  user32_off_t lv_file_start;
  user32_size_t lv_error_message_size;
  user32_addr_t lv_error_message;
};

/* 1248 */
typedef struct user32_fchecklv user32_fchecklv_t;

/* 1249 */
struct user_fchecklv
{
  off_t lv_file_start;
  user_size_t lv_error_message_size;
  user_addr_t lv_error_message;
};

/* 1250 */
typedef struct user_fchecklv user_fchecklv_t;

/* 1251 */
struct fstore
{
  unsigned int fst_flags;
  int fst_posmode;
  off_t fst_offset;
  off_t fst_length;
  off_t fst_bytesalloc;
};

/* 1252 */
struct fpunchhole
{
  unsigned int fp_flags;
  unsigned int reserved;
  off_t fp_offset;
  off_t fp_length;
};

/* 1253 */
typedef struct fpunchhole fpunchhole_t;

/* 1254 */
struct ftrimactivefile
{
  off_t fta_offset;
  off_t fta_length;
};

/* 1255 */
typedef struct ftrimactivefile ftrimactivefile_t;

/* 1256 */
struct fbootstraptransfer
{
  off_t fbt_offset;
  size_t fbt_length;
  void *fbt_buffer;
};

/* 1257 */
struct user32_fbootstraptransfer
{
  off_t fbt_offset;
  user32_size_t fbt_length;
  user32_addr_t fbt_buffer;
};

/* 1258 */
typedef struct user32_fbootstraptransfer user32_fbootstraptransfer_t;

/* 1259 */
struct user_fbootstraptransfer
{
  off_t fbt_offset;
  user_size_t fbt_length;
  user_addr_t fbt_buffer;
};

/* 1260 */
typedef struct user_fbootstraptransfer user_fbootstraptransfer_t;

/* 1261 */
struct log2phys
{
  unsigned int l2p_flags;
  off_t l2p_contigbytes;
  off_t l2p_devoffset;
};

/* 1262 */
struct ostat
{
  __uint16_t st_dev;
  ino_t st_ino;
  mode_t st_mode;
  nlink_t st_nlink;
  __uint16_t st_uid;
  __uint16_t st_gid;
  __uint16_t st_rdev;
  __int32_t st_size;
  struct timespec st_atimespec;
  struct timespec st_mtimespec;
  struct timespec st_ctimespec;
  __int32_t st_blksize;
  __int32_t st_blocks;
  __uint32_t st_flags;
  __uint32_t st_gen;
};

/* 1263 */
struct stat
{
  dev_t st_dev;
  ino_t st_ino;
  mode_t st_mode;
  nlink_t st_nlink;
  uid_t st_uid;
  gid_t st_gid;
  dev_t st_rdev;
  struct timespec st_atimespec;
  struct timespec st_mtimespec;
  struct timespec st_ctimespec;
  off_t st_size;
  blkcnt_t st_blocks;
  blksize_t st_blksize;
  __uint32_t st_flags;
  __uint32_t st_gen;
  __int32_t st_lspare;
  __int64_t st_qspare[2];
};

/* 1264 */
struct stat64
{
  dev_t st_dev;
  mode_t st_mode;
  nlink_t st_nlink;
  __darwin_ino64_t st_ino;
  uid_t st_uid;
  gid_t st_gid;
  dev_t st_rdev;
  struct timespec st_atimespec;
  struct timespec st_mtimespec;
  struct timespec st_ctimespec;
  struct timespec st_birthtimespec;
  off_t st_size;
  blkcnt_t st_blocks;
  blksize_t st_blksize;
  __uint32_t st_flags;
  __uint32_t st_gen;
  __int32_t st_lspare;
  __int64_t st_qspare[2];
};

/* 1265 */
typedef int __cdecl open_close_fcn_t(dev_t dev, int flags, int devtype, struct proc *p);

/* 1266 */
typedef struct tty *__cdecl d_devtotty_t(dev_t dev);

/* 1267 */
typedef void __cdecl strategy_fcn_t(struct buf *bp);

/* 1268 */
typedef int __cdecl ioctl_fcn_t(dev_t dev, u_long cmd, caddr_t data, int fflag, struct proc *p);

/* 1269 */
typedef int dump_fcn_t(void);

/* 1270 */
typedef int __cdecl psize_fcn_t(dev_t dev);

/* 1271 */
typedef int __cdecl read_write_fcn_t(dev_t dev, struct uio *uio, int ioflag);

/* 1272 */
typedef int __cdecl stop_fcn_t(struct tty *tp, int rw);

/* 1273 */
typedef int __cdecl reset_fcn_t(int uban);

/* 1274 */
typedef int __cdecl select_fcn_t(dev_t dev, int which, void *wql, struct proc *p);

/* 1275 */
typedef int mmap_fcn_t(void);

/* 1276 */
struct bdevsw
{
  open_close_fcn_t *d_open;
  open_close_fcn_t *d_close;
  strategy_fcn_t *d_strategy;
  ioctl_fcn_t *d_ioctl;
  dump_fcn_t *d_dump;
  psize_fcn_t *d_psize;
  int d_type;
};

/* 1277 */
struct cdevsw
{
  open_close_fcn_t *d_open;
  open_close_fcn_t *d_close;
  read_write_fcn_t *d_read;
  read_write_fcn_t *d_write;
  ioctl_fcn_t *d_ioctl;
  stop_fcn_t *d_stop;
  reset_fcn_t *d_reset;
  struct tty **d_ttys;
  select_fcn_t *d_select;
  mmap_fcn_t *d_mmap;
  strategy_fcn_t *d_strategy;
  void *d_reserved_1;
  void *d_reserved_2;
  int d_type;
};

/* 1279 */
struct attrreference
{
  int32_t attr_dataoffset;
  u_int32_t attr_length;
};

/* 1280 */
struct diskextent
{
  u_int32_t startblock;
  u_int32_t blockcount;
};

/* 1281 */
typedef struct diskextent extentrecord[8];

/* 1284 */
struct fssearchblock
{
  struct attrlist *returnattrs;
  void *returnbuffer;
  size_t returnbuffersize;
  u_long maxmatches;
  struct timeval timelimit;
  void *searchparams1;
  size_t sizeofsearchparams1;
  void *searchparams2;
  size_t sizeofsearchparams2;
  struct attrlist searchattrs;
};

/* 1285 */
struct user64_fssearchblock
{
  user64_addr_t returnattrs;
  user64_addr_t returnbuffer;
  user64_size_t returnbuffersize;
  user64_ulong_t maxmatches;
  struct user64_timeval timelimit;
  user64_addr_t searchparams1;
  user64_size_t sizeofsearchparams1;
  user64_addr_t searchparams2;
  user64_size_t sizeofsearchparams2;
  struct attrlist searchattrs;
};

/* 1286 */
struct user32_fssearchblock
{
  user32_addr_t returnattrs;
  user32_addr_t returnbuffer;
  user32_size_t returnbuffersize;
  user32_ulong_t maxmatches;
  struct user32_timeval timelimit;
  user32_addr_t searchparams1;
  user32_size_t sizeofsearchparams1;
  user32_addr_t searchparams2;
  user32_size_t sizeofsearchparams2;
  struct attrlist searchattrs;
};

/* 1287 */
struct searchstate
{
  uint32_t ss_union_flags;
  uint32_t ss_union_layer;
  u_char ss_fsstate[548];
};

/* 1288 */
struct statfs64
{
  uint32_t f_bsize;
  int32_t f_iosize;
  uint64_t f_blocks;
  uint64_t f_bfree;
  uint64_t f_bavail;
  uint64_t f_files;
  uint64_t f_ffree;
  fsid_t f_fsid;
  uid_t f_owner;
  uint32_t f_type;
  uint32_t f_flags;
  uint32_t f_fssubtype;
  char f_fstypename[16];
  char f_mntonname[1024];
  char f_mntfromname[1024];
  uint32_t f_reserved[8];
};

/* 1289 */
struct statfs
{
  __int16 f_otype;
  __int16 f_oflags;
  __int64 f_bsize;
  __int64 f_iosize;
  __int64 f_blocks;
  __int64 f_bfree;
  __int64 f_bavail;
  __int64 f_files;
  __int64 f_ffree;
  fsid_t f_fsid;
  uid_t f_owner;
  __int16 f_reserved1;
  __int16 f_type;
  __int64 f_flags;
  __int64 f_reserved2[2];
  char f_fstypename[15];
  char f_mntonname[90];
  char f_mntfromname[90];
  char f_reserved3;
  __int64 f_reserved4[4];
};

/* 1293 */
struct vfsidctl
{
  int vc_vers;
  fsid_t vc_fsid;
  void *vc_ptr;
  size_t vc_len;
  u_int32_t vc_spare[12];
};

/* 1294 */
struct user_vfsidctl
{
  int vc_vers;
  fsid_t vc_fsid;
  user_addr_t vc_ptr;
  user_size_t vc_len;
  u_int32_t vc_spare[12];
};

/* 1295 */
struct user32_vfsidctl
{
  int vc_vers;
  fsid_t vc_fsid;
  user32_addr_t vc_ptr;
  user32_size_t vc_len;
  u_int32_t vc_spare[12];
};

/* 1296 */
union union_vfsidctl
{
  struct user32_vfsidctl vc32;
  struct user_vfsidctl vc64;
};

/* 1297 */
struct vfsquery
{
  u_int32_t vq_flags;
  u_int32_t vq_spare[31];
};

/* 1298 */
struct vfs_server
{
  int32_t vs_minutes;
  u_int8_t vs_server_name[768];
};

/* 1299 */
struct netfs_status
{
  u_int32_t ns_status;
  char ns_mountopts[512];
  uint32_t ns_waittime;
  uint32_t ns_threadcount;
  uint64_t ns_threadids[];
};

/* 1301 */
union vfsioattr::$282FA6C5882C2C11C7EA25D1F64712CE
{
  int64_t io_max_swappin_available;
  void *io_reserved[2];
};

/* 1300 */
struct vfsioattr
{
  u_int32_t io_maxreadcnt;
  u_int32_t io_maxwritecnt;
  u_int32_t io_segreadcnt;
  u_int32_t io_segwritecnt;
  u_int32_t io_maxsegreadsize;
  u_int32_t io_maxsegwritesize;
  u_int32_t io_devblocksize;
  u_int32_t io_flags;
  union
  {
    int64_t io_max_swappin_available;
    void *io_reserved[2];
  };
};

/* 1302 */
struct vfs_fsentry
{
  struct vfsops *vfe_vfsops;
  int vfe_vopcnt;
  struct vnodeopv_desc **vfe_opvdescs;
  int vfe_fstypenum;
  char vfe_fsname[15];
  uint32_t vfe_flags;
  void *vfe_reserv[2];
};

/* 1314 */
struct vnodeopv_desc
{
  int (__cdecl ***opv_desc_vector_p)(void *);
  struct vnodeopv_entry_desc *opv_desc_ops;
};

/* 1313 */
struct vnodeopv_entry_desc
{
  struct vnodeop_desc *opve_op;
  int (__cdecl *opve_impl)(void *);
};

/* 1312 */
struct vnodeop_desc;

/* 1304 */
struct fs_snapshot_mount_args
{
  mount_t sm_mp;
  struct componentname *sm_cnp;
};

/* 1305 */
struct fs_snapshot_revert_args
{
  struct componentname *sr_cnp;
};

/* 1306 */
struct fs_snapshot_root_args
{
  struct componentname *sr_cnp;
};

/* 1307 */
enum vtagtype
{
  VT_NON = 0x0,
  VT_UFS = 0x1,
  VT_NFS = 0x2,
  VT_MFS = 0x3,
  VT_MSDOSFS = 0x4,
  VT_LFS = 0x5,
  VT_LOFS = 0x6,
  VT_FDESC = 0x7,
  VT_PORTAL = 0x8,
  VT_NULL = 0x9,
  VT_UMAP = 0xA,
  VT_KERNFS = 0xB,
  VT_PROCFS = 0xC,
  VT_AFS = 0xD,
  VT_ISOFS = 0xE,
  VT_MOCKFS = 0xF,
  VT_HFS = 0x10,
  VT_ZFS = 0x11,
  VT_DEVFS = 0x12,
  VT_WEBDAV = 0x13,
  VT_UDF = 0x14,
  VT_AFP = 0x15,
  VT_CDDA = 0x16,
  VT_CIFS = 0x17,
  VT_OTHER = 0x18,
  VT_APFS = 0x19,
};

/* 1309 */
struct vnode_fsparam
{
  struct mount *vnfs_mp;
  enum vtype vnfs_vtype;
  const char *vnfs_str;
  struct vnode *vnfs_dvp;
  void *vnfs_fsnode;
  int (__cdecl **vnfs_vops)(void *);
  int vnfs_markroot;
  int vnfs_marksystem;
  dev_t vnfs_rdev;
  off_t vnfs_filesize;
  struct componentname *vnfs_cnp;
  uint32_t vnfs_flags;
};

/* 1315 */
struct vnop_generic_args
{
  struct vnodeop_desc *a_desc;
};

/* 1316 */
struct vnop_lookup_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_dvp;
  vnode_t *a_vpp;
  struct componentname *a_cnp;
  vfs_context_t a_context;
};

/* 1317 */
struct vnop_create_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_dvp;
  vnode_t *a_vpp;
  struct componentname *a_cnp;
  struct vnode_attr *a_vap;
  vfs_context_t a_context;
};

/* 1318 */
struct vnop_whiteout_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_dvp;
  struct componentname *a_cnp;
  int a_flags;
  vfs_context_t a_context;
};

/* 1319 */
struct vnop_mknod_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_dvp;
  vnode_t *a_vpp;
  struct componentname *a_cnp;
  struct vnode_attr *a_vap;
  vfs_context_t a_context;
};

/* 1320 */
struct vnop_open_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  int a_mode;
  vfs_context_t a_context;
};

/* 1321 */
struct vnop_close_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  int a_fflag;
  vfs_context_t a_context;
};

/* 1322 */
struct vnop_access_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  int a_action;
  vfs_context_t a_context;
};

/* 1323 */
struct vnop_getattr_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  struct vnode_attr *a_vap;
  vfs_context_t a_context;
};

/* 1324 */
struct vnop_setattr_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  struct vnode_attr *a_vap;
  vfs_context_t a_context;
};

/* 1325 */
struct vnop_read_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  struct uio *a_uio;
  int a_ioflag;
  vfs_context_t a_context;
};

/* 1326 */
struct vnop_write_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  struct uio *a_uio;
  int a_ioflag;
  vfs_context_t a_context;
};

/* 1327 */
struct vnop_ioctl_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  u_long a_command;
  caddr_t a_data;
  int a_fflag;
  vfs_context_t a_context;
};

/* 1328 */
struct vnop_select_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  int a_which;
  int a_fflags;
  void *a_wql;
  vfs_context_t a_context;
};

/* 1329 */
struct vnop_exchange_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_fvp;
  vnode_t a_tvp;
  int a_options;
  vfs_context_t a_context;
};

/* 1330 */
struct vnop_revoke_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  int a_flags;
  vfs_context_t a_context;
};

/* 1331 */
struct vnop_mmap_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  int a_fflags;
  vfs_context_t a_context;
};

/* 1332 */
struct vnop_mnomap_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  vfs_context_t a_context;
};

/* 1333 */
struct vnop_fsync_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  int a_waitfor;
  vfs_context_t a_context;
};

/* 1334 */
struct vnop_remove_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_dvp;
  vnode_t a_vp;
  struct componentname *a_cnp;
  int a_flags;
  vfs_context_t a_context;
};

/* 1335 */
struct vnop_link_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  vnode_t a_tdvp;
  struct componentname *a_cnp;
  vfs_context_t a_context;
};

/* 1336 */
struct vnop_rename_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_fdvp;
  vnode_t a_fvp;
  struct componentname *a_fcnp;
  vnode_t a_tdvp;
  vnode_t a_tvp;
  struct componentname *a_tcnp;
  vfs_context_t a_context;
};

/* 1337 */
typedef unsigned int vfs_rename_flags_t;

/* 1338 */
enum $3DA53A3243CFF28615055C300258D003
{
  VFS_RENAME_SECLUDE = 0x1,
  VFS_RENAME_SWAP = 0x2,
  VFS_RENAME_EXCL = 0x4,
  VFS_RENAME_FLAGS_MASK = 0x7,
};

/* 1339 */
struct vnop_renamex_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_fdvp;
  vnode_t a_fvp;
  struct componentname *a_fcnp;
  vnode_t a_tdvp;
  vnode_t a_tvp;
  struct componentname *a_tcnp;
  struct vnode_attr *a_vap;
  vfs_rename_flags_t a_flags;
  vfs_context_t a_context;
};

/* 1340 */
struct vnop_mkdir_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_dvp;
  vnode_t *a_vpp;
  struct componentname *a_cnp;
  struct vnode_attr *a_vap;
  vfs_context_t a_context;
};

/* 1341 */
struct vnop_rmdir_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_dvp;
  vnode_t a_vp;
  struct componentname *a_cnp;
  vfs_context_t a_context;
};

/* 1342 */
struct vnop_symlink_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_dvp;
  vnode_t *a_vpp;
  struct componentname *a_cnp;
  struct vnode_attr *a_vap;
  char *a_target;
  vfs_context_t a_context;
};

/* 1343 */
struct vnop_readdir_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  struct uio *a_uio;
  int a_flags;
  int *a_eofflag;
  int *a_numdirent;
  vfs_context_t a_context;
};

/* 1344 */
struct vnop_readdirattr_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  struct attrlist *a_alist;
  struct uio *a_uio;
  uint32_t a_maxcount;
  uint32_t a_options;
  uint32_t *a_newstate;
  int *a_eofflag;
  uint32_t *a_actualcount;
  vfs_context_t a_context;
};

/* 1345 */
struct vnop_getattrlistbulk_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  struct attrlist *a_alist;
  struct vnode_attr *a_vap;
  struct uio *a_uio;
  void *a_private;
  uint64_t a_options;
  int32_t *a_eofflag;
  int32_t *a_actualcount;
  vfs_context_t a_context;
};

/* 1346 */
struct vnop_readlink_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  struct uio *a_uio;
  vfs_context_t a_context;
};

/* 1347 */
struct vnop_inactive_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  vfs_context_t a_context;
};

/* 1348 */
struct vnop_reclaim_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  vfs_context_t a_context;
};

/* 1349 */
struct vnop_pathconf_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  int a_name;
  int32_t *a_retval;
  vfs_context_t a_context;
};

/* 1350 */
struct vnop_advlock_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  caddr_t a_id;
  int a_op;
  struct flock *a_fl;
  int a_flags;
  vfs_context_t a_context;
  struct timespec *a_timeout;
};

/* 1351 */
struct vnop_allocate_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  off_t a_length;
  u_int32_t a_flags;
  off_t *a_bytesallocated;
  off_t a_offset;
  vfs_context_t a_context;
};

/* 1352 */
struct vnop_pagein_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  upl_t a_pl;
  upl_offset_t a_pl_offset;
  off_t a_f_offset;
  size_t a_size;
  int a_flags;
  vfs_context_t a_context;
};

/* 1353 */
struct vnop_pageout_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  upl_t a_pl;
  upl_offset_t a_pl_offset;
  off_t a_f_offset;
  size_t a_size;
  int a_flags;
  vfs_context_t a_context;
};

/* 1354 */
struct vnop_searchfs_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  void *a_searchparams1;
  void *a_searchparams2;
  struct attrlist *a_searchattrs;
  uint32_t a_maxmatches;
  struct timeval *a_timelimit;
  struct attrlist *a_returnattrs;
  uint32_t *a_nummatches;
  uint32_t a_scriptcode;
  uint32_t a_options;
  struct uio *a_uio;
  struct searchstate *a_searchstate;
  vfs_context_t a_context;
};

/* 1355 */
struct vnop_copyfile_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_fvp;
  vnode_t a_tdvp;
  vnode_t a_tvp;
  struct componentname *a_tcnp;
  int a_mode;
  int a_flags;
  vfs_context_t a_context;
};

/* 1356 */
enum dir_clone_authorizer_op
{
  OP_AUTHORIZE = 0x0,
  OP_VATTR_SETUP = 0x1,
  OP_VATTR_CLEANUP = 0x2,
};

/* 1357 */
typedef enum dir_clone_authorizer_op dir_clone_authorizer_op_t;

/* 1358 */
struct vnop_clonefile_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_fvp;
  vnode_t a_dvp;
  vnode_t *a_vpp;
  struct componentname *a_cnp;
  struct vnode_attr *a_vap;
  uint32_t a_flags;
  vfs_context_t a_context;
  int (__cdecl *a_dir_clone_authorizer)(struct vnode_attr *vap, kauth_action_t action, struct vnode_attr *dvap, vnode_t sdvp, mount_t mp, dir_clone_authorizer_op_t vattr_op, uint32_t flags, vfs_context_t ctx, void *reserved);
  void *a_reserved;
};

/* 1359 */
struct vnop_getxattr_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  const char *a_name;
  uio_t a_uio;
  size_t *a_size;
  int a_options;
  vfs_context_t a_context;
};

/* 1360 */
struct vnop_setxattr_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  const char *a_name;
  uio_t a_uio;
  int a_options;
  vfs_context_t a_context;
};

/* 1361 */
struct vnop_removexattr_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  const char *a_name;
  int a_options;
  vfs_context_t a_context;
};

/* 1362 */
struct vnop_listxattr_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  uio_t a_uio;
  size_t *a_size;
  int a_options;
  vfs_context_t a_context;
};

/* 1363 */
struct vnop_blktooff_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  daddr64_t a_lblkno;
  off_t *a_offset;
};

/* 1364 */
struct vnop_offtoblk_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  off_t a_offset;
  daddr64_t *a_lblkno;
};

/* 1365 */
struct vnop_blockmap_args
{
  struct vnodeop_desc *a_desc;
  vnode_t a_vp;
  off_t a_foffset;
  size_t a_size;
  daddr64_t *a_bpn;
  size_t *a_run;
  void *a_poff;
  int a_flags;
  vfs_context_t a_context;
};

/* 1366 */
struct vnop_strategy_args
{
  struct vnodeop_desc *a_desc;
  struct buf *a_bp;
};

/* 1367 */
struct vnop_bwrite_args
{
  struct vnodeop_desc *a_desc;
  buf_t a_bp;
};

/* 1368 */
struct vnop_kqfilt_add_args
{
  struct vnodeop_desc *a_desc;
  struct vnode *a_vp;
  struct knote *a_kn;
  vfs_context_t a_context;
};

/* 1369 */
struct vnop_kqfilt_remove_args
{
  struct vnodeop_desc *a_desc;
  struct vnode *a_vp;
  uintptr_t a_ident;
  vfs_context_t a_context;
};

/* 1370 */
struct vnop_setlabel_args
{
  struct vnodeop_desc *a_desc;
  struct vnode *a_vp;
  struct label *a_vl;
  vfs_context_t a_context;
};

/* 1371 */
struct dirent
{
  ino_t d_ino;
  __uint16_t d_reclen;
  __uint8_t d_type;
  __uint8_t d_namlen;
  char d_name[256];
};

/* 1372 */
struct direntry
{
  __uint64_t d_ino;
  __uint64_t d_seekoff;
  __uint16_t d_reclen;
  __uint16_t d_namlen;
  __uint8_t d_type;
  char d_name[1024];
};

/* 1373 */
enum $C74472DF9C2737F24C8674F6428FF98E : __int64
{
  CSMAGIC_REQUIREMENT = 0xFADE0C00,
  CSMAGIC_REQUIREMENTS = 0xFADE0C01,
  CSMAGIC_CODEDIRECTORY = 0xFADE0C02,
  CSMAGIC_EMBEDDED_SIGNATURE = 0xFADE0CC0,
  CSMAGIC_EMBEDDED_SIGNATURE_OLD = 0xFADE0B02,
  CSMAGIC_EMBEDDED_ENTITLEMENTS = 0xFADE7171,
  CSMAGIC_DETACHED_SIGNATURE = 0xFADE0CC1,
  CSMAGIC_BLOBWRAPPER = 0xFADE0B01,
  CS_SUPPORTSSCATTER = 0x20100,
  CS_SUPPORTSTEAMID = 0x20200,
  CS_SUPPORTSCODELIMIT64 = 0x20300,
  CS_SUPPORTSEXECSEG = 0x20400,
  CSSLOT_CODEDIRECTORY = 0x0,
  CSSLOT_INFOSLOT = 0x1,
  CSSLOT_REQUIREMENTS = 0x2,
  CSSLOT_RESOURCEDIR = 0x3,
  CSSLOT_APPLICATION = 0x4,
  CSSLOT_ENTITLEMENTS = 0x5,
  CSSLOT_ALTERNATE_CODEDIRECTORIES = 0x1000,
  CSSLOT_ALTERNATE_CODEDIRECTORY_MAX = 0x5,
  CSSLOT_ALTERNATE_CODEDIRECTORY_LIMIT = 0x1005,
  CSSLOT_SIGNATURESLOT = 0x10000,
  CSTYPE_INDEX_REQUIREMENTS = 0x2,
  CSTYPE_INDEX_ENTITLEMENTS = 0x5,
  CS_HASHTYPE_SHA1 = 0x1,
  CS_HASHTYPE_SHA256 = 0x2,
  CS_HASHTYPE_SHA256_TRUNCATED = 0x3,
  CS_HASHTYPE_SHA384 = 0x4,
  CS_SHA1_LEN = 0x14,
  CS_SHA256_LEN = 0x20,
  CS_SHA256_TRUNCATED_LEN = 0x14,
  CS_CDHASH_LEN = 0x14,
  CS_HASH_MAX_SIZE = 0x30,
  CS_SIGNER_TYPE_UNKNOWN = 0x0,
  CS_SIGNER_TYPE_LEGACYVPN = 0x5,
};

/* 1374 */
struct __CodeDirectory
{
  uint32_t magic;
  uint32_t length;
  uint32_t version;
  uint32_t flags;
  uint32_t hashOffset;
  uint32_t identOffset;
  uint32_t nSpecialSlots;
  uint32_t nCodeSlots;
  uint32_t codeLimit;
  uint8_t hashSize;
  uint8_t hashType;
  uint8_t platform;
  uint8_t pageSize;
  uint32_t spare2;
  char end_earliest[];
  uint32_t scatterOffset;
  char end_withScatter[];
  uint32_t teamOffset;
  char end_withTeam[];
  uint32_t spare3;
  uint64_t codeLimit64;
  char end_withCodeLimit64[];
  uint64_t execSegBase;
  uint64_t execSegLimit;
  uint64_t execSegFlags;
  char end_withExecSeg[];
};

/* 1375 */
typedef struct __CodeDirectory CS_CodeDirectory;

/* 1376 */
struct __BlobIndex
{
  uint32_t type;
  uint32_t offset;
};

/* 1377 */
typedef struct __BlobIndex CS_BlobIndex;

/* 1378 */
struct __SC_SuperBlob
{
  uint32_t magic;
  uint32_t length;
  uint32_t count;
  CS_BlobIndex index[];
};

/* 1379 */
typedef struct __SC_SuperBlob CS_SuperBlob;

/* 1380 */
struct __SC_GenericBlob
{
  uint32_t magic;
  uint32_t length;
  char data[];
};

/* 1381 */
typedef struct __SC_GenericBlob CS_GenericBlob;

/* 1382 */
struct __SC_Scatter
{
  uint32_t count;
  uint32_t base;
  uint64_t targetOffset;
  uint64_t spare;
};

/* 1383 */
typedef struct __SC_Scatter SC_Scatter;

/* 1384 */
struct thread_group;

/* 1385 */
typedef struct thread_group *thread_group_t;

/* 1386 */
struct mach_timebase_info
{
  uint32_t numer;
  uint32_t denom;
};

/* 1387 */
typedef unsigned __int64 clock_sec_t;

/* 1388 */
typedef unsigned int clock_usec_t;

/* 1389 */
typedef unsigned int clock_nsec_t;

/* 1390 */
struct thread_call;

/* 1391 */
typedef struct thread_call *thread_call_t;

/* 1392 */
typedef void *thread_call_param_t;

/* 1393 */
typedef void (__cdecl *thread_call_func_t)(thread_call_param_t param0, thread_call_param_t param1);

/* 1394 */
enum $438F1526CEEC2EF6EC5B0526B81A95CC
{
  THREAD_CALL_PRIORITY_HIGH = 0x0,
  THREAD_CALL_PRIORITY_KERNEL = 0x1,
  THREAD_CALL_PRIORITY_USER = 0x2,
  THREAD_CALL_PRIORITY_LOW = 0x3,
  THREAD_CALL_PRIORITY_KERNEL_HIGH = 0x4,
};

/* 1395 */
typedef enum $438F1526CEEC2EF6EC5B0526B81A95CC thread_call_priority_t;

/* 1396 */
enum $ED3DA6E648853CAD4BF42E69C94F2EC9
{
  THREAD_CALL_OPTIONS_ONCE = 0x1,
};

/* 1397 */
typedef uint32_t thread_call_options_t;

/* 1398 */
typedef uint64_t kpc_config_t;

/* 1399 */
typedef void (__cdecl *kpc_pm_handler_t)(boolean_t);

/* 1400 */
struct cpu_data;

/* 1401 */
struct kpc_config_remote
{
  uint32_t classes;
  kpc_config_t *configv;
  uint64_t pmc_mask;
};

/* 1402 */
struct kpc_running_remote
{
  uint32_t classes;
  uint64_t cfg_target_mask;
  uint64_t cfg_state_mask;
};

/* 1403 */
struct kpc_get_counters_remote
{
  uint32_t classes;
  uint32_t nb_counters;
  uint32_t buf_stride;
  uint64_t *buf;
};

/* 1404 */
struct kpc_driver
{
  uint32_t (*get_classes)(void);
  uint32_t (*get_running)(void);
  int (__cdecl *set_running)(uint32_t classes);
  int (__cdecl *get_cpu_counters)(boolean_t all_cpus, uint32_t classes, int *curcpu, uint64_t *buf);
  int (__cdecl *get_curthread_counters)(uint32_t *inoutcount, uint64_t *buf);
  uint32_t (__cdecl *get_counter_count)(uint32_t classes);
  uint32_t (__cdecl *get_config_count)(uint32_t classes);
  int (__cdecl *get_config)(uint32_t classes, kpc_config_t *current_config);
  int (__cdecl *set_config)(uint32_t classes, kpc_config_t *new_config);
  int (__cdecl *get_period)(uint32_t classes, uint64_t *period);
  int (__cdecl *set_period)(uint32_t classes, uint64_t *period);
};

/* 1405 */
struct mig_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  mach_msg_size_t maxsize;
  vm_address_t reserved;
  mig_routine_descriptor routine[1];
};

/* 1406 */
struct work_interval;

/* 1407 */
struct kern_work_interval_args
{
  uint64_t work_interval_id;
  uint64_t start;
  uint64_t finish;
  uint64_t deadline;
  uint64_t next_start;
  uint32_t notify_flags;
  uint32_t create_flags;
  uint16_t urgency;
};

/* 1408 */
struct kern_work_interval_create_args
{
  uint64_t wica_id;
  uint32_t wica_port;
  uint32_t wica_create_flags;
};

/* 1409 */
enum $F57F1A76D1284115D4B76415A8A0D0AC
{
  HV_DEBUG_STATE = 0x0,
};

/* 1410 */
typedef enum $F57F1A76D1284115D4B76415A8A0D0AC hv_volatile_state_t;

/* 1411 */
enum $FD5EBC18505A6F265274EE39FE402190
{
  HV_TASK_TRAP = 0x0,
  HV_THREAD_TRAP = 0x1,
};

/* 1412 */
typedef enum $FD5EBC18505A6F265274EE39FE402190 hv_trap_type_t;

/* 1413 */
typedef kern_return_t (__cdecl *hv_trap_t)(void *target, uint64_t arg);

/* 1414 */
struct $41FDFDB97D7EE5E643FFAB1BDE54FC62
{
  const hv_trap_t *traps;
  unsigned int trap_count;
};

/* 1415 */
typedef struct $41FDFDB97D7EE5E643FFAB1BDE54FC62 hv_trap_table_t;

/* 1416 */
struct $411DA7160D3ABA1289AB1E9C928F644D
{
  void (__cdecl *dispatch)(void *vcpu);
  void (__cdecl *preempt)(void *vcpu);
  void (*suspend)(void);
  void (__cdecl *thread_destroy)(void *vcpu);
  void (__cdecl *task_destroy)(void *vm);
  void (__cdecl *volatile_state)(void *vcpu, int state);
  void (*memory_pressure)(void);
};

/* 1417 */
typedef struct $411DA7160D3ABA1289AB1E9C928F644D hv_callbacks_t;

/* 1418 */
enum thread_snapshot_wait_flags
{
  kThreadWaitNone = 0x0,
  kThreadWaitKernelMutex = 0x1,
  kThreadWaitPortReceive = 0x2,
  kThreadWaitPortSetReceive = 0x3,
  kThreadWaitPortSend = 0x4,
  kThreadWaitPortSendInTransit = 0x5,
  kThreadWaitSemaphore = 0x6,
  kThreadWaitKernelRWLockRead = 0x7,
  kThreadWaitKernelRWLockWrite = 0x8,
  kThreadWaitKernelRWLockUpgrade = 0x9,
  kThreadWaitUserLock = 0xA,
  kThreadWaitPThreadMutex = 0xB,
  kThreadWaitPThreadRWLockRead = 0xC,
  kThreadWaitPThreadRWLockWrite = 0xD,
  kThreadWaitPThreadCondVar = 0xE,
  kThreadWaitParkedWorkQueue = 0xF,
  kThreadWaitWorkloopSyncWait = 0x10,
};

/* 1419 */
typedef enum thread_snapshot_wait_flags block_hint_t;

/* 1420 */
typedef void *kcdata_descriptor_t;

/* 1421 */
struct ecc_event
{
  uint8_t id;
  uint8_t count;
  uint64_t data[8];
};

/* 1422 */
typedef uint32_t sfi_class_id_t;

/* 1424 */
enum $415B60182EE957FDAFC420BB1E53DA4E
{
  kBootDriverTypeInvalid = 0x0,
  kBootDriverTypeKEXT = 0x1,
  kBootDriverTypeMKEXT = 0x2,
};

/* 1425 */
enum $4DBD33C9EB8A4F427CE75A09A10EA18C
{
  kEfiReservedMemoryType = 0x0,
  kEfiLoaderCode = 0x1,
  kEfiLoaderData = 0x2,
  kEfiBootServicesCode = 0x3,
  kEfiBootServicesData = 0x4,
  kEfiRuntimeServicesCode = 0x5,
  kEfiRuntimeServicesData = 0x6,
  kEfiConventionalMemory = 0x7,
  kEfiUnusableMemory = 0x8,
  kEfiACPIReclaimMemory = 0x9,
  kEfiACPIMemoryNVS = 0xA,
  kEfiMemoryMappedIO = 0xB,
  kEfiMemoryMappedIOPortSpace = 0xC,
  kEfiPalCode = 0xD,
  kEfiMaxMemoryType = 0xE,
};

/* 1426 */
struct EfiMemoryRange
{
  uint32_t Type;
  uint32_t Pad;
  uint64_t PhysicalStart;
  uint64_t VirtualStart;
  uint64_t NumberOfPages;
  uint64_t Attribute;
};

/* 1427 */
struct Boot_VideoV1
{
  uint32_t v_baseAddr;
  uint32_t v_display;
  uint32_t v_rowBytes;
  uint32_t v_width;
  uint32_t v_height;
  uint32_t v_depth;
};

/* 1428 */
struct Boot_Video
{
  uint32_t v_display;
  uint32_t v_rowBytes;
  uint32_t v_width;
  uint32_t v_height;
  uint32_t v_depth;
  uint32_t v_resv[7];
  uint64_t v_baseAddr;
};

/* 1429 */
struct boot_icon_element
{
  unsigned int width;
  unsigned int height;
  int y_offset_from_center;
  unsigned int data_size;
  unsigned int __reserved1[4];
  unsigned __int8 data[];
};

/* 1430 */
struct boot_args
{
  uint16_t Revision;
  uint16_t Version;
  uint8_t efiMode;
  uint8_t debugMode;
  uint16_t flags;
  char CommandLine[1024];
  uint32_t MemoryMap;
  uint32_t MemoryMapSize;
  uint32_t MemoryMapDescriptorSize;
  uint32_t MemoryMapDescriptorVersion;
  Boot_VideoV1 VideoV1;
  uint32_t deviceTreeP;
  uint32_t deviceTreeLength;
  uint32_t kaddr;
  uint32_t ksize;
  uint32_t efiRuntimeServicesPageStart;
  uint32_t efiRuntimeServicesPageCount;
  uint64_t efiRuntimeServicesVirtualPageStart;
  uint32_t efiSystemTable;
  uint32_t kslide;
  uint32_t performanceDataStart;
  uint32_t performanceDataSize;
  uint32_t keyStoreDataStart;
  uint32_t keyStoreDataSize;
  uint64_t bootMemStart;
  uint64_t bootMemSize;
  uint64_t PhysicalMemorySize;
  uint64_t FSBFrequency;
  uint64_t pciConfigSpaceBaseAddress;
  uint32_t pciConfigSpaceStartBusNumber;
  uint32_t pciConfigSpaceEndBusNumber;
  uint32_t csrActiveConfig;
  uint32_t csrCapabilities;
  uint32_t boot_SMC_plimit;
  uint16_t bootProgressMeterStart;
  uint16_t bootProgressMeterEnd;
  Boot_Video Video;
  uint32_t apfsDataStart;
  uint32_t apfsDataSize;
  uint32_t __reserved4[710];
};

/* 1431 */
typedef void *cpu_id_t;

/* 1432 */
struct clock_frequency_info_t
{
  unsigned __int64 bus_clock_rate_hz;
  unsigned __int64 cpu_clock_rate_hz;
  unsigned __int64 dec_clock_rate_hz;
  unsigned __int64 bus_clock_rate_num;
  unsigned __int64 bus_clock_rate_den;
  unsigned __int64 bus_to_cpu_rate_num;
  unsigned __int64 bus_to_cpu_rate_den;
  unsigned __int64 bus_to_dec_rate_num;
  unsigned __int64 bus_to_dec_rate_den;
  unsigned __int64 timebase_frequency_hz;
  unsigned __int64 timebase_frequency_num;
  unsigned __int64 timebase_frequency_den;
  unsigned __int64 bus_frequency_hz;
  unsigned __int64 bus_frequency_min_hz;
  unsigned __int64 bus_frequency_max_hz;
  unsigned __int64 cpu_frequency_hz;
  unsigned __int64 cpu_frequency_min_hz;
  unsigned __int64 cpu_frequency_max_hz;
  unsigned __int64 prf_frequency_hz;
  unsigned __int64 prf_frequency_min_hz;
  unsigned __int64 prf_frequency_max_hz;
  unsigned __int64 mem_frequency_hz;
  unsigned __int64 mem_frequency_min_hz;
  unsigned __int64 mem_frequency_max_hz;
  unsigned __int64 fix_frequency_hz;
};

/* 1433 */
struct timebase_freq_t
{
  unsigned __int64 timebase_num;
  unsigned __int64 timebase_den;
};

/* 1434 */
typedef void (__cdecl *timebase_callback_func)(struct timebase_freq_t *timebase_freq);

/* 1435 */
enum $6B9B13037D7622530191F29F4626E20E
{
  kPEReadTOD = 0x0,
  kPEWriteTOD = 0x1,
};

/* 1436 */
enum $9DB88A3BA0E2F6A62A96109E13392F80
{
  kPEWaitForInput = 0x1,
  kPERawInput = 0x2,
};

/* 1437 */
enum $8795BCEAFBC0B710623123E788BBA786
{
  kDebugTypeNone = 0x0,
  kDebugTypeDisplay = 0x1,
  kDebugTypeSerial = 0x2,
};

/* 1438 */
enum $0DBAE2D442D4E2BCB2C31E36F75E6F3D
{
  kPEScaleFactorUnknown = 0x0,
  kPEScaleFactor1x = 0x1,
  kPEScaleFactor2x = 0x2,
};

/* 1440 */
struct PE_state
{
  boolean_t initialized;
  PE_Video video;
  void *deviceTreeHead;
  void *bootArgs;
};

/* 1441 */
typedef struct PE_state PE_state_t;

/* 1442 */
enum $E11084171653F460E7609B58D5D9968C
{
  kPEOptionKey = 0x3A,
  kPECommandKey = 0x37,
  kPEControlKey = 0x36,
  kPEShiftKey = 0x38,
};

/* 1443 */
typedef unsigned int spl_t;

/* 1444 */
typedef uint32_t ast_t;

/* 1445 */
struct ledger_info
{
  char li_name[32];
  int64_t li_id;
  int64_t li_entries;
};

/* 1446 */
struct ledger_template_info
{
  char lti_name[32];
  char lti_group[32];
  char lti_units[32];
};

/* 1447 */
struct ledger_entry_info
{
  int64_t lei_balance;
  int64_t lei_credit;
  int64_t lei_debit;
  uint64_t lei_limit;
  uint64_t lei_refill_period;
  uint64_t lei_last_refill;
};

/* 1448 */
struct ledger_limit_args
{
  char lla_name[32];
  uint64_t lla_limit;
  uint64_t lla_refill_period;
};

/* 1449 */
struct queue_entry
{
  struct queue_entry *next;
  struct queue_entry *prev;
};

/* 1450 */
typedef struct queue_entry *queue_t;

/* 1451 */
typedef struct queue_entry queue_head_t;

/* 1452 */
typedef struct queue_entry queue_chain_t;

/* 1453 */
typedef struct queue_entry *queue_entry_t;

/* 1454 */
typedef uint64_t bitmap_t;

/* 1455 */
struct bt_params
{
  double rate;
  uint64_t base_local_ts;
  uint64_t base_remote_ts;
};

/* 1456 */
struct $997FD2F584E67C3582D1892216E06E56
{
  uint32_t gpu_id;
  uint32_t gpu_max_domains;
};

/* 1457 */
typedef struct $997FD2F584E67C3582D1892216E06E56 gpu_descriptor;

/* 1458 */
typedef gpu_descriptor *gpu_descriptor_t;

/* 1459 */
typedef uint64_t (__cdecl *io_rate_update_callback_t)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

/* 1460 */
typedef uint64_t (__cdecl *gpu_set_fceiling_t)(uint32_t gpu_fceiling_ratio, uint64_t gpu_fceiling_param);

/* 2927 */
struct kev_d_vectors
{
  u_int32_t data_length;
  void *data_ptr;
};

/* 1461 */
struct kev_msg
{
  u_int32_t vendor_code;
  u_int32_t kev_class;
  u_int32_t kev_subclass;
  u_int32_t event_code;
  struct kev_d_vectors dv[5];
};

/* 1462 */
struct ifnet_demux_desc
{
  u_int32_t type;
  void *data;
  u_int32_t datalen;
};

/* 1463 */
enum $A87B8879F7E632EBABFC83E8B6AED79C
{
  IFNET_FAMILY_ANY = 0x0,
  IFNET_FAMILY_LOOPBACK = 0x1,
  IFNET_FAMILY_ETHERNET = 0x2,
  IFNET_FAMILY_SLIP = 0x3,
  IFNET_FAMILY_TUN = 0x4,
  IFNET_FAMILY_VLAN = 0x5,
  IFNET_FAMILY_PPP = 0x6,
  IFNET_FAMILY_PVC = 0x7,
  IFNET_FAMILY_DISC = 0x8,
  IFNET_FAMILY_MDECAP = 0x9,
  IFNET_FAMILY_GIF = 0xA,
  IFNET_FAMILY_FAITH = 0xB,
  IFNET_FAMILY_STF = 0xC,
  IFNET_FAMILY_FIREWIRE = 0xD,
  IFNET_FAMILY_BOND = 0xE,
  IFNET_FAMILY_CELLULAR = 0xF,
};

/* 1464 */
typedef u_int32_t ifnet_family_t;

/* 1465 */
enum $4A67F6CFF1C401D9C7377865D4CF683B
{
  BPF_MODE_DISABLED = 0x0,
  BPF_MODE_INPUT = 0x1,
  BPF_MODE_OUTPUT = 0x2,
  BPF_MODE_INPUT_OUTPUT = 0x3,
};

/* 1466 */
typedef u_int32_t bpf_tap_mode;

/* 1467 */
typedef u_int32_t protocol_family_t;

/* 1468 */
enum $C2E7105EF23BF80F76E3367511E84325
{
  IFNET_CSUM_IP = 0x1,
  IFNET_CSUM_TCP = 0x2,
  IFNET_CSUM_UDP = 0x4,
  IFNET_CSUM_FRAGMENT = 0x8,
  IFNET_IP_FRAGMENT = 0x10,
  IFNET_CSUM_TCPIPV6 = 0x20,
  IFNET_CSUM_UDPIPV6 = 0x40,
  IFNET_IPV6_FRAGMENT = 0x80,
  IFNET_VLAN_TAGGING = 0x10000,
  IFNET_VLAN_MTU = 0x20000,
  IFNET_MULTIPAGES = 0x100000,
  IFNET_TSO_IPV4 = 0x200000,
  IFNET_TSO_IPV6 = 0x400000,
  IFNET_TX_STATUS = 0x800000,
  IFNET_HW_TIMESTAMP = 0x1000000,
  IFNET_SW_TIMESTAMP = 0x2000000,
};

/* 1469 */
typedef u_int32_t ifnet_offload_t;

/* 1470 */
typedef errno_t (__cdecl *bpf_packet_func)(ifnet_t interface, mbuf_t data);

/* 1471 */
typedef errno_t (__cdecl *ifnet_output_func)(ifnet_t interface, mbuf_t data);

/* 1472 */
typedef errno_t (__cdecl *ifnet_ioctl_func)(ifnet_t interface, unsigned __int64 cmd, void *data);

/* 1473 */
typedef errno_t (__cdecl *ifnet_set_bpf_tap)(ifnet_t interface, bpf_tap_mode mode, bpf_packet_func callback);

/* 1474 */
typedef void (__cdecl *ifnet_detached_func)(ifnet_t interface);

/* 1475 */
typedef errno_t (__cdecl *ifnet_demux_func)(ifnet_t interface, mbuf_t packet, char *frame_header, protocol_family_t *protocol_family);

/* 1476 */
typedef void (__cdecl *ifnet_event_func)(ifnet_t interface, const struct kev_msg *msg);

/* 1477 */
typedef errno_t (__cdecl *ifnet_framer_func)(ifnet_t interface, mbuf_t *packet, const struct sockaddr *dest, const char *dest_linkaddr, const char *frame_type);

/* 1478 */
typedef errno_t (__cdecl *ifnet_add_proto_func)(ifnet_t interface, protocol_family_t protocol_family, const struct ifnet_demux_desc *demux_array, u_int32_t demux_count);

/* 1479 */
typedef errno_t (__cdecl *ifnet_del_proto_func)(ifnet_t interface, protocol_family_t protocol_family);

/* 1480 */
typedef errno_t (__cdecl *ifnet_check_multi)(ifnet_t interface, const struct sockaddr *mcast);

/* 1481 */
typedef errno_t (__cdecl *proto_media_input)(ifnet_t ifp, protocol_family_t protocol, mbuf_t packet, char *header);

/* 1482 */
typedef errno_t (__cdecl *proto_media_input_v2)(ifnet_t ifp, protocol_family_t protocol, mbuf_t packet);

/* 1483 */
typedef errno_t (__cdecl *proto_media_preout)(ifnet_t ifp, protocol_family_t protocol, mbuf_t *packet, const struct sockaddr *dest, void *route, char *frame_type, char *link_layer_dest);

/* 1484 */
typedef void (__cdecl *proto_media_event)(ifnet_t ifp, protocol_family_t protocol, const struct kev_msg *event);

/* 1485 */
typedef errno_t (__cdecl *proto_media_ioctl)(ifnet_t ifp, protocol_family_t protocol, unsigned __int64 command, void *argument);

/* 1486 */
typedef errno_t (__cdecl *proto_media_detached)(ifnet_t ifp, protocol_family_t protocol);

/* 1487 */
typedef errno_t (__cdecl *proto_media_resolve_multi)(ifnet_t ifp, const struct sockaddr *proto_addr, struct sockaddr_dl *out_ll, size_t ll_len);

/* 1581 */
struct sockaddr_dl
{
  u_char sdl_len;
  u_char sdl_family;
  u_short sdl_index;
  u_char sdl_type;
  u_char sdl_nlen;
  u_char sdl_alen;
  u_char sdl_slen;
  char sdl_data[12];
};

/* 1488 */
typedef errno_t (__cdecl *proto_media_send_arp)(ifnet_t ifp, u_short arpop, const struct sockaddr_dl *sender_hw, const struct sockaddr *sender_proto, const struct sockaddr_dl *target_hw, const struct sockaddr *target_proto);

/* 1489 */
struct ifnet_stat_increment_param
{
  u_int32_t packets_in;
  u_int32_t bytes_in;
  u_int32_t errors_in;
  u_int32_t packets_out;
  u_int32_t bytes_out;
  u_int32_t errors_out;
  u_int32_t collisions;
  u_int32_t dropped;
};

/* 1490 */
struct ifnet_init_params
{
  const void *uniqueid;
  u_int32_t uniqueid_len;
  const char *name;
  u_int32_t unit;
  ifnet_family_t family;
  u_int32_t type;
  ifnet_output_func output;
  ifnet_demux_func demux;
  ifnet_add_proto_func add_proto;
  ifnet_del_proto_func del_proto;
  ifnet_check_multi check_multi;
  ifnet_framer_func framer;
  void *softc;
  ifnet_ioctl_func ioctl;
  ifnet_set_bpf_tap set_bpf_tap;
  ifnet_detached_func detach;
  ifnet_event_func event;
  const void *broadcast_addr;
  u_int32_t broadcast_len;
};

/* 1491 */
struct ifnet_stats_param
{
  u_int64_t packets_in;
  u_int64_t bytes_in;
  u_int64_t multicasts_in;
  u_int64_t errors_in;
  u_int64_t packets_out;
  u_int64_t bytes_out;
  u_int64_t multicasts_out;
  u_int64_t errors_out;
  u_int64_t collisions;
  u_int64_t dropped;
  u_int64_t no_protocol;
};

/* 1492 */
struct ifnet_attach_proto_param
{
  struct ifnet_demux_desc *demux_array;
  u_int32_t demux_count;
  proto_media_input input;
  proto_media_preout pre_output;
  proto_media_event event;
  proto_media_ioctl ioctl;
  proto_media_detached detached;
  proto_media_resolve_multi resolve;
  proto_media_send_arp send_arp;
};

/* 1493 */
struct ifnet_attach_proto_param_v2
{
  struct ifnet_demux_desc *demux_array;
  u_int32_t demux_count;
  proto_media_input_v2 input;
  proto_media_preout pre_output;
  proto_media_event event;
  proto_media_ioctl ioctl;
  proto_media_detached detached;
  proto_media_resolve_multi resolve;
  proto_media_send_arp send_arp;
};

/* 1494 */
enum $F8EFA6CD3BD3D1918CF57C9565FEC6E2
{
  IFNET_WAKE_ON_MAGIC_PACKET = 0x1,
};

/* 1495 */
enum $911FC6B71CAC49F8DB4B0B0CACD0B23C
{
  BPF_TAP_DISABLE = 0x0,
  BPF_TAP_INPUT = 0x1,
  BPF_TAP_OUTPUT = 0x2,
  BPF_TAP_INPUT_OUTPUT = 0x3,
};

/* 1496 */
union ndrv_demux_desc::$B9C38354F72D6507EDF16B7080F23863
{
  u_int16_t ether_type;
  u_int8_t sap[3];
  u_int8_t snap[5];
  u_int8_t other[28];
};

/* 1497 */
struct ndrv_demux_desc
{
  u_int16_t type;
  u_int16_t length;
  union ndrv_demux_desc::$B9C38354F72D6507EDF16B7080F23863 data;
};

/* 1498 */
struct ndrv_protocol_desc
{
  u_int32_t version;
  u_int32_t protocol_family;
  u_int32_t demux_count;
  struct ndrv_demux_desc *demux_list;
};

/* 1499 */
struct utun_stats_param
{
  u_int64_t utsp_packets;
  u_int64_t utsp_bytes;
  u_int64_t utsp_errors;
};

/* 1500 */
struct net_event_data
{
  u_int32_t if_family;
  u_int32_t if_unit;
  char if_name[16];
};

/* 1501 */
struct timeval32
{
  __int32_t tv_sec;
  __int32_t tv_usec;
};

/* 1502 */
struct if_data
{
  u_char ifi_type;
  u_char ifi_typelen;
  u_char ifi_physical;
  u_char ifi_addrlen;
  u_char ifi_hdrlen;
  u_char ifi_recvquota;
  u_char ifi_xmitquota;
  u_char ifi_unused1;
  u_int32_t ifi_mtu;
  u_int32_t ifi_metric;
  u_int32_t ifi_baudrate;
  u_int32_t ifi_ipackets;
  u_int32_t ifi_ierrors;
  u_int32_t ifi_opackets;
  u_int32_t ifi_oerrors;
  u_int32_t ifi_collisions;
  u_int32_t ifi_ibytes;
  u_int32_t ifi_obytes;
  u_int32_t ifi_imcasts;
  u_int32_t ifi_omcasts;
  u_int32_t ifi_iqdrops;
  u_int32_t ifi_noproto;
  u_int32_t ifi_recvtiming;
  u_int32_t ifi_xmittiming;
  struct timeval32 ifi_lastchange;
  u_int32_t ifi_unused2;
  u_int32_t ifi_hwassist;
  u_int32_t ifi_reserved1;
  u_int32_t ifi_reserved2;
};

/* 1503 */
struct if_data64
{
  u_char ifi_type;
  u_char ifi_typelen;
  u_char ifi_physical;
  u_char ifi_addrlen;
  u_char ifi_hdrlen;
  u_char ifi_recvquota;
  u_char ifi_xmitquota;
  u_char ifi_unused1;
  u_int32_t ifi_mtu;
  u_int32_t ifi_metric;
  u_int64_t ifi_baudrate;
  u_int64_t ifi_ipackets;
  u_int64_t ifi_ierrors;
  u_int64_t ifi_opackets;
  u_int64_t ifi_oerrors;
  u_int64_t ifi_collisions;
  u_int64_t ifi_ibytes;
  u_int64_t ifi_obytes;
  u_int64_t ifi_imcasts;
  u_int64_t ifi_omcasts;
  u_int64_t ifi_iqdrops;
  u_int64_t ifi_noproto;
  u_int32_t ifi_recvtiming;
  u_int32_t ifi_xmittiming;
  struct timeval32 ifi_lastchange;
};

/* 1504 */
struct bpf_program
{
  u_int bf_len;
  struct bpf_insn *bf_insns;
};

/* 1508 */
struct bpf_insn
{
  u_short code;
  u_char jt;
  u_char jf;
  bpf_u_int32 k;
};

/* 1505 */
struct bpf_stat
{
  u_int bs_recv;
  u_int bs_drop;
};

/* 1506 */
struct bpf_version
{
  u_short bv_major;
  u_short bv_minor;
};

/* 1507 */
struct bpf_hdr
{
  struct timeval32 bh_tstamp;
  bpf_u_int32 bh_caplen;
  bpf_u_int32 bh_datalen;
  u_short bh_hdrlen;
};

/* 1509 */
union bpf_dltlist::$921EB30A32D3E7AEAD09BFF10976C50D
{
  u_int32_t *bflu_list;
  u_int64_t bflu_pad;
};

/* 1510 */
struct bpf_dltlist
{
  u_int32_t bfl_len;
  union bpf_dltlist::$921EB30A32D3E7AEAD09BFF10976C50D bfl_u;
};

/* 1511 */
typedef errno_t (__cdecl *bpf_send_func)(ifnet_t interface, u_int32_t data_link_type, mbuf_t packet);

/* 1512 */
typedef errno_t (__cdecl *bpf_tap_func)(ifnet_t interface, u_int32_t data_link_type, bpf_tap_mode direction);

/* 1513 */
typedef __uint32_t sae_associd_t;

/* 1514 */
typedef __uint32_t sae_connid_t;

/* 1515 */
struct sa_endpoints
{
  unsigned int sae_srcif;
  const struct sockaddr *sae_srcaddr;
  socklen_t sae_srcaddrlen;
  const struct sockaddr *sae_dstaddr;
  socklen_t sae_dstaddrlen;
};

/* 1516 */
typedef struct sa_endpoints sa_endpoints_t;

/* 1517 */
struct so_np_extensions
{
  u_int32_t npx_flags;
  u_int32_t npx_mask;
};

/* 1518 */
struct sockproto
{
  __uint16_t sp_family;
  __uint16_t sp_protocol;
};

/* 1519 */
struct sockaddr_storage
{
  __uint8_t ss_len;
  sa_family_t ss_family;
  char __ss_pad1[6];
  __int64_t __ss_align;
  char __ss_pad2[112];
};

/* 1520 */
struct msghdr
{
  void *msg_name;
  socklen_t msg_namelen;
  struct iovec *msg_iov;
  int msg_iovlen;
  void *msg_control;
  socklen_t msg_controllen;
  int msg_flags;
};

/* 1521 */
struct sf_hdtr
{
  struct iovec *headers;
  int hdr_cnt;
  struct iovec *trailers;
  int trl_cnt;
};

/* 1522 */
struct user_sf_hdtr
{
  user_addr_t headers;
  int hdr_cnt;
  user_addr_t trailers;
  int trl_cnt;
};

/* 1523 */
struct user64_sf_hdtr
{
  user64_addr_t headers;
  int hdr_cnt;
  user64_addr_t trailers;
  int trl_cnt;
};

/* 1524 */
struct user32_sf_hdtr
{
  user32_addr_t headers;
  int hdr_cnt;
  user32_addr_t trailers;
  int trl_cnt;
};

/* 1525 */
typedef void (__cdecl *sock_upcall)(socket_t so, void *cookie, int waitf);

/* 1526 */
struct rt_metrics
{
  u_int32_t rmx_locks;
  u_int32_t rmx_mtu;
  u_int32_t rmx_hopcount;
  int32_t rmx_expire;
  u_int32_t rmx_recvpipe;
  u_int32_t rmx_sendpipe;
  u_int32_t rmx_ssthresh;
  u_int32_t rmx_rtt;
  u_int32_t rmx_rttvar;
  u_int32_t rmx_pksent;
  u_int32_t rmx_state;
  u_int32_t rmx_filler[3];
};

/* 1527 */
struct rtstat
{
  __int16 rts_badredirect;
  __int16 rts_dynamic;
  __int16 rts_newgateway;
  __int16 rts_unreach;
  __int16 rts_wildcard;
  __int16 rts_badrtgwroute;
};

/* 1528 */
struct rt_msghdr
{
  u_short rtm_msglen;
  u_char rtm_version;
  u_char rtm_type;
  u_short rtm_index;
  int rtm_flags;
  int rtm_addrs;
  pid_t rtm_pid;
  int rtm_seq;
  int rtm_errno;
  int rtm_use;
  u_int32_t rtm_inits;
  struct rt_metrics rtm_rmx;
};

/* 1529 */
struct rt_msghdr2
{
  u_short rtm_msglen;
  u_char rtm_version;
  u_char rtm_type;
  u_short rtm_index;
  int rtm_flags;
  int rtm_addrs;
  int32_t rtm_refcnt;
  int rtm_parentflags;
  int rtm_reserved;
  int rtm_use;
  u_int32_t rtm_inits;
  struct rt_metrics rtm_rmx;
};

/* 1530 */
struct rt_addrinfo
{
  int rti_addrs;
  struct sockaddr *rti_info[8];
};

/* 1531 */
struct llc::$94E6F396B893250B39DDB37819AF0163::$9A4542AD756A89C433F54A500B318AD3
{
  u_int8_t control;
  u_int8_t format_id;
  u_int8_t class_id;
  u_int8_t window_x2;
};

/* 1532 */
struct llc::$94E6F396B893250B39DDB37819AF0163::$EDC91D7D377E15424C7FBEDFD794DD92
{
  u_int8_t num_snd_x2;
  u_int8_t num_rcv_x2;
};

/* 1533 */
struct llc::$94E6F396B893250B39DDB37819AF0163::$F4FA57698B1CA5BC7464CBB9018CDD9B
{
  u_int8_t control;
  u_int8_t num_rcv_x2;
};

/* 1534 */
struct llc::$94E6F396B893250B39DDB37819AF0163::$4790353B838E9BEF75B9761209E42DA6
{
  u_int8_t control;
  u_int8_t frmr_rej_pdu0;
  u_int8_t frmr_rej_pdu1;
  u_int8_t frmr_control;
  u_int8_t frmr_control_ext;
  u_int8_t frmr_cause;
};

/* 1535 */
struct llc::$94E6F396B893250B39DDB37819AF0163::$2225F7AD24480FCB2A1E36C4AB2A1F26
{
  u_int8_t control;
  u_int8_t org_code[3];
  u_int16_t ether_type;
};

/* 1536 */
struct llc::$94E6F396B893250B39DDB37819AF0163::$C51F63876A57325401803D6F6A2BEB52
{
  u_int8_t control;
  u_int8_t control_ext;
};

/* 1537 */
union llc::$94E6F396B893250B39DDB37819AF0163
{
  struct llc::$94E6F396B893250B39DDB37819AF0163::$9A4542AD756A89C433F54A500B318AD3 type_u;
  struct llc::$94E6F396B893250B39DDB37819AF0163::$EDC91D7D377E15424C7FBEDFD794DD92 type_i;
  struct llc::$94E6F396B893250B39DDB37819AF0163::$F4FA57698B1CA5BC7464CBB9018CDD9B type_s;
  struct llc::$94E6F396B893250B39DDB37819AF0163::$4790353B838E9BEF75B9761209E42DA6 type_frmr;
  struct llc::$94E6F396B893250B39DDB37819AF0163::$2225F7AD24480FCB2A1E36C4AB2A1F26 type_snap;
  struct llc::$94E6F396B893250B39DDB37819AF0163::$C51F63876A57325401803D6F6A2BEB52 type_raw;
};

/* 1538 */
struct llc
{
  u_int8_t llc_dsap;
  u_int8_t llc_ssap;
  union llc::$94E6F396B893250B39DDB37819AF0163 llc_un;
};

/* 1539 */
struct frmrinfo
{
  u_int8_t frmr_rej_pdu0;
  u_int8_t frmr_rej_pdu1;
  u_int8_t frmr_control;
  u_int8_t frmr_control_ext;
  u_int8_t frmr_cause;
};

/* 1540 */
typedef errno_t (__cdecl *proto_plumb_handler)(ifnet_t ifp, protocol_family_t protocol);

/* 1541 */
typedef void (__cdecl *proto_unplumb_handler)(ifnet_t ifp, protocol_family_t protocol);

/* 1542 */
struct if_clonereq
{
  int ifcr_total;
  int ifcr_count;
  char *ifcr_buffer;
};

/* 1543 */
struct if_msghdr
{
  unsigned __int16 ifm_msglen;
  unsigned __int8 ifm_version;
  unsigned __int8 ifm_type;
  int ifm_addrs;
  int ifm_flags;
  unsigned __int16 ifm_index;
  struct if_data ifm_data;
};

/* 1544 */
struct if_msghdr2
{
  u_short ifm_msglen;
  u_char ifm_version;
  u_char ifm_type;
  int ifm_addrs;
  int ifm_flags;
  u_short ifm_index;
  int ifm_snd_len;
  int ifm_snd_maxlen;
  int ifm_snd_drops;
  int ifm_timer;
  struct if_data64 ifm_data;
};

/* 1545 */
struct ifma_msghdr2
{
  u_short ifmam_msglen;
  u_char ifmam_version;
  u_char ifmam_type;
  int ifmam_addrs;
  int ifmam_flags;
  u_short ifmam_index;
  int32_t ifmam_refcount;
};

/* 1546 */
union ifkpi::$21656CF95053BC5741FA5E847069CF5D
{
  void *ifk_ptr;
  int ifk_value;
  u_int64_t ifk_ptr64;
};

/* 1547 */
struct ifkpi
{
  unsigned int ifk_module_id;
  unsigned int ifk_type;
  union ifkpi::$21656CF95053BC5741FA5E847069CF5D ifk_data;
};

/* 4058 */
struct ifdevmtu
{
  int ifdm_current;
  int ifdm_min;
  int ifdm_max;
};

/* 1548 */
union ifreq::$A4494EC664E7EE90ECDE94148F48672E
{
  struct sockaddr ifru_addr;
  struct sockaddr ifru_dstaddr;
  struct sockaddr ifru_broadaddr;
  __int16 ifru_flags;
  int ifru_metric;
  int ifru_mtu;
  int ifru_phys;
  int ifru_media;
  int ifru_intval;
  caddr_t ifru_data;
  struct ifdevmtu ifru_devmtu;
  struct ifkpi ifru_kpi;
  u_int32_t ifru_wake_flags;
  u_int32_t ifru_route_refcnt;
  int ifru_cap[2];
  u_int32_t ifru_functional_type;
};

/* 1549 */
struct ifreq
{
  char ifr_name[16];
  union ifreq::$A4494EC664E7EE90ECDE94148F48672E ifr_ifru;
};

/* 1550 */
struct ifaliasreq
{
  char ifra_name[16];
  struct sockaddr ifra_addr;
  struct sockaddr ifra_broadaddr;
  struct sockaddr ifra_mask;
};

/* 1551 */
struct rslvmulti_req
{
  struct sockaddr *sa;
  struct sockaddr **llsa;
};

/* 1552 */
struct ifdrv
{
  char ifd_name[16];
  unsigned __int64 ifd_cmd;
  size_t ifd_len;
  void *ifd_data;
};

/* 1553 */
struct kev_dl_proto_data
{
  struct net_event_data link_data;
  u_int32_t proto_family;
  u_int32_t proto_remaining_count;
};

/* 1554 */
struct sadb_msg
{
  u_int8_t sadb_msg_version;
  u_int8_t sadb_msg_type;
  u_int8_t sadb_msg_errno;
  u_int8_t sadb_msg_satype;
  u_int16_t sadb_msg_len;
  u_int16_t sadb_msg_reserved;
  u_int32_t sadb_msg_seq;
  u_int32_t sadb_msg_pid;
};

/* 1555 */
struct sadb_ext
{
  u_int16_t sadb_ext_len;
  u_int16_t sadb_ext_type;
};

/* 1556 */
struct sadb_sa
{
  u_int16_t sadb_sa_len;
  u_int16_t sadb_sa_exttype;
  u_int32_t sadb_sa_spi;
  u_int8_t sadb_sa_replay;
  u_int8_t sadb_sa_state;
  u_int8_t sadb_sa_auth;
  u_int8_t sadb_sa_encrypt;
  u_int32_t sadb_sa_flags;
};

/* 1557 */
struct sadb_lifetime
{
  u_int16_t sadb_lifetime_len;
  u_int16_t sadb_lifetime_exttype;
  u_int32_t sadb_lifetime_allocations;
  u_int64_t sadb_lifetime_bytes;
  u_int64_t sadb_lifetime_addtime;
  u_int64_t sadb_lifetime_usetime;
};

/* 1558 */
struct sadb_address
{
  u_int16_t sadb_address_len;
  u_int16_t sadb_address_exttype;
  u_int8_t sadb_address_proto;
  u_int8_t sadb_address_prefixlen;
  u_int16_t sadb_address_reserved;
};

/* 1559 */
struct sadb_key
{
  u_int16_t sadb_key_len;
  u_int16_t sadb_key_exttype;
  u_int16_t sadb_key_bits;
  u_int16_t sadb_key_reserved;
};

/* 1560 */
struct sadb_ident
{
  u_int16_t sadb_ident_len;
  u_int16_t sadb_ident_exttype;
  u_int16_t sadb_ident_type;
  u_int16_t sadb_ident_reserved;
  u_int64_t sadb_ident_id;
};

/* 1561 */
struct sadb_sens
{
  u_int16_t sadb_sens_len;
  u_int16_t sadb_sens_exttype;
  u_int32_t sadb_sens_dpd;
  u_int8_t sadb_sens_sens_level;
  u_int8_t sadb_sens_sens_len;
  u_int8_t sadb_sens_integ_level;
  u_int8_t sadb_sens_integ_len;
  u_int32_t sadb_sens_reserved;
};

/* 1562 */
struct sadb_prop
{
  u_int16_t sadb_prop_len;
  u_int16_t sadb_prop_exttype;
  u_int8_t sadb_prop_replay;
  u_int8_t sadb_prop_reserved[3];
};

/* 1563 */
struct sadb_comb
{
  u_int8_t sadb_comb_auth;
  u_int8_t sadb_comb_encrypt;
  u_int16_t sadb_comb_flags;
  u_int16_t sadb_comb_auth_minbits;
  u_int16_t sadb_comb_auth_maxbits;
  u_int16_t sadb_comb_encrypt_minbits;
  u_int16_t sadb_comb_encrypt_maxbits;
  u_int32_t sadb_comb_reserved;
  u_int32_t sadb_comb_soft_allocations;
  u_int32_t sadb_comb_hard_allocations;
  u_int64_t sadb_comb_soft_bytes;
  u_int64_t sadb_comb_hard_bytes;
  u_int64_t sadb_comb_soft_addtime;
  u_int64_t sadb_comb_hard_addtime;
  u_int64_t sadb_comb_soft_usetime;
  u_int64_t sadb_comb_hard_usetime;
};

/* 1564 */
struct sadb_supported
{
  u_int16_t sadb_supported_len;
  u_int16_t sadb_supported_exttype;
  u_int32_t sadb_supported_reserved;
};

/* 1565 */
struct sadb_alg
{
  u_int8_t sadb_alg_id;
  u_int8_t sadb_alg_ivlen;
  u_int16_t sadb_alg_minbits;
  u_int16_t sadb_alg_maxbits;
  u_int16_t sadb_alg_reserved;
};

/* 1566 */
struct sadb_spirange
{
  u_int16_t sadb_spirange_len;
  u_int16_t sadb_spirange_exttype;
  u_int32_t sadb_spirange_min;
  u_int32_t sadb_spirange_max;
  u_int32_t sadb_spirange_reserved;
};

/* 1567 */
struct sadb_x_kmprivate
{
  u_int16_t sadb_x_kmprivate_len;
  u_int16_t sadb_x_kmprivate_exttype;
  u_int32_t sadb_x_kmprivate_reserved;
};

/* 1568 */
union sadb_x_sa2::$3311561BD19DCDD0FF9008967ED08212
{
  u_int8_t sadb_x_sa2_reserved1;
};

/* 1569 */
union sadb_x_sa2::$1EDA9B379C73130654B424AA0D49CFAD
{
  u_int16_t sadb_x_sa2_reserved2;
};

/* 1570 */
struct sadb_x_sa2
{
  u_int16_t sadb_x_sa2_len;
  u_int16_t sadb_x_sa2_exttype;
  u_int8_t sadb_x_sa2_mode;
  union
  {
    u_int8_t sadb_x_sa2_reserved1;
  };
  union
  {
    u_int16_t sadb_x_sa2_reserved2;
  };
  u_int32_t sadb_x_sa2_sequence;
  u_int32_t sadb_x_sa2_reqid;
};

/* 1571 */
struct sadb_x_policy
{
  u_int16_t sadb_x_policy_len;
  u_int16_t sadb_x_policy_exttype;
  u_int16_t sadb_x_policy_type;
  u_int8_t sadb_x_policy_dir;
  u_int8_t sadb_x_policy_reserved;
  u_int32_t sadb_x_policy_id;
  u_int32_t sadb_x_policy_reserved2;
};

/* 1572 */
struct sadb_x_ipsecrequest
{
  u_int16_t sadb_x_ipsecrequest_len;
  u_int16_t sadb_x_ipsecrequest_proto;
  u_int8_t sadb_x_ipsecrequest_mode;
  u_int8_t sadb_x_ipsecrequest_level;
  u_int16_t sadb_x_ipsecrequest_reqid;
};

/* 1573 */
struct sadb_session_id
{
  u_int16_t sadb_session_id_len;
  u_int16_t sadb_session_id_exttype;
  u_int64_t sadb_session_id_v[2];
};

/* 1574 */
struct sastat
{
  u_int32_t spi;
  u_int32_t created;
  struct sadb_lifetime lft_c;
};

/* 1575 */
struct sadb_sastat
{
  u_int16_t sadb_sastat_len;
  u_int16_t sadb_sastat_exttype;
  u_int32_t sadb_sastat_dir;
  u_int32_t sadb_sastat_reserved;
  u_int32_t sadb_sastat_list_len;
};

/* 1576 */
struct ifmibdata
{
  char ifmd_name[16];
  unsigned int ifmd_pcount;
  unsigned int ifmd_flags;
  unsigned int ifmd_snd_len;
  unsigned int ifmd_snd_maxlen;
  unsigned int ifmd_snd_drops;
  unsigned int ifmd_filler[4];
  struct if_data64 ifmd_data;
};

/* 1577 */
struct ifs_iso_8802_3
{
  u_int32_t dot3StatsAlignmentErrors;
  u_int32_t dot3StatsFCSErrors;
  u_int32_t dot3StatsSingleCollisionFrames;
  u_int32_t dot3StatsMultipleCollisionFrames;
  u_int32_t dot3StatsSQETestErrors;
  u_int32_t dot3StatsDeferredTransmissions;
  u_int32_t dot3StatsLateCollisions;
  u_int32_t dot3StatsExcessiveCollisions;
  u_int32_t dot3StatsInternalMacTransmitErrors;
  u_int32_t dot3StatsCarrierSenseErrors;
  u_int32_t dot3StatsFrameTooLongs;
  u_int32_t dot3StatsInternalMacReceiveErrors;
  u_int32_t dot3StatsEtherChipSet;
  u_int32_t dot3StatsMissedFrames;
  u_int32_t dot3StatsCollFrequencies[16];
  u_int32_t dot3Compliance;
};

/* 1578 */
struct if_family_id
{
  u_int32_t iffmid_len;
  u_int32_t iffmid_id;
  char iffmid_str[1];
};

/* 1579 */
struct ether_header
{
  u_char ether_dhost[6];
  u_char ether_shost[6];
  u_short ether_type;
};

/* 1580 */
struct ether_addr
{
  u_char octet[6];
};

/* 1582 */
struct ip_opts
{
  struct in_addr ip_dst;
  char ip_opts[40];
};

/* 1583 */
struct ip_mreq
{
  struct in_addr imr_multiaddr;
  struct in_addr imr_interface;
};

/* 1584 */
struct ip_mreqn
{
  struct in_addr imr_multiaddr;
  struct in_addr imr_address;
  int imr_ifindex;
};

/* 1585 */
struct ip_mreq_source
{
  struct in_addr imr_multiaddr;
  struct in_addr imr_sourceaddr;
  struct in_addr imr_interface;
};

/* 1586 */
struct group_req
{
  uint32_t gr_interface;
  struct sockaddr_storage gr_group;
};

/* 1587 */
struct group_source_req
{
  uint32_t gsr_interface;
  struct sockaddr_storage gsr_group;
  struct sockaddr_storage gsr_source;
};

/* 1588 */
struct __msfilterreq
{
  uint32_t msfr_ifindex;
  uint32_t msfr_fmode;
  uint32_t msfr_nsrcs;
  uint32_t __msfr_align;
  struct sockaddr_storage msfr_group;
  struct sockaddr_storage *msfr_srcs;
};

/* 1589 */
struct in_pktinfo
{
  unsigned int ipi_ifindex;
  struct in_addr ipi_spec_dst;
  struct in_addr ipi_addr;
};

/* 1591 */
struct sockaddr_in6
{
  __uint8_t sin6_len;
  sa_family_t sin6_family;
  in_port_t sin6_port;
  __uint32_t sin6_flowinfo;
  struct in6_addr sin6_addr;
  __uint32_t sin6_scope_id;
};

/* 1592 */
struct ipv6_mreq
{
  struct in6_addr ipv6mr_multiaddr;
  unsigned int ipv6mr_interface;
};

/* 1593 */
struct in6_pktinfo
{
  struct in6_addr ipi6_addr;
  unsigned int ipi6_ifindex;
};

/* 1594 */
struct ip6_mtuinfo
{
  struct sockaddr_in6 ip6m_addr;
  uint32_t ip6m_mtu;
};

/* 1595 */
struct arphdr
{
  u_short ar_hrd;
  u_short ar_pro;
  u_char ar_hln;
  u_char ar_pln;
  u_short ar_op;
};

/* 1596 */
struct arpreq
{
  struct sockaddr arp_pa;
  struct sockaddr arp_ha;
  int arp_flags;
};

/* 1597 */
struct arpstat
{
  uint32_t txrequests;
  uint32_t txreplies;
  uint32_t txannounces;
  uint32_t rxrequests;
  uint32_t rxreplies;
  uint32_t received;
  uint32_t txconflicts;
  uint32_t invalidreqs;
  uint32_t reqnobufs;
  uint32_t dropped;
  uint32_t purged;
  uint32_t timeouts;
  uint32_t dupips;
  uint32_t inuse;
  uint32_t txurequests;
  uint32_t held;
};

/* 1598 */
typedef errno_t (__cdecl *iff_input_func)(void *cookie, ifnet_t interface, protocol_family_t protocol, mbuf_t *data, char **frame_ptr);

/* 1599 */
typedef errno_t (__cdecl *iff_output_func)(void *cookie, ifnet_t interface, protocol_family_t protocol, mbuf_t *data);

/* 1600 */
typedef void (__cdecl *iff_event_func)(void *cookie, ifnet_t interface, protocol_family_t protocol, const struct kev_msg *event_msg);

/* 1601 */
typedef errno_t (__cdecl *iff_ioctl_func)(void *cookie, ifnet_t interface, protocol_family_t protocol, unsigned __int64 ioctl_cmd, void *ioctl_arg);

/* 1602 */
typedef void (__cdecl *iff_detached_func)(void *cookie, ifnet_t interface);

/* 1603 */
struct iff_filter
{
  void *iff_cookie;
  const char *iff_name;
  protocol_family_t iff_protocol;
  iff_input_func iff_input;
  iff_output_func iff_output;
  iff_event_func iff_event;
  iff_ioctl_func iff_ioctl;
  iff_detached_func iff_detached;
};

/* 1604 */
typedef void (*net_init_func_ptr)(void);

/* 1605 */
struct so_nke
{
  unsigned int nke_handle;
  unsigned int nke_where;
  int nke_flags;
  u_int32_t reserved[4];
};

/* 1606 */
struct auditpipe_ioctl_preselect
{
  au_id_t aip_auid;
  au_mask_t aip_mask;
};

/* 1607 */
struct pfkeystat
{
  u_quad_t out_total;
  u_quad_t out_bytes;
  u_quad_t out_msgtype[256];
  u_quad_t out_invlen;
  u_quad_t out_invver;
  u_quad_t out_invmsgtype;
  u_quad_t out_tooshort;
  u_quad_t out_nomem;
  u_quad_t out_dupext;
  u_quad_t out_invexttype;
  u_quad_t out_invsatype;
  u_quad_t out_invaddr;
  u_quad_t in_total;
  u_quad_t in_bytes;
  u_quad_t in_msgtype[256];
  u_quad_t in_msgtarget[3];
  u_quad_t in_nomem;
  u_quad_t sockerr;
};

/* 1608 */
typedef uint32_t bank_action_t;

/* 1609 */
struct proc_persona_info
{
  uint64_t unique_pid;
  int32_t pid;
  uint32_t flags;
  uint32_t pidversion;
  uint32_t persona_id;
  uint32_t uid;
  uint32_t gid;
  uint8_t macho_uuid[16];
};

/* 1610 */
struct persona_token
{
  struct proc_persona_info originator;
  struct proc_persona_info proximate;
};

/* 1611 */
typedef uint32_t atm_action_t;

/* 1612 */
typedef uint64_t atm_guard_t;

/* 1613 */
typedef uint64_t aid_t;

/* 1614 */
typedef uint64_t subaid_t;

/* 1615 */
typedef uint64_t mailbox_offset_t;

/* 1616 */
typedef uint64_t atm_aid_t;

/* 1617 */
typedef uint32_t atm_subaid32_t;

/* 1618 */
typedef uint64_t mach_atm_subaid_t;

/* 1619 */
typedef uint64_t atm_mailbox_offset_t;

/* 1620 */
typedef mach_port_t atm_memory_descriptor_t;

/* 1621 */
typedef atm_memory_descriptor_t *atm_memory_descriptor_array_t;

/* 1622 */
typedef uint64_t *atm_memory_size_array_t;

/* 1623 */
enum $0DCA73C1721E7038D7EC215733FC02D3
{
  eax = 0x0,
  ebx = 0x1,
  ecx = 0x2,
  edx = 0x3,
};

/* 1624 */
typedef enum $0DCA73C1721E7038D7EC215733FC02D3 cpuid_register_t;

/* 1625 */
enum $78010321D241357CCE75F1A992E34CE6
{
  Lnone = 0x0,
  L1I = 0x1,
  L1D = 0x2,
  L2U = 0x3,
  L3U = 0x4,
  LCACHE_MAX = 0x5,
};

/* 1626 */
typedef enum $78010321D241357CCE75F1A992E34CE6 cache_type_t;

/* 1627 */
struct $0A57BAAD1A46E7E38CD779FF4095332C
{
  unsigned __int8 value;
  cache_type_t type;
  unsigned int size;
  unsigned int linesize;
  const char *description;
};

/* 1628 */
typedef struct $0A57BAAD1A46E7E38CD779FF4095332C cpuid_cache_desc_t;

/* 1629 */
struct $9D4379A91DDF2C6BA87386AF9716AFE9
{
  uint32_t linesize_min;
  uint32_t linesize_max;
  uint32_t extensions;
  uint32_t sub_Cstates;
};

/* 1630 */
typedef struct $9D4379A91DDF2C6BA87386AF9716AFE9 cpuid_mwait_leaf_t;

/* 1631 */
struct $22429A1B223DA43BF2C8B2FC23274239
{
  boolean_t sensor;
  boolean_t dynamic_acceleration;
  boolean_t invariant_APIC_timer;
  boolean_t core_power_limits;
  boolean_t fine_grain_clock_mod;
  boolean_t package_thermal_intr;
  uint32_t thresholds;
  boolean_t ACNT_MCNT;
  boolean_t hardware_feedback;
  boolean_t energy_policy;
};

/* 1632 */
typedef struct $22429A1B223DA43BF2C8B2FC23274239 cpuid_thermal_leaf_t;

/* 1633 */
struct $459325A5DA539C531BD3D0DC7A588322
{
  uint32_t extended_state[4];
};

/* 1634 */
typedef struct $459325A5DA539C531BD3D0DC7A588322 cpuid_xsave_leaf_t;

/* 1635 */
struct $929A6EF9849010693B63C1395EED86E7
{
  uint8_t version;
  uint8_t number;
  uint8_t width;
  uint8_t events_number;
  uint32_t events;
  uint8_t fixed_number;
  uint8_t fixed_width;
};

/* 1636 */
typedef struct $929A6EF9849010693B63C1395EED86E7 cpuid_arch_perf_leaf_t;

/* 1637 */
struct $4D6C6F2F5095FB2DF2D93B9C85BA02D0
{
  uint32_t numerator;
  uint32_t denominator;
};

/* 1638 */
typedef struct $4D6C6F2F5095FB2DF2D93B9C85BA02D0 cpuid_tsc_leaf_t;

/* 1639 */
struct $D552FF40DE1A990918CBA79BA5065E81
{
  char cpuid_vendor[16];
  char cpuid_brand_string[48];
  const char *cpuid_model_string;
  cpu_type_t cpuid_type;
  uint8_t cpuid_family;
  uint8_t cpuid_model;
  uint8_t cpuid_extmodel;
  uint8_t cpuid_extfamily;
  uint8_t cpuid_stepping;
  uint64_t cpuid_features;
  uint64_t cpuid_extfeatures;
  uint32_t cpuid_signature;
  uint8_t cpuid_brand;
  uint8_t cpuid_processor_flag;
  uint32_t cache_size[5];
  uint32_t cache_linesize;
  uint8_t cache_info[64];
  uint32_t cpuid_cores_per_package;
  uint32_t cpuid_logical_per_package;
  uint32_t cache_sharing[5];
  uint32_t cache_partitions[5];
  cpu_type_t cpuid_cpu_type;
  cpu_subtype_t cpuid_cpu_subtype;
  cpuid_mwait_leaf_t cpuid_mwait_leaf;
  cpuid_thermal_leaf_t cpuid_thermal_leaf;
  cpuid_arch_perf_leaf_t cpuid_arch_perf_leaf;
  uint32_t unused[4];
  uint32_t cpuid_cache_linesize;
  uint32_t cpuid_cache_L2_associativity;
  uint32_t cpuid_cache_size;
  uint32_t cpuid_address_bits_physical;
  uint32_t cpuid_address_bits_virtual;
  uint32_t cpuid_microcode_version;
  uint32_t cpuid_tlb[2][2][2];
  uint32_t cpuid_stlb;
  uint32_t core_count;
  uint32_t thread_count;
  uint32_t cpuid_max_basic;
  uint32_t cpuid_max_ext;
  uint32_t cpuid_cpufamily;
  cpuid_mwait_leaf_t *cpuid_mwait_leafp;
  cpuid_thermal_leaf_t *cpuid_thermal_leafp;
  cpuid_arch_perf_leaf_t *cpuid_arch_perf_leafp;
  cpuid_xsave_leaf_t *cpuid_xsave_leafp;
  uint64_t cpuid_leaf7_features;
  cpuid_tsc_leaf_t cpuid_tsc_leaf;
  cpuid_xsave_leaf_t cpuid_xsave_leaf[2];
};

/* 1640 */
typedef struct $D552FF40DE1A990918CBA79BA5065E81 i386_cpu_info_t;

/* 1641 */
struct ipc_info_space
{
  natural_t iis_genno_mask;
  natural_t iis_table_size;
  natural_t iis_table_next;
  natural_t iis_tree_size;
  natural_t iis_tree_small;
  natural_t iis_tree_hash;
};

/* 1642 */
struct ipc_info_space_basic
{
  natural_t iisb_genno_mask;
  natural_t iisb_table_size;
  natural_t iisb_table_next;
  natural_t iisb_table_inuse;
  natural_t iisb_reserved[2];
};

/* 1643 */
typedef struct ipc_info_space_basic ipc_info_space_basic_t;

/* 1644 */
struct ipc_info_name
{
  mach_port_name_t iin_name;
  integer_t iin_collision;
  mach_port_type_t iin_type;
  mach_port_urefs_t iin_urefs;
  natural_t iin_object;
  natural_t iin_next;
  natural_t iin_hash;
};

/* 1645 */
struct mach_vm_info_region
{
  mach_vm_offset_t vir_start;
  mach_vm_offset_t vir_end;
  mach_vm_offset_t vir_object;
  memory_object_offset_t vir_offset;
  boolean_t vir_needs_copy;
  vm_prot_t vir_protection;
  vm_prot_t vir_max_protection;
  vm_inherit_t vir_inheritance;
  natural_t vir_wired_count;
  natural_t vir_user_wired_count;
};

/* 1646 */
struct vm_info_region_64
{
  natural_t vir_start;
  natural_t vir_end;
  natural_t vir_object;
  memory_object_offset_t vir_offset;
  boolean_t vir_needs_copy;
  vm_prot_t vir_protection;
  vm_prot_t vir_max_protection;
  vm_inherit_t vir_inheritance;
  natural_t vir_wired_count;
  natural_t vir_user_wired_count;
};

/* 1647 */
struct vm_info_region
{
  natural_t vir_start;
  natural_t vir_end;
  natural_t vir_object;
  natural_t vir_offset;
  boolean_t vir_needs_copy;
  vm_prot_t vir_protection;
  vm_prot_t vir_max_protection;
  vm_inherit_t vir_inheritance;
  natural_t vir_wired_count;
  natural_t vir_user_wired_count;
};

/* 1648 */
struct vm_info_object
{
  natural_t vio_object;
  natural_t vio_size;
  unsigned int vio_ref_count;
  unsigned int vio_resident_page_count;
  unsigned int vio_absent_count;
  natural_t vio_copy;
  natural_t vio_shadow;
  natural_t vio_shadow_offset;
  natural_t vio_paging_offset;
  memory_object_copy_strategy_t vio_copy_strategy;
  vm_offset_t vio_last_alloc;
  unsigned int vio_paging_in_progress;
  boolean_t vio_pager_created;
  boolean_t vio_pager_initialized;
  boolean_t vio_pager_ready;
  boolean_t vio_can_persist;
  boolean_t vio_internal;
  boolean_t vio_temporary;
  boolean_t vio_alive;
  boolean_t vio_purgable;
  boolean_t vio_purgable_volatile;
};

/* 1649 */
struct zone_info
{
  integer_t zi_count;
  vm_size_t zi_cur_size;
  vm_size_t zi_max_size;
  vm_size_t zi_elem_size;
  vm_size_t zi_alloc_size;
  integer_t zi_pageable;
  integer_t zi_sleepable;
  integer_t zi_exhaustible;
  integer_t zi_collectable;
};

/* 1650 */
struct mach_zone_info_data
{
  uint64_t mzi_count;
  uint64_t mzi_cur_size;
  uint64_t mzi_max_size;
  uint64_t mzi_elem_size;
  uint64_t mzi_alloc_size;
  uint64_t mzi_sum_size;
  uint64_t mzi_exhaustible;
  uint64_t mzi_collectable;
};

/* 1651 */
struct task_zone_info_data
{
  uint64_t tzi_count;
  uint64_t tzi_cur_size;
  uint64_t tzi_max_size;
  uint64_t tzi_elem_size;
  uint64_t tzi_alloc_size;
  uint64_t tzi_sum_size;
  uint64_t tzi_exhaustible;
  uint64_t tzi_collectable;
  uint64_t tzi_caller_acct;
  uint64_t tzi_task_alloc;
  uint64_t tzi_task_free;
};

/* 1652 */
struct mach_memory_info
{
  uint64_t flags;
  uint64_t site;
  uint64_t size;
  uint64_t free;
  uint64_t largest;
  uint64_t collectable_bytes;
  uint64_t mapped;
  uint64_t peak;
  uint16_t tag;
  uint16_t zone;
  uint16_t _resvA[2];
  uint64_t _resv[3];
  char name[80];
};

/* 1653 */
typedef struct mach_memory_info mach_memory_info_t;

/* 1654 */
typedef mach_memory_info_t *mach_memory_info_array_t;

/* 1655 */
struct hash_info_bucket
{
  natural_t hib_count;
};

/* 1656 */
struct lockgroup_info
{
  char lockgroup_name[64];
  uint64_t lockgroup_attr;
  uint64_t lock_spin_cnt;
  uint64_t lock_spin_util_cnt;
  uint64_t lock_spin_held_cnt;
  uint64_t lock_spin_miss_cnt;
  uint64_t lock_spin_held_max;
  uint64_t lock_spin_held_cum;
  uint64_t lock_mtx_cnt;
  uint64_t lock_mtx_util_cnt;
  uint64_t lock_mtx_held_cnt;
  uint64_t lock_mtx_miss_cnt;
  uint64_t lock_mtx_wait_cnt;
  uint64_t lock_mtx_held_max;
  uint64_t lock_mtx_held_cum;
  uint64_t lock_mtx_wait_max;
  uint64_t lock_mtx_wait_cum;
  uint64_t lock_rw_cnt;
  uint64_t lock_rw_util_cnt;
  uint64_t lock_rw_held_cnt;
  uint64_t lock_rw_miss_cnt;
  uint64_t lock_rw_wait_cnt;
  uint64_t lock_rw_held_max;
  uint64_t lock_rw_held_cum;
  uint64_t lock_rw_wait_max;
  uint64_t lock_rw_wait_cum;
};

/* 1657 */
struct mach_core_details
{
  uint64_t gzip_offset;
  uint64_t gzip_length;
  char core_name[16];
};

/* 1658 */
struct mach_core_fileheader
{
  uint64_t signature;
  uint64_t log_offset;
  uint64_t log_length;
  uint64_t num_files;
  struct mach_core_details files[16];
};

/* 4059 */
typedef mach_msg_security_trailer_t mach_msg_format_0_trailer_t;

/* 1659 */
struct $DB4A14C7E3C0482D415D474DC84CDB0A
{
  mach_msg_header_t not_header;
  NDR_record_t NDR;
  mach_port_name_t not_port;
  mach_msg_format_0_trailer_t trailer;
};

/* 1660 */
typedef struct $DB4A14C7E3C0482D415D474DC84CDB0A mach_port_deleted_notification_t;

/* 1661 */
typedef struct $DB4A14C7E3C0482D415D474DC84CDB0A mach_send_possible_notification_t;

/* 1662 */
struct $5AC8AC654862E94BFACA75D7F22DC5DC
{
  mach_msg_header_t not_header;
  mach_msg_body_t not_body;
  mach_msg_port_descriptor_t not_port;
  mach_msg_format_0_trailer_t trailer;
};

/* 1663 */
typedef struct $5AC8AC654862E94BFACA75D7F22DC5DC mach_port_destroyed_notification_t;

/* 1664 */
struct $B2F3523D9E46B7AFA97F5614B79DB747
{
  mach_msg_header_t not_header;
  NDR_record_t NDR;
  mach_msg_type_number_t not_count;
  mach_msg_format_0_trailer_t trailer;
};

/* 1665 */
typedef struct $B2F3523D9E46B7AFA97F5614B79DB747 mach_no_senders_notification_t;

/* 1666 */
struct $258228CC2B0AB0EA01386827BD048DF3
{
  mach_msg_header_t not_header;
  mach_msg_format_0_trailer_t trailer;
};

/* 1667 */
typedef struct $258228CC2B0AB0EA01386827BD048DF3 mach_send_once_notification_t;

/* 1668 */
typedef struct $DB4A14C7E3C0482D415D474DC84CDB0A mach_dead_name_notification_t;

/* 1669 */
struct $1AB9ED800012CCE7700E5A617585E609
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
};

/* 1670 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 mig_reply_error_t;

/* 1671 */
struct $27B31FAA59BFFC784FE8CADDDEB804DC
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  host_flavor_t flavor;
  mach_msg_type_number_t host_info_outCnt;
};

/* 1672 */
typedef struct $27B31FAA59BFFC784FE8CADDDEB804DC __Request__host_info_t;

/* 1673 */
struct $7D117E890AE5C53348BBC49FB7609529
{
  mach_msg_header_t Head;
};

/* 1674 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__host_kernel_version_t;

/* 1675 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__host_page_size_t;

/* 1676 */
struct $56DABB06E224928FA7A8619F25499320
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t pager;
  NDR_record_t NDR;
  boolean_t internal;
  vm_size_t size;
  vm_prot_t permission;
};

/* 1677 */
typedef struct $56DABB06E224928FA7A8619F25499320 __Request__mach_memory_object_memory_entry_t;

/* 1678 */
struct $2A92D8D3756C2067C0D1521232D271B6
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  processor_flavor_t flavor;
};

/* 1679 */
typedef struct $2A92D8D3756C2067C0D1521232D271B6 __Request__host_processor_info_t;

/* 1680 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__host_get_io_master_t;

/* 1681 */
struct $0374A8CC7EE46A886C854423A25FFECF
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  clock_id_t clock_id;
};

/* 1682 */
typedef struct $0374A8CC7EE46A886C854423A25FFECF __Request__host_get_clock_service_t;

/* 1683 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__kmod_get_info_t;

/* 1684 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__host_virtual_physical_table_info_t;

/* 1685 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__processor_set_default_t;

/* 1686 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__processor_set_create_t;

/* 1687 */
struct $790720FEA06ADDEE223DA929D0D8D83C
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t pager;
  NDR_record_t NDR;
  boolean_t internal;
  memory_object_size_t size;
  vm_prot_t permission;
};

/* 1688 */
typedef struct $790720FEA06ADDEE223DA929D0D8D83C __Request__mach_memory_object_memory_entry_64_t;

/* 1689 */
typedef struct $27B31FAA59BFFC784FE8CADDDEB804DC __Request__host_statistics_t;

/* 1690 */
struct $ADF1B7AA64374D57530BF215751E9FE4
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t notify_port;
  NDR_record_t NDR;
  host_flavor_t notify_type;
};

/* 1691 */
typedef struct $ADF1B7AA64374D57530BF215751E9FE4 __Request__host_request_notification_t;

/* 1692 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__host_lockgroup_info_t;

/* 1693 */
struct $8A3AF196E6642874F9E8A708E229A49F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  host_flavor_t flavor;
  mach_msg_type_number_t host_info64_outCnt;
};

/* 1694 */
typedef struct $8A3AF196E6642874F9E8A708E229A49F __Request__host_statistics64_t;

/* 1695 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__mach_zone_info_t;

/* 1696 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__mach_zone_force_gc_t;

/* 1697 */
struct $4855EEFC1E3C8F5FE9AB7E10832CEB5F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_msg_type_number_t recipesCnt;
  uint8_t recipes[5120];
};

/* 1698 */
typedef struct $4855EEFC1E3C8F5FE9AB7E10832CEB5F __Request__host_create_mach_voucher_t;

/* 1699 */
struct $763D7CB203D547983F66654A3D6F7907
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t attr_manager;
  NDR_record_t NDR;
  mach_voucher_attr_value_handle_t default_value;
};

/* 1700 */
typedef struct $763D7CB203D547983F66654A3D6F7907 __Request__host_register_mach_voucher_attr_manager_t;

/* 1701 */
struct $69121386DFE05CCF41EE6E030C446F1A
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t attr_manager;
  NDR_record_t NDR;
  mach_voucher_attr_value_handle_t default_value;
  mach_voucher_attr_key_t key;
};

/* 1702 */
typedef struct $69121386DFE05CCF41EE6E030C446F1A __Request__host_register_well_known_mach_voucher_attr_manager_t;

/* 1703 */
struct $03C485A93283B585002A3A9ABCD2CF56
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  uint32_t diagnostic_flag;
};

/* 1704 */
typedef struct $03C485A93283B585002A3A9ABCD2CF56 __Request__host_set_atm_diagnostic_flag_t;

/* 1705 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__mach_memory_info_t;

/* 1706 */
struct $B5B60509483714CA2F1BDFC1AA3D6B43
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  uint32_t multiuser_flags;
};

/* 1707 */
typedef struct $B5B60509483714CA2F1BDFC1AA3D6B43 __Request__host_set_multiuser_config_flags_t;

/* 1708 */
union __RequestUnion__mach_host_subsystem
{
  __Request__host_info_t Request_host_info;
  __Request__host_kernel_version_t Request_host_kernel_version;
  __Request__host_page_size_t Request_host_page_size;
  __Request__mach_memory_object_memory_entry_t Request_mach_memory_object_memory_entry;
  __Request__host_processor_info_t Request_host_processor_info;
  __Request__host_get_io_master_t Request_host_get_io_master;
  __Request__host_get_clock_service_t Request_host_get_clock_service;
  __Request__kmod_get_info_t Request_kmod_get_info;
  __Request__host_virtual_physical_table_info_t Request_host_virtual_physical_table_info;
  __Request__processor_set_default_t Request_processor_set_default;
  __Request__processor_set_create_t Request_processor_set_create;
  __Request__mach_memory_object_memory_entry_64_t Request_mach_memory_object_memory_entry_64;
  __Request__host_statistics_t Request_host_statistics;
  __Request__host_request_notification_t Request_host_request_notification;
  __Request__host_lockgroup_info_t Request_host_lockgroup_info;
  __Request__host_statistics64_t Request_host_statistics64;
  __Request__mach_zone_info_t Request_mach_zone_info;
  __Request__mach_zone_force_gc_t Request_mach_zone_force_gc;
  __Request__host_create_mach_voucher_t Request_host_create_mach_voucher;
  __Request__host_register_mach_voucher_attr_manager_t Request_host_register_mach_voucher_attr_manager;
  __Request__host_register_well_known_mach_voucher_attr_manager_t Request_host_register_well_known_mach_voucher_attr_manager;
  __Request__host_set_atm_diagnostic_flag_t Request_host_set_atm_diagnostic_flag;
  __Request__mach_memory_info_t Request_mach_memory_info;
  __Request__host_set_multiuser_config_flags_t Request_host_set_multiuser_config_flags;
};

/* 1709 */
struct $9AE4EC4519A4758E054FFF7D68B9B96E
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t host_info_outCnt;
  integer_t host_info_out[68];
};

/* 1710 */
typedef struct $9AE4EC4519A4758E054FFF7D68B9B96E __Reply__host_info_t;

/* 1711 */
struct $E98A589F0D5E59AB49CA205C1764C939
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t kernel_versionOffset;
  mach_msg_type_number_t kernel_versionCnt;
  char kernel_version[512];
};

/* 1712 */
typedef struct $E98A589F0D5E59AB49CA205C1764C939 __Reply__host_kernel_version_t;

/* 1713 */
struct $557B998B1520895C268759BE55018D98
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  vm_size_t out_page_size;
};

/* 1714 */
typedef struct $557B998B1520895C268759BE55018D98 __Reply__host_page_size_t;

/* 1715 */
struct $63AEB0F7C52C187B490E7E9C9FD1DE18
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t entry_handle;
};

/* 1716 */
typedef struct $63AEB0F7C52C187B490E7E9C9FD1DE18 __Reply__mach_memory_object_memory_entry_t;

/* 1717 */
struct $1F0E9FEF31CE00A7B65A36A5E555735B
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t out_processor_info;
  NDR_record_t NDR;
  natural_t out_processor_count;
  mach_msg_type_number_t out_processor_infoCnt;
};

/* 1718 */
typedef struct $1F0E9FEF31CE00A7B65A36A5E555735B __Reply__host_processor_info_t;

/* 1719 */
struct $9C4EC45F0FFBE3CAE656A7FD424179CE
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t io_master;
};

/* 1720 */
typedef struct $9C4EC45F0FFBE3CAE656A7FD424179CE __Reply__host_get_io_master_t;

/* 1721 */
struct $6228A7C6579B3BBA4D137F540C72D878
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t clock_serv;
};

/* 1722 */
typedef struct $6228A7C6579B3BBA4D137F540C72D878 __Reply__host_get_clock_service_t;

/* 1723 */
struct $CDF5087943220A25B4937A58AFB0458B
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t modules;
  NDR_record_t NDR;
  mach_msg_type_number_t modulesCnt;
};

/* 1724 */
typedef struct $CDF5087943220A25B4937A58AFB0458B __Reply__kmod_get_info_t;

/* 1725 */
struct $9B153F261A11C58C133722012248708F
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t info;
  NDR_record_t NDR;
  mach_msg_type_number_t infoCnt;
};

/* 1726 */
typedef struct $9B153F261A11C58C133722012248708F __Reply__host_virtual_physical_table_info_t;

/* 1727 */
struct $0575840DD3F03F213306BEED51FDFE71
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t default_set;
};

/* 1728 */
typedef struct $0575840DD3F03F213306BEED51FDFE71 __Reply__processor_set_default_t;

/* 1729 */
struct $8A3995CFC3DE5A591941DD26C1C2F53A
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t new_set;
  mach_msg_port_descriptor_t new_name;
};

/* 1730 */
typedef struct $8A3995CFC3DE5A591941DD26C1C2F53A __Reply__processor_set_create_t;

/* 1731 */
typedef struct $63AEB0F7C52C187B490E7E9C9FD1DE18 __Reply__mach_memory_object_memory_entry_64_t;

/* 1732 */
typedef struct $9AE4EC4519A4758E054FFF7D68B9B96E __Reply__host_statistics_t;

/* 1733 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__host_request_notification_t;

/* 1734 */
struct $8DF4010F106D2EE2C7EFC72A9E414877
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t lockgroup_info;
  NDR_record_t NDR;
  mach_msg_type_number_t lockgroup_infoCnt;
};

/* 1735 */
typedef struct $8DF4010F106D2EE2C7EFC72A9E414877 __Reply__host_lockgroup_info_t;

/* 1736 */
struct $DCA53A46FAB6679FB1E063608ABD9AA8
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t host_info64_outCnt;
  integer_t host_info64_out[256];
};

/* 1737 */
typedef struct $DCA53A46FAB6679FB1E063608ABD9AA8 __Reply__host_statistics64_t;

/* 1738 */
struct $B714EB00005D59CD1E60DCC8892D0FC2
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t names;
  mach_msg_ool_descriptor_t info;
  NDR_record_t NDR;
  mach_msg_type_number_t namesCnt;
  mach_msg_type_number_t infoCnt;
};

/* 1739 */
typedef struct $B714EB00005D59CD1E60DCC8892D0FC2 __Reply__mach_zone_info_t;

/* 1740 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_zone_force_gc_t;

/* 1741 */
struct $55F043C4C53CD699F417A5D97368A0D6
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t voucher;
};

/* 1742 */
typedef struct $55F043C4C53CD699F417A5D97368A0D6 __Reply__host_create_mach_voucher_t;

/* 1743 */
struct $377BCE30BF00989CF6FA17F135FEBD31
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t new_attr_control;
  NDR_record_t NDR;
  mach_voucher_attr_key_t new_key;
};

/* 1744 */
typedef struct $377BCE30BF00989CF6FA17F135FEBD31 __Reply__host_register_mach_voucher_attr_manager_t;

/* 1745 */
struct $FA981E8451CBC6EC88762D4B264D4F0C
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t new_attr_control;
};

/* 1746 */
typedef struct $FA981E8451CBC6EC88762D4B264D4F0C __Reply__host_register_well_known_mach_voucher_attr_manager_t;

/* 1747 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__host_set_atm_diagnostic_flag_t;

/* 1748 */
struct $4D442353D49F99C6948117BFDAB8730A
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t names;
  mach_msg_ool_descriptor_t info;
  mach_msg_ool_descriptor_t memory_info;
  NDR_record_t NDR;
  mach_msg_type_number_t namesCnt;
  mach_msg_type_number_t infoCnt;
  mach_msg_type_number_t memory_infoCnt;
};

/* 1749 */
typedef struct $4D442353D49F99C6948117BFDAB8730A __Reply__mach_memory_info_t;

/* 1750 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__host_set_multiuser_config_flags_t;

/* 1751 */
union __ReplyUnion__mach_host_subsystem
{
  __Reply__host_info_t Reply_host_info;
  __Reply__host_kernel_version_t Reply_host_kernel_version;
  __Reply__host_page_size_t Reply_host_page_size;
  __Reply__mach_memory_object_memory_entry_t Reply_mach_memory_object_memory_entry;
  __Reply__host_processor_info_t Reply_host_processor_info;
  __Reply__host_get_io_master_t Reply_host_get_io_master;
  __Reply__host_get_clock_service_t Reply_host_get_clock_service;
  __Reply__kmod_get_info_t Reply_kmod_get_info;
  __Reply__host_virtual_physical_table_info_t Reply_host_virtual_physical_table_info;
  __Reply__processor_set_default_t Reply_processor_set_default;
  __Reply__processor_set_create_t Reply_processor_set_create;
  __Reply__mach_memory_object_memory_entry_64_t Reply_mach_memory_object_memory_entry_64;
  __Reply__host_statistics_t Reply_host_statistics;
  __Reply__host_request_notification_t Reply_host_request_notification;
  __Reply__host_lockgroup_info_t Reply_host_lockgroup_info;
  __Reply__host_statistics64_t Reply_host_statistics64;
  __Reply__mach_zone_info_t Reply_mach_zone_info;
  __Reply__mach_zone_force_gc_t Reply_mach_zone_force_gc;
  __Reply__host_create_mach_voucher_t Reply_host_create_mach_voucher;
  __Reply__host_register_mach_voucher_attr_manager_t Reply_host_register_mach_voucher_attr_manager;
  __Reply__host_register_well_known_mach_voucher_attr_manager_t Reply_host_register_well_known_mach_voucher_attr_manager;
  __Reply__host_set_atm_diagnostic_flag_t Reply_host_set_atm_diagnostic_flag;
  __Reply__mach_memory_info_t Reply_mach_memory_info;
  __Reply__host_set_multiuser_config_flags_t Reply_host_set_multiuser_config_flags;
};

/* 1752 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__mach_port_names_t;

/* 1753 */
struct $964192CEB55AB863D280DFA6F3FB3A04
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
};

/* 1754 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_port_type_t;

/* 1755 */
struct $3ED77CFFCAC0494B2781AFB5056CD1E2
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t old_name;
  mach_port_name_t new_name;
};

/* 1756 */
typedef struct $3ED77CFFCAC0494B2781AFB5056CD1E2 __Request__mach_port_rename_t;

/* 1757 */
struct $CAED06E7D66021188321F8E72B2E2FF5
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_right_t right;
  mach_port_name_t name;
};

/* 1758 */
typedef struct $CAED06E7D66021188321F8E72B2E2FF5 __Request__mach_port_allocate_name_t;

/* 1759 */
struct $4B1525C4E61896D9E5A225DBA7B62172
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_right_t right;
};

/* 1760 */
typedef struct $4B1525C4E61896D9E5A225DBA7B62172 __Request__mach_port_allocate_t;

/* 1761 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_port_destroy_t;

/* 1762 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_port_deallocate_t;

/* 1763 */
struct $614225CC99B495EAADE3FB7511123481
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_port_right_t right;
};

/* 1764 */
typedef struct $614225CC99B495EAADE3FB7511123481 __Request__mach_port_get_refs_t;

/* 1765 */
struct $3DB0F6344DF068FE0E7FEE52B20441C6
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_port_right_t right;
  mach_port_delta_t delta;
};

/* 1766 */
typedef struct $3DB0F6344DF068FE0E7FEE52B20441C6 __Request__mach_port_mod_refs_t;

/* 1767 */
struct $492AA9FE98FC4C1AC6073C4DB667C22C
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_msg_trailer_type_t trailer_type;
  mach_port_seqno_t request_seqnop;
  mach_msg_type_number_t trailer_infopCnt;
};

/* 1768 */
typedef struct $492AA9FE98FC4C1AC6073C4DB667C22C __Request__mach_port_peek_t;

/* 1769 */
struct $7A13737EEC89215894DE872610988CEF
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_port_mscount_t mscount;
};

/* 1770 */
typedef struct $7A13737EEC89215894DE872610988CEF __Request__mach_port_set_mscount_t;

/* 1771 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_port_get_set_status_t;

/* 1772 */
struct $453A9906B0D5F2DB8EA091CAF4B377D0
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t member;
  mach_port_name_t after;
};

/* 1773 */
typedef struct $453A9906B0D5F2DB8EA091CAF4B377D0 __Request__mach_port_move_member_t;

/* 1774 */
struct $361B32FD63F38E97FEAC64B2B715D4DA
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t notify;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_msg_id_t msgid;
  mach_port_mscount_t sync;
};

/* 1775 */
typedef struct $361B32FD63F38E97FEAC64B2B715D4DA __Request__mach_port_request_notification_t;

/* 1776 */
struct $792E60214382FD40ABD72D46A524E133
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t poly;
  NDR_record_t NDR;
  mach_port_name_t name;
};

/* 1777 */
typedef struct $792E60214382FD40ABD72D46A524E133 __Request__mach_port_insert_right_t;

/* 1778 */
struct $B2A587516582C73C950027D0B37D34E5
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_msg_type_name_t msgt_name;
};

/* 1779 */
typedef struct $B2A587516582C73C950027D0B37D34E5 __Request__mach_port_extract_right_t;

/* 1780 */
struct $D2ED612D985D1C0C57891F2C70CF5F3F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_port_seqno_t seqno;
};

/* 1781 */
typedef struct $D2ED612D985D1C0C57891F2C70CF5F3F __Request__mach_port_set_seqno_t;

/* 1782 */
struct $D03B597748B2DB3D8FEFE30529292B7A
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_port_flavor_t flavor;
  mach_msg_type_number_t port_info_outCnt;
};

/* 1783 */
typedef struct $D03B597748B2DB3D8FEFE30529292B7A __Request__mach_port_get_attributes_t;

/* 1784 */
struct $9ABD852E6E20C1D3C2DEE617CF8A314A
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_port_flavor_t flavor;
  mach_msg_type_number_t port_infoCnt;
  integer_t port_info[17];
};

/* 1785 */
typedef struct $9ABD852E6E20C1D3C2DEE617CF8A314A __Request__mach_port_set_attributes_t;

/* 1786 */
struct $B458EF1AA6F3AB677AEF3725FD48E63D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_right_t right;
  mach_port_qos_t qos;
};

/* 1787 */
typedef struct $B458EF1AA6F3AB677AEF3725FD48E63D __Request__mach_port_allocate_qos_t;

/* 1788 */
struct $82C6C50F5A7EDB7AF0DF5E5B396DFADE
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t proto;
  NDR_record_t NDR;
  mach_port_right_t right;
  mach_port_qos_t qos;
  mach_port_name_t name;
};

/* 1789 */
typedef struct $82C6C50F5A7EDB7AF0DF5E5B396DFADE __Request__mach_port_allocate_full_t;

/* 1790 */
struct $7A5012474803C2BAF2E3E713A1F7EEEB
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int table_entries;
};

/* 1791 */
typedef struct $7A5012474803C2BAF2E3E713A1F7EEEB __Request__task_set_port_space_t;

/* 1792 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_port_get_srights_t;

/* 1793 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__mach_port_space_info_t;

/* 1794 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_port_dnrequest_info_t;

/* 1795 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_port_kernel_object_t;

/* 1796 */
struct $68C659F3B9AD504D21868BB22BEC4566
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_port_name_t pset;
};

/* 1797 */
typedef struct $68C659F3B9AD504D21868BB22BEC4566 __Request__mach_port_insert_member_t;

/* 1798 */
typedef struct $68C659F3B9AD504D21868BB22BEC4566 __Request__mach_port_extract_member_t;

/* 1799 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_port_get_context_t;

/* 1800 */
struct $7BD75730E97FFDF37E9C8C0CDE8F5FBE
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_vm_address_t context;
};

/* 1801 */
typedef struct $7BD75730E97FFDF37E9C8C0CDE8F5FBE __Request__mach_port_set_context_t;

/* 1802 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_port_kobject_t;

/* 1803 */
struct $D4BB77B2CC055CA6C9EC33887094A333
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t options;
  NDR_record_t NDR;
  uint64_t context;
};

/* 1804 */
typedef struct $D4BB77B2CC055CA6C9EC33887094A333 __Request__mach_port_construct_t;

/* 1805 */
struct $13CA830AA2D4E496FB7E363D04B70A96
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  mach_port_delta_t srdelta;
  uint64_t guard;
};

/* 1806 */
typedef struct $13CA830AA2D4E496FB7E363D04B70A96 __Request__mach_port_destruct_t;

/* 1807 */
struct $6F76C3FA852087E64A43AAEA5F3546B3
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  uint64_t guard;
  boolean_t strict;
};

/* 1808 */
typedef struct $6F76C3FA852087E64A43AAEA5F3546B3 __Request__mach_port_guard_t;

/* 1809 */
struct $BF910A3334E6B18CC0980515E155413B
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t name;
  uint64_t guard;
};

/* 1810 */
typedef struct $BF910A3334E6B18CC0980515E155413B __Request__mach_port_unguard_t;

/* 1811 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__mach_port_space_basic_info_t;

/* 1812 */
union __RequestUnion__mach_port_subsystem
{
  __Request__mach_port_names_t Request_mach_port_names;
  __Request__mach_port_type_t Request_mach_port_type;
  __Request__mach_port_rename_t Request_mach_port_rename;
  __Request__mach_port_allocate_name_t Request_mach_port_allocate_name;
  __Request__mach_port_allocate_t Request_mach_port_allocate;
  __Request__mach_port_destroy_t Request_mach_port_destroy;
  __Request__mach_port_deallocate_t Request_mach_port_deallocate;
  __Request__mach_port_get_refs_t Request_mach_port_get_refs;
  __Request__mach_port_mod_refs_t Request_mach_port_mod_refs;
  __Request__mach_port_peek_t Request_mach_port_peek;
  __Request__mach_port_set_mscount_t Request_mach_port_set_mscount;
  __Request__mach_port_get_set_status_t Request_mach_port_get_set_status;
  __Request__mach_port_move_member_t Request_mach_port_move_member;
  __Request__mach_port_request_notification_t Request_mach_port_request_notification;
  __Request__mach_port_insert_right_t Request_mach_port_insert_right;
  __Request__mach_port_extract_right_t Request_mach_port_extract_right;
  __Request__mach_port_set_seqno_t Request_mach_port_set_seqno;
  __Request__mach_port_get_attributes_t Request_mach_port_get_attributes;
  __Request__mach_port_set_attributes_t Request_mach_port_set_attributes;
  __Request__mach_port_allocate_qos_t Request_mach_port_allocate_qos;
  __Request__mach_port_allocate_full_t Request_mach_port_allocate_full;
  __Request__task_set_port_space_t Request_task_set_port_space;
  __Request__mach_port_get_srights_t Request_mach_port_get_srights;
  __Request__mach_port_space_info_t Request_mach_port_space_info;
  __Request__mach_port_dnrequest_info_t Request_mach_port_dnrequest_info;
  __Request__mach_port_kernel_object_t Request_mach_port_kernel_object;
  __Request__mach_port_insert_member_t Request_mach_port_insert_member;
  __Request__mach_port_extract_member_t Request_mach_port_extract_member;
  __Request__mach_port_get_context_t Request_mach_port_get_context;
  __Request__mach_port_set_context_t Request_mach_port_set_context;
  __Request__mach_port_kobject_t Request_mach_port_kobject;
  __Request__mach_port_construct_t Request_mach_port_construct;
  __Request__mach_port_destruct_t Request_mach_port_destruct;
  __Request__mach_port_guard_t Request_mach_port_guard;
  __Request__mach_port_unguard_t Request_mach_port_unguard;
  __Request__mach_port_space_basic_info_t Request_mach_port_space_basic_info;
};

/* 1813 */
struct $FE5B11E53698630D4D0AEDF62F3EDC40
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t names;
  mach_msg_ool_descriptor_t types;
  NDR_record_t NDR;
  mach_msg_type_number_t namesCnt;
  mach_msg_type_number_t typesCnt;
};

/* 1814 */
typedef struct $FE5B11E53698630D4D0AEDF62F3EDC40 __Reply__mach_port_names_t;

/* 1815 */
struct $EB4889F02BBE3F5C5BD71419DCE0633B
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_port_type_t ptype;
};

/* 1816 */
typedef struct $EB4889F02BBE3F5C5BD71419DCE0633B __Reply__mach_port_type_t;

/* 1817 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_rename_t;

/* 1818 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_allocate_name_t;

/* 1819 */
struct $3D69951BD747CA16A85968A3894CB236
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_port_name_t name;
};

/* 1820 */
typedef struct $3D69951BD747CA16A85968A3894CB236 __Reply__mach_port_allocate_t;

/* 1821 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_destroy_t;

/* 1822 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_deallocate_t;

/* 1823 */
struct $909884BE85672AC9A78413DFEF14DFE8
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_port_urefs_t refs;
};

/* 1824 */
typedef struct $909884BE85672AC9A78413DFEF14DFE8 __Reply__mach_port_get_refs_t;

/* 1825 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_mod_refs_t;

/* 1826 */
struct $33AADB2AB8A9BA123A5862D1E0DD84C2
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_port_seqno_t request_seqnop;
  mach_msg_size_t msg_sizep;
  mach_msg_id_t msg_idp;
  mach_msg_type_number_t trailer_infopCnt;
  char trailer_infop[68];
};

/* 1827 */
typedef struct $33AADB2AB8A9BA123A5862D1E0DD84C2 __Reply__mach_port_peek_t;

/* 1828 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_set_mscount_t;

/* 1829 */
struct $6F59593B9AFBC8002541D38EF0253984
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t members;
  NDR_record_t NDR;
  mach_msg_type_number_t membersCnt;
};

/* 1830 */
typedef struct $6F59593B9AFBC8002541D38EF0253984 __Reply__mach_port_get_set_status_t;

/* 1831 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_move_member_t;

/* 1832 */
struct $CC1B62D0458582C86CE22E586DCEA30A
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t previous;
};

/* 1833 */
typedef struct $CC1B62D0458582C86CE22E586DCEA30A __Reply__mach_port_request_notification_t;

/* 1834 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_insert_right_t;

/* 1835 */
struct $FC9E32E4F3646F5155D7E994E64D5A4D
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t poly;
};

/* 1836 */
typedef struct $FC9E32E4F3646F5155D7E994E64D5A4D __Reply__mach_port_extract_right_t;

/* 1837 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_set_seqno_t;

/* 1838 */
struct $89D3B4B944C2480413BDAC138DFD689F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t port_info_outCnt;
  integer_t port_info_out[17];
};

/* 1839 */
typedef struct $89D3B4B944C2480413BDAC138DFD689F __Reply__mach_port_get_attributes_t;

/* 1840 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_set_attributes_t;

/* 1841 */
struct $BD1F08C3A8B2732CBA5985343FAE426F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_port_qos_t qos;
  mach_port_name_t name;
};

/* 1842 */
typedef struct $BD1F08C3A8B2732CBA5985343FAE426F __Reply__mach_port_allocate_qos_t;

/* 1843 */
typedef struct $BD1F08C3A8B2732CBA5985343FAE426F __Reply__mach_port_allocate_full_t;

/* 1844 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_set_port_space_t;

/* 1845 */
struct $0BBD08D0F5143FA88B8ED9DDF04FE829
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_port_rights_t srights;
};

/* 1846 */
typedef struct $0BBD08D0F5143FA88B8ED9DDF04FE829 __Reply__mach_port_get_srights_t;

/* 4060 */
typedef ipc_info_space ipc_info_space_t;

/* 1847 */
struct $5ADCA2F9B9A931F6758564DABD2400EA
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t table_info;
  mach_msg_ool_descriptor_t tree_info;
  NDR_record_t NDR;
  ipc_info_space_t space_info;
  mach_msg_type_number_t table_infoCnt;
  mach_msg_type_number_t tree_infoCnt;
};

/* 1848 */
typedef struct $5ADCA2F9B9A931F6758564DABD2400EA __Reply__mach_port_space_info_t;

/* 1849 */
struct $0E42AB1CC22183145FBC78CE92081143
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  unsigned int dnr_total;
  unsigned int dnr_used;
};

/* 1850 */
typedef struct $0E42AB1CC22183145FBC78CE92081143 __Reply__mach_port_dnrequest_info_t;

/* 1851 */
struct $7746C3CC114ACCE0FDECF87F4DD2EEE1
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  unsigned int object_type;
  unsigned int object_addr;
};

/* 1852 */
typedef struct $7746C3CC114ACCE0FDECF87F4DD2EEE1 __Reply__mach_port_kernel_object_t;

/* 1853 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_insert_member_t;

/* 1854 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_extract_member_t;

/* 1855 */
struct $9F9F29867786D93F2595BEFBFE9AC9C6
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_vm_address_t context;
};

/* 1856 */
typedef struct $9F9F29867786D93F2595BEFBFE9AC9C6 __Reply__mach_port_get_context_t;

/* 1857 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_set_context_t;

/* 1858 */
struct $C9DB4479C11BA28DF453C7070CA738AE
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  natural_t object_type;
  mach_vm_address_t object_addr;
};

/* 1859 */
typedef struct $C9DB4479C11BA28DF453C7070CA738AE __Reply__mach_port_kobject_t;

/* 1860 */
typedef struct $3D69951BD747CA16A85968A3894CB236 __Reply__mach_port_construct_t;

/* 1861 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_destruct_t;

/* 1862 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_guard_t;

/* 1863 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_port_unguard_t;

/* 1864 */
struct $2FD2A14A1AC1517F09E8896EE22D44CB
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  ipc_info_space_basic_t basic_info;
};

/* 1865 */
typedef struct $2FD2A14A1AC1517F09E8896EE22D44CB __Reply__mach_port_space_basic_info_t;

/* 1866 */
union __ReplyUnion__mach_port_subsystem
{
  __Reply__mach_port_names_t Reply_mach_port_names;
  __Reply__mach_port_type_t Reply_mach_port_type;
  __Reply__mach_port_rename_t Reply_mach_port_rename;
  __Reply__mach_port_allocate_name_t Reply_mach_port_allocate_name;
  __Reply__mach_port_allocate_t Reply_mach_port_allocate;
  __Reply__mach_port_destroy_t Reply_mach_port_destroy;
  __Reply__mach_port_deallocate_t Reply_mach_port_deallocate;
  __Reply__mach_port_get_refs_t Reply_mach_port_get_refs;
  __Reply__mach_port_mod_refs_t Reply_mach_port_mod_refs;
  __Reply__mach_port_peek_t Reply_mach_port_peek;
  __Reply__mach_port_set_mscount_t Reply_mach_port_set_mscount;
  __Reply__mach_port_get_set_status_t Reply_mach_port_get_set_status;
  __Reply__mach_port_move_member_t Reply_mach_port_move_member;
  __Reply__mach_port_request_notification_t Reply_mach_port_request_notification;
  __Reply__mach_port_insert_right_t Reply_mach_port_insert_right;
  __Reply__mach_port_extract_right_t Reply_mach_port_extract_right;
  __Reply__mach_port_set_seqno_t Reply_mach_port_set_seqno;
  __Reply__mach_port_get_attributes_t Reply_mach_port_get_attributes;
  __Reply__mach_port_set_attributes_t Reply_mach_port_set_attributes;
  __Reply__mach_port_allocate_qos_t Reply_mach_port_allocate_qos;
  __Reply__mach_port_allocate_full_t Reply_mach_port_allocate_full;
  __Reply__task_set_port_space_t Reply_task_set_port_space;
  __Reply__mach_port_get_srights_t Reply_mach_port_get_srights;
  __Reply__mach_port_space_info_t Reply_mach_port_space_info;
  __Reply__mach_port_dnrequest_info_t Reply_mach_port_dnrequest_info;
  __Reply__mach_port_kernel_object_t Reply_mach_port_kernel_object;
  __Reply__mach_port_insert_member_t Reply_mach_port_insert_member;
  __Reply__mach_port_extract_member_t Reply_mach_port_extract_member;
  __Reply__mach_port_get_context_t Reply_mach_port_get_context;
  __Reply__mach_port_set_context_t Reply_mach_port_set_context;
  __Reply__mach_port_kobject_t Reply_mach_port_kobject;
  __Reply__mach_port_construct_t Reply_mach_port_construct;
  __Reply__mach_port_destruct_t Reply_mach_port_destruct;
  __Reply__mach_port_guard_t Reply_mach_port_guard;
  __Reply__mach_port_unguard_t Reply_mach_port_unguard;
  __Reply__mach_port_space_basic_info_t Reply_mach_port_space_basic_info;
};

/* 1867 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__clock_get_time_t;

/* 1868 */
struct $9E0507D8FEA13B66231B0DB0FF5C636B
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  clock_flavor_t flavor;
  mach_msg_type_number_t clock_attrCnt;
};

/* 1869 */
typedef struct $9E0507D8FEA13B66231B0DB0FF5C636B __Request__clock_get_attributes_t;

/* 4063 */
typedef int clock_res_t;

/* 4062 */
struct mach_timespec
{
  unsigned int tv_sec;
  clock_res_t tv_nsec;
};

/* 4061 */
typedef mach_timespec mach_timespec_t;

/* 1870 */
struct $1309174594A07F04EE0B65D356CAF8AC
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t alarm_port;
  NDR_record_t NDR;
  alarm_type_t alarm_type;
  mach_timespec_t alarm_time;
};

/* 1871 */
typedef struct $1309174594A07F04EE0B65D356CAF8AC __Request__clock_alarm_t;

/* 1872 */
union __RequestUnion__clock_subsystem
{
  __Request__clock_get_time_t Request_clock_get_time;
  __Request__clock_get_attributes_t Request_clock_get_attributes;
  __Request__clock_alarm_t Request_clock_alarm;
};

/* 1873 */
struct $F6A7CE64DA2041D9FFFCDA3B82F21F5E
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_timespec_t cur_time;
};

/* 1874 */
typedef struct $F6A7CE64DA2041D9FFFCDA3B82F21F5E __Reply__clock_get_time_t;

/* 1875 */
struct $CF15DB37C2FB43239FBA7D4EA4A965B5
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t clock_attrCnt;
  int clock_attr[1];
};

/* 1876 */
typedef struct $CF15DB37C2FB43239FBA7D4EA4A965B5 __Reply__clock_get_attributes_t;

/* 1877 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__clock_alarm_t;

/* 1878 */
union __ReplyUnion__clock_subsystem
{
  __Reply__clock_get_time_t Reply_clock_get_time;
  __Reply__clock_get_attributes_t Reply_clock_get_attributes;
  __Reply__clock_alarm_t Reply_clock_alarm;
};

/* 1879 */
struct $74A01CBA247722D7A8314837161D92ED
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_timespec_t new_time;
};

/* 1880 */
typedef struct $74A01CBA247722D7A8314837161D92ED __Request__clock_set_time_t;

/* 1881 */
struct $9E342F1E244CB3B7D9FA9ED195520816
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  clock_flavor_t flavor;
  mach_msg_type_number_t clock_attrCnt;
  int clock_attr[1];
};

/* 1882 */
typedef struct $9E342F1E244CB3B7D9FA9ED195520816 __Request__clock_set_attributes_t;

/* 1883 */
union __RequestUnion__clock_priv_subsystem
{
  __Request__clock_set_time_t Request_clock_set_time;
  __Request__clock_set_attributes_t Request_clock_set_attributes;
};

/* 1884 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__clock_set_time_t;

/* 1885 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__clock_set_attributes_t;

/* 1886 */
union __ReplyUnion__clock_priv_subsystem
{
  __Reply__clock_set_time_t Reply_clock_set_time;
  __Reply__clock_set_attributes_t Reply_clock_set_attributes;
};

/* 1887 */
struct clock_reply_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t reserved;
  struct routine_descriptor routine[1];
};

/* 1888 */
struct $BB0F90956C4089878A95B1A202AC1E05
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t alarm_code;
  alarm_type_t alarm_type;
  mach_timespec_t alarm_time;
};

/* 1889 */
typedef struct $BB0F90956C4089878A95B1A202AC1E05 __Request__clock_alarm_reply_t;

/* 1890 */
union __RequestUnion__clock_reply_subsystem
{
  __Request__clock_alarm_reply_t Request_clock_alarm_reply;
};

/* 1891 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__clock_alarm_reply_t;

/* 1892 */
union __ReplyUnion__clock_reply_subsystem
{
  __Reply__clock_alarm_reply_t Reply_clock_alarm_reply;
};

/* 1893 */
struct catch_exc_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t reserved;
  struct routine_descriptor routine[3];
};

/* 1894 */
struct $0F0390829C3B60BF87D0FEBD996A7F0F
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t thread;
  mach_msg_port_descriptor_t task;
  NDR_record_t NDR;
  exception_type_t exception;
  mach_msg_type_number_t codeCnt;
  integer_t code[2];
};

/* 1895 */
typedef struct $0F0390829C3B60BF87D0FEBD996A7F0F __Request__exception_raise_t;

/* 1896 */
struct $2843FC454B976F899BEBEED5EC6473B7
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  exception_type_t exception;
  mach_msg_type_number_t codeCnt;
  integer_t code[2];
  int flavor;
  mach_msg_type_number_t old_stateCnt;
  natural_t old_state[614];
};

/* 1897 */
typedef struct $2843FC454B976F899BEBEED5EC6473B7 __Request__exception_raise_state_t;

/* 1898 */
struct $50A9F132B5859A081F6B69FA59AF4A19
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t thread;
  mach_msg_port_descriptor_t task;
  NDR_record_t NDR;
  exception_type_t exception;
  mach_msg_type_number_t codeCnt;
  integer_t code[2];
  int flavor;
  mach_msg_type_number_t old_stateCnt;
  natural_t old_state[614];
};

/* 1899 */
typedef struct $50A9F132B5859A081F6B69FA59AF4A19 __Request__exception_raise_state_identity_t;

/* 1900 */
union __RequestUnion__catch_exc_subsystem
{
  __Request__exception_raise_t Request_exception_raise;
  __Request__exception_raise_state_t Request_exception_raise_state;
  __Request__exception_raise_state_identity_t Request_exception_raise_state_identity;
};

/* 1901 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__exception_raise_t;

/* 1902 */
struct $7FF3AC50C98488AFC373CD2048E9D960
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  int flavor;
  mach_msg_type_number_t new_stateCnt;
  natural_t new_state[614];
};

/* 1903 */
typedef struct $7FF3AC50C98488AFC373CD2048E9D960 __Reply__exception_raise_state_t;

/* 1904 */
typedef struct $7FF3AC50C98488AFC373CD2048E9D960 __Reply__exception_raise_state_identity_t;

/* 1905 */
union __ReplyUnion__catch_exc_subsystem
{
  __Reply__exception_raise_t Reply_exception_raise;
  __Reply__exception_raise_state_t Reply_exception_raise_state;
  __Reply__exception_raise_state_identity_t Reply_exception_raise_state_identity;
};

/* 1906 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__host_get_boot_info_t;

/* 1907 */
struct $2AFF2901C3895E1139CBEA3D45BD80D8
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int options;
};

/* 1908 */
typedef struct $2AFF2901C3895E1139CBEA3D45BD80D8 __Request__host_reboot_t;

/* 1909 */
typedef struct $27B31FAA59BFFC784FE8CADDDEB804DC __Request__host_priv_statistics_t;

/* 1910 */
struct $8D2243464371ECDD72A12757F1472EE3
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t default_manager;
  NDR_record_t NDR;
  memory_object_cluster_size_t cluster_size;
};

/* 1911 */
typedef struct $8D2243464371ECDD72A12757F1472EE3 __Request__host_default_memory_manager_t;

/* 1912 */
struct $58E15FD3CEFA0EF2F8A12B381BAE2C9D
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t task;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  vm_prot_t desired_access;
};

/* 1913 */
typedef struct $58E15FD3CEFA0EF2F8A12B381BAE2C9D __Request__vm_wire_t;

/* 1914 */
struct $96B263D043D42E7B8A222BAF66505395
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t thread;
  NDR_record_t NDR;
  boolean_t wired;
};

/* 1915 */
typedef struct $96B263D043D42E7B8A222BAF66505395 __Request__thread_wire_t;

/* 1916 */
struct $5690282D21ABB2CE49F676C5881A7268
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t task;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  int flags;
};

/* 1917 */
typedef struct $5690282D21ABB2CE49F676C5881A7268 __Request__vm_allocate_cpm_t;

/* 1918 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__host_processors_t;

/* 1919 */
typedef struct $0374A8CC7EE46A886C854423A25FFECF __Request__host_get_clock_control_t;

/* 1920 */
struct $9FB43AB520158C251B4CE085A8BA26AE
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t info;
};

/* 1921 */
typedef struct $9FB43AB520158C251B4CE085A8BA26AE __Request__kmod_create_t;

/* 1922 */
struct $554C20DFF22B83C6BC2A08444FBA3C5E
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kmod_t module;
};

/* 1923 */
typedef struct $554C20DFF22B83C6BC2A08444FBA3C5E __Request__kmod_destroy_t;

/* 1924 */
struct $913F4FF1EE6D5B92536D8435D22BA509
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t data;
  NDR_record_t NDR;
  kmod_t module;
  kmod_control_flavor_t flavor;
  mach_msg_type_number_t dataCnt;
};

/* 1925 */
typedef struct $913F4FF1EE6D5B92536D8435D22BA509 __Request__kmod_control_t;

/* 1926 */
struct $016244826987882CF7DE0098CE2FBC48
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int node;
  int which;
};

/* 1927 */
typedef struct $016244826987882CF7DE0098CE2FBC48 __Request__host_get_special_port_t;

/* 1928 */
struct $1504B30130F8504149F40B9AD6EEE508
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t port;
  NDR_record_t NDR;
  int which;
};

/* 1929 */
typedef struct $1504B30130F8504149F40B9AD6EEE508 __Request__host_set_special_port_t;

/* 1930 */
struct $AAA459D4261D0AE6E44A9940300EEED3
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t new_port;
  NDR_record_t NDR;
  exception_mask_t exception_mask;
  exception_behavior_t behavior;
  thread_state_flavor_t new_flavor;
};

/* 1931 */
typedef struct $AAA459D4261D0AE6E44A9940300EEED3 __Request__host_set_exception_ports_t;

/* 1932 */
struct $570E889B890B90C31902C086A4E1A72C
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  exception_mask_t exception_mask;
};

/* 1933 */
typedef struct $570E889B890B90C31902C086A4E1A72C __Request__host_get_exception_ports_t;

/* 1934 */
typedef struct $AAA459D4261D0AE6E44A9940300EEED3 __Request__host_swap_exception_ports_t;

/* 1935 */
struct $4DFA40B63365A4F8F102F71A8B0E789A
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t task;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
  vm_prot_t desired_access;
};

/* 1936 */
typedef struct $4DFA40B63365A4F8F102F71A8B0E789A __Request__mach_vm_wire_t;

/* 1937 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__host_processor_sets_t;

/* 1938 */
struct $02716A63EF6D1CE7B55C41C6118114F3
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t set_name;
};

/* 1939 */
typedef struct $02716A63EF6D1CE7B55C41C6118114F3 __Request__host_processor_set_priv_t;

/* 1940 */
struct $4A21DC27E1FF000C8E9D847E7FC8D7A5
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t server;
};

/* 1941 */
typedef struct $4A21DC27E1FF000C8E9D847E7FC8D7A5 __Request__host_set_UNDServer_t;

/* 1942 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__host_get_UNDServer_t;

/* 1943 */
struct $E6072DDFB8E9F6B307C6973DA8EC99E8
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t request_data;
  NDR_record_t NDR;
  uint32_t user_log_flags;
  mach_msg_type_number_t request_dataCnt;
};

/* 1944 */
typedef struct $E6072DDFB8E9F6B307C6973DA8EC99E8 __Request__kext_request_t;

/* 1945 */
union __RequestUnion__host_priv_subsystem
{
  __Request__host_get_boot_info_t Request_host_get_boot_info;
  __Request__host_reboot_t Request_host_reboot;
  __Request__host_priv_statistics_t Request_host_priv_statistics;
  __Request__host_default_memory_manager_t Request_host_default_memory_manager;
  __Request__vm_wire_t Request_vm_wire;
  __Request__thread_wire_t Request_thread_wire;
  __Request__vm_allocate_cpm_t Request_vm_allocate_cpm;
  __Request__host_processors_t Request_host_processors;
  __Request__host_get_clock_control_t Request_host_get_clock_control;
  __Request__kmod_create_t Request_kmod_create;
  __Request__kmod_destroy_t Request_kmod_destroy;
  __Request__kmod_control_t Request_kmod_control;
  __Request__host_get_special_port_t Request_host_get_special_port;
  __Request__host_set_special_port_t Request_host_set_special_port;
  __Request__host_set_exception_ports_t Request_host_set_exception_ports;
  __Request__host_get_exception_ports_t Request_host_get_exception_ports;
  __Request__host_swap_exception_ports_t Request_host_swap_exception_ports;
  __Request__mach_vm_wire_t Request_mach_vm_wire;
  __Request__host_processor_sets_t Request_host_processor_sets;
  __Request__host_processor_set_priv_t Request_host_processor_set_priv;
  __Request__host_set_UNDServer_t Request_host_set_UNDServer;
  __Request__host_get_UNDServer_t Request_host_get_UNDServer;
  __Request__kext_request_t Request_kext_request;
};

/* 1946 */
struct $6098A94D07976D87AF6CF48B3B71668B
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t boot_infoOffset;
  mach_msg_type_number_t boot_infoCnt;
  char boot_info[4096];
};

/* 1947 */
typedef struct $6098A94D07976D87AF6CF48B3B71668B __Reply__host_get_boot_info_t;

/* 1948 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__host_reboot_t;

/* 1949 */
typedef struct $9AE4EC4519A4758E054FFF7D68B9B96E __Reply__host_priv_statistics_t;

/* 1950 */
struct $5D158C6CB75AE7023044F715F95E4741
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t default_manager;
};

/* 1951 */
typedef struct $5D158C6CB75AE7023044F715F95E4741 __Reply__host_default_memory_manager_t;

/* 1952 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__vm_wire_t;

/* 1953 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_wire_t;

/* 1954 */
struct $35D44FEEE0F0CF1F092E7EF7060EECF3
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  vm_address_t address;
};

/* 1955 */
typedef struct $35D44FEEE0F0CF1F092E7EF7060EECF3 __Reply__vm_allocate_cpm_t;

/* 1956 */
struct $E6B08438A3E380A644307A8206FCB2C3
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_ports_descriptor_t out_processor_list;
  NDR_record_t NDR;
  mach_msg_type_number_t out_processor_listCnt;
};

/* 1957 */
typedef struct $E6B08438A3E380A644307A8206FCB2C3 __Reply__host_processors_t;

/* 1958 */
struct $85A3F58499CD41900041E596D298F7BD
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t clock_ctrl;
};

/* 1959 */
typedef struct $85A3F58499CD41900041E596D298F7BD __Reply__host_get_clock_control_t;

/* 1960 */
struct $8CA48C4744B84FE8A15C6A1C95881D88
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  kmod_t module;
};

/* 1961 */
typedef struct $8CA48C4744B84FE8A15C6A1C95881D88 __Reply__kmod_create_t;

/* 1962 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__kmod_destroy_t;

/* 1963 */
struct $F751BC857CE986E726E3B81E1109F417
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t data;
  NDR_record_t NDR;
  mach_msg_type_number_t dataCnt;
};

/* 1964 */
typedef struct $F751BC857CE986E726E3B81E1109F417 __Reply__kmod_control_t;

/* 1965 */
struct $895C3030ED8471171A753E975B0073F1
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t port;
};

/* 1966 */
typedef struct $895C3030ED8471171A753E975B0073F1 __Reply__host_get_special_port_t;

/* 1967 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__host_set_special_port_t;

/* 1968 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__host_set_exception_ports_t;

/* 1969 */
struct $86E77FE7C1D5C1A7F16708EB4408760E
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t old_handlers[32];
  NDR_record_t NDR;
  mach_msg_type_number_t masksCnt;
  exception_mask_t masks[32];
  exception_behavior_t old_behaviors[32];
  thread_state_flavor_t old_flavors[32];
};

/* 1970 */
typedef struct $86E77FE7C1D5C1A7F16708EB4408760E __Reply__host_get_exception_ports_t;

/* 1971 */
struct $04E955F16BEA36FE0C042A011EB4548B
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t old_handlerss[32];
  NDR_record_t NDR;
  mach_msg_type_number_t masksCnt;
  exception_mask_t masks[32];
  exception_behavior_t old_behaviors[32];
  thread_state_flavor_t old_flavors[32];
};

/* 1972 */
typedef struct $04E955F16BEA36FE0C042A011EB4548B __Reply__host_swap_exception_ports_t;

/* 1973 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_vm_wire_t;

/* 1974 */
struct $DD6C94731D85F05522829D33E89711E8
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_ports_descriptor_t processor_sets;
  NDR_record_t NDR;
  mach_msg_type_number_t processor_setsCnt;
};

/* 1975 */
typedef struct $DD6C94731D85F05522829D33E89711E8 __Reply__host_processor_sets_t;

/* 1976 */
struct $6152E624A1B8ABE6CFE57C2FBA001E50
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t set;
};

/* 1977 */
typedef struct $6152E624A1B8ABE6CFE57C2FBA001E50 __Reply__host_processor_set_priv_t;

/* 1978 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__host_set_UNDServer_t;

/* 1979 */
typedef struct $4A21DC27E1FF000C8E9D847E7FC8D7A5 __Reply__host_get_UNDServer_t;

/* 1980 */
struct $BC21CCFA06E76747CCFB515BE89D0A1D
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t response_data;
  mach_msg_ool_descriptor_t log_data;
  NDR_record_t NDR;
  mach_msg_type_number_t response_dataCnt;
  mach_msg_type_number_t log_dataCnt;
  kern_return_t op_result;
};

/* 1981 */
typedef struct $BC21CCFA06E76747CCFB515BE89D0A1D __Reply__kext_request_t;

/* 1982 */
union __ReplyUnion__host_priv_subsystem
{
  __Reply__host_get_boot_info_t Reply_host_get_boot_info;
  __Reply__host_reboot_t Reply_host_reboot;
  __Reply__host_priv_statistics_t Reply_host_priv_statistics;
  __Reply__host_default_memory_manager_t Reply_host_default_memory_manager;
  __Reply__vm_wire_t Reply_vm_wire;
  __Reply__thread_wire_t Reply_thread_wire;
  __Reply__vm_allocate_cpm_t Reply_vm_allocate_cpm;
  __Reply__host_processors_t Reply_host_processors;
  __Reply__host_get_clock_control_t Reply_host_get_clock_control;
  __Reply__kmod_create_t Reply_kmod_create;
  __Reply__kmod_destroy_t Reply_kmod_destroy;
  __Reply__kmod_control_t Reply_kmod_control;
  __Reply__host_get_special_port_t Reply_host_get_special_port;
  __Reply__host_set_special_port_t Reply_host_set_special_port;
  __Reply__host_set_exception_ports_t Reply_host_set_exception_ports;
  __Reply__host_get_exception_ports_t Reply_host_get_exception_ports;
  __Reply__host_swap_exception_ports_t Reply_host_swap_exception_ports;
  __Reply__mach_vm_wire_t Reply_mach_vm_wire;
  __Reply__host_processor_sets_t Reply_host_processor_sets;
  __Reply__host_processor_set_priv_t Reply_host_processor_set_priv;
  __Reply__host_set_UNDServer_t Reply_host_set_UNDServer;
  __Reply__host_get_UNDServer_t Reply_host_get_UNDServer;
  __Reply__kext_request_t Reply_kext_request;
};

/* 1983 */
struct $75EA4BA479A035B935731250DE1C571D
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t parent_task;
  mach_msg_port_descriptor_t host;
  mach_msg_ool_ports_descriptor_t ledgers;
  NDR_record_t NDR;
  security_token_t sec_token;
  audit_token_t audit_token;
  mach_msg_type_number_t ledgersCnt;
  boolean_t inherit_memory;
};

/* 1984 */
typedef struct $75EA4BA479A035B935731250DE1C571D __Request__host_security_create_task_token_t;

/* 1985 */
struct $B02284AD65AA328A320589F0FB1EA04E
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t target_task;
  mach_msg_port_descriptor_t host;
  NDR_record_t NDR;
  security_token_t sec_token;
  audit_token_t audit_token;
};

/* 1986 */
typedef struct $B02284AD65AA328A320589F0FB1EA04E __Request__host_security_set_task_token_t;

/* 1987 */
union __RequestUnion__host_security_subsystem
{
  __Request__host_security_create_task_token_t Request_host_security_create_task_token;
  __Request__host_security_set_task_token_t Request_host_security_set_task_token;
};

/* 1988 */
struct $022DF65B3F1B42DD52912CA5DA62E68B
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t child_task;
};

/* 1989 */
typedef struct $022DF65B3F1B42DD52912CA5DA62E68B __Reply__host_security_create_task_token_t;

/* 1990 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__host_security_set_task_token_t;

/* 1991 */
union __ReplyUnion__host_security_subsystem
{
  __Reply__host_security_create_task_token_t Reply_host_security_create_task_token;
  __Reply__host_security_set_task_token_t Reply_host_security_set_task_token;
};

/* 1992 */
struct $E0D32F5ED5D9E8A28F69FD9E2CBC2687
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int lock_id;
};

/* 1993 */
typedef struct $E0D32F5ED5D9E8A28F69FD9E2CBC2687 __Request__lock_acquire_t;

/* 1994 */
typedef struct $E0D32F5ED5D9E8A28F69FD9E2CBC2687 __Request__lock_release_t;

/* 1995 */
typedef struct $E0D32F5ED5D9E8A28F69FD9E2CBC2687 __Request__lock_try_t;

/* 1996 */
typedef struct $E0D32F5ED5D9E8A28F69FD9E2CBC2687 __Request__lock_make_stable_t;

/* 1997 */
typedef struct $E0D32F5ED5D9E8A28F69FD9E2CBC2687 __Request__lock_handoff_t;

/* 1998 */
typedef struct $E0D32F5ED5D9E8A28F69FD9E2CBC2687 __Request__lock_handoff_accept_t;

/* 1999 */
union __RequestUnion__lock_set_subsystem
{
  __Request__lock_acquire_t Request_lock_acquire;
  __Request__lock_release_t Request_lock_release;
  __Request__lock_try_t Request_lock_try;
  __Request__lock_make_stable_t Request_lock_make_stable;
  __Request__lock_handoff_t Request_lock_handoff;
  __Request__lock_handoff_accept_t Request_lock_handoff_accept;
};

/* 2000 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__lock_acquire_t;

/* 2001 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__lock_release_t;

/* 2002 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__lock_try_t;

/* 2003 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__lock_make_stable_t;

/* 2004 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__lock_handoff_t;

/* 2005 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__lock_handoff_accept_t;

/* 2006 */
union __ReplyUnion__lock_set_subsystem
{
  __Reply__lock_acquire_t Reply_lock_acquire;
  __Reply__lock_release_t Reply_lock_release;
  __Reply__lock_try_t Reply_lock_try;
  __Reply__lock_make_stable_t Reply_lock_make_stable;
  __Reply__lock_handoff_t Reply_lock_handoff;
  __Reply__lock_handoff_accept_t Reply_lock_handoff_accept;
};

/* 2007 */
struct catch_mach_exc_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t reserved;
  struct routine_descriptor routine[3];
};

/* 2008 */
struct $305BA53B9E9D2EB8C578A0135944AADD
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t thread;
  mach_msg_port_descriptor_t task;
  NDR_record_t NDR;
  exception_type_t exception;
  mach_msg_type_number_t codeCnt;
  int64_t code[2];
};

/* 2009 */
typedef struct $305BA53B9E9D2EB8C578A0135944AADD __Request__mach_exception_raise_t;

/* 2010 */
struct $C0E71C8464D98C282D98245C336C2CAC
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  exception_type_t exception;
  mach_msg_type_number_t codeCnt;
  int64_t code[2];
  int flavor;
  mach_msg_type_number_t old_stateCnt;
  natural_t old_state[614];
};

/* 2011 */
typedef struct $C0E71C8464D98C282D98245C336C2CAC __Request__mach_exception_raise_state_t;

/* 2012 */
struct $DCE919EE3128C8EDCB45C8FBA887684D
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t thread;
  mach_msg_port_descriptor_t task;
  NDR_record_t NDR;
  exception_type_t exception;
  mach_msg_type_number_t codeCnt;
  int64_t code[2];
  int flavor;
  mach_msg_type_number_t old_stateCnt;
  natural_t old_state[614];
};

/* 2013 */
typedef struct $DCE919EE3128C8EDCB45C8FBA887684D __Request__mach_exception_raise_state_identity_t;

/* 2014 */
union __RequestUnion__catch_mach_exc_subsystem
{
  __Request__mach_exception_raise_t Request_mach_exception_raise;
  __Request__mach_exception_raise_state_t Request_mach_exception_raise_state;
  __Request__mach_exception_raise_state_identity_t Request_mach_exception_raise_state_identity;
};

/* 2015 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_exception_raise_t;

/* 2016 */
typedef struct $7FF3AC50C98488AFC373CD2048E9D960 __Reply__mach_exception_raise_state_t;

/* 2017 */
typedef struct $7FF3AC50C98488AFC373CD2048E9D960 __Reply__mach_exception_raise_state_identity_t;

/* 2018 */
union __ReplyUnion__catch_mach_exc_subsystem
{
  __Reply__mach_exception_raise_t Reply_mach_exception_raise;
  __Reply__mach_exception_raise_state_t Reply_mach_exception_raise_state;
  __Reply__mach_exception_raise_state_identity_t Reply_mach_exception_raise_state_identity;
};

/* 2019 */
struct do_notify_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t reserved;
  struct routine_descriptor routine[9];
};

/* 2020 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_notify_port_deleted_t;

/* 2021 */
struct $A733C89356794EFD2FF3FB9CB716ED2C
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t rights;
};

/* 2022 */
typedef struct $A733C89356794EFD2FF3FB9CB716ED2C __Request__mach_notify_port_destroyed_t;

/* 2023 */
struct $2F92F22D3F2332743DD1CE7A5D6C3842
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_mscount_t mscount;
};

/* 2024 */
typedef struct $2F92F22D3F2332743DD1CE7A5D6C3842 __Request__mach_notify_no_senders_t;

/* 2025 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__mach_notify_send_once_t;

/* 2026 */
typedef struct $964192CEB55AB863D280DFA6F3FB3A04 __Request__mach_notify_dead_name_t;

/* 2027 */
union __RequestUnion__do_notify_subsystem
{
  __Request__mach_notify_port_deleted_t Request_mach_notify_port_deleted;
  __Request__mach_notify_port_destroyed_t Request_mach_notify_port_destroyed;
  __Request__mach_notify_no_senders_t Request_mach_notify_no_senders;
  __Request__mach_notify_send_once_t Request_mach_notify_send_once;
  __Request__mach_notify_dead_name_t Request_mach_notify_dead_name;
};

/* 2028 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_notify_port_deleted_t;

/* 2029 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_notify_port_destroyed_t;

/* 2030 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_notify_no_senders_t;

/* 2031 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_notify_send_once_t;

/* 2032 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_notify_dead_name_t;

/* 2033 */
union __ReplyUnion__do_notify_subsystem
{
  __Reply__mach_notify_port_deleted_t Reply_mach_notify_port_deleted;
  __Reply__mach_notify_port_destroyed_t Reply_mach_notify_port_destroyed;
  __Reply__mach_notify_no_senders_t Reply_mach_notify_no_senders;
  __Reply__mach_notify_send_once_t Reply_mach_notify_send_once;
  __Reply__mach_notify_dead_name_t Reply_mach_notify_dead_name;
};

/* 2034 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__processor_start_t;

/* 2035 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__processor_exit_t;

/* 2036 */
struct $811E4ED55A10642188C4118084F6638D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  processor_flavor_t flavor;
  mach_msg_type_number_t processor_info_outCnt;
};

/* 2037 */
typedef struct $811E4ED55A10642188C4118084F6638D __Request__processor_info_t;

/* 2038 */
struct $7A976969AC78F0BFAFC331FA8FA5D1F5
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_msg_type_number_t processor_cmdCnt;
  integer_t processor_cmd[12];
};

/* 2039 */
typedef struct $7A976969AC78F0BFAFC331FA8FA5D1F5 __Request__processor_control_t;

/* 2040 */
struct $E3770765B8F125586EBF9F56A7C588AE
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t new_set;
  NDR_record_t NDR;
  boolean_t wait;
};

/* 2041 */
typedef struct $E3770765B8F125586EBF9F56A7C588AE __Request__processor_assign_t;

/* 2042 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__processor_get_assignment_t;

/* 2043 */
union __RequestUnion__processor_subsystem
{
  __Request__processor_start_t Request_processor_start;
  __Request__processor_exit_t Request_processor_exit;
  __Request__processor_info_t Request_processor_info;
  __Request__processor_control_t Request_processor_control;
  __Request__processor_assign_t Request_processor_assign;
  __Request__processor_get_assignment_t Request_processor_get_assignment;
};

/* 2044 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__processor_start_t;

/* 2045 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__processor_exit_t;

/* 2046 */
struct $310A8D106580E32CB8406F0677DE56D4
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t host;
  NDR_record_t NDR;
  mach_msg_type_number_t processor_info_outCnt;
  integer_t processor_info_out[12];
};

/* 2047 */
typedef struct $310A8D106580E32CB8406F0677DE56D4 __Reply__processor_info_t;

/* 2048 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__processor_control_t;

/* 2049 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__processor_assign_t;

/* 2050 */
struct $68FB0408FA159A0C33B1ED897BEA1633
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t assigned_set;
};

/* 2051 */
typedef struct $68FB0408FA159A0C33B1ED897BEA1633 __Reply__processor_get_assignment_t;

/* 2052 */
union __ReplyUnion__processor_subsystem
{
  __Reply__processor_start_t Reply_processor_start;
  __Reply__processor_exit_t Reply_processor_exit;
  __Reply__processor_info_t Reply_processor_info;
  __Reply__processor_control_t Reply_processor_control;
  __Reply__processor_assign_t Reply_processor_assign;
  __Reply__processor_get_assignment_t Reply_processor_get_assignment;
};

/* 2053 */
struct $8BC19B0E9803017C606D4C5F7CC73F12
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  processor_set_flavor_t flavor;
  mach_msg_type_number_t info_outCnt;
};

/* 2054 */
typedef struct $8BC19B0E9803017C606D4C5F7CC73F12 __Request__processor_set_statistics_t;

/* 2055 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__processor_set_destroy_t;

/* 2056 */
struct $026D77552C44F7F4E7EFD7FBC55588B4
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int max_priority;
  boolean_t change_threads;
};

/* 2057 */
typedef struct $026D77552C44F7F4E7EFD7FBC55588B4 __Request__processor_set_max_priority_t;

/* 2058 */
struct $53D277A3CB566FE23F11B5B2FC4DFC2A
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int policy;
};

/* 2059 */
typedef struct $53D277A3CB566FE23F11B5B2FC4DFC2A __Request__processor_set_policy_enable_t;

/* 2060 */
struct $023CB08D15A6B5E024F7DE2E495500CD
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int policy;
  boolean_t change_threads;
};

/* 2061 */
typedef struct $023CB08D15A6B5E024F7DE2E495500CD __Request__processor_set_policy_disable_t;

/* 2062 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__processor_set_tasks_t;

/* 2063 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__processor_set_threads_t;

/* 2064 */
struct $CD2F676EB4DBF00D2A9CC98824780183
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  processor_set_flavor_t flavor;
  mach_msg_type_number_t policy_infoCnt;
  integer_t policy_info[5];
  boolean_t change;
};

/* 2065 */
typedef struct $CD2F676EB4DBF00D2A9CC98824780183 __Request__processor_set_policy_control_t;

/* 2066 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__processor_set_stack_usage_t;

/* 2067 */
struct $B511B905621D3D01D482B4BCF14A1EF8
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int flavor;
  mach_msg_type_number_t info_outCnt;
};

/* 2068 */
typedef struct $B511B905621D3D01D482B4BCF14A1EF8 __Request__processor_set_info_t;

/* 2069 */
union __RequestUnion__processor_set_subsystem
{
  __Request__processor_set_statistics_t Request_processor_set_statistics;
  __Request__processor_set_destroy_t Request_processor_set_destroy;
  __Request__processor_set_max_priority_t Request_processor_set_max_priority;
  __Request__processor_set_policy_enable_t Request_processor_set_policy_enable;
  __Request__processor_set_policy_disable_t Request_processor_set_policy_disable;
  __Request__processor_set_tasks_t Request_processor_set_tasks;
  __Request__processor_set_threads_t Request_processor_set_threads;
  __Request__processor_set_policy_control_t Request_processor_set_policy_control;
  __Request__processor_set_stack_usage_t Request_processor_set_stack_usage;
  __Request__processor_set_info_t Request_processor_set_info;
};

/* 2070 */
struct $7ACD1EFCC0CCCC4A13ECEAFE89A2D85F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t info_outCnt;
  integer_t info_out[5];
};

/* 2071 */
typedef struct $7ACD1EFCC0CCCC4A13ECEAFE89A2D85F __Reply__processor_set_statistics_t;

/* 2072 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__processor_set_destroy_t;

/* 2073 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__processor_set_max_priority_t;

/* 2074 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__processor_set_policy_enable_t;

/* 2075 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__processor_set_policy_disable_t;

/* 2076 */
struct $9FF7A96A283F5DC6004B8B573254F3F7
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_ports_descriptor_t task_list;
  NDR_record_t NDR;
  mach_msg_type_number_t task_listCnt;
};

/* 2077 */
typedef struct $9FF7A96A283F5DC6004B8B573254F3F7 __Reply__processor_set_tasks_t;

/* 2078 */
struct $077B6D9EDEC6060EDEC953CEF5FA70D2
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_ports_descriptor_t thread_list;
  NDR_record_t NDR;
  mach_msg_type_number_t thread_listCnt;
};

/* 2079 */
typedef struct $077B6D9EDEC6060EDEC953CEF5FA70D2 __Reply__processor_set_threads_t;

/* 2080 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__processor_set_policy_control_t;

/* 2081 */
struct $6809B94A704F1FA89769BCC54DF85905
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  unsigned int ltotal;
  vm_size_t space;
  vm_size_t resident;
  vm_size_t maxusage;
  vm_offset_t maxstack;
};

/* 2082 */
typedef struct $6809B94A704F1FA89769BCC54DF85905 __Reply__processor_set_stack_usage_t;

/* 2083 */
struct $A34B5E5EA1ECF758E667A73F8FCC15AE
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t host;
  NDR_record_t NDR;
  mach_msg_type_number_t info_outCnt;
  integer_t info_out[5];
};

/* 2084 */
typedef struct $A34B5E5EA1ECF758E667A73F8FCC15AE __Reply__processor_set_info_t;

/* 2085 */
union __ReplyUnion__processor_set_subsystem
{
  __Reply__processor_set_statistics_t Reply_processor_set_statistics;
  __Reply__processor_set_destroy_t Reply_processor_set_destroy;
  __Reply__processor_set_max_priority_t Reply_processor_set_max_priority;
  __Reply__processor_set_policy_enable_t Reply_processor_set_policy_enable;
  __Reply__processor_set_policy_disable_t Reply_processor_set_policy_disable;
  __Reply__processor_set_tasks_t Reply_processor_set_tasks;
  __Reply__processor_set_threads_t Reply_processor_set_threads;
  __Reply__processor_set_policy_control_t Reply_processor_set_policy_control;
  __Reply__processor_set_stack_usage_t Reply_processor_set_stack_usage;
  __Reply__processor_set_info_t Reply_processor_set_info;
};

/* 2088 */
struct $EB0564150FEABD33A0E197B89ED7B595
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_ports_descriptor_t ledgers;
  NDR_record_t NDR;
  mach_msg_type_number_t ledgersCnt;
  boolean_t inherit_memory;
};

/* 2089 */
typedef struct $EB0564150FEABD33A0E197B89ED7B595 __Request__task_create_t;

/* 2090 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_terminate_t;

/* 2091 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_threads_t;

/* 2092 */
struct $5159EE440E76BBF4696A72DC8A5CB803
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_ports_descriptor_t init_port_set;
  NDR_record_t NDR;
  mach_msg_type_number_t init_port_setCnt;
};

/* 2093 */
typedef struct $5159EE440E76BBF4696A72DC8A5CB803 __Request__mach_ports_register_t;

/* 2094 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__mach_ports_lookup_t;

/* 2095 */
struct $C1F4A6C7789064DE91FD2898B2BC2430
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  task_flavor_t flavor;
  mach_msg_type_number_t task_info_outCnt;
};

/* 2096 */
typedef struct $C1F4A6C7789064DE91FD2898B2BC2430 __Request__task_info_t;

/* 2097 */
struct $6FBDD83D2A4A4967EC177FE171DDFB0F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  task_flavor_t flavor;
  mach_msg_type_number_t task_info_inCnt;
  integer_t task_info_in[52];
};

/* 2098 */
typedef struct $6FBDD83D2A4A4967EC177FE171DDFB0F __Request__task_set_info_t;

/* 2099 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_suspend_t;

/* 2100 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_resume_t;

/* 2101 */
struct $261D57C93E8F8A1DF04CEDD31089C99D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int which_port;
};

/* 2102 */
typedef struct $261D57C93E8F8A1DF04CEDD31089C99D __Request__task_get_special_port_t;

/* 2103 */
struct $9CCDC36F29A8706800ECEA81D0A85CCB
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t special_port;
  NDR_record_t NDR;
  int which_port;
};

/* 2104 */
typedef struct $9CCDC36F29A8706800ECEA81D0A85CCB __Request__task_set_special_port_t;

/* 2105 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__thread_create_t;

/* 2106 */
struct $327A32E1C770CB4CD23A21AD633CD5D6
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  thread_state_flavor_t flavor;
  mach_msg_type_number_t new_stateCnt;
  natural_t new_state[614];
};

/* 2107 */
typedef struct $327A32E1C770CB4CD23A21AD633CD5D6 __Request__thread_create_running_t;

/* 2108 */
typedef struct $AAA459D4261D0AE6E44A9940300EEED3 __Request__task_set_exception_ports_t;

/* 2109 */
typedef struct $570E889B890B90C31902C086A4E1A72C __Request__task_get_exception_ports_t;

/* 2110 */
typedef struct $AAA459D4261D0AE6E44A9940300EEED3 __Request__task_swap_exception_ports_t;

/* 2111 */
struct $744510FA26BFFE7DC2F6EB413080E87F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int n_ulocks;
  int policy;
};

/* 2112 */
typedef struct $744510FA26BFFE7DC2F6EB413080E87F __Request__lock_set_create_t;

/* 2113 */
struct $554C962F78B657C4F5B12068F5C53548
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t lock_set;
};

/* 2114 */
typedef struct $554C962F78B657C4F5B12068F5C53548 __Request__lock_set_destroy_t;

/* 2115 */
struct $B220C319596AF44C856DB4D8981EB69E
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int policy;
  int value;
};

/* 2116 */
typedef struct $B220C319596AF44C856DB4D8981EB69E __Request__semaphore_create_t;

/* 2117 */
struct $4C7C75A8F0CDCD6F3F0D69B67A890414
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t semaphore;
};

/* 2118 */
typedef struct $4C7C75A8F0CDCD6F3F0D69B67A890414 __Request__semaphore_destroy_t;

/* 2119 */
struct $71241A4E99E0CD81C5605699B1519B44
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  task_policy_flavor_t flavor;
  mach_msg_type_number_t policy_infoCnt;
  integer_t policy_info[16];
};

/* 2120 */
typedef struct $71241A4E99E0CD81C5605699B1519B44 __Request__task_policy_set_t;

/* 2121 */
struct $6DDC211059F516B7765FCBBA7AF28BE9
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  task_policy_flavor_t flavor;
  mach_msg_type_number_t policy_infoCnt;
  boolean_t get_default;
};

/* 2122 */
typedef struct $6DDC211059F516B7765FCBBA7AF28BE9 __Request__task_policy_get_t;

/* 2123 */
struct $C96D8938806E9624E6A4E4C782CA750F
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t reply;
};

/* 2124 */
typedef struct $C96D8938806E9624E6A4E4C782CA750F __Request__task_sample_t;

/* 2125 */
struct $CB5238BCFB51DA40E924B58788952210
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  policy_t policy;
  mach_msg_type_number_t baseCnt;
  integer_t base[5];
  boolean_t set_limit;
  boolean_t change;
};

/* 2126 */
typedef struct $CB5238BCFB51DA40E924B58788952210 __Request__task_policy_t;

/* 2127 */
struct $2E32AEA10426B3E838841085B1DD3062
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t routine_entry_pt;
  int routine_number;
};

/* 2128 */
typedef struct $2E32AEA10426B3E838841085B1DD3062 __Request__task_set_emulation_t;

/* 2129 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_get_emulation_vector_t;

/* 2130 */
struct $DB54407B8CF3705EF489918FC1CDF652
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t emulation_vector;
  NDR_record_t NDR;
  int vector_start;
  mach_msg_type_number_t emulation_vectorCnt;
};

/* 2131 */
typedef struct $DB54407B8CF3705EF489918FC1CDF652 __Request__task_set_emulation_vector_t;

/* 2132 */
struct $101863C97288CADE05D65C3B628E710D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t basepc;
  vm_address_t boundspc;
};

/* 2133 */
typedef struct $101863C97288CADE05D65C3B628E710D __Request__task_set_ras_pc_t;

/* 2134 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_zone_info_t;

/* 2135 */
struct $EACA0ED05F39CA81FEA6682DDD8063D5
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t new_set;
  NDR_record_t NDR;
  boolean_t assign_threads;
};

/* 2136 */
typedef struct $EACA0ED05F39CA81FEA6682DDD8063D5 __Request__task_assign_t;

/* 2137 */
struct $EED68FC5C38A6678BCD925124777C6F7
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  boolean_t assign_threads;
};

/* 2138 */
typedef struct $EED68FC5C38A6678BCD925124777C6F7 __Request__task_assign_default_t;

/* 2139 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_get_assignment_t;

/* 2140 */
struct $38083D9DC1ABB237C8AD207CCFA4E3D2
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t pset;
  NDR_record_t NDR;
  policy_t policy;
  mach_msg_type_number_t baseCnt;
  integer_t base[5];
  mach_msg_type_number_t limitCnt;
  integer_t limit[1];
  boolean_t change;
};

/* 2141 */
typedef struct $38083D9DC1ABB237C8AD207CCFA4E3D2 __Request__task_set_policy_t;

/* 2142 */
struct $A18F90CA393066DF0F1EB2BA4BB5634D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  thread_state_flavor_t flavor;
  mach_msg_type_number_t old_stateCnt;
};

/* 2143 */
typedef struct $A18F90CA393066DF0F1EB2BA4BB5634D __Request__task_get_state_t;

/* 2144 */
typedef struct $327A32E1C770CB4CD23A21AD633CD5D6 __Request__task_set_state_t;

/* 2145 */
struct $E72984CD86A1309C01F634E15A1E28B9
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int new_limit;
};

/* 2146 */
typedef struct $E72984CD86A1309C01F634E15A1E28B9 __Request__task_set_phys_footprint_limit_t;

/* 2147 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_suspend2_t;

/* 2148 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_resume2_t;

/* 2149 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_purgable_info_t;

/* 2150 */
struct $2F91891A0FAE7E7DD7C82D128FBF8465
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_voucher_selector_t which;
};

/* 2151 */
typedef struct $2F91891A0FAE7E7DD7C82D128FBF8465 __Request__task_get_mach_voucher_t;

/* 2152 */
typedef struct $55F043C4C53CD699F417A5D97368A0D6 __Request__task_set_mach_voucher_t;

/* 2153 */
struct $7EECE29741C9664541125F7C8E8B3F09
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t new_voucher;
  mach_msg_port_descriptor_t old_voucher;
};

/* 2154 */
typedef struct $7EECE29741C9664541125F7C8E8B3F09 __Request__task_swap_mach_voucher_t;

/* 2155 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_generate_corpse_t;

/* 2156 */
struct $EF0F7A9D4E00AF7C6EDF72AE3A682F1A
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t corspe_task;
};

/* 2157 */
typedef struct $EF0F7A9D4E00AF7C6EDF72AE3A682F1A __Request__task_map_corpse_info_t;

/* 2158 */
struct $17915A90C2AB81B76CAA5094F4D4D990
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t dyld_images;
  NDR_record_t NDR;
  mach_msg_type_number_t dyld_imagesCnt;
};

/* 2159 */
typedef struct $17915A90C2AB81B76CAA5094F4D4D990 __Request__task_register_dyld_image_infos_t;

/* 2160 */
typedef struct $17915A90C2AB81B76CAA5094F4D4D990 __Request__task_unregister_dyld_image_infos_t;

/* 2161 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_get_dyld_image_infos_t;

/* 2162 */
struct $6CB69A4AAC5C280F18019AF3328923AD
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  dyld_kernel_image_info_t dyld_cache_image;
  boolean_t no_cache;
  boolean_t private_cache;
};

/* 2163 */
typedef struct $6CB69A4AAC5C280F18019AF3328923AD __Request__task_register_dyld_shared_cache_image_info_t;

/* 2164 */
struct $C2862528E43071E4324B3AAB3CB6EC1A
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  uint8_t dyld_state;
  char dyld_statePad[3];
};

/* 2165 */
typedef struct $C2862528E43071E4324B3AAB3CB6EC1A __Request__task_register_dyld_set_dyld_state_t;

/* 2166 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__task_register_dyld_get_process_state_t;

/* 2167 */
typedef struct $EF0F7A9D4E00AF7C6EDF72AE3A682F1A __Request__task_map_corpse_info_64_t;

/* 2168 */
struct $5F984B1C790B1E69A8431BE96C3E1324
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  task_inspect_flavor_t flavor;
  mach_msg_type_number_t info_outCnt;
};

/* 2169 */
typedef struct $5F984B1C790B1E69A8431BE96C3E1324 __Request__task_inspect_t;

/* 2170 */
union __RequestUnion__task_subsystem
{
  __Request__task_create_t Request_task_create;
  __Request__task_terminate_t Request_task_terminate;
  __Request__task_threads_t Request_task_threads;
  __Request__mach_ports_register_t Request_mach_ports_register;
  __Request__mach_ports_lookup_t Request_mach_ports_lookup;
  __Request__task_info_t Request_task_info;
  __Request__task_set_info_t Request_task_set_info;
  __Request__task_suspend_t Request_task_suspend;
  __Request__task_resume_t Request_task_resume;
  __Request__task_get_special_port_t Request_task_get_special_port;
  __Request__task_set_special_port_t Request_task_set_special_port;
  __Request__thread_create_t Request_thread_create;
  __Request__thread_create_running_t Request_thread_create_running;
  __Request__task_set_exception_ports_t Request_task_set_exception_ports;
  __Request__task_get_exception_ports_t Request_task_get_exception_ports;
  __Request__task_swap_exception_ports_t Request_task_swap_exception_ports;
  __Request__lock_set_create_t Request_lock_set_create;
  __Request__lock_set_destroy_t Request_lock_set_destroy;
  __Request__semaphore_create_t Request_semaphore_create;
  __Request__semaphore_destroy_t Request_semaphore_destroy;
  __Request__task_policy_set_t Request_task_policy_set;
  __Request__task_policy_get_t Request_task_policy_get;
  __Request__task_sample_t Request_task_sample;
  __Request__task_policy_t Request_task_policy;
  __Request__task_set_emulation_t Request_task_set_emulation;
  __Request__task_get_emulation_vector_t Request_task_get_emulation_vector;
  __Request__task_set_emulation_vector_t Request_task_set_emulation_vector;
  __Request__task_set_ras_pc_t Request_task_set_ras_pc;
  __Request__task_zone_info_t Request_task_zone_info;
  __Request__task_assign_t Request_task_assign;
  __Request__task_assign_default_t Request_task_assign_default;
  __Request__task_get_assignment_t Request_task_get_assignment;
  __Request__task_set_policy_t Request_task_set_policy;
  __Request__task_get_state_t Request_task_get_state;
  __Request__task_set_state_t Request_task_set_state;
  __Request__task_set_phys_footprint_limit_t Request_task_set_phys_footprint_limit;
  __Request__task_suspend2_t Request_task_suspend2;
  __Request__task_resume2_t Request_task_resume2;
  __Request__task_purgable_info_t Request_task_purgable_info;
  __Request__task_get_mach_voucher_t Request_task_get_mach_voucher;
  __Request__task_set_mach_voucher_t Request_task_set_mach_voucher;
  __Request__task_swap_mach_voucher_t Request_task_swap_mach_voucher;
  __Request__task_generate_corpse_t Request_task_generate_corpse;
  __Request__task_map_corpse_info_t Request_task_map_corpse_info;
  __Request__task_register_dyld_image_infos_t Request_task_register_dyld_image_infos;
  __Request__task_unregister_dyld_image_infos_t Request_task_unregister_dyld_image_infos;
  __Request__task_get_dyld_image_infos_t Request_task_get_dyld_image_infos;
  __Request__task_register_dyld_shared_cache_image_info_t Request_task_register_dyld_shared_cache_image_info;
  __Request__task_register_dyld_set_dyld_state_t Request_task_register_dyld_set_dyld_state;
  __Request__task_register_dyld_get_process_state_t Request_task_register_dyld_get_process_state;
  __Request__task_map_corpse_info_64_t Request_task_map_corpse_info_64;
  __Request__task_inspect_t Request_task_inspect;
};

/* 2171 */
typedef struct $022DF65B3F1B42DD52912CA5DA62E68B __Reply__task_create_t;

/* 2172 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_terminate_t;

/* 2173 */
struct $8E2EB7572FA8D1EF8BAFC1210CEE615F
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_ports_descriptor_t act_list;
  NDR_record_t NDR;
  mach_msg_type_number_t act_listCnt;
};

/* 2174 */
typedef struct $8E2EB7572FA8D1EF8BAFC1210CEE615F __Reply__task_threads_t;

/* 2175 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_ports_register_t;

/* 2176 */
typedef struct $5159EE440E76BBF4696A72DC8A5CB803 __Reply__mach_ports_lookup_t;

/* 2177 */
struct $5878404BA8B67D31C049303BC27B396E
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[52];
};

/* 2178 */
typedef struct $5878404BA8B67D31C049303BC27B396E __Reply__task_info_t;

/* 2179 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_set_info_t;

/* 2180 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_suspend_t;

/* 2181 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_resume_t;

/* 2182 */
struct $D8B9255234A9249A3B8E5317285D96CD
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t special_port;
};

/* 2183 */
typedef struct $D8B9255234A9249A3B8E5317285D96CD __Reply__task_get_special_port_t;

/* 2184 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_set_special_port_t;

/* 2185 */
struct $C9659587351EA876DAE87E0FDCB60636
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t child_act;
};

/* 2186 */
typedef struct $C9659587351EA876DAE87E0FDCB60636 __Reply__thread_create_t;

/* 2187 */
typedef struct $C9659587351EA876DAE87E0FDCB60636 __Reply__thread_create_running_t;

/* 2188 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_set_exception_ports_t;

/* 2189 */
typedef struct $86E77FE7C1D5C1A7F16708EB4408760E __Reply__task_get_exception_ports_t;

/* 2190 */
typedef struct $04E955F16BEA36FE0C042A011EB4548B __Reply__task_swap_exception_ports_t;

/* 2191 */
struct $EB38849B303C56855F9EA051EFBF470A
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t new_lock_set;
};

/* 2192 */
typedef struct $EB38849B303C56855F9EA051EFBF470A __Reply__lock_set_create_t;

/* 2193 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__lock_set_destroy_t;

/* 2194 */
typedef struct $4C7C75A8F0CDCD6F3F0D69B67A890414 __Reply__semaphore_create_t;

/* 2195 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__semaphore_destroy_t;

/* 2196 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_policy_set_t;

/* 2197 */
struct $43938660127A80F965F50F83032F488D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t policy_infoCnt;
  integer_t policy_info[16];
  boolean_t get_default;
};

/* 2198 */
typedef struct $43938660127A80F965F50F83032F488D __Reply__task_policy_get_t;

/* 2199 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_sample_t;

/* 2200 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_policy_t;

/* 2201 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_set_emulation_t;

/* 2202 */
typedef struct $DB54407B8CF3705EF489918FC1CDF652 __Reply__task_get_emulation_vector_t;

/* 2203 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_set_emulation_vector_t;

/* 2204 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_set_ras_pc_t;

/* 2205 */
typedef struct $B714EB00005D59CD1E60DCC8892D0FC2 __Reply__task_zone_info_t;

/* 2206 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_assign_t;

/* 2207 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_assign_default_t;

/* 2208 */
typedef struct $68FB0408FA159A0C33B1ED897BEA1633 __Reply__task_get_assignment_t;

/* 2209 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_set_policy_t;

/* 2210 */
struct $FC4A2E9D82E71CF21078B6AB141D2956
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t old_stateCnt;
  natural_t old_state[614];
};

/* 2211 */
typedef struct $FC4A2E9D82E71CF21078B6AB141D2956 __Reply__task_get_state_t;

/* 2212 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_set_state_t;

/* 2213 */
struct $1DE7B452C5078B07B2FB46A2FF51B38D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  int old_limit;
};

/* 2214 */
typedef struct $1DE7B452C5078B07B2FB46A2FF51B38D __Reply__task_set_phys_footprint_limit_t;

/* 2215 */
struct $13BA1E3A6002E5349B6A80A9C99D5E96
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t suspend_token;
};

/* 2216 */
typedef struct $13BA1E3A6002E5349B6A80A9C99D5E96 __Reply__task_suspend2_t;

/* 2217 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_resume2_t;

/* 2218 */
struct $EB071C730BDB38C5BCA7AA235CC3E739
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  task_purgable_info_t stats;
};

/* 2219 */
typedef struct $EB071C730BDB38C5BCA7AA235CC3E739 __Reply__task_purgable_info_t;

/* 2220 */
typedef struct $55F043C4C53CD699F417A5D97368A0D6 __Reply__task_get_mach_voucher_t;

/* 2221 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_set_mach_voucher_t;

/* 2222 */
struct $4C95C37AB88C02828887BBFB1DA52BAC
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t old_voucher;
};

/* 2223 */
typedef struct $4C95C37AB88C02828887BBFB1DA52BAC __Reply__task_swap_mach_voucher_t;

/* 2224 */
struct $214AA416DF4A7AC71DC5A2E07A773E4D
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t corpse_task_port;
};

/* 2225 */
typedef struct $214AA416DF4A7AC71DC5A2E07A773E4D __Reply__task_generate_corpse_t;

/* 2226 */
struct $A1DCF0936D6F264DE5DE82AEB09833EC
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  vm_address_t kcd_addr_begin;
  uint32_t kcd_size;
};

/* 2227 */
typedef struct $A1DCF0936D6F264DE5DE82AEB09833EC __Reply__task_map_corpse_info_t;

/* 2228 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_register_dyld_image_infos_t;

/* 2229 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_unregister_dyld_image_infos_t;

/* 2230 */
typedef struct $17915A90C2AB81B76CAA5094F4D4D990 __Reply__task_get_dyld_image_infos_t;

/* 2231 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_register_dyld_shared_cache_image_info_t;

/* 2232 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_register_dyld_set_dyld_state_t;

/* 2233 */
struct $6AC06D1DA558A9BF7B72681BEAC1C864
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  dyld_kernel_process_info_t dyld_process_state;
};

/* 2234 */
typedef struct $6AC06D1DA558A9BF7B72681BEAC1C864 __Reply__task_register_dyld_get_process_state_t;

/* 2235 */
struct $F3363FD1B5824429BF2B0FD542B6BBB7
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_vm_address_t kcd_addr_begin;
  mach_vm_size_t kcd_size;
};

/* 2236 */
typedef struct $F3363FD1B5824429BF2B0FD542B6BBB7 __Reply__task_map_corpse_info_64_t;

/* 2237 */
struct $2E2CB887B245AC9B977D870C14BCD5B6
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t info_outCnt;
  integer_t info_out[4];
};

/* 2238 */
typedef struct $2E2CB887B245AC9B977D870C14BCD5B6 __Reply__task_inspect_t;

/* 2239 */
union __ReplyUnion__task_subsystem
{
  __Reply__task_create_t Reply_task_create;
  __Reply__task_terminate_t Reply_task_terminate;
  __Reply__task_threads_t Reply_task_threads;
  __Reply__mach_ports_register_t Reply_mach_ports_register;
  __Reply__mach_ports_lookup_t Reply_mach_ports_lookup;
  __Reply__task_info_t Reply_task_info;
  __Reply__task_set_info_t Reply_task_set_info;
  __Reply__task_suspend_t Reply_task_suspend;
  __Reply__task_resume_t Reply_task_resume;
  __Reply__task_get_special_port_t Reply_task_get_special_port;
  __Reply__task_set_special_port_t Reply_task_set_special_port;
  __Reply__thread_create_t Reply_thread_create;
  __Reply__thread_create_running_t Reply_thread_create_running;
  __Reply__task_set_exception_ports_t Reply_task_set_exception_ports;
  __Reply__task_get_exception_ports_t Reply_task_get_exception_ports;
  __Reply__task_swap_exception_ports_t Reply_task_swap_exception_ports;
  __Reply__lock_set_create_t Reply_lock_set_create;
  __Reply__lock_set_destroy_t Reply_lock_set_destroy;
  __Reply__semaphore_create_t Reply_semaphore_create;
  __Reply__semaphore_destroy_t Reply_semaphore_destroy;
  __Reply__task_policy_set_t Reply_task_policy_set;
  __Reply__task_policy_get_t Reply_task_policy_get;
  __Reply__task_sample_t Reply_task_sample;
  __Reply__task_policy_t Reply_task_policy;
  __Reply__task_set_emulation_t Reply_task_set_emulation;
  __Reply__task_get_emulation_vector_t Reply_task_get_emulation_vector;
  __Reply__task_set_emulation_vector_t Reply_task_set_emulation_vector;
  __Reply__task_set_ras_pc_t Reply_task_set_ras_pc;
  __Reply__task_zone_info_t Reply_task_zone_info;
  __Reply__task_assign_t Reply_task_assign;
  __Reply__task_assign_default_t Reply_task_assign_default;
  __Reply__task_get_assignment_t Reply_task_get_assignment;
  __Reply__task_set_policy_t Reply_task_set_policy;
  __Reply__task_get_state_t Reply_task_get_state;
  __Reply__task_set_state_t Reply_task_set_state;
  __Reply__task_set_phys_footprint_limit_t Reply_task_set_phys_footprint_limit;
  __Reply__task_suspend2_t Reply_task_suspend2;
  __Reply__task_resume2_t Reply_task_resume2;
  __Reply__task_purgable_info_t Reply_task_purgable_info;
  __Reply__task_get_mach_voucher_t Reply_task_get_mach_voucher;
  __Reply__task_set_mach_voucher_t Reply_task_set_mach_voucher;
  __Reply__task_swap_mach_voucher_t Reply_task_swap_mach_voucher;
  __Reply__task_generate_corpse_t Reply_task_generate_corpse;
  __Reply__task_map_corpse_info_t Reply_task_map_corpse_info;
  __Reply__task_register_dyld_image_infos_t Reply_task_register_dyld_image_infos;
  __Reply__task_unregister_dyld_image_infos_t Reply_task_unregister_dyld_image_infos;
  __Reply__task_get_dyld_image_infos_t Reply_task_get_dyld_image_infos;
  __Reply__task_register_dyld_shared_cache_image_info_t Reply_task_register_dyld_shared_cache_image_info;
  __Reply__task_register_dyld_set_dyld_state_t Reply_task_register_dyld_set_dyld_state;
  __Reply__task_register_dyld_get_process_state_t Reply_task_register_dyld_get_process_state;
  __Reply__task_map_corpse_info_64_t Reply_task_map_corpse_info_64;
  __Reply__task_inspect_t Reply_task_inspect;
};

/* 2240 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__thread_terminate_t;

/* 2241 */
struct $D6DF141DC2D446D3EB2CECE1637BE454
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int flavor;
  mach_msg_type_number_t old_stateCnt;
};

/* 2242 */
typedef struct $D6DF141DC2D446D3EB2CECE1637BE454 __Request__act_get_state_t;

/* 2243 */
struct $94E7A741864F930696D8774B3CFD8B58
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int flavor;
  mach_msg_type_number_t new_stateCnt;
  natural_t new_state[614];
};

/* 2244 */
typedef struct $94E7A741864F930696D8774B3CFD8B58 __Request__act_set_state_t;

/* 2245 */
typedef struct $A18F90CA393066DF0F1EB2BA4BB5634D __Request__thread_get_state_t;

/* 2246 */
typedef struct $327A32E1C770CB4CD23A21AD633CD5D6 __Request__thread_set_state_t;

/* 2247 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__thread_suspend_t;

/* 2248 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__thread_resume_t;

/* 2249 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__thread_abort_t;

/* 2250 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__thread_abort_safely_t;

/* 2251 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__thread_depress_abort_t;

/* 2252 */
typedef struct $261D57C93E8F8A1DF04CEDD31089C99D __Request__thread_get_special_port_t;

/* 2253 */
typedef struct $9CCDC36F29A8706800ECEA81D0A85CCB __Request__thread_set_special_port_t;

/* 2254 */
struct $2EC2467DD87572535034F1B8B195F3BE
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  thread_flavor_t flavor;
  mach_msg_type_number_t thread_info_outCnt;
};

/* 2255 */
typedef struct $2EC2467DD87572535034F1B8B195F3BE __Request__thread_info_t;

/* 2256 */
typedef struct $AAA459D4261D0AE6E44A9940300EEED3 __Request__thread_set_exception_ports_t;

/* 2257 */
typedef struct $570E889B890B90C31902C086A4E1A72C __Request__thread_get_exception_ports_t;

/* 2258 */
typedef struct $AAA459D4261D0AE6E44A9940300EEED3 __Request__thread_swap_exception_ports_t;

/* 2259 */
struct $38BAA264D39397E051870D9F613D1E16
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  policy_t policy;
  mach_msg_type_number_t baseCnt;
  integer_t base[5];
  boolean_t set_limit;
};

/* 2260 */
typedef struct $38BAA264D39397E051870D9F613D1E16 __Request__thread_policy_t;

/* 2261 */
struct $16C193F6179A6D901415510ADE40176F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  thread_policy_flavor_t flavor;
  mach_msg_type_number_t policy_infoCnt;
  integer_t policy_info[16];
};

/* 2262 */
typedef struct $16C193F6179A6D901415510ADE40176F __Request__thread_policy_set_t;

/* 2263 */
struct $703946B75BCF6012F0802509003B7FDC
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  thread_policy_flavor_t flavor;
  mach_msg_type_number_t policy_infoCnt;
  boolean_t get_default;
};

/* 2264 */
typedef struct $703946B75BCF6012F0802509003B7FDC __Request__thread_policy_get_t;

/* 2265 */
typedef struct $C96D8938806E9624E6A4E4C782CA750F __Request__thread_sample_t;

/* 2266 */
struct $4CE32DBF6A0920E9CB6D4D2BE140FEA8
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  boolean_t trace_status;
};

/* 2267 */
typedef struct $4CE32DBF6A0920E9CB6D4D2BE140FEA8 __Request__etap_trace_thread_t;

/* 2268 */
struct $2CD76DB2833395D13332A6A16FCBABA4
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t new_set;
};

/* 2269 */
typedef struct $2CD76DB2833395D13332A6A16FCBABA4 __Request__thread_assign_t;

/* 2270 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__thread_assign_default_t;

/* 2271 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__thread_get_assignment_t;

/* 2272 */
struct $8B0D0A2A1A13A43AFF7FF6513B759A17
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t pset;
  NDR_record_t NDR;
  policy_t policy;
  mach_msg_type_number_t baseCnt;
  integer_t base[5];
  mach_msg_type_number_t limitCnt;
  integer_t limit[1];
};

/* 2273 */
typedef struct $8B0D0A2A1A13A43AFF7FF6513B759A17 __Request__thread_set_policy_t;

/* 2274 */
typedef struct $2F91891A0FAE7E7DD7C82D128FBF8465 __Request__thread_get_mach_voucher_t;

/* 2275 */
typedef struct $55F043C4C53CD699F417A5D97368A0D6 __Request__thread_set_mach_voucher_t;

/* 2276 */
typedef struct $7EECE29741C9664541125F7C8E8B3F09 __Request__thread_swap_mach_voucher_t;

/* 2277 */
union __RequestUnion__thread_act_subsystem
{
  __Request__thread_terminate_t Request_thread_terminate;
  __Request__act_get_state_t Request_act_get_state;
  __Request__act_set_state_t Request_act_set_state;
  __Request__thread_get_state_t Request_thread_get_state;
  __Request__thread_set_state_t Request_thread_set_state;
  __Request__thread_suspend_t Request_thread_suspend;
  __Request__thread_resume_t Request_thread_resume;
  __Request__thread_abort_t Request_thread_abort;
  __Request__thread_abort_safely_t Request_thread_abort_safely;
  __Request__thread_depress_abort_t Request_thread_depress_abort;
  __Request__thread_get_special_port_t Request_thread_get_special_port;
  __Request__thread_set_special_port_t Request_thread_set_special_port;
  __Request__thread_info_t Request_thread_info;
  __Request__thread_set_exception_ports_t Request_thread_set_exception_ports;
  __Request__thread_get_exception_ports_t Request_thread_get_exception_ports;
  __Request__thread_swap_exception_ports_t Request_thread_swap_exception_ports;
  __Request__thread_policy_t Request_thread_policy;
  __Request__thread_policy_set_t Request_thread_policy_set;
  __Request__thread_policy_get_t Request_thread_policy_get;
  __Request__thread_sample_t Request_thread_sample;
  __Request__etap_trace_thread_t Request_etap_trace_thread;
  __Request__thread_assign_t Request_thread_assign;
  __Request__thread_assign_default_t Request_thread_assign_default;
  __Request__thread_get_assignment_t Request_thread_get_assignment;
  __Request__thread_set_policy_t Request_thread_set_policy;
  __Request__thread_get_mach_voucher_t Request_thread_get_mach_voucher;
  __Request__thread_set_mach_voucher_t Request_thread_set_mach_voucher;
  __Request__thread_swap_mach_voucher_t Request_thread_swap_mach_voucher;
};

/* 2278 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_terminate_t;

/* 2279 */
typedef struct $FC4A2E9D82E71CF21078B6AB141D2956 __Reply__act_get_state_t;

/* 2280 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__act_set_state_t;

/* 2281 */
typedef struct $FC4A2E9D82E71CF21078B6AB141D2956 __Reply__thread_get_state_t;

/* 2282 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_set_state_t;

/* 2283 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_suspend_t;

/* 2284 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_resume_t;

/* 2285 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_abort_t;

/* 2286 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_abort_safely_t;

/* 2287 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_depress_abort_t;

/* 2288 */
typedef struct $D8B9255234A9249A3B8E5317285D96CD __Reply__thread_get_special_port_t;

/* 2289 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_set_special_port_t;

/* 2290 */
struct $0303FC0406C8E8A7F4239A68DE47E45B
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t thread_info_outCnt;
  integer_t thread_info_out[32];
};

/* 2291 */
typedef struct $0303FC0406C8E8A7F4239A68DE47E45B __Reply__thread_info_t;

/* 2292 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_set_exception_ports_t;

/* 2293 */
typedef struct $86E77FE7C1D5C1A7F16708EB4408760E __Reply__thread_get_exception_ports_t;

/* 2294 */
typedef struct $86E77FE7C1D5C1A7F16708EB4408760E __Reply__thread_swap_exception_ports_t;

/* 2295 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_policy_t;

/* 2296 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_policy_set_t;

/* 2297 */
typedef struct $43938660127A80F965F50F83032F488D __Reply__thread_policy_get_t;

/* 2298 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_sample_t;

/* 2299 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__etap_trace_thread_t;

/* 2300 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_assign_t;

/* 2301 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_assign_default_t;

/* 2302 */
typedef struct $68FB0408FA159A0C33B1ED897BEA1633 __Reply__thread_get_assignment_t;

/* 2303 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_set_policy_t;

/* 2304 */
typedef struct $55F043C4C53CD699F417A5D97368A0D6 __Reply__thread_get_mach_voucher_t;

/* 2305 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__thread_set_mach_voucher_t;

/* 2306 */
typedef struct $4C95C37AB88C02828887BBFB1DA52BAC __Reply__thread_swap_mach_voucher_t;

/* 2307 */
union __ReplyUnion__thread_act_subsystem
{
  __Reply__thread_terminate_t Reply_thread_terminate;
  __Reply__act_get_state_t Reply_act_get_state;
  __Reply__act_set_state_t Reply_act_set_state;
  __Reply__thread_get_state_t Reply_thread_get_state;
  __Reply__thread_set_state_t Reply_thread_set_state;
  __Reply__thread_suspend_t Reply_thread_suspend;
  __Reply__thread_resume_t Reply_thread_resume;
  __Reply__thread_abort_t Reply_thread_abort;
  __Reply__thread_abort_safely_t Reply_thread_abort_safely;
  __Reply__thread_depress_abort_t Reply_thread_depress_abort;
  __Reply__thread_get_special_port_t Reply_thread_get_special_port;
  __Reply__thread_set_special_port_t Reply_thread_set_special_port;
  __Reply__thread_info_t Reply_thread_info;
  __Reply__thread_set_exception_ports_t Reply_thread_set_exception_ports;
  __Reply__thread_get_exception_ports_t Reply_thread_get_exception_ports;
  __Reply__thread_swap_exception_ports_t Reply_thread_swap_exception_ports;
  __Reply__thread_policy_t Reply_thread_policy;
  __Reply__thread_policy_set_t Reply_thread_policy_set;
  __Reply__thread_policy_get_t Reply_thread_policy_get;
  __Reply__thread_sample_t Reply_thread_sample;
  __Reply__etap_trace_thread_t Reply_etap_trace_thread;
  __Reply__thread_assign_t Reply_thread_assign;
  __Reply__thread_assign_default_t Reply_thread_assign_default;
  __Reply__thread_get_assignment_t Reply_thread_get_assignment;
  __Reply__thread_set_policy_t Reply_thread_set_policy;
  __Reply__thread_get_mach_voucher_t Reply_thread_get_mach_voucher;
  __Reply__thread_set_mach_voucher_t Reply_thread_set_mach_voucher;
  __Reply__thread_swap_mach_voucher_t Reply_thread_swap_mach_voucher;
};

/* 2308 */
struct $8D92DE751E5AD7F2694222184FD4EB52
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  vm_region_flavor_t flavor;
  mach_msg_type_number_t infoCnt;
};

/* 2309 */
typedef struct $8D92DE751E5AD7F2694222184FD4EB52 __Request__vm_region_t;

/* 2310 */
struct $5853E5FE5C971BB35B0D6EA07E3D4156
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  int flags;
};

/* 2311 */
typedef struct $5853E5FE5C971BB35B0D6EA07E3D4156 __Request__vm_allocate_t;

/* 2312 */
struct $7F0240A1D9778620A154DA16451E09DA
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
};

/* 2313 */
typedef struct $7F0240A1D9778620A154DA16451E09DA __Request__vm_deallocate_t;

/* 2314 */
struct $B815BC8AD1DE88452445D6AEBA143171
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  boolean_t set_maximum;
  vm_prot_t new_protection;
};

/* 2315 */
typedef struct $B815BC8AD1DE88452445D6AEBA143171 __Request__vm_protect_t;

/* 2316 */
struct $992358D4F74544A0827C06BA8024AD4F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  vm_inherit_t new_inheritance;
};

/* 2317 */
typedef struct $992358D4F74544A0827C06BA8024AD4F __Request__vm_inherit_t;

/* 2318 */
typedef struct $7F0240A1D9778620A154DA16451E09DA __Request__vm_read_t;

/* 2319 */
struct $C6CFEE3BE9EDDEC429AD8282A224FBB0
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_read_entry_t data_list;
  natural_t count;
};

/* 2320 */
typedef struct $C6CFEE3BE9EDDEC429AD8282A224FBB0 __Request__vm_read_list_t;

/* 2321 */
struct $F7225ABBF7ED9236410972F68871BF79
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t data;
  NDR_record_t NDR;
  vm_address_t address;
  mach_msg_type_number_t dataCnt;
};

/* 2322 */
typedef struct $F7225ABBF7ED9236410972F68871BF79 __Request__vm_write_t;

/* 2323 */
struct $C7E9B0AF45B4388E89B12C36995C4F07
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t source_address;
  vm_size_t size;
  vm_address_t dest_address;
};

/* 2324 */
typedef struct $C7E9B0AF45B4388E89B12C36995C4F07 __Request__vm_copy_t;

/* 2325 */
struct $AC529D6F8684FCD30A84991C87D6DEA2
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  vm_address_t data;
};

/* 2326 */
typedef struct $AC529D6F8684FCD30A84991C87D6DEA2 __Request__vm_read_overwrite_t;

/* 2327 */
struct $A9F94FD0D2FBA93EA09A5519241F96C4
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  vm_sync_t sync_flags;
};

/* 2328 */
typedef struct $A9F94FD0D2FBA93EA09A5519241F96C4 __Request__vm_msync_t;

/* 2329 */
struct $F16F99FFE95916D059909EE6CB74D558
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  vm_behavior_t new_behavior;
};

/* 2330 */
typedef struct $F16F99FFE95916D059909EE6CB74D558 __Request__vm_behavior_set_t;

/* 2331 */
struct $18C256241504316F80C9157080A0DDB9
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t object;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  vm_address_t mask;
  int flags;
  vm_offset_t offset;
  boolean_t copy;
  vm_prot_t cur_protection;
  vm_prot_t max_protection;
  vm_inherit_t inheritance;
};

/* 2332 */
typedef struct $18C256241504316F80C9157080A0DDB9 __Request__vm_map_t;

/* 2333 */
struct $C2C390232B7EA1122E3506604F8DB7D5
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  vm_machine_attribute_t attribute;
  vm_machine_attribute_val_t value;
};

/* 2334 */
typedef struct $C2C390232B7EA1122E3506604F8DB7D5 __Request__vm_machine_attribute_t;

/* 2335 */
struct $7AAB4CFD5D0BC57AFE9DFECBD78420A1
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t src_task;
  NDR_record_t NDR;
  vm_address_t target_address;
  vm_size_t size;
  vm_address_t mask;
  int flags;
  vm_address_t src_address;
  boolean_t copy;
  vm_inherit_t inheritance;
};

/* 2336 */
typedef struct $7AAB4CFD5D0BC57AFE9DFECBD78420A1 __Request__vm_remap_t;

/* 2337 */
struct $D4AEBA7926EEDA513101E3079FCB23E9
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  boolean_t must_wire;
};

/* 2338 */
typedef struct $D4AEBA7926EEDA513101E3079FCB23E9 __Request__task_wire_t;

/* 2339 */
struct $82BE637506FE49C03EBC7C403BA1DB4C
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t parent_entry;
  NDR_record_t NDR;
  vm_size_t size;
  vm_offset_t offset;
  vm_prot_t permission;
};

/* 2340 */
typedef struct $82BE637506FE49C03EBC7C403BA1DB4C __Request__mach_make_memory_entry_t;

/* 2341 */
struct $3C6B74C5AB8DE3C586AD862594FD9149
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_offset_t offset;
};

/* 2342 */
typedef struct $3C6B74C5AB8DE3C586AD862594FD9149 __Request__vm_map_page_query_t;

/* 2343 */
struct $7580BA5354B16A5014A2388B145B5128
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
};

/* 2344 */
typedef struct $7580BA5354B16A5014A2388B145B5128 __Request__mach_vm_region_info_t;

/* 2345 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__vm_mapped_pages_info_t;

/* 2346 */
struct $8A9B22774E183CCAFD75D672E9279278
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  natural_t nesting_depth;
  mach_msg_type_number_t infoCnt;
};

/* 2347 */
typedef struct $8A9B22774E183CCAFD75D672E9279278 __Request__vm_region_recurse_t;

/* 2348 */
typedef struct $8A9B22774E183CCAFD75D672E9279278 __Request__vm_region_recurse_64_t;

/* 2349 */
typedef struct $7580BA5354B16A5014A2388B145B5128 __Request__mach_vm_region_info_64_t;

/* 2350 */
typedef struct $8D92DE751E5AD7F2694222184FD4EB52 __Request__vm_region_64_t;

/* 2351 */
struct $8AAC15E99E8C3EB29D9244672749D358
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t parent_entry;
  NDR_record_t NDR;
  memory_object_size_t size;
  memory_object_offset_t offset;
  vm_prot_t permission;
};

/* 2352 */
typedef struct $8AAC15E99E8C3EB29D9244672749D358 __Request__mach_make_memory_entry_64_t;

/* 2353 */
struct $9AE89C1E2FB355F96080D75722D073E1
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t object;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  vm_address_t mask;
  int flags;
  memory_object_offset_t offset;
  boolean_t copy;
  vm_prot_t cur_protection;
  vm_prot_t max_protection;
  vm_inherit_t inheritance;
};

/* 2354 */
typedef struct $9AE89C1E2FB355F96080D75722D073E1 __Request__vm_map_64_t;

/* 2355 */
struct $29E52CC1E3D632D60507B98A29273731
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_address_t address;
  vm_purgable_t control;
  int state;
};

/* 2356 */
typedef struct $29E52CC1E3D632D60507B98A29273731 __Request__vm_purgable_control_t;

/* 2357 */
union __RequestUnion__vm_map_subsystem
{
  __Request__vm_region_t Request_vm_region;
  __Request__vm_allocate_t Request_vm_allocate;
  __Request__vm_deallocate_t Request_vm_deallocate;
  __Request__vm_protect_t Request_vm_protect;
  __Request__vm_inherit_t Request_vm_inherit;
  __Request__vm_read_t Request_vm_read;
  __Request__vm_read_list_t Request_vm_read_list;
  __Request__vm_write_t Request_vm_write;
  __Request__vm_copy_t Request_vm_copy;
  __Request__vm_read_overwrite_t Request_vm_read_overwrite;
  __Request__vm_msync_t Request_vm_msync;
  __Request__vm_behavior_set_t Request_vm_behavior_set;
  __Request__vm_map_t Request_vm_map;
  __Request__vm_machine_attribute_t Request_vm_machine_attribute;
  __Request__vm_remap_t Request_vm_remap;
  __Request__task_wire_t Request_task_wire;
  __Request__mach_make_memory_entry_t Request_mach_make_memory_entry;
  __Request__vm_map_page_query_t Request_vm_map_page_query;
  __Request__mach_vm_region_info_t Request_mach_vm_region_info;
  __Request__vm_mapped_pages_info_t Request_vm_mapped_pages_info;
  __Request__vm_region_recurse_t Request_vm_region_recurse;
  __Request__vm_region_recurse_64_t Request_vm_region_recurse_64;
  __Request__mach_vm_region_info_64_t Request_mach_vm_region_info_64;
  __Request__vm_region_64_t Request_vm_region_64;
  __Request__mach_make_memory_entry_64_t Request_mach_make_memory_entry_64;
  __Request__vm_map_64_t Request_vm_map_64;
  __Request__vm_purgable_control_t Request_vm_purgable_control;
};

/* 2358 */
struct $9B2BA05FD0EA12346F97BC8EADA80484
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t object_name;
  NDR_record_t NDR;
  vm_address_t address;
  vm_size_t size;
  mach_msg_type_number_t infoCnt;
  int info[10];
};

/* 2359 */
typedef struct $9B2BA05FD0EA12346F97BC8EADA80484 __Reply__vm_region_t;

/* 2360 */
typedef struct $35D44FEEE0F0CF1F092E7EF7060EECF3 __Reply__vm_allocate_t;

/* 2361 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__vm_deallocate_t;

/* 2362 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__vm_protect_t;

/* 2363 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__vm_inherit_t;

/* 2364 */
typedef struct $F751BC857CE986E726E3B81E1109F417 __Reply__vm_read_t;

/* 2365 */
struct $172507EC949725D98353E1D0C8F393FD
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  vm_read_entry_t data_list;
};

/* 2366 */
typedef struct $172507EC949725D98353E1D0C8F393FD __Reply__vm_read_list_t;

/* 2367 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__vm_write_t;

/* 2368 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__vm_copy_t;

/* 2369 */
struct $A43491AE01E834F02ABB5F05A6ECF96B
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  vm_size_t outsize;
};

/* 2370 */
typedef struct $A43491AE01E834F02ABB5F05A6ECF96B __Reply__vm_read_overwrite_t;

/* 2371 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__vm_msync_t;

/* 2372 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__vm_behavior_set_t;

/* 2373 */
typedef struct $35D44FEEE0F0CF1F092E7EF7060EECF3 __Reply__vm_map_t;

/* 2374 */
struct $567371A4A4A32568E0935AB48358ABE3
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  vm_machine_attribute_val_t value;
};

/* 2375 */
typedef struct $567371A4A4A32568E0935AB48358ABE3 __Reply__vm_machine_attribute_t;

/* 2376 */
struct $DE956786DC96B3B874B823C34DF0472A
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  vm_address_t target_address;
  vm_prot_t cur_protection;
  vm_prot_t max_protection;
};

/* 2377 */
typedef struct $DE956786DC96B3B874B823C34DF0472A __Reply__vm_remap_t;

/* 2378 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__task_wire_t;

/* 2379 */
struct $F79F7F86545E923784C79FDC34511D24
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t object_handle;
  NDR_record_t NDR;
  vm_size_t size;
};

/* 2380 */
typedef struct $F79F7F86545E923784C79FDC34511D24 __Reply__mach_make_memory_entry_t;

/* 2381 */
struct $1A9BD6B0A513F11C50296905C8BE925C
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  integer_t disposition;
  integer_t ref_count;
};

/* 2382 */
typedef struct $1A9BD6B0A513F11C50296905C8BE925C __Reply__vm_map_page_query_t;

/* 4064 */
typedef vm_info_region vm_info_region_t;

/* 2383 */
struct $35CE520FA12BDB4636DDDEB1B1ED373D
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t objects;
  NDR_record_t NDR;
  vm_info_region_t region;
  mach_msg_type_number_t objectsCnt;
};

/* 2384 */
typedef struct $35CE520FA12BDB4636DDDEB1B1ED373D __Reply__mach_vm_region_info_t;

/* 2385 */
struct $707796E129A0F9415277A3971D62235E
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t pages;
  NDR_record_t NDR;
  mach_msg_type_number_t pagesCnt;
};

/* 2386 */
typedef struct $707796E129A0F9415277A3971D62235E __Reply__vm_mapped_pages_info_t;

/* 2387 */
struct $EADEC4D8CB922DA4B5685935FDC2AC30
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  vm_address_t address;
  vm_size_t size;
  natural_t nesting_depth;
  mach_msg_type_number_t infoCnt;
  int info[19];
};

/* 2388 */
typedef struct $EADEC4D8CB922DA4B5685935FDC2AC30 __Reply__vm_region_recurse_t;

/* 2389 */
typedef struct $EADEC4D8CB922DA4B5685935FDC2AC30 __Reply__vm_region_recurse_64_t;

/* 4065 */
typedef vm_info_region_64 vm_info_region_64_t;

/* 2390 */
struct $801FCC748430577DF703DAAF87D4B9AC
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t objects;
  NDR_record_t NDR;
  vm_info_region_64_t region;
  mach_msg_type_number_t objectsCnt;
};

/* 2391 */
typedef struct $801FCC748430577DF703DAAF87D4B9AC __Reply__mach_vm_region_info_64_t;

/* 2392 */
typedef struct $9B2BA05FD0EA12346F97BC8EADA80484 __Reply__vm_region_64_t;

/* 2393 */
struct $3FA1BB238F14FEE56FD7D85E21CC2571
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t object_handle;
  NDR_record_t NDR;
  memory_object_size_t size;
};

/* 2394 */
typedef struct $3FA1BB238F14FEE56FD7D85E21CC2571 __Reply__mach_make_memory_entry_64_t;

/* 2395 */
typedef struct $35D44FEEE0F0CF1F092E7EF7060EECF3 __Reply__vm_map_64_t;

/* 2396 */
struct $629180E99E6F33877C4B6148532D2657
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  int state;
};

/* 2397 */
typedef struct $629180E99E6F33877C4B6148532D2657 __Reply__vm_purgable_control_t;

/* 2398 */
union __ReplyUnion__vm_map_subsystem
{
  __Reply__vm_region_t Reply_vm_region;
  __Reply__vm_allocate_t Reply_vm_allocate;
  __Reply__vm_deallocate_t Reply_vm_deallocate;
  __Reply__vm_protect_t Reply_vm_protect;
  __Reply__vm_inherit_t Reply_vm_inherit;
  __Reply__vm_read_t Reply_vm_read;
  __Reply__vm_read_list_t Reply_vm_read_list;
  __Reply__vm_write_t Reply_vm_write;
  __Reply__vm_copy_t Reply_vm_copy;
  __Reply__vm_read_overwrite_t Reply_vm_read_overwrite;
  __Reply__vm_msync_t Reply_vm_msync;
  __Reply__vm_behavior_set_t Reply_vm_behavior_set;
  __Reply__vm_map_t Reply_vm_map;
  __Reply__vm_machine_attribute_t Reply_vm_machine_attribute;
  __Reply__vm_remap_t Reply_vm_remap;
  __Reply__task_wire_t Reply_task_wire;
  __Reply__mach_make_memory_entry_t Reply_mach_make_memory_entry;
  __Reply__vm_map_page_query_t Reply_vm_map_page_query;
  __Reply__mach_vm_region_info_t Reply_mach_vm_region_info;
  __Reply__vm_mapped_pages_info_t Reply_vm_mapped_pages_info;
  __Reply__vm_region_recurse_t Reply_vm_region_recurse;
  __Reply__vm_region_recurse_64_t Reply_vm_region_recurse_64;
  __Reply__mach_vm_region_info_64_t Reply_mach_vm_region_info_64;
  __Reply__vm_region_64_t Reply_vm_region_64;
  __Reply__mach_make_memory_entry_64_t Reply_mach_make_memory_entry_64;
  __Reply__vm_map_64_t Reply_vm_map_64;
  __Reply__vm_purgable_control_t Reply_vm_purgable_control;
};

/* 2402 */
typedef SInt32 IOFixed;

/* 2403 */
typedef UInt32 IOVersion;

/* 2405 */
typedef UInt32 IOCacheMode;

/* 2409 */
typedef UInt64 IOPhysicalAddress64;

/* 2410 */
typedef UInt32 IOPhysicalLength32;

/* 2414 */
typedef IOVirtualAddress IOLogicalAddress;

/* 2416 */
typedef IOPhysicalLength32 IOPhysicalLength;

/* 2417 */
struct $CEB451F979DDF220447854AD5A4D64F8
{
  IOPhysicalAddress address;
  IOByteCount length;
};

/* 2418 */
typedef struct $CEB451F979DDF220447854AD5A4D64F8 IOPhysicalRange;

/* 2419 */
struct $72DCF292DD90D6111A5EFCBECFCE6687
{
  IOVirtualAddress address;
  IOByteCount length;
};

/* 2420 */
typedef struct $72DCF292DD90D6111A5EFCBECFCE6687 IOVirtualRange;

/* 2421 */
typedef IOVirtualRange IOAddressRange;

/* 2422 */
struct $312614BEBC9CD181F3FDC0EAC6892AB9
{
  int value;
  const char *name;
};

/* 2423 */
typedef struct $312614BEBC9CD181F3FDC0EAC6892AB9 IONamedValue;

/* 2424 */
typedef unsigned int IOAlignment;

/* 2425 */
typedef char io_name_t[128];

/* 2426 */
typedef char io_string_t[512];

/* 2427 */
typedef char io_string_inband_t[4096];

/* 2428 */
typedef char io_struct_inband_t[4096];

/* 2429 */
typedef uint64_t io_user_scalar_t;

/* 2431 */
typedef int io_scalar_inband_t[16];

/* 2432 */
typedef natural_t io_async_ref_t[8];

/* 2433 */
typedef io_user_scalar_t io_scalar_inband64_t[16];

/* 2434 */
typedef io_user_reference_t io_async_ref64_t[8];

/* 2435 */
typedef io_object_t io_connect_t;

/* 2436 */
typedef io_object_t io_enumerator_t;

/* 2437 */
typedef io_object_t io_iterator_t;

/* 2438 */
typedef io_object_t io_registry_entry_t;

/* 2439 */
typedef io_object_t io_service_t;

/* 2440 */
enum $B3A3B6B2A8D3A648DB50B6842B4B7FCD
{
  kIODefaultMemoryType = 0x0,
};

/* 2441 */
enum $474CE8DF6763C334CF1C9D15ED136EE3
{
  kIODefaultCache = 0x0,
  kIOInhibitCache = 0x1,
  kIOWriteThruCache = 0x2,
  kIOCopybackCache = 0x3,
  kIOWriteCombineCache = 0x4,
  kIOCopybackInnerCache = 0x5,
  kIOPostedWrite = 0x6,
};

/* 2442 */
enum $9E0F02294A0BFEDCD5D55FDA8014E770
{
  kIOMapAnywhere = 0x1,
  kIOMapCacheMask = 0x700,
  kIOMapCacheShift = 0x8,
  kIOMapDefaultCache = 0x0,
  kIOMapInhibitCache = 0x100,
  kIOMapWriteThruCache = 0x200,
  kIOMapCopybackCache = 0x300,
  kIOMapWriteCombineCache = 0x400,
  kIOMapCopybackInnerCache = 0x500,
  kIOMapPostedWrite = 0x600,
  kIOMapUserOptionsMask = 0xFFF,
  kIOMapReadOnly = 0x1000,
  kIOMapStatic = 0x1000000,
  kIOMapReference = 0x2000000,
  kIOMapUnique = 0x4000000,
  kIOMapPrefault = 0x10000000,
  kIOMapOverwrite = 0x20000000,
};

/* 2443 */
enum $5CFF5310329C8084D05FFB0E860D99CB
{
  kNanosecondScale = 0x1,
  kMicrosecondScale = 0x3E8,
  kMillisecondScale = 0xF4240,
  kSecondScale = 0x3B9ACA00,
  kTickScale = 0x989680,
};

/* 2444 */
enum $A4FAA149AC0B9C9C1D8D79066C378732
{
  kIOConnectMethodVarOutputSize = 0xFFFFFFFD,
};

/* 2447 */
enum $FE672B145AEB437FBE7040102EBF561D
{
  kIOLockStateUnlocked = 0x0,
  kIOLockStateLocked = 0x1,
};

/* 2448 */
typedef enum $FE672B145AEB437FBE7040102EBF561D IOLockState;

/* 2449 */
struct _IORecursiveLock;

/* 2450 */
typedef struct _IORecursiveLock IORecursiveLock;

/* 2451 */
struct _IORWLock;

/* 2452 */
typedef struct _IORWLock IORWLock;

/* 2453 */
struct _IOSimpleLock;

/* 2454 */
typedef struct _IOSimpleLock IOSimpleLock;

/* 2455 */
typedef boolean_t IOInterruptState;

/* 2457 */
typedef void (__cdecl *IOThreadFunc)(void *argument);

/* 2458 */
enum $99A241C5503DC99B99EB25FA3F620BA5
{
  kIODTNVRAMImageSize = 0x2000,
  kIODTNVRAMXPRAMSize = 0x100,
  kIODTNVRAMNameRegistrySize = 0x400,
};

/* 2459 */
enum $792E7541CDC49361C9129E740C2E461C
{
  kOFVariableTypeBoolean = 0x1,
  kOFVariableTypeNumber = 0x2,
  kOFVariableTypeString = 0x3,
  kOFVariableTypeData = 0x4,
};

/* 2460 */
enum $8EA4150AE60D2D907B199BB4D46C5643
{
  kOFVariablePermRootOnly = 0x0,
  kOFVariablePermUserRead = 0x1,
  kOFVariablePermUserWrite = 0x2,
  kOFVariablePermKernelOnly = 0x3,
};

/* 2461 */
enum $4F1A141C313D12ED89C9D37BA9CA25E5
{
  kOSStringNoCopy = 0x1,
};

/* 2462 */
typedef uint8_t (__cdecl *OSSerializerCallback)(void *target, void *ref, OSSerialize *serializer);

/* 2463 */
typedef void (__cdecl *IORegistryEntryApplierFunction)(IORegistryEntry *entry, void *context);

/* 2464 */
enum $373DB765CCEA5ADDF41643121FA287A2
{
  kIORegistryIterateRecursively = 0x1,
  kIORegistryIterateParents = 0x2,
};

/* 2465 */
enum $3CA0B08DA383C5FBB3D8E2EFEA1BBD06
{
  kIODTRecursive = 0x1,
  kIODTExclusive = 0x2,
};

/* 2466 */
typedef SInt32 (__cdecl *IODTCompareAddressCellFunc)(UInt32 cellCount, UInt32 left[], UInt32 right[]);

/* 2467 */
typedef void (__cdecl *IODTNVLocationFunc)(IORegistryEntry *entry, UInt8 *busNum, UInt8 *deviceNum, UInt8 *functionNum);

/* 2469 */
enum $F1A4CF0FCB9CBF32A05326497032DB2A
{
  kIODTInterruptShared = 0x1,
};

/* 2470 */
enum $C241389C2373F6E17EFB837E467396FF
{
  kCoprocessorVersionNone = 0x0,
  kCoprocessorVersion1 = 0x10000,
  kCoprocessorVersion2 = 0x20000,
};

/* 2471 */
typedef enum $C241389C2373F6E17EFB837E467396FF coprocessor_type_t;

/* 2472 */
enum $75FFECD48A55416B6B8928D8B6340ADF
{
  kPEHaltCPU = 0x0,
  kPERestartCPU = 0x1,
  kPEHangCPU = 0x2,
  kPEUPSDelayHaltCPU = 0x3,
  kPEPanicRestartCPU = 0x4,
  kPEPanicSync = 0x5,
  kPEPagingOff = 0x6,
  kPEPanicBegin = 0x7,
  kPEPanicEnd = 0x8,
  kPEPanicDiskShutdown = 0x9,
};

/* 2473 */
typedef UInt32 IOMessage;

/* 2474 */
enum $2D97EFD212991F08AB96D2F1346FFB69
{
  kIODirectionNone = 0x0,
  kIODirectionIn = 0x1,
  kIODirectionOut = 0x2,
  kIODirectionOutIn = 0x3,
  kIODirectionInOut = 0x3,
  kIODirectionPrepareToPhys32 = 0x4,
  kIODirectionPrepareNoFault = 0x8,
  kIODirectionPrepareReserved1 = 0x10,
  kIODirectionPrepareNonCoherent = 0x20,
  kIODirectionCompleteWithError = 0x40,
  kIODirectionCompleteWithDataValid = 0x80,
};

/* 2476 */
enum $9A946774D0C9FB536ACD2B530788F357
{
  kIOMemoryDirectionMask = 0x7,
  kIOMemoryTypeVirtual = 0x10,
  kIOMemoryTypePhysical = 0x20,
  kIOMemoryTypeUPL = 0x30,
  kIOMemoryTypePersistentMD = 0x40,
  kIOMemoryTypeUIO = 0x50,
  kIOMemoryTypeVirtual64 = 0x10,
  kIOMemoryTypePhysical64 = 0x20,
  kIOMemoryTypeMask = 0xF0,
  kIOMemoryAsReference = 0x100,
  kIOMemoryBufferPageable = 0x400,
  kIOMemoryMapperNone = 0x800,
  kIOMemoryHostOnly = 0x1000,
  kIOMemoryPersistent = 0x10000,
  kIOMemoryRemote = 0x40000,
  kIOMemoryThreadSafe = 0x100000,
  kIOMemoryClearEncrypt = 0x200000,
  kIOMemoryUseReserve = 0x800000,
};

/* 2477 */
enum $D58A25666E1D350F21549E1F8897921A
{
  kIOMemoryPurgeableKeepCurrent = 0x1,
  kIOMemoryPurgeableNonVolatile = 0x2,
  kIOMemoryPurgeableVolatile = 0x3,
  kIOMemoryPurgeableEmpty = 0x4,
  kIOMemoryPurgeableVolatileGroup0 = 0x0,
  kIOMemoryPurgeableVolatileGroup1 = 0x100,
  kIOMemoryPurgeableVolatileGroup2 = 0x200,
  kIOMemoryPurgeableVolatileGroup3 = 0x300,
  kIOMemoryPurgeableVolatileGroup4 = 0x400,
  kIOMemoryPurgeableVolatileGroup5 = 0x500,
  kIOMemoryPurgeableVolatileGroup6 = 0x600,
  kIOMemoryPurgeableVolatileGroup7 = 0x700,
  kIOMemoryPurgeableVolatileBehaviorFifo = 0x0,
  kIOMemoryPurgeableVolatileBehaviorLifo = 0x40,
  kIOMemoryPurgeableVolatileOrderingObsolete = 0x20,
  kIOMemoryPurgeableVolatileOrderingNormal = 0x0,
  kIOMemoryPurgeableFaultOnAccess = 0x2000,
};

/* 2478 */
enum $4356869FDB90B8E72A69208B9F03B2C0
{
  kIOMemoryIncoherentIOFlush = 0x1,
  kIOMemoryIncoherentIOStore = 0x2,
  kIOMemoryClearEncrypted = 0x32,
  kIOMemorySetEncrypted = 0x33,
};

/* 2479 */
struct IODMAMapSpecification
{
  uint64_t alignment;
  IOService *device;
  uint32_t options;
  uint8_t numAddressBits;
  uint8_t resvA[3];
  uint32_t resvB[4];
};

/* 2480 */
struct IODMAMapPageList
{
  uint32_t pageOffset;
  uint32_t pageListCount;
  const upl_page_info_t *pageList;
};

/* 2481 */
enum $013C0882162EF800623A04148FE1439D
{
  kIODMAMapReadAccess = 0x1,
  kIODMAMapWriteAccess = 0x2,
  kIODMAMapPhysicallyContiguous = 0x10,
  kIODMAMapDeviceMemory = 0x20,
  kIODMAMapPagingPath = 0x40,
  kIODMAMapIdentityMap = 0x80,
  kIODMAMapPageListFullyOccupied = 0x100,
  kIODMAMapFixedAddress = 0x200,
};

/* 2482 */
enum $C78447BD3FEAB77E848C0417BCE6364F
{
  kIOPreparationIDUnprepared = 0x0,
  kIOPreparationIDUnsupported = 0x1,
  kIOPreparationIDAlwaysPrepared = 0x2,
};

/* 2483 */
typedef uint16_t IOReportCategories;

/* 2484 */
typedef uint8_t IOReportFormat;

/* 2485 */
enum $960D5F2A104425FF0AB6E43652854937
{
  kIOReportInvalidFormat = 0x0,
  kIOReportFormatSimple = 0x1,
  kIOReportFormatState = 0x2,
  kIOReportFormatHistogram = 0x3,
  kIOReportFormatSimpleArray = 0x4,
};

/* 2486 */
struct $9310CB42183B4F0BA5339E10944DAF0C
{
  int64_t simple_value;
  uint64_t reserved1;
  uint64_t reserved2;
  uint64_t reserved3;
};

/* 2487 */
typedef struct $9310CB42183B4F0BA5339E10944DAF0C IOSimpleReportValues;

/* 2488 */
struct $AA4D7DE6B72BA8A3C011536EEDB13EA0
{
  int64_t simple_values[4];
};

/* 2489 */
typedef struct $AA4D7DE6B72BA8A3C011536EEDB13EA0 IOSimpleArrayReportValues;

/* 2490 */
struct $B4DD75CAF8AE8D021719752008AEAC7F
{
  uint64_t state_id;
  uint64_t intransitions;
  uint64_t upticks;
  uint64_t last_intransition;
};

/* 2491 */
typedef struct $B4DD75CAF8AE8D021719752008AEAC7F IOStateReportValues;

/* 2492 */
struct $EA9BED45D6FCF8612FE13D31CC6A9A6E
{
  uint64_t bucket_hits;
  int64_t bucket_min;
  int64_t bucket_max;
  int64_t bucket_sum;
};

/* 2493 */
typedef struct $EA9BED45D6FCF8612FE13D31CC6A9A6E IOHistogramReportValues;

/* 2494 */
typedef uint32_t IOReportConfigureAction;

/* 2495 */
enum $B692DE8D2B82AEB9AE1E2B32A8A53654
{
  kIOReportEnable = 0x1,
  kIOReportGetDimensions = 0x2,
  kIOReportDisable = 0x0,
  kIOReportNotifyHubOnChange = 0x10,
  kIOReportTraceOnChange = 0x20,
};

/* 2496 */
typedef uint32_t IOReportUpdateAction;

/* 2497 */
enum $7D648EFE725B0C0BA42B3D2BBB43F787
{
  kIOReportCopyChannelData = 0x1,
  kIOReportTraceChannelData = 0x2,
};

/* 2504 */
struct $FE537CE73B6871C362743310D77E2FD1
{
  uint64_t provider_id;
  IOReportChannel channel;
};

/* 2505 */
typedef struct $FE537CE73B6871C362743310D77E2FD1 IOReportInterest;

/* 2506 */
struct $FCA1151E1413CE58842E3DE69F97A023
{
  uint32_t ninterests;
  IOReportInterest interests[];
};

/* 2507 */
typedef struct $FCA1151E1413CE58842E3DE69F97A023 IOReportInterestList;

/* 2510 */
struct $3BB89F8C622BE179D783DB385E6A8F5E
{
  uint64_t provider_id;
  uint64_t channel_id;
  IOReportChannelType channel_type;
  uint64_t timestamp;
  IOReportElementValues values;
};

/* 2511 */
typedef struct $3BB89F8C622BE179D783DB385E6A8F5E IOReportElement;

/* 2512 */
typedef uint64_t IOReportUnit;

/* 2513 */
typedef uint64_t IOReportUnits;

/* 2514 */
typedef uint8_t IOReportQuantity;

/* 2515 */
typedef uint64_t IOReportScaleFactor;

/* 2516 */
enum $2C59003BF2B6FB7E094B16862D0C2D83
{
  kIOReportQuantityUndefined = 0x0,
  kIOReportQuantityTime = 0x1,
  kIOReportQuantityPower = 0x2,
  kIOReportQuantityEnergy = 0x3,
  kIOReportQuantityCurrent = 0x4,
  kIOReportQuantityVoltage = 0x5,
  kIOReportQuantityCapacitance = 0x6,
  kIOReportQuantityInductance = 0x7,
  kIOReportQuantityFrequency = 0x8,
  kIOReportQuantityData = 0x9,
  kIOReportQuantityTemperature = 0xA,
  kIOReportQuantityEventCount = 0x64,
  kIOReportQuantityPacketCount = 0x65,
  kIOReportQuantityCPUInstrs = 0x66,
};

/* 2517 */
struct _IODataQueueMemory
{
  UInt32 queueSize;
  volatile UInt32 head;
  volatile UInt32 tail;
  IODataQueueEntry queue[1];
};

/* 2518 */
typedef struct _IODataQueueMemory IODataQueueMemory;

/* 2519 */
struct _notifyMsg
{
  mach_msg_header_t h;
};

/* 2522 */
struct _IODataQueueAppendix
{
  UInt32 version;
  mach_msg_header_t msgh;
};

/* 2523 */
typedef struct _IODataQueueAppendix IODataQueueAppendix;

/* 2524 */
enum $F154B37C9327960A435F7A6B5A4E2D2F
{
  kFirstIOKitNotificationType = 0x64,
  kIOServicePublishNotificationType = 0x64,
  kIOServiceMatchedNotificationType = 0x65,
  kIOServiceTerminatedNotificationType = 0x66,
  kIOAsyncCompletionNotificationType = 0x96,
  kIOServiceMessageNotificationType = 0xA0,
  kLastIOKitNotificationType = 0xC7,
  kIOKitNoticationTypeMask = 0xFFF,
  kIOKitNoticationTypeSizeAdjShift = 0x1E,
  kIOKitNoticationMsgSizeMask = 0x3,
};

/* 2525 */
enum $7191047DEEBD9904D2E4FBD1FE3E7338
{
  kOSNotificationMessageID = 0x35,
  kOSAsyncCompleteMessageID = 0x39,
  kMaxAsyncArgs = 0x10,
};

/* 2526 */
enum $0C0483DCCEAF8DFD45718DA068D36856
{
  kIOAsyncReservedIndex = 0x0,
  kIOAsyncReservedCount = 0x1,
  kIOAsyncCalloutFuncIndex = 0x1,
  kIOAsyncCalloutRefconIndex = 0x2,
  kIOAsyncCalloutCount = 0x3,
  kIOMatchingCalloutFuncIndex = 0x1,
  kIOMatchingCalloutRefconIndex = 0x2,
  kIOMatchingCalloutCount = 0x3,
  kIOInterestCalloutFuncIndex = 0x1,
  kIOInterestCalloutRefconIndex = 0x2,
  kIOInterestCalloutServiceIndex = 0x3,
  kIOInterestCalloutCount = 0x4,
};

/* 2527 */
enum $37A68CEDDC0107F72EDDF1863F80AC26
{
  kOSAsyncRef64Count = 0x8,
  kOSAsyncRef64Size = 0x40,
};

/* 2528 */
typedef io_user_reference_t OSAsyncReference64[8];

/* 2529 */
struct OSNotificationHeader64
{
  mach_msg_size_t size;
  natural_t type;
  OSAsyncReference64 reference;
  unsigned __int8 content[];
};

/* 2530 */
struct IOServiceInterestContent64
{
  natural_t messageType;
  io_user_reference_t messageArgument[1];
};

/* 2531 */
enum $1AAE3E3510C9F5BD7EB147428BE1E531
{
  kOSAsyncRefCount = 0x8,
  kOSAsyncRefSize = 0x20,
};

/* 2533 */
struct OSNotificationHeader
{
  mach_msg_size_t size;
  natural_t type;
  OSAsyncReference reference;
  unsigned __int8 content[];
};

/* 2534 */
struct IOServiceInterestContent
{
  natural_t messageType;
  void *messageArgument[1];
};

/* 2535 */
struct IOAsyncCompletionContent
{
  IOReturn result;
  void *args[];
};

/* 2536 */
enum $7AA45945D7004AFD86CFF28BF4272CF0 : __int64
{
  kIOLogAttach = 0x1,
  kIOLogProbe = 0x2,
  kIOLogStart = 0x4,
  kIOLogRegister = 0x8,
  kIOLogMatch = 0x10,
  kIOLogConfig = 0x20,
  kIOLogYield = 0x40,
  kIOLogPower = 0x80,
  kIOLogMapping = 0x100,
  kIOLogCatalogue = 0x200,
  kIOLogTracePower = 0x400,
  kIOLogDebugPower = 0x800,
  kIOLogServiceTree = 0x1000,
  kIOLogDTree = 0x2000,
  kIOLogMemory = 0x4000,
  kIOLogKextMemory = 0x8000,
  kOSLogRegistryMods = 0x10000,
  kIOLogPMRootDomain = 0x20000,
  kOSRegistryModsMode = 0x40000,
  kIOLogHibernate = 0x100000,
  kIOStatistics = 0x4000000,
  kIOSleepWakeWdogOff = 0x40000000,
  kIOKextSpinDump = 0x80000000,
  kIONoFreeObjects = 0x100000,
  kIOTracking = 0x400000,
  kIOWaitQuietPanics = 0x800000,
  kIOWaitQuietBeforeRoot = 0x1000000,
  kIOTrackingBoot = 0x2000000,
  _kIODebugTopFlag = 0x8000000000000000,
};

/* 2537 */
enum $7C755B7F40AC949E4A766EF78530FA5C : __int64
{
  kIOKitDebugUserOptions = 0xC0970FFF,
};

/* 2538 */
enum $32E351B8ACE0EEB2403310177ED901CB
{
  kIOTraceInterrupts = 0x1,
  kIOTraceWorkLoops = 0x2,
  kIOTraceEventSources = 0x4,
  kIOTraceIntEventSource = 0x8,
  kIOTraceCommandGates = 0x10,
  kIOTraceTimers = 0x20,
  kIOTracePowerMgmt = 0x400,
  kIOTraceIOService = 0x80000,
  kIOTraceCompatBootArgs = 0x80400,
};

/* 2539 */
enum $F958EE8F8FED1C1C8E5782E69404BE0E : __int64
{
  kIOKitDiagnosticsClientType = 0x99000002,
};

/* 2540 */
struct IOKitDiagnosticsParameters
{
  size_t size;
  uint64_t value;
  uint32_t options;
  uint32_t tag;
  uint32_t zsize;
  uint32_t reserved[8];
};

/* 2541 */
enum $6C947DCB6FB3917B3771A83C76AFA2B6
{
  kIOTrackingCallSiteBTs = 0x10,
};

/* 2542 */
struct IOTrackingCallSiteInfo
{
  uint32_t count;
  pid_t addressPID;
  mach_vm_address_t address;
  mach_vm_size_t size[2];
  pid_t btPID;
  mach_vm_address_t bt[2][16];
};

/* 2543 */
enum $C95A3D0F648A3442B75BF53FB0FB6AAC
{
  kIOTrackingExcludeNames = 0x1,
};

/* 2544 */
enum $6805621B3A24DDA955CBDEDE642E0FE5 : __int64
{
  kIOTrackingGetTracking = 0x1,
  kIOTrackingGetMappings = 0x2,
  kIOTrackingResetTracking = 0x3,
  kIOTrackingStartCapture = 0x4,
  kIOTrackingStopCapture = 0x5,
  kIOTrackingSetMinCaptureSize = 0x6,
  kIOTrackingLeaks = 0x7,
  kIOTrackingInvalid = 0xFFFFFFFE,
};

/* 2545 */
enum $CC8403D8184F3B01FD65F52FA6BB2C96
{
  kIOPMMaxPowerStates = 0xA,
  IOPMMaxPowerStates = 0xA,
};

/* 2547 */
enum $53F9B20B54D71DBD2F00F7A5341B17FF
{
  kIOPMPowerOn = 0x2,
  kIOPMDeviceUsable = 0x8000,
  kIOPMLowPower = 0x10000,
  kIOPMPreventIdleSleep = 0x40,
  kIOPMSleepCapability = 0x4,
  kIOPMRestartCapability = 0x80,
  kIOPMSleep = 0x1,
  kIOPMRestart = 0x80,
  kIOPMInitialDeviceState = 0x100,
  kIOPMRootDomainState = 0x200,
};

/* 2548 */
enum $B6F0B79A6331C7B200BC4486CD8A3FD6
{
  kIOPMClockNormal = 0x4,
  kIOPMClockRunning = 0x8,
  kIOPMPreventSystemSleep = 0x10,
  kIOPMDoze = 0x400,
  kIOPMChildClamp = 0x80,
  kIOPMChildClamp2 = 0x200,
  kIOPMNotPowerManaged = 0x800,
};

/* 2549 */
enum $A6E2692A04F68F9CC1FB30121838F8D6
{
  kIOPMMaxPerformance = 0x4000,
  kIOPMPassThrough = 0x100,
  kIOPMAuxPowerOn = 0x20,
  kIOPMNotAttainable = 0x1,
  kIOPMContextRetained = 0x2000,
  kIOPMConfigRetained = 0x1000,
  kIOPMStaticPowerValid = 0x800,
  kIOPMSoftSleep = 0x400,
  kIOPMCapabilitiesMask = 0xF086,
};

/* 2550 */
enum $FC2046E234905A03B41E8175BAD80539
{
  IOPMNotAttainable = 0x1,
  IOPMPowerOn = 0x2,
  IOPMClockNormal = 0x4,
  IOPMClockRunning = 0x8,
  IOPMAuxPowerOn = 0x20,
  IOPMDeviceUsable = 0x8000,
  IOPMMaxPerformance = 0x4000,
  IOPMContextRetained = 0x2000,
  IOPMConfigRetained = 0x1000,
  IOPMNotPowerManaged = 0x800,
  IOPMSoftSleep = 0x400,
};

/* 2551 */
enum $85D2E60D7B687528FCC5C1E2B2846194
{
  kIOPMNextHigherState = 0x1,
  kIOPMHighestState = 0x2,
  kIOPMNextLowerState = 0x3,
  kIOPMLowestState = 0x4,
};

/* 2552 */
enum $5E51B2F85428954D864A05F500A172E7
{
  IOPMNextHigherState = 0x1,
  IOPMHighestState = 0x2,
  IOPMNextLowerState = 0x3,
  IOPMLowestState = 0x4,
};

/* 2553 */
enum $D89DF1A13D7E6BD0511828C3EC11CEDE
{
  kIOPMBroadcastAggressiveness = 0x1,
  kIOPMUnidleDevice = 0x2,
};

/* 2554 */
enum $792DE0F881FE7C2092EBD7FB8904B913
{
  kIOPMUnknown = 0xFFFF,
};

/* 2555 */
enum $4410D146D146BF4192F536674C7E80FF
{
  kIOPMDriverAssertionCPUBit = 0x1,
  kIOPMDriverAssertionUSBExternalDeviceBit = 0x4,
  kIOPMDriverAssertionBluetoothHIDDevicePairedBit = 0x8,
  kIOPMDriverAssertionExternalMediaMountedBit = 0x10,
  kIOPMDriverAssertionReservedBit5 = 0x20,
  kIOPMDriverAssertionPreventDisplaySleepBit = 0x40,
  kIOPMDriverAssertionReservedBit7 = 0x80,
  kIOPMDriverAssertionMagicPacketWakeEnabledBit = 0x100,
  kIOPMDriverAssertionNetworkKeepAliveActiveBit = 0x200,
};

/* 2556 */
enum $044FCC512688981A444D9EE65DE71B07
{
  kClamshellStateBit = 0x1,
  kClamshellSleepBit = 0x2,
};

/* 2557 */
enum $782AFF58F0369CDF88EBE58613F977C1
{
  kInflowForciblyEnabledBit = 0x1,
};

/* 2558 */
enum $922B7AA500AF011CFDA90E13FC0BA6EF
{
  kIOPMSleepNow = 0x1,
  kIOPMAllowSleep = 0x2,
  kIOPMPreventSleep = 0x4,
  kIOPMPowerButton = 0x8,
  kIOPMClamshellClosed = 0x10,
  kIOPMPowerEmergency = 0x20,
  kIOPMDisableClamshell = 0x40,
  kIOPMEnableClamshell = 0x80,
  kIOPMProcessorSpeedChange = 0x100,
  kIOPMOverTemp = 0x200,
  kIOPMClamshellOpened = 0x400,
  kIOPMDWOverTemp = 0x800,
};

/* 2559 */
enum $3AFC1C86D8220E4A22F5109E0CD57D0E
{
  kIOPMNoErr = 0x0,
  kIOPMAckImplied = 0x0,
  kIOPMWillAckLater = 0x1,
  kIOPMBadSpecification = 0x4,
  kIOPMNoSuchState = 0x5,
  kIOPMCannotRaisePower = 0x6,
  kIOPMParameterError = 0x7,
  kIOPMNotYetInitialized = 0x8,
  IOPMNoErr = 0x0,
  IOPMAckImplied = 0x0,
  IOPMWillAckLater = 0x1,
  IOPMBadSpecification = 0x4,
  IOPMNoSuchState = 0x5,
  IOPMCannotRaisePower = 0x6,
  IOPMParameterError = 0x7,
  IOPMNotYetInitialized = 0x8,
};

/* 2560 */
enum $F2E2984BC0E5BDF115BAB615AF8B529D
{
  kIOPMPSLocationLeft = 0x3E9,
  kIOPMPSLocationRight = 0x3EA,
};

/* 2561 */
enum $620BC279E8CD9EE34C9EE46D210EE28C
{
  kIOPMUndefinedValue = 0x0,
  kIOPMPoorValue = 0x1,
  kIOPMFairValue = 0x2,
  kIOPMGoodValue = 0x3,
};

/* 2562 */
enum $AE503017F670317A288FC9A56667591B : __int64
{
  kIOPSFamilyCodeDisconnected = 0x0,
  kIOPSFamilyCodeUnsupported = 0xE00002C7,
  kIOPSFamilyCodeFirewire = 0xE0008000,
  kIOPSFamilyCodeUSBHost = 0xE0004000,
  kIOPSFamilyCodeUSBHostSuspended = 0xE0004001,
  kIOPSFamilyCodeUSBDevice = 0xE0004002,
  kIOPSFamilyCodeUSBAdapter = 0xE0004003,
  kIOPSFamilyCodeUSBChargingPortDedicated = 0xE0004004,
  kIOPSFamilyCodeUSBChargingPortDownstream = 0xE0004005,
  kIOPSFamilyCodeUSBChargingPort = 0xE0004006,
  kIOPSFamilyCodeUSBUnknown = 0xE0004007,
  kIOPSFamilyCodeAC = 0xE0024000,
  kIOPSFamilyCodeExternal = 0xE0024001,
  kIOPSFamilyCodeExternal2 = 0xE0024002,
  kIOPSFamilyCodeExternal3 = 0xE0024003,
  kIOPSFamilyCodeExternal4 = 0xE0024004,
};

/* 2563 */
enum $D75DCA236B4869EFCA4026E499A18D28
{
  kIOPMThermalLevelNormal = 0x0,
  kIOPMThermalLevelDanger = 0x5,
  kIOPMThermalLevelCritical = 0xA,
  kIOPMThermalLevelWarning = 0x64,
  kIOPMThermalLevelTrap = 0x6E,
  kIOPMThermalLevelUnknown = 0xFF,
};

/* 2564 */
struct IOPMCalendarStruct
{
  UInt32 year;
  UInt8 month;
  UInt8 day;
  UInt8 hour;
  UInt8 minute;
  UInt8 second;
  UInt8 selector;
};

/* 2565 */
enum $86B90B24E25827EDAFC471F63DB9FB77
{
  kPMGeneralAggressiveness = 0x0,
  kPMMinutesToDim = 0x1,
  kPMMinutesToSpinDown = 0x2,
  kPMMinutesToSleep = 0x3,
  kPMEthernetWakeOnLANSettings = 0x4,
  kPMSetProcessorSpeed = 0x5,
  kPMPowerSource = 0x6,
  kPMMotionSensor = 0x7,
  kPMLastAggressivenessType = 0x8,
};

/* 2566 */
enum $0EC271208FA609F9AF0B36C785B416AF
{
  kIOPMInternalPower = 0x1,
  kIOPMExternalPower = 0x2,
};

/* 2567 */
enum $1B964225133EC03BCE57FCBBFA1F9B86
{
  kIOBatteryInstalled = 0x4,
  kIOBatteryCharge = 0x2,
  kIOBatteryChargerConnect = 0x1,
};

/* 2568 */
enum $22704F8FF8A159D26231C75DE80E47A6
{
  kIOPMACInstalled = 0x1,
  kIOPMBatteryCharging = 0x2,
  kIOPMBatteryInstalled = 0x4,
  kIOPMUPSInstalled = 0x8,
  kIOPMBatteryAtWarn = 0x10,
  kIOPMBatteryDepleted = 0x20,
  kIOPMACnoChargeCapability = 0x40,
  kIOPMRawLowBattery = 0x80,
  kIOPMForceLowSpeed = 0x100,
  kIOPMClosedClamshell = 0x200,
  kIOPMClamshellStateOnWake = 0x400,
};

/* 2569 */
struct IOPowerStateChangeNotification
{
  void *powerRef;
  unsigned __int64 returnValue;
  unsigned __int64 stateNumber;
  IOPMPowerFlags stateFlags;
};

/* 2570 */
typedef IOPowerStateChangeNotification sleepWakeNote;

/* 2571 */
struct IOPMSystemCapabilityChangeParameters
{
  uint32_t notifyRef;
  uint32_t maxWaitForReply;
  uint32_t changeFlags;
  uint32_t __reserved1;
  uint32_t fromCapabilities;
  uint32_t toCapabilities;
  uint32_t __reserved2[4];
};

/* 2572 */
enum $309FE8B5AB7142F41F348922990FE338
{
  kIOPMSystemCapabilityWillChange = 0x1,
  kIOPMSystemCapabilityDidChange = 0x2,
};

/* 2573 */
enum $93BD18D0C633CF7AFA2A3066279552F4
{
  kIOPMSystemCapabilityCPU = 0x1,
  kIOPMSystemCapabilityGraphics = 0x2,
  kIOPMSystemCapabilityAudio = 0x4,
  kIOPMSystemCapabilityNetwork = 0x8,
};

/* 2575 */
enum $6F82C8047BDCF80CA0E2B3F6E7ACF987
{
  kIOPMPowerStateVersion1 = 0x1,
  kIOPMPowerStateVersion2 = 0x2,
};

/* 2576 */
enum $18F63C063B3C4A95FA0ED6D97BE90E49
{
  kIODefaultProbeScore = 0x0,
};

/* 2577 */
enum $37F305389F68BA76D3DFCDF50F1FF99C
{
  kIOServiceInactiveState = 0x1,
  kIOServiceRegisteredState = 0x2,
  kIOServiceMatchedState = 0x4,
  kIOServiceFirstPublishState = 0x8,
  kIOServiceFirstMatchState = 0x10,
};

/* 2578 */
enum $4B0D51ECFD75F9F53528282A16B7B67E
{
  kIOServiceExclusive = 0x1,
  kIOServiceRequired = 0x1,
  kIOServiceTerminate = 0x4,
  kIOServiceSynchronous = 0x2,
  kIOServiceAsynchronous = 0x8,
};

/* 2579 */
enum $5F971E98A77A15BA9A1CF035AE3595B4 : __int64
{
  kIOServiceSeize = 0x1,
  kIOServiceFamilyOpenOptions = 0xFFFF0000,
};

/* 2580 */
enum $F2BBF37637AB8CCAD2227796959E338F : __int64
{
  kIOServiceFamilyCloseOptions = 0xFFFF0000,
};

/* 2581 */
typedef void *IONotificationRef;

/* 2583 */
typedef uint8_t (__cdecl *IOServiceNotificationHandler)(void *target, void *refCon, IOService *newService);

/* 2584 */
typedef uint8_t (__cdecl *IOServiceMatchingNotificationHandler)(void *target, void *refCon, IOService *newService, IONotifier *notifier);

/* 2585 */
typedef IOReturn (__cdecl *IOServiceInterestHandler)(void *target, void *refCon, UInt32 messageType, IOService *provider, void *messageArgument, vm_size_t argSize);

/* 2586 */
typedef void (__cdecl *IOServiceApplierFunction)(IOService *service, void *context);

/* 2587 */
typedef void (__cdecl *OSObjectApplierFunction)(OSObject *object, void *context);

/* 2588 */
struct IOInterruptAccountingData;

/* 2589 */
struct IOInterruptAccountingReporter;

/* 2590 */
enum $C53F920EE651DAB3F762D721A99D0B13
{
  kIOUCTypeMask = 0xF,
  kIOUCScalarIScalarO = 0x0,
  kIOUCScalarIStructO = 0x2,
  kIOUCStructIStructO = 0x3,
  kIOUCScalarIStructI = 0x4,
  kIOUCForegroundOnly = 0x10,
};

/* 2591 */
enum $0F2364F079E33BFC8697AA014BBAC05E : __int64
{
  kIOUCVariableStructureSize = 0xFFFFFFFF,
};

/* 2598 */
enum $7DBAB37785067247C132A1691143D38D
{
  kIOUserNotifyMaxMessageSize = 0x40,
};

/* 2599 */
enum $8B7DD8DB94CBAB2C3AD5633EF743AE88
{
  kIOUserNotifyOptionCanDrop = 0x1,
};

/* 2600 */
enum $3B98D3604167CA3E9E4B84A8084AE586
{
  kIOExternalMethodScalarInputCountMax = 0x10,
  kIOExternalMethodScalarOutputCountMax = 0x10,
};

/* 2604 */
enum $9AA8E4ADBBD35C0D4346CFC92D551B3F
{
  kIOExternalMethodArgumentsCurrentVersion = 0x2,
};

/* 2607 */
typedef void (__cdecl *IOI2CRequestCompletion)(IOI2CRequest *request);

/* 2605 */
struct IOI2CRequest
{
  IOOptionBits sendTransactionType;
  IOOptionBits replyTransactionType;
  uint32_t sendAddress;
  uint32_t replyAddress;
  uint8_t sendSubAddress;
  uint8_t replySubAddress;
  uint8_t __reservedA[2];
  uint64_t minReplyDelay;
  IOReturn result;
  IOOptionBits commFlags;
  uint32_t __padA;
  uint32_t sendBytes;
  uint32_t __reservedB[2];
  uint32_t __padB;
  uint32_t replyBytes;
  IOI2CRequestCompletion completion;
  vm_address_t sendBuffer;
  vm_address_t replyBuffer;
  uint32_t __reservedC[10];
};

/* 2606 */
struct IOI2CBuffer;

/* 2608 */
enum $57A68169C82FB27925E374AB317F1C9A
{
  kIOI2CNoTransactionType = 0x0,
  kIOI2CSimpleTransactionType = 0x1,
  kIOI2CDDCciReplyTransactionType = 0x2,
  kIOI2CCombinedTransactionType = 0x3,
  kIOI2CDisplayPortNativeTransactionType = 0x4,
};

/* 2609 */
enum $DF1472F708001F565214EBC44265A2B8
{
  kIOI2CUseSubAddressCommFlag = 0x2,
};

/* 2610 */
enum $3A5F779D8295471DFB48ADD4A0ECDAC3
{
  kIOI2CBusTypeI2C = 0x1,
  kIOI2CBusTypeDisplayPort = 0x2,
};

/* 2611 */
struct IOI2CBusTiming
{
  AbsoluteTime bitTimeout;
  AbsoluteTime byteTimeout;
  AbsoluteTime acknowledgeTimeout;
  AbsoluteTime startTimeout;
  AbsoluteTime holdTime;
  AbsoluteTime riseFallTime;
  UInt32 __reservedA[8];
};

/* 2612 */
enum $15C36BF307B3F8C1023EA407B7826BEC
{
  kIOI2CBusNumberMask = 0xFF,
};

/* 2613 */
typedef struct IOI2CConnect *IOI2CConnectRef;

/* 2614 */
typedef const void *CFTypeRef;

/* 2615 */
enum $79EAE6943D4B39AD4D5E39A7B80ACA5B
{
  kIODMAMapOptionMapped = 0x0,
  kIODMAMapOptionBypassed = 0x1,
  kIODMAMapOptionNonCoherent = 0x2,
  kIODMAMapOptionUnmapped = 0x3,
  kIODMAMapOptionTypeMask = 0xF,
  kIODMAMapOptionNoCacheStore = 0x10,
  kIODMAMapOptionOnChip = 0x20,
  kIODMAMapOptionIterateOnly = 0x40,
};

/* 2618 */
struct $4639C3E80EB6328392E88C0AF52CC253
{
  uint64_t samples;
  uint64_t mean;
  uint64_t variance;
  uint64_t reserved;
};

/* 2619 */
typedef struct $4639C3E80EB6328392E88C0AF52CC253 IONormDistReportValues;

/* 2620 */
enum $A9F4DD2AA63CA6C3F4F53609D5F33F96
{
  kIOMemoryPhysicallyContiguous = 0x10,
  kIOMemoryPageable = 0x20,
  kIOMemoryPurgeable = 0x40,
  kIOMemoryHostPhysicallyContiguous = 0x80,
  kIOMemorySharingTypeMask = 0xF0000,
  kIOMemoryUnshared = 0x0,
  kIOMemoryKernelUserShared = 0x10000,
  kIOBufferDescriptorMemoryFlags = 0xB00807,
};

/* 2621 */
enum $A4290D884AE9B685DC12098D1FE3AEF6
{
  kIOCatalogAddDrivers = 0x1,
  kIOCatalogAddDriversNoMatch = 0x2,
  kIOCatalogRemoveDrivers = 0x3,
  kIOCatalogRemoveDriversNoMatch = 0x4,
  kIOCatalogStartMatching = 0x5,
  kIOCatalogRemoveKernelLinker = 0x6,
  kIOCatalogKextdActive = 0x7,
  kIOCatalogKextdFinishedLaunching = 0x8,
  kIOCatalogResetDrivers = 0x9,
  kIOCatalogResetDriversNoMatch = 0xA,
};

/* 2622 */
enum $41F45A844E926D52ECE6C145D5AF984B
{
  kIOCatalogGetContents = 0x1,
  kIOCatalogGetModuleDemandList = 0x2,
  kIOCatalogGetCacheMissList = 0x3,
  kIOCatalogGetROMMkextList = 0x4,
};

/* 2623 */
enum $15F3246EE87BC453EFE494C7F8527531
{
  kIOCatalogResetDefault = 0x1,
};

/* 2624 */
enum $4E9A763B2F7242886B4E3F6DC9FBC4FF
{
  kIOCatalogModuleUnload = 0x1,
  kIOCatalogModuleTerminate = 0x2,
  kIOCatalogServiceTerminate = 0x3,
};

/* 2625 */
struct $F5AB6DBED4485C62BB8DB7963BB5AF30
{
  uint16_t curr_state;
  uint64_t update_ts;
  IOReportElement elem[];
};

/* 2626 */
typedef struct $F5AB6DBED4485C62BB8DB7963BB5AF30 IOStateReportInfo;

/* 2627 */
struct $163088DD9F6551A8D1D5FBB7DFC7DEB6
{
  int bucketWidth;
  IOReportElement elem[];
};

/* 2628 */
typedef struct $163088DD9F6551A8D1D5FBB7DFC7DEB6 IOHistReportInfo;

/* 2629 */
typedef void (__cdecl *RTC_tick_handler)(IOService *);

/* 2631 */
typedef int32_t IOInterruptVectorNumber;

/* 2632 */
enum $C9454C65B6EA5B4E9885140305D1EB8F
{
  kIOTimerEventSourceOptionsPriorityMask = 0xFF,
  kIOTimerEventSourceOptionsPriorityHigh = 0x0,
  kIOTimerEventSourceOptionsPriorityKernelHigh = 0x1,
  kIOTimerEventSourceOptionsPriorityKernel = 0x2,
  kIOTimerEventSourceOptionsPriorityUser = 0x3,
  kIOTimerEventSourceOptionsPriorityLow = 0x4,
  kIOTimerEventSourceOptionsPriorityWorkLoop = 0xFF,
  kIOTimerEventSourceOptionsAllowReenter = 0x100,
  kIOTimerEventSourceOptionsDefault = 0x1,
};

/* 2633 */
enum $C341C3DA51D7AFE4475C8264BB82CA0C
{
  kIOTimeOptionsWithLeeway = 0x20,
  kIOTimeOptionsContinuous = 0x100,
};

/* 2634 */
typedef SInt32 Fixed;

/* 2635 */
typedef Fixed *FixedPtr;

/* 2636 */
typedef SInt32 Fract;

/* 2637 */
typedef Fract *FractPtr;

/* 2638 */
typedef UInt32 UnsignedFixed;

/* 2639 */
typedef UnsignedFixed *UnsignedFixedPtr;

/* 2640 */
typedef __int16 ShortFixed;

/* 2641 */
typedef ShortFixed *ShortFixedPtr;

/* 2642 */
typedef float Float32;

/* 2643 */
typedef double Float64;

/* 2644 */
struct Float80
{
  SInt16 exp;
  UInt16 man[4];
};

/* 2645 */
struct Float96
{
  SInt16 exp[2];
  UInt16 man[4];
};

/* 2646 */
struct Float32Point
{
  Float32 x;
  Float32 y;
};

/* 2647 */
typedef char *Ptr;

/* 2648 */
typedef Ptr *Handle;

/* 2649 */
typedef __int64 Size;

/* 2650 */
typedef SInt16 OSErr;

/* 2651 */
typedef void *LogicalAddress;

/* 2652 */
typedef const void *ConstLogicalAddress;

/* 2653 */
typedef void *PhysicalAddress;

/* 2654 */
typedef UInt8 *BytePtr;

/* 2655 */
typedef unsigned __int64 ByteCount;

/* 2656 */
typedef unsigned __int64 ByteOffset;

/* 2657 */
typedef SInt32 Duration;

/* 2658 */
typedef unsigned __int64 ItemCount;

/* 2659 */
typedef UInt32 PBVersion;

/* 2660 */
typedef SInt16 ScriptCode;

/* 2661 */
typedef SInt16 LangCode;

/* 2662 */
typedef SInt16 RegionCode;

/* 2663 */
typedef UInt32 FourCharCode;

/* 2664 */
typedef FourCharCode OSType;

/* 2665 */
typedef FourCharCode ResType;

/* 2666 */
typedef OSType *OSTypePtr;

/* 2667 */
typedef ResType *ResTypePtr;

/* 2668 */
typedef __int64 (*ProcPtr)(void);

/* 2669 */
typedef void (*Register68kProcPtr)(void);

/* 2670 */
typedef ProcPtr UniversalProcPtr;

/* 2671 */
typedef ProcPtr *ProcHandle;

/* 2672 */
typedef UniversalProcPtr *UniversalProcHandle;

/* 2673 */
typedef void *PRefCon;

/* 2674 */
typedef void *URefCon;

/* 2675 */
typedef void *SRefCon;

/* 2676 */
enum $2E759173088CD34CCF4479622CDEF5B8
{
  noErr = 0x0,
};

/* 2677 */
enum $245BDEE3290FDE5F323E0A417238E5B0
{
  kNilOptions = 0x0,
};

/* 2678 */
enum $6EA2E4080572ACF28515A5F680662BB8
{
  kVariableLengthArray = 0x1,
};

/* 2679 */
enum $98F44587FA922B2B33F4DD5157786C45
{
  kUnknownType = 0x3F3F3F3F,
};

/* 2680 */
typedef UInt32 UnicodeScalarValue;

/* 2681 */
typedef UInt32 UTF32Char;

/* 2682 */
typedef UInt16 UniChar;

/* 2683 */
typedef UInt16 UTF16Char;

/* 2684 */
typedef UInt8 UTF8Char;

/* 2685 */
typedef UniChar *UniCharPtr;

/* 2686 */
typedef unsigned __int64 UniCharCount;

/* 2687 */
typedef UniCharCount *UniCharCountPtr;

/* 2688 */
typedef unsigned __int8 Str255[256];

/* 2689 */
typedef unsigned __int8 Str63[64];

/* 2690 */
typedef unsigned __int8 Str32[33];

/* 2691 */
typedef unsigned __int8 Str31[32];

/* 2692 */
typedef unsigned __int8 Str27[28];

/* 2693 */
typedef unsigned __int8 Str15[16];

/* 2694 */
typedef unsigned __int8 Str32Field[34];

/* 2695 */
typedef Str63 StrFileName;

/* 2696 */
typedef unsigned __int8 *StringPtr;

/* 2697 */
typedef StringPtr *StringHandle;

/* 2698 */
typedef const unsigned __int8 *ConstStringPtr;

/* 2699 */
typedef const unsigned __int8 *ConstStr255Param;

/* 2700 */
typedef const unsigned __int8 *ConstStr63Param;

/* 2701 */
typedef const unsigned __int8 *ConstStr32Param;

/* 2702 */
typedef const unsigned __int8 *ConstStr31Param;

/* 2703 */
typedef const unsigned __int8 *ConstStr27Param;

/* 2704 */
typedef const unsigned __int8 *ConstStr15Param;

/* 2705 */
typedef ConstStr63Param ConstStrFileNameParam;

/* 2706 */
struct ProcessSerialNumber
{
  UInt32 highLongOfPSN;
  UInt32 lowLongOfPSN;
};

/* 2707 */
typedef ProcessSerialNumber *ProcessSerialNumberPtr;

/* 2708 */
struct Point
{
  __int16 v;
  __int16 h;
};

/* 2709 */
typedef Point *PointPtr;

/* 2710 */
struct Rect
{
  __int16 top;
  __int16 left;
  __int16 bottom;
  __int16 right;
};

/* 2711 */
typedef Rect *RectPtr;

/* 2712 */
struct FixedPoint
{
  Fixed x;
  Fixed y;
};

/* 2713 */
struct FixedRect
{
  Fixed left;
  Fixed top;
  Fixed right;
  Fixed bottom;
};

/* 2714 */
typedef __int16 CharParameter;

/* 2715 */
enum $CA37B7C591AB80BE0B169161AB784E55
{
  normal = 0x0,
  bold = 0x1,
  italic = 0x2,
  underline = 0x4,
  outline = 0x8,
  shadow = 0x10,
  condense = 0x20,
  extend = 0x40,
};

/* 2716 */
typedef unsigned __int8 Style;

/* 2717 */
typedef __int16 StyleParameter;

/* 2718 */
typedef Style StyleField;

/* 2719 */
typedef SInt32 TimeValue;

/* 2720 */
typedef SInt32 TimeScale;

/* 2721 */
typedef wide CompTimeValue;

/* 2722 */
typedef SInt64 TimeValue64;

/* 2723 */
typedef struct TimeBaseRecord *TimeBase;

/* 2724 */
struct TimeRecord
{
  CompTimeValue value;
  TimeScale scale;
  TimeBase base;
};

/* 2725 */
struct NumVersion
{
  UInt8 nonRelRev;
  UInt8 stage;
  UInt8 minorAndBugRev;
  UInt8 majorRev;
};

/* 2726 */
enum $61822B9F17FF4C6D8E0FF7B2544F9B7D
{
  developStage = 0x20,
  alphaStage = 0x40,
  betaStage = 0x60,
  finalStage = 0x80,
};

/* 2727 */
union NumVersionVariant
{
  NumVersion parts;
  UInt32 whole;
};

/* 2728 */
typedef NumVersionVariant *NumVersionVariantPtr;

/* 2729 */
typedef NumVersionVariantPtr *NumVersionVariantHandle;

/* 2730 */
struct VersRec
{
  NumVersion numericVersion;
  __int16 countryCode;
  Str255 shortVersion;
  Str255 reserved;
};

/* 2731 */
typedef VersRec *VersRecPtr;

/* 2732 */
typedef VersRecPtr *VersRecHndl;

/* 2733 */
typedef SInt8 SignedByte;

/* 2734 */
typedef wide *WidePtr;

/* 2735 */
typedef UnsignedWide *UnsignedWidePtr;

/* 2736 */
typedef Float80 extended80;

/* 2737 */
typedef Float96 extended96;

/* 2738 */
typedef SInt8 VHSelect;

/* 2739 */
typedef unsigned __int64 CFTypeID;

/* 2740 */
typedef unsigned __int64 CFOptionFlags;

/* 2741 */
typedef unsigned __int64 CFHashCode;

/* 2742 */
typedef signed __int64 CFIndex;

/* 2743 */
typedef const struct __CFString *CFStringRef;

/* 2744 */
typedef struct __CFString *CFMutableStringRef;

/* 2745 */
typedef CFTypeRef CFPropertyListRef;

/* 2746 */
typedef CFIndex CFComparisonResult;

/* 2747 */
enum $E72284104A6319CA47B3C718B2E24F29
{
  kCFCompareLessThan = 0xFFFFFFFF,
  kCFCompareEqualTo = 0x0,
  kCFCompareGreaterThan = 0x1,
};

/* 2748 */
typedef CFComparisonResult (__cdecl *CFComparatorFunction)(const void *val1, const void *val2, void *context);

/* 2749 */
struct $CE031AA781256F109BA96388F26D99F1
{
  CFIndex location;
  CFIndex length;
};

/* 2750 */
typedef struct $CE031AA781256F109BA96388F26D99F1 CFRange;

/* 2751 */
typedef const struct __CFNull *CFNullRef;

/* 2752 */
typedef const struct __CFAllocator *CFAllocatorRef;

/* 2753 */
typedef const void *(__cdecl *CFAllocatorRetainCallBack)(const void *info);

/* 2754 */
typedef void (__cdecl *CFAllocatorReleaseCallBack)(const void *info);

/* 2755 */
typedef CFStringRef (__cdecl *CFAllocatorCopyDescriptionCallBack)(const void *info);

/* 2756 */
typedef void *(__cdecl *CFAllocatorAllocateCallBack)(CFIndex allocSize, CFOptionFlags hint, void *info);

/* 2757 */
typedef void *(__cdecl *CFAllocatorReallocateCallBack)(void *ptr, CFIndex newsize, CFOptionFlags hint, void *info);

/* 2758 */
typedef void (__cdecl *CFAllocatorDeallocateCallBack)(void *ptr, void *info);

/* 2759 */
typedef CFIndex (__cdecl *CFAllocatorPreferredSizeCallBack)(CFIndex size, CFOptionFlags hint, void *info);

/* 2760 */
struct $C6F947EC01A111BF7C21980A7E0A2009
{
  CFIndex version;
  void *info;
  CFAllocatorRetainCallBack retain;
  CFAllocatorReleaseCallBack release;
  CFAllocatorCopyDescriptionCallBack copyDescription;
  CFAllocatorAllocateCallBack allocate;
  CFAllocatorReallocateCallBack reallocate;
  CFAllocatorDeallocateCallBack deallocate;
  CFAllocatorPreferredSizeCallBack preferredSize;
};

/* 2761 */
typedef struct $C6F947EC01A111BF7C21980A7E0A2009 CFAllocatorContext;

/* 2762 */
typedef const void *(__cdecl *CFDictionaryRetainCallBack)(CFAllocatorRef allocator, const void *value);

/* 2763 */
typedef void (__cdecl *CFDictionaryReleaseCallBack)(CFAllocatorRef allocator, const void *value);

/* 2764 */
typedef CFStringRef (__cdecl *CFDictionaryCopyDescriptionCallBack)(const void *value);

/* 2765 */
typedef Boolean (__cdecl *CFDictionaryEqualCallBack)(const void *value1, const void *value2);

/* 2766 */
typedef CFHashCode (__cdecl *CFDictionaryHashCallBack)(const void *value);

/* 2767 */
struct $515746CE9411D6F34B57314E7C668165
{
  CFIndex version;
  CFDictionaryRetainCallBack retain;
  CFDictionaryReleaseCallBack release;
  CFDictionaryCopyDescriptionCallBack copyDescription;
  CFDictionaryEqualCallBack equal;
  CFDictionaryHashCallBack hash;
};

/* 2768 */
typedef struct $515746CE9411D6F34B57314E7C668165 CFDictionaryKeyCallBacks;

/* 2769 */
struct $70B4BADF0B8D7EC9A73D9811C5B8D4B3
{
  CFIndex version;
  CFDictionaryRetainCallBack retain;
  CFDictionaryReleaseCallBack release;
  CFDictionaryCopyDescriptionCallBack copyDescription;
  CFDictionaryEqualCallBack equal;
};

/* 2770 */
typedef struct $70B4BADF0B8D7EC9A73D9811C5B8D4B3 CFDictionaryValueCallBacks;

/* 2771 */
typedef void (__cdecl *CFDictionaryApplierFunction)(const void *key, const void *value, void *context);

/* 2772 */
typedef const struct __CFDictionary *CFDictionaryRef;

/* 2773 */
typedef struct __CFDictionary *CFMutableDictionaryRef;

/* 2774 */
typedef const void *(__cdecl *CFArrayRetainCallBack)(CFAllocatorRef allocator, const void *value);

/* 2775 */
typedef void (__cdecl *CFArrayReleaseCallBack)(CFAllocatorRef allocator, const void *value);

/* 2776 */
typedef CFStringRef (__cdecl *CFArrayCopyDescriptionCallBack)(const void *value);

/* 2777 */
typedef Boolean (__cdecl *CFArrayEqualCallBack)(const void *value1, const void *value2);

/* 2778 */
struct $E65A8C68514570D0FB8B49D6BA39205E
{
  CFIndex version;
  CFArrayRetainCallBack retain;
  CFArrayReleaseCallBack release;
  CFArrayCopyDescriptionCallBack copyDescription;
  CFArrayEqualCallBack equal;
};

/* 2779 */
typedef struct $E65A8C68514570D0FB8B49D6BA39205E CFArrayCallBacks;

/* 2780 */
typedef void (__cdecl *CFArrayApplierFunction)(const void *value, void *context);

/* 2781 */
typedef const struct __CFArray *CFArrayRef;

/* 2782 */
typedef struct __CFArray *CFMutableArrayRef;

/* 2783 */
typedef double CFTimeInterval;

/* 2784 */
typedef CFTimeInterval CFAbsoluteTime;

/* 2785 */
typedef const struct __CFDate *CFDateRef;

/* 2786 */
typedef const struct __CFTimeZone *CFTimeZoneRef;

/* 2787 */
struct $0001B0EE5CB471E2850D214488412138
{
  SInt32 year;
  SInt8 month;
  SInt8 day;
  SInt8 hour;
  SInt8 minute;
  double second;
};

/* 2788 */
typedef struct $0001B0EE5CB471E2850D214488412138 CFGregorianDate;

/* 2789 */
struct $523A9F483328EA8C653B50B6796CEBEC
{
  SInt32 years;
  SInt32 months;
  SInt32 days;
  SInt32 hours;
  SInt32 minutes;
  double seconds;
};

/* 2790 */
typedef struct $523A9F483328EA8C653B50B6796CEBEC CFGregorianUnits;

/* 2791 */
typedef CFOptionFlags CFGregorianUnitFlags;

/* 2792 */
enum $ECAF5A2F73172FB898FF768E7D9E2DE3
{
  kCFGregorianUnitsYears = 0x1,
  kCFGregorianUnitsMonths = 0x2,
  kCFGregorianUnitsDays = 0x4,
  kCFGregorianUnitsHours = 0x8,
  kCFGregorianUnitsMinutes = 0x10,
  kCFGregorianUnitsSeconds = 0x20,
  kCFGregorianAllUnits = 0xFFFFFF,
};

/* 2793 */
typedef const struct __CFData *CFDataRef;

/* 2794 */
typedef struct __CFData *CFMutableDataRef;

/* 2795 */
typedef CFOptionFlags CFDataSearchFlags;

/* 2796 */
enum $7294CAA48693E1877ABF54CEFC6B1863
{
  kCFDataSearchBackwards = 0x1,
  kCFDataSearchAnchored = 0x2,
};

/* 2797 */
typedef const struct __CFCharacterSet *CFCharacterSetRef;

/* 2798 */
typedef struct __CFCharacterSet *CFMutableCharacterSetRef;

/* 2799 */
typedef CFIndex CFCharacterSetPredefinedSet;

/* 2800 */
enum $0BD51E011CC7166B0AA8E571627C0BD9
{
  kCFCharacterSetControl = 0x1,
  kCFCharacterSetWhitespace = 0x2,
  kCFCharacterSetWhitespaceAndNewline = 0x3,
  kCFCharacterSetDecimalDigit = 0x4,
  kCFCharacterSetLetter = 0x5,
  kCFCharacterSetLowercaseLetter = 0x6,
  kCFCharacterSetUppercaseLetter = 0x7,
  kCFCharacterSetNonBase = 0x8,
  kCFCharacterSetDecomposable = 0x9,
  kCFCharacterSetAlphaNumeric = 0xA,
  kCFCharacterSetPunctuation = 0xB,
  kCFCharacterSetCapitalizedLetter = 0xD,
  kCFCharacterSetSymbol = 0xE,
  kCFCharacterSetNewline = 0xF,
  kCFCharacterSetIllegal = 0xC,
};

/* 2801 */
typedef CFStringRef CFNotificationName;

/* 2802 */
typedef struct __CFNotificationCenter *CFNotificationCenterRef;

/* 2803 */
typedef void (__cdecl *CFNotificationCallback)(CFNotificationCenterRef center, void *observer, CFNotificationName name, const void *object, CFDictionaryRef userInfo);

/* 2804 */
typedef CFIndex CFNotificationSuspensionBehavior;

/* 2805 */
enum $DBA047679F6933A588A9C46207FF8881
{
  CFNotificationSuspensionBehaviorDrop = 0x1,
  CFNotificationSuspensionBehaviorCoalesce = 0x2,
  CFNotificationSuspensionBehaviorHold = 0x3,
  CFNotificationSuspensionBehaviorDeliverImmediately = 0x4,
};

/* 2806 */
enum $D09B0B48F4FBA0DA91B04B5BE929F078
{
  kCFNotificationDeliverImmediately = 0x1,
  kCFNotificationPostToAllSessions = 0x2,
};

/* 2807 */
typedef CFStringRef CFLocaleIdentifier;

/* 2808 */
typedef CFStringRef CFLocaleKey;

/* 2809 */
typedef const struct __CFLocale *CFLocaleRef;

/* 2810 */
typedef CFIndex CFLocaleLanguageDirection;

/* 2811 */
enum $EFDC224FD7DE2AE3B9638CF6996CDD02
{
  kCFLocaleLanguageDirectionUnknown = 0x0,
  kCFLocaleLanguageDirectionLeftToRight = 0x1,
  kCFLocaleLanguageDirectionRightToLeft = 0x2,
  kCFLocaleLanguageDirectionTopToBottom = 0x3,
  kCFLocaleLanguageDirectionBottomToTop = 0x4,
};

/* 2812 */
typedef CFStringRef CFCalendarIdentifier;

/* 2813 */
typedef UInt32 CFStringEncoding;

/* 2814 */
typedef CFStringEncoding CFStringBuiltInEncodings;

/* 2815 */
enum $4F0A7916C95DEE2ACBE1095C9D5D908F
{
  kCFStringEncodingMacRoman = 0x0,
  kCFStringEncodingWindowsLatin1 = 0x500,
  kCFStringEncodingISOLatin1 = 0x201,
  kCFStringEncodingNextStepLatin = 0xB01,
  kCFStringEncodingASCII = 0x600,
  kCFStringEncodingUnicode = 0x100,
  kCFStringEncodingUTF8 = 0x8000100,
  kCFStringEncodingNonLossyASCII = 0xBFF,
  kCFStringEncodingUTF16 = 0x100,
  kCFStringEncodingUTF16BE = 0x10000100,
  kCFStringEncodingUTF16LE = 0x14000100,
  kCFStringEncodingUTF32 = 0xC000100,
  kCFStringEncodingUTF32BE = 0x18000100,
  kCFStringEncodingUTF32LE = 0x1C000100,
};

/* 2816 */
typedef CFOptionFlags CFStringCompareFlags;

/* 2817 */
enum $9D042B2905A0C851A152DEA50CA725FA
{
  kCFCompareCaseInsensitive = 0x1,
  kCFCompareBackwards = 0x4,
  kCFCompareAnchored = 0x8,
  kCFCompareNonliteral = 0x10,
  kCFCompareLocalized = 0x20,
  kCFCompareNumerically = 0x40,
  kCFCompareDiacriticInsensitive = 0x80,
  kCFCompareWidthInsensitive = 0x100,
  kCFCompareForcedOrdering = 0x200,
};

/* 2818 */
typedef CFIndex CFStringNormalizationForm;

/* 2819 */
enum $5FA0F57FAA30BBD24B2E0A4CF9B9F780
{
  kCFStringNormalizationFormD = 0x0,
  kCFStringNormalizationFormKD = 0x1,
  kCFStringNormalizationFormC = 0x2,
  kCFStringNormalizationFormKC = 0x3,
};

/* 2820 */
struct $5D19B0CABB219222E79BD20AFFE030A3
{
  UniChar buffer[64];
  CFStringRef theString;
  const UniChar *directUniCharBuffer;
  const char *directCStringBuffer;
  CFRange rangeToBuffer;
  CFIndex bufferedRangeStart;
  CFIndex bufferedRangeEnd;
};

/* 2821 */
typedef struct $5D19B0CABB219222E79BD20AFFE030A3 CFStringInlineBuffer;

/* 2822 */
typedef CFStringRef CFRunLoopMode;

/* 2823 */
typedef struct __CFRunLoop *CFRunLoopRef;

/* 2824 */
typedef struct __CFRunLoopSource *CFRunLoopSourceRef;

/* 2825 */
typedef struct __CFRunLoopObserver *CFRunLoopObserverRef;

/* 2826 */
typedef struct __CFRunLoopTimer *CFRunLoopTimerRef;

/* 2827 */
typedef SInt32 CFRunLoopRunResult;

/* 2828 */
enum $FB9DE5A3716475996BACF08B0AD5B184
{
  kCFRunLoopRunFinished = 0x1,
  kCFRunLoopRunStopped = 0x2,
  kCFRunLoopRunTimedOut = 0x3,
  kCFRunLoopRunHandledSource = 0x4,
};

/* 2829 */
typedef CFOptionFlags CFRunLoopActivity;

/* 2830 */
enum $AD2CE5B9F9B3F0DC238AE97EC382AC06
{
  kCFRunLoopEntry = 0x1,
  kCFRunLoopBeforeTimers = 0x2,
  kCFRunLoopBeforeSources = 0x4,
  kCFRunLoopBeforeWaiting = 0x20,
  kCFRunLoopAfterWaiting = 0x40,
  kCFRunLoopExit = 0x80,
  kCFRunLoopAllActivities = 0xFFFFFFF,
};

/* 2831 */
struct $240A9CF661293EDB3CB27B34FF89C26E
{
  CFIndex version;
  void *info;
  const void *(__cdecl *retain)(const void *info);
  void (__cdecl *release)(const void *info);
  CFStringRef (__cdecl *copyDescription)(const void *info);
  Boolean (__cdecl *equal)(const void *info1, const void *info2);
  CFHashCode (__cdecl *hash)(const void *info);
  void (__cdecl *schedule)(void *info, CFRunLoopRef rl, CFRunLoopMode mode);
  void (__cdecl *cancel)(void *info, CFRunLoopRef rl, CFRunLoopMode mode);
  void (__cdecl *perform)(void *info);
};

/* 2832 */
typedef struct $240A9CF661293EDB3CB27B34FF89C26E CFRunLoopSourceContext;

/* 2833 */
struct $44F052E339C9E59F5597418740373610
{
  CFIndex version;
  void *info;
  const void *(__cdecl *retain)(const void *info);
  void (__cdecl *release)(const void *info);
  CFStringRef (__cdecl *copyDescription)(const void *info);
  Boolean (__cdecl *equal)(const void *info1, const void *info2);
  CFHashCode (__cdecl *hash)(const void *info);
  mach_port_t (__cdecl *getPort)(void *info);
  void *(__cdecl *perform)(void *msg, CFIndex size, CFAllocatorRef allocator, void *info);
};

/* 2834 */
typedef struct $44F052E339C9E59F5597418740373610 CFRunLoopSourceContext1;

/* 2835 */
struct $3D92972ECAEBDA983780D7725F8E6602
{
  CFIndex version;
  void *info;
  const void *(__cdecl *retain)(const void *info);
  void (__cdecl *release)(const void *info);
  CFStringRef (__cdecl *copyDescription)(const void *info);
};

/* 2836 */
typedef struct $3D92972ECAEBDA983780D7725F8E6602 CFRunLoopObserverContext;

/* 2837 */
typedef void (__cdecl *CFRunLoopObserverCallBack)(CFRunLoopObserverRef observer, CFRunLoopActivity activity, void *info);

/* 2838 */
typedef struct $3D92972ECAEBDA983780D7725F8E6602 CFRunLoopTimerContext;

/* 2839 */
typedef void (__cdecl *CFRunLoopTimerCallBack)(CFRunLoopTimerRef timer, void *info);

/* 2840 */
union $123F62C61D2F05B8D6A582584F454006
{
  struct _os_object_s *_os_obj;
  struct dispatch_object_s *_do;
  struct dispatch_continuation_s *_dc;
  struct dispatch_queue_s *_dq;
  struct dispatch_queue_attr_s *_dqa;
  struct dispatch_group_s *_dg;
  struct dispatch_mach_s *_dm;
  struct dispatch_mach_msg_s *_dmsg;
  struct dispatch_source_attr_s *_dsa;
  struct dispatch_semaphore_s *_dsema;
  struct dispatch_data_s *_ddata;
  struct dispatch_io_s *_dchannel;
  struct dispatch_operation_s *_doperation;
  struct dispatch_disk_s *_ddisk;
};

/* 2841 */
typedef union $123F62C61D2F05B8D6A582584F454006 dispatch_object_t;

/* 2842 */
typedef void (*dispatch_block_t)(void);

/* 2843 */
enum $5C467ECD356260939442767D74D47F9C
{
  QOS_CLASS_USER_INTERACTIVE = 0x21,
  QOS_CLASS_USER_INITIATED = 0x19,
  QOS_CLASS_DEFAULT = 0x15,
  QOS_CLASS_UTILITY = 0x11,
  QOS_CLASS_BACKGROUND = 0x9,
  QOS_CLASS_UNSPECIFIED = 0x0,
};

/* 2844 */
typedef unsigned int qos_class_t;

/* 2845 */
typedef qos_class_t dispatch_qos_class_t;

/* 2846 */
enum $653716545054CB38F916BF9B28455046
{
  DISPATCH_AUTORELEASE_FREQUENCY_INHERIT = 0x0,
  DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM = 0x1,
  DISPATCH_AUTORELEASE_FREQUENCY_NEVER = 0x2,
};

/* 2847 */
typedef unsigned __int64 dispatch_autorelease_frequency_t;

/* 2848 */
enum $B7EC06C0D6BF869642D4B93800F15FE1
{
  DISPATCH_BLOCK_BARRIER = 0x1,
  DISPATCH_BLOCK_DETACHED = 0x2,
  DISPATCH_BLOCK_ASSIGN_CURRENT = 0x4,
  DISPATCH_BLOCK_NO_QOS_CLASS = 0x8,
  DISPATCH_BLOCK_INHERIT_QOS_CLASS = 0x10,
  DISPATCH_BLOCK_ENFORCE_QOS_CLASS = 0x20,
};

/* 2849 */
typedef unsigned __int64 dispatch_block_flags_t;

/* 2850 */
typedef unsigned __int64 dispatch_source_memorypressure_flags_t;

/* 2851 */
typedef unsigned __int64 dispatch_source_timer_flags_t;

/* 2852 */
typedef uint8_t (__cdecl *dispatch_data_applier_t)(dispatch_data_t region, size_t offset, const void *buffer, size_t size);

/* 2853 */
typedef struct dispatch_io_s *dispatch_io_t;

/* 2854 */
typedef unsigned __int64 dispatch_io_type_t;

/* 2855 */
typedef void (__cdecl *dispatch_io_handler_t)(uint8_t done, dispatch_data_t data, int error);

/* 2856 */
typedef unsigned __int64 dispatch_io_close_flags_t;

/* 2857 */
typedef unsigned __int64 dispatch_io_interval_flags_t;

/* 2858 */
typedef struct IONotificationPort *IONotificationPortRef;

/* 2859 */
typedef void (__cdecl *IOServiceMatchingCallback)(void *refcon, io_iterator_t iterator);

/* 2860 */
typedef void (__cdecl *IOServiceInterestCallback)(void *refcon, io_service_t service, uint32_t messageType, void *messageArgument);

/* 2861 */
enum $004F029C5E80677358228F5C535D7792
{
  kIOServiceInteractionAllowed = 0x1,
};

/* 2862 */
typedef void (__cdecl *IOAsyncCallback0)(void *refcon, IOReturn result);

/* 2863 */
typedef void (__cdecl *IOAsyncCallback1)(void *refcon, IOReturn result, void *arg0);

/* 2864 */
typedef void (__cdecl *IOAsyncCallback2)(void *refcon, IOReturn result, void *arg0, void *arg1);

/* 2865 */
typedef void (__cdecl *IOAsyncCallback)(void *refcon, IOReturn result, void **args, uint32_t numArgs);

/* 2867 */
typedef unsigned int vUInt32;

/* 2868 */
typedef signed int vSInt32;

/* 2869 */
typedef unsigned __int8 vUInt8;

/* 2870 */
struct $1CB14FF528AC4C04AF664F31223938A2
{
  uint8_t bytes[3];
};

/* 2871 */
typedef struct $1CB14FF528AC4C04AF664F31223938A2 vDSP_uint24;

/* 2872 */
typedef struct $1CB14FF528AC4C04AF664F31223938A2 vDSP_int24;

/* 2873 */
typedef struct vDSP_biquad_SetupStruct *vDSP_biquad_Setup;

/* 2874 */
typedef int IIRChannel;

/* 2875 */
enum $441DD0DB7C6662E9C72BCF858FE94D77
{
  vDSP_IIRStereo = 0x0,
  vDSP_IIRMonoLeft = 0x1,
  vDSP_IIRMonoRight = 0x2,
};

/* 2876 */
struct tcp_connection_info
{
  u_int8_t tcpi_state;
  u_int8_t tcpi_snd_wscale;
  u_int8_t tcpi_rcv_wscale;
  u_int8_t __pad1;
  u_int32_t tcpi_options;
  u_int32_t tcpi_flags;
  u_int32_t tcpi_rto;
  u_int32_t tcpi_maxseg;
  u_int32_t tcpi_snd_ssthresh;
  u_int32_t tcpi_snd_cwnd;
  u_int32_t tcpi_snd_wnd;
  u_int32_t tcpi_snd_sbbytes;
  u_int32_t tcpi_rcv_wnd;
  u_int32_t tcpi_rttcur;
  u_int32_t tcpi_srtt;
  u_int32_t tcpi_rttvar;
  unsigned __int32 tcpi_tfo_cookie_req : 1;
  unsigned __int32 tcpi_tfo_cookie_rcv : 1;
  unsigned __int32 tcpi_tfo_syn_loss : 1;
  unsigned __int32 tcpi_tfo_syn_data_sent : 1;
  unsigned __int32 tcpi_tfo_syn_data_acked : 1;
  unsigned __int32 tcpi_tfo_syn_data_rcv : 1;
  unsigned __int32 tcpi_tfo_cookie_req_rcv : 1;
  unsigned __int32 tcpi_tfo_cookie_sent : 1;
  unsigned __int32 tcpi_tfo_cookie_invalid : 1;
  unsigned __int32 tcpi_tfo_cookie_wrong : 1;
  unsigned __int32 tcpi_tfo_no_cookie_rcv : 1;
  unsigned __int32 tcpi_tfo_heuristics_disable : 1;
  unsigned __int32 tcpi_tfo_send_blackhole : 1;
  unsigned __int32 tcpi_tfo_recv_blackhole : 1;
  unsigned __int32 tcpi_tfo_onebyte_proxy : 1;
  unsigned __int32 __pad2 : 17;
  u_int64_t tcpi_txpackets;
  u_int64_t tcpi_txbytes;
  u_int64_t tcpi_txretransmitbytes;
  u_int64_t tcpi_rxpackets;
  u_int64_t tcpi_rxbytes;
  u_int64_t tcpi_rxoutoforderbytes;
  u_int64_t tcpi_txretransmitpackets;
};

/* 2877 */
struct icmp_ra_addr
{
  u_int32_t ira_addr;
  u_int32_t ira_preference;
};

/* 2878 */
struct icmp::$9AC0CF620A535FF14C8D45A691AEBD50::ih_idseq
{
  n_short icd_id;
  n_short icd_seq;
};

/* 2879 */
struct icmp::$9AC0CF620A535FF14C8D45A691AEBD50::ih_pmtu
{
  n_short ipm_void;
  n_short ipm_nextmtu;
};

/* 2880 */
struct icmp::$9AC0CF620A535FF14C8D45A691AEBD50::ih_rtradv
{
  u_char irt_num_addrs;
  u_char irt_wpa;
  u_int16_t irt_lifetime;
};

/* 2881 */
struct icmp::$80CB03627E66491404512D12AA081323::id_ts
{
  n_time its_otime;
  n_time its_rtime;
  n_time its_ttime;
};

/* 3002 */
struct ip
{
  unsigned __int32 ip_hl : 4;
  unsigned __int32 ip_v : 4;
  u_char ip_tos;
  u_short ip_len;
  u_short ip_id;
  u_short ip_off;
  u_char ip_ttl;
  u_char ip_p;
  u_short ip_sum;
  struct in_addr ip_src;
  struct in_addr ip_dst;
};

/* 2882 */
struct icmp::$80CB03627E66491404512D12AA081323::id_ip
{
  struct ip idi_ip;
};

/* 2883 */
union icmp::$9AC0CF620A535FF14C8D45A691AEBD50
{
  u_char ih_pptr;
  struct in_addr ih_gwaddr;
  struct icmp::$9AC0CF620A535FF14C8D45A691AEBD50::ih_idseq ih_idseq;
  int ih_void;
  struct icmp::$9AC0CF620A535FF14C8D45A691AEBD50::ih_pmtu ih_pmtu;
  struct icmp::$9AC0CF620A535FF14C8D45A691AEBD50::ih_rtradv ih_rtradv;
};

/* 2884 */
union icmp::$80CB03627E66491404512D12AA081323
{
  struct icmp::$80CB03627E66491404512D12AA081323::id_ts id_ts;
  struct icmp::$80CB03627E66491404512D12AA081323::id_ip id_ip;
  struct icmp_ra_addr id_radv;
  u_int32_t id_mask;
  char id_data[1];
};

/* 2885 */
struct icmp
{
  u_char icmp_type;
  u_char icmp_code;
  u_short icmp_cksum;
  union icmp::$9AC0CF620A535FF14C8D45A691AEBD50 icmp_hun;
  union icmp::$80CB03627E66491404512D12AA081323 icmp_dun;
};

/* 2886 */
struct igmp
{
  u_char igmp_type;
  u_char igmp_code;
  u_short igmp_cksum;
  struct in_addr igmp_group;
};

/* 2887 */
struct igmpv3
{
  u_char igmp_type;
  u_char igmp_code;
  u_short igmp_cksum;
  struct in_addr igmp_group;
  u_char igmp_misc;
  u_char igmp_qqi;
  u_short igmp_numsrc;
};

/* 2888 */
struct igmp_grouprec
{
  u_char ig_type;
  u_char ig_datalen;
  u_short ig_numsrc;
  struct in_addr ig_group;
};

/* 2889 */
struct igmp_report
{
  u_char ir_type;
  u_char ir_rsv1;
  u_short ir_cksum;
  u_short ir_rsv2;
  u_short ir_numgrps;
};

/* 2890 */
struct ipovly
{
  u_char ih_x1[9];
  u_char ih_pr;
  u_short ih_len;
  struct in_addr ih_src;
  struct in_addr ih_dst;
};

/* 2891 */
struct ipstat
{
  u_int32_t ips_total;
  u_int32_t ips_badsum;
  u_int32_t ips_tooshort;
  u_int32_t ips_toosmall;
  u_int32_t ips_badhlen;
  u_int32_t ips_badlen;
  u_int32_t ips_fragments;
  u_int32_t ips_fragdropped;
  u_int32_t ips_fragtimeout;
  u_int32_t ips_forward;
  u_int32_t ips_fastforward;
  u_int32_t ips_cantforward;
  u_int32_t ips_redirectsent;
  u_int32_t ips_noproto;
  u_int32_t ips_delivered;
  u_int32_t ips_localout;
  u_int32_t ips_odropped;
  u_int32_t ips_reassembled;
  u_int32_t ips_fragmented;
  u_int32_t ips_ofragments;
  u_int32_t ips_cantfrag;
  u_int32_t ips_badoptions;
  u_int32_t ips_noroute;
  u_int32_t ips_badvers;
  u_int32_t ips_rawout;
  u_int32_t ips_toolong;
  u_int32_t ips_notmember;
  u_int32_t ips_nogif;
  u_int32_t ips_badaddr;
  u_int32_t ips_pktdropcntrl;
  u_int32_t ips_rcv_swcsum;
  u_int32_t ips_rcv_swcsum_bytes;
  u_int32_t ips_snd_swcsum;
  u_int32_t ips_snd_swcsum_bytes;
  u_int32_t ips_adj;
  u_int32_t ips_adj_hwcsum_clr;
  u_int32_t ips_rxc_collisions;
  u_int32_t ips_rxc_chained;
  u_int32_t ips_rxc_notchain;
  u_int32_t ips_rxc_chainsz_gt2;
  u_int32_t ips_rxc_chainsz_gt4;
  u_int32_t ips_rxc_notlist;
  u_int32_t ips_raw_sappend_fail;
  u_int32_t ips_necp_policy_drop;
};

/* 2892 */
struct ip_linklocal_stat
{
  u_int32_t iplls_in_total;
  u_int32_t iplls_in_badttl;
  u_int32_t iplls_out_total;
  u_int32_t iplls_out_badttl;
};

/* 4067 */
typedef __uint32_t tcp_seq;

/* 4066 */
struct tcphdr
{
  unsigned __int16 th_sport;
  unsigned __int16 th_dport;
  tcp_seq th_seq;
  tcp_seq th_ack;
  unsigned __int32 th_x2 : 4;
  unsigned __int32 th_off : 4;
  unsigned __int8 th_flags;
  unsigned __int16 th_win;
  unsigned __int16 th_sum;
  unsigned __int16 th_urp;
};

/* 2893 */
struct tcpiphdr
{
  struct ipovly ti_i;
  struct tcphdr ti_t;
};

/* 2894 */
struct icmpstat
{
  u_int32_t icps_error;
  u_int32_t icps_oldshort;
  u_int32_t icps_oldicmp;
  u_int32_t icps_outhist[41];
  u_int32_t icps_badcode;
  u_int32_t icps_tooshort;
  u_int32_t icps_checksum;
  u_int32_t icps_badlen;
  u_int32_t icps_reflect;
  u_int32_t icps_inhist[41];
  u_int32_t icps_bmcastecho;
  u_int32_t icps_bmcasttstamp;
};

/* 2895 */
struct udphdr
{
  u_short uh_sport;
  u_short uh_dport;
  u_short uh_ulen;
  u_short uh_sum;
};

/* 2896 */
struct bootp
{
  u_char bp_op;
  u_char bp_htype;
  u_char bp_hlen;
  u_char bp_hops;
  u_int32_t bp_xid;
  u_short bp_secs;
  u_short bp_unused;
  struct in_addr bp_ciaddr;
  struct in_addr bp_yiaddr;
  struct in_addr bp_siaddr;
  struct in_addr bp_giaddr;
  u_char bp_chaddr[16];
  u_char bp_sname[64];
  u_char bp_file[128];
  u_char bp_vend[64];
};

/* 2897 */
struct vend
{
  u_char v_magic[4];
  u_int32_t v_flags;
  u_char v_unused[56];
};

/* 2898 */
struct nextvend::$B2F64A20272E9B2A57BBF23B2F03C244::$FB4DB5D0E901A3733AA39EC9E02B4775
{
  u_char NV1_opcode;
  u_char NV1_xid;
  u_char NV1_text[55];
  u_char NV1_null;
};

/* 2899 */
union nextvend::$B2F64A20272E9B2A57BBF23B2F03C244
{
  u_char NV0[58];
  struct nextvend::$B2F64A20272E9B2A57BBF23B2F03C244::$FB4DB5D0E901A3733AA39EC9E02B4775 NV1;
};

/* 2900 */
struct nextvend
{
  u_char nv_magic[4];
  u_char nv_version;
  unsigned __int16 : 0;
  union nextvend::$B2F64A20272E9B2A57BBF23B2F03C244 nv_U;
};

/* 2901 */
struct bootp_packet
{
  struct ip bp_ip;
  struct udphdr bp_udp;
  struct bootp bp_bootp;
};

/* 3016 */
struct xsockbuf
{
  u_int32_t sb_cc;
  u_int32_t sb_hiwat;
  u_int32_t sb_mbcnt;
  u_int32_t sb_mbmax;
  int32_t sb_lowat;
  __int16 sb_flags;
  __int16 sb_timeo;
};

/* 3017 */
struct xsocket
{
  u_int32_t xso_len;
  u_int32_t xso_so;
  __int16 so_type;
  __int16 so_options;
  __int16 so_linger;
  __int16 so_state;
  u_int32_t so_pcb;
  int xso_protocol;
  int xso_family;
  __int16 so_qlen;
  __int16 so_incqlen;
  __int16 so_qlimit;
  __int16 so_timeo;
  u_short so_error;
  pid_t so_pgid;
  u_int32_t so_oobmark;
  struct xsockbuf so_rcv;
  struct xsockbuf so_snd;
  uid_t so_uid;
};

/* 2907 */
struct xinpcb
{
  u_int32_t xi_len;
  struct inpcb xi_inp;
  struct xsocket xi_socket;
  u_quad_t xi_alignment_hack;
};

/* 2908 */
struct inpcb64_list_entry
{
  u_int64_t le_next;
  u_int64_t le_prev;
};

/* 2909 */
union xinpcb64::$C546130D1A8005171B373D3D35148C2E
{
  struct in_addr_4in6 inp46_foreign;
  struct in6_addr inp6_foreign;
};

/* 2910 */
union xinpcb64::$063EAF1BB47BFDDCF9B5FC2C194DF159
{
  struct in_addr_4in6 inp46_local;
  struct in6_addr inp6_local;
};

/* 2911 */
struct xinpcb64::$775C2FFD16BE43F45B6F4B4E995C9736
{
  u_char inp4_ip_tos;
};

/* 2912 */
struct xinpcb64::$5173A194AF3240F894B4D34B2F330DEE
{
  u_int8_t inp6_hlim;
  int inp6_cksum;
  u_short inp6_ifindex;
  __int16 inp6_hops;
};

/* 3018 */
struct xsocket64
{
  u_int32_t xso_len;
  u_int64_t xso_so;
  __int16 so_type;
  __int16 so_options;
  __int16 so_linger;
  __int16 so_state;
  u_int64_t so_pcb;
  int xso_protocol;
  int xso_family;
  __int16 so_qlen;
  __int16 so_incqlen;
  __int16 so_qlimit;
  __int16 so_timeo;
  u_short so_error;
  pid_t so_pgid;
  u_int32_t so_oobmark;
  struct xsockbuf so_rcv;
  struct xsockbuf so_snd;
  uid_t so_uid;
};

/* 2913 */
struct xinpcb64
{
  u_int64_t xi_len;
  u_int64_t xi_inpp;
  u_short inp_fport;
  u_short inp_lport;
  struct inpcb64_list_entry inp_list;
  u_int64_t inp_ppcb;
  u_int64_t inp_pcbinfo;
  struct inpcb64_list_entry inp_portlist;
  u_int64_t inp_phd;
  inp_gen_t inp_gencnt;
  int inp_flags;
  u_int32_t inp_flow;
  u_char inp_vflag;
  u_char inp_ip_ttl;
  u_char inp_ip_p;
  union xinpcb64::$C546130D1A8005171B373D3D35148C2E inp_dependfaddr;
  union xinpcb64::$063EAF1BB47BFDDCF9B5FC2C194DF159 inp_dependladdr;
  struct xinpcb64::$775C2FFD16BE43F45B6F4B4E995C9736 inp_depend4;
  struct xinpcb64::$5173A194AF3240F894B4D34B2F330DEE inp_depend6;
  struct xsocket64 xi_socket;
  u_quad_t xi_alignment_hack;
};

/* 2914 */
struct xinpgen
{
  u_int32_t xig_len;
  u_int xig_count;
  inp_gen_t xig_gen;
  so_gen_t xig_sogen;
};

/* 2915 */
struct tsegqe_head
{
  u_int32_t lh_first;
};

/* 2916 */
struct tcpcb
{
  struct tsegqe_head t_segq;
  int t_dupacks;
  u_int32_t unused;
  int t_timer[4];
  u_int32_t t_inpcb;
  int t_state;
  u_int t_flags;
  int t_force;
  tcp_seq snd_una;
  tcp_seq snd_max;
  tcp_seq snd_nxt;
  tcp_seq snd_up;
  tcp_seq snd_wl1;
  tcp_seq snd_wl2;
  tcp_seq iss;
  tcp_seq irs;
  tcp_seq rcv_nxt;
  tcp_seq rcv_adv;
  u_int32_t rcv_wnd;
  tcp_seq rcv_up;
  u_int32_t snd_wnd;
  u_int32_t snd_cwnd;
  u_int32_t snd_ssthresh;
  u_int t_maxopd;
  u_int32_t t_rcvtime;
  u_int32_t t_starttime;
  int t_rtttime;
  tcp_seq t_rtseq;
  int t_rxtcur;
  u_int t_maxseg;
  int t_srtt;
  int t_rttvar;
  int t_rxtshift;
  u_int t_rttmin;
  u_int32_t t_rttupdated;
  u_int32_t max_sndwnd;
  int t_softerror;
  char t_oobflags;
  char t_iobc;
  u_char snd_scale;
  u_char rcv_scale;
  u_char request_r_scale;
  u_char requested_s_scale;
  u_int32_t ts_recent;
  u_int32_t ts_recent_age;
  tcp_seq last_ack_sent;
  tcp_cc cc_send;
  tcp_cc cc_recv;
  tcp_seq snd_recover;
  u_int32_t snd_cwnd_prev;
  u_int32_t snd_ssthresh_prev;
  u_int32_t t_badrxtwin;
};

/* 2917 */
struct tcpstat
{
  u_int32_t tcps_connattempt;
  u_int32_t tcps_accepts;
  u_int32_t tcps_connects;
  u_int32_t tcps_drops;
  u_int32_t tcps_conndrops;
  u_int32_t tcps_closed;
  u_int32_t tcps_segstimed;
  u_int32_t tcps_rttupdated;
  u_int32_t tcps_delack;
  u_int32_t tcps_timeoutdrop;
  u_int32_t tcps_rexmttimeo;
  u_int32_t tcps_persisttimeo;
  u_int32_t tcps_keeptimeo;
  u_int32_t tcps_keepprobe;
  u_int32_t tcps_keepdrops;
  u_int32_t tcps_sndtotal;
  u_int32_t tcps_sndpack;
  u_int32_t tcps_sndbyte;
  u_int32_t tcps_sndrexmitpack;
  u_int32_t tcps_sndrexmitbyte;
  u_int32_t tcps_sndacks;
  u_int32_t tcps_sndprobe;
  u_int32_t tcps_sndurg;
  u_int32_t tcps_sndwinup;
  u_int32_t tcps_sndctrl;
  u_int32_t tcps_rcvtotal;
  u_int32_t tcps_rcvpack;
  u_int32_t tcps_rcvbyte;
  u_int32_t tcps_rcvbadsum;
  u_int32_t tcps_rcvbadoff;
  u_int32_t tcps_rcvmemdrop;
  u_int32_t tcps_rcvshort;
  u_int32_t tcps_rcvduppack;
  u_int32_t tcps_rcvdupbyte;
  u_int32_t tcps_rcvpartduppack;
  u_int32_t tcps_rcvpartdupbyte;
  u_int32_t tcps_rcvoopack;
  u_int32_t tcps_rcvoobyte;
  u_int32_t tcps_rcvpackafterwin;
  u_int32_t tcps_rcvbyteafterwin;
  u_int32_t tcps_rcvafterclose;
  u_int32_t tcps_rcvwinprobe;
  u_int32_t tcps_rcvdupack;
  u_int32_t tcps_rcvacktoomuch;
  u_int32_t tcps_rcvackpack;
  u_int32_t tcps_rcvackbyte;
  u_int32_t tcps_rcvwinupd;
  u_int32_t tcps_pawsdrop;
  u_int32_t tcps_predack;
  u_int32_t tcps_preddat;
  u_int32_t tcps_pcbcachemiss;
  u_int32_t tcps_cachedrtt;
  u_int32_t tcps_cachedrttvar;
  u_int32_t tcps_cachedssthresh;
  u_int32_t tcps_usedrtt;
  u_int32_t tcps_usedrttvar;
  u_int32_t tcps_usedssthresh;
  u_int32_t tcps_persistdrop;
  u_int32_t tcps_badsyn;
  u_int32_t tcps_mturesent;
  u_int32_t tcps_listendrop;
  u_int32_t tcps_minmssdrops;
  u_int32_t tcps_sndrexmitbad;
  u_int32_t tcps_badrst;
  u_int32_t tcps_sc_added;
  u_int32_t tcps_sc_retransmitted;
  u_int32_t tcps_sc_dupsyn;
  u_int32_t tcps_sc_dropped;
  u_int32_t tcps_sc_completed;
  u_int32_t tcps_sc_bucketoverflow;
  u_int32_t tcps_sc_cacheoverflow;
  u_int32_t tcps_sc_reset;
  u_int32_t tcps_sc_stale;
  u_int32_t tcps_sc_aborted;
  u_int32_t tcps_sc_badack;
  u_int32_t tcps_sc_unreach;
  u_int32_t tcps_sc_zonefail;
  u_int32_t tcps_sc_sendcookie;
  u_int32_t tcps_sc_recvcookie;
  u_int32_t tcps_hc_added;
  u_int32_t tcps_hc_bucketoverflow;
  u_int32_t tcps_sack_recovery_episode;
  u_int32_t tcps_sack_rexmits;
  u_int32_t tcps_sack_rexmit_bytes;
  u_int32_t tcps_sack_rcv_blocks;
  u_int32_t tcps_sack_send_blocks;
  u_int32_t tcps_sack_sboverflow;
  u_int32_t tcps_bg_rcvtotal;
  u_int32_t tcps_rxtfindrop;
  u_int32_t tcps_fcholdpacket;
  u_int32_t tcps_coalesced_pack;
  u_int32_t tcps_flowtbl_full;
  u_int32_t tcps_flowtbl_collision;
  u_int32_t tcps_lro_twopack;
  u_int32_t tcps_lro_multpack;
  u_int32_t tcps_lro_largepack;
  u_int32_t tcps_limited_txt;
  u_int32_t tcps_early_rexmt;
  u_int32_t tcps_sack_ackadv;
  u_int32_t tcps_rcv_swcsum;
  u_int32_t tcps_rcv_swcsum_bytes;
  u_int32_t tcps_rcv6_swcsum;
  u_int32_t tcps_rcv6_swcsum_bytes;
  u_int32_t tcps_snd_swcsum;
  u_int32_t tcps_snd_swcsum_bytes;
  u_int32_t tcps_snd6_swcsum;
  u_int32_t tcps_snd6_swcsum_bytes;
  u_int32_t tcps_msg_unopkts;
  u_int32_t tcps_msg_unoappendfail;
  u_int32_t tcps_msg_sndwaithipri;
  u_int32_t tcps_invalid_mpcap;
  u_int32_t tcps_invalid_joins;
  u_int32_t tcps_mpcap_fallback;
  u_int32_t tcps_join_fallback;
  u_int32_t tcps_estab_fallback;
  u_int32_t tcps_invalid_opt;
  u_int32_t tcps_mp_outofwin;
  u_int32_t tcps_mp_reducedwin;
  u_int32_t tcps_mp_badcsum;
  u_int32_t tcps_mp_oodata;
  u_int32_t tcps_mp_switches;
  u_int32_t tcps_mp_rcvtotal;
  u_int32_t tcps_mp_rcvbytes;
  u_int32_t tcps_mp_sndpacks;
  u_int32_t tcps_mp_sndbytes;
  u_int32_t tcps_join_rxmts;
  u_int32_t tcps_tailloss_rto;
  u_int32_t tcps_reordered_pkts;
  u_int32_t tcps_recovered_pkts;
  u_int32_t tcps_pto;
  u_int32_t tcps_rto_after_pto;
  u_int32_t tcps_tlp_recovery;
  u_int32_t tcps_tlp_recoverlastpkt;
  u_int32_t tcps_ecn_client_success;
  u_int32_t tcps_ecn_recv_ece;
  u_int32_t tcps_ecn_sent_ece;
  u_int32_t tcps_detect_reordering;
  u_int32_t tcps_delay_recovery;
  u_int32_t tcps_avoid_rxmt;
  u_int32_t tcps_unnecessary_rxmt;
  u_int32_t tcps_nostretchack;
  u_int32_t tcps_rescue_rxmt;
  u_int32_t tcps_pto_in_recovery;
  u_int32_t tcps_pmtudbh_reverted;
  u_int32_t tcps_dsack_disable;
  u_int32_t tcps_dsack_ackloss;
  u_int32_t tcps_dsack_badrexmt;
  u_int32_t tcps_dsack_sent;
  u_int32_t tcps_dsack_recvd;
  u_int32_t tcps_dsack_recvd_old;
  u_int32_t tcps_mp_sel_symtomsd;
  u_int32_t tcps_mp_sel_rtt;
  u_int32_t tcps_mp_sel_rto;
  u_int32_t tcps_mp_sel_peer;
  u_int32_t tcps_mp_num_probes;
  u_int32_t tcps_mp_verdowngrade;
  u_int32_t tcps_drop_after_sleep;
  u_int32_t tcps_probe_if;
  u_int32_t tcps_probe_if_conflict;
  u_int32_t tcps_ecn_client_setup;
  u_int32_t tcps_ecn_server_setup;
  u_int32_t tcps_ecn_server_success;
  u_int32_t tcps_ecn_lost_synack;
  u_int32_t tcps_ecn_lost_syn;
  u_int32_t tcps_ecn_not_supported;
  u_int32_t tcps_ecn_recv_ce;
  u_int32_t tcps_ecn_conn_recv_ce;
  u_int32_t tcps_ecn_conn_recv_ece;
  u_int32_t tcps_ecn_conn_plnoce;
  u_int32_t tcps_ecn_conn_pl_ce;
  u_int32_t tcps_ecn_conn_nopl_ce;
  u_int32_t tcps_ecn_fallback_synloss;
  u_int32_t tcps_ecn_fallback_reorder;
  u_int32_t tcps_ecn_fallback_ce;
  u_int32_t tcps_tfo_syn_data_rcv;
  u_int32_t tcps_tfo_cookie_req_rcv;
  u_int32_t tcps_tfo_cookie_sent;
  u_int32_t tcps_tfo_cookie_invalid;
  u_int32_t tcps_tfo_cookie_req;
  u_int32_t tcps_tfo_cookie_rcv;
  u_int32_t tcps_tfo_syn_data_sent;
  u_int32_t tcps_tfo_syn_data_acked;
  u_int32_t tcps_tfo_syn_loss;
  u_int32_t tcps_tfo_blackhole;
  u_int32_t tcps_tfo_cookie_wrong;
  u_int32_t tcps_tfo_no_cookie_rcv;
  u_int32_t tcps_tfo_heuristics_disable;
  u_int32_t tcps_tfo_sndblackhole;
  u_int32_t tcps_mss_to_default;
  u_int32_t tcps_mss_to_medium;
  u_int32_t tcps_mss_to_low;
  u_int32_t tcps_ecn_fallback_droprst;
  u_int32_t tcps_ecn_fallback_droprxmt;
  u_int32_t tcps_ecn_fallback_synrst;
  u_int32_t tcps_mptcp_rcvmemdrop;
  u_int32_t tcps_mptcp_rcvduppack;
  u_int32_t tcps_mptcp_rcvpackafterwin;
  u_int32_t tcps_timer_drift_le_1_ms;
  u_int32_t tcps_timer_drift_le_10_ms;
  u_int32_t tcps_timer_drift_le_20_ms;
  u_int32_t tcps_timer_drift_le_50_ms;
  u_int32_t tcps_timer_drift_le_100_ms;
  u_int32_t tcps_timer_drift_le_200_ms;
  u_int32_t tcps_timer_drift_le_500_ms;
  u_int32_t tcps_timer_drift_le_1000_ms;
  u_int32_t tcps_timer_drift_gt_1000_ms;
  u_int32_t tcps_mptcp_handover_attempt;
  u_int32_t tcps_mptcp_interactive_attempt;
  u_int32_t tcps_mptcp_aggregate_attempt;
  u_int32_t tcps_mptcp_fp_handover_attempt;
  u_int32_t tcps_mptcp_fp_interactive_attempt;
  u_int32_t tcps_mptcp_fp_aggregate_attempt;
  u_int32_t tcps_mptcp_heuristic_fallback;
  u_int32_t tcps_mptcp_fp_heuristic_fallback;
  u_int32_t tcps_mptcp_handover_success_wifi;
  u_int32_t tcps_mptcp_handover_success_cell;
  u_int32_t tcps_mptcp_interactive_success;
  u_int32_t tcps_mptcp_aggregate_success;
  u_int32_t tcps_mptcp_fp_handover_success_wifi;
  u_int32_t tcps_mptcp_fp_handover_success_cell;
  u_int32_t tcps_mptcp_fp_interactive_success;
  u_int32_t tcps_mptcp_fp_aggregate_success;
  u_int32_t tcps_mptcp_handover_cell_from_wifi;
  u_int32_t tcps_mptcp_handover_wifi_from_cell;
  u_int32_t tcps_mptcp_interactive_cell_from_wifi;
  u_int64_t tcps_mptcp_handover_cell_bytes;
  u_int64_t tcps_mptcp_interactive_cell_bytes;
  u_int64_t tcps_mptcp_aggregate_cell_bytes;
  u_int64_t tcps_mptcp_handover_all_bytes;
  u_int64_t tcps_mptcp_interactive_all_bytes;
  u_int64_t tcps_mptcp_aggregate_all_bytes;
  u_int32_t tcps_mptcp_back_to_wifi;
  u_int32_t tcps_mptcp_wifi_proxy;
  u_int32_t tcps_mptcp_cell_proxy;
};

/* 2918 */
struct tcpstat_local
{
  u_int64_t badformat;
  u_int64_t unspecv6;
  u_int64_t synfin;
  u_int64_t badformatipsec;
  u_int64_t noconnnolist;
  u_int64_t noconnlist;
  u_int64_t listbadsyn;
  u_int64_t icmp6unreach;
  u_int64_t deprecate6;
  u_int64_t ooopacket;
  u_int64_t rstinsynrcv;
  u_int64_t dospacket;
  u_int64_t cleanup;
  u_int64_t synwindow;
};

/* 2919 */
struct xtcpcb
{
  u_int32_t xt_len;
  struct inpcb xt_inp;
  struct tcpcb xt_tp;
  struct xsocket xt_socket;
  u_quad_t xt_alignment_hack;
};

/* 2920 */
struct xtcpcb64
{
  u_int32_t xt_len;
  struct xinpcb64 xt_inpcb;
  u_int64_t t_segq;
  int t_dupacks;
  int t_timer[4];
  int t_state;
  u_int t_flags;
  int t_force;
  tcp_seq snd_una;
  tcp_seq snd_max;
  tcp_seq snd_nxt;
  tcp_seq snd_up;
  tcp_seq snd_wl1;
  tcp_seq snd_wl2;
  tcp_seq iss;
  tcp_seq irs;
  tcp_seq rcv_nxt;
  tcp_seq rcv_adv;
  u_int32_t rcv_wnd;
  tcp_seq rcv_up;
  u_int32_t snd_wnd;
  u_int32_t snd_cwnd;
  u_int32_t snd_ssthresh;
  u_int t_maxopd;
  u_int32_t t_rcvtime;
  u_int32_t t_starttime;
  int t_rtttime;
  tcp_seq t_rtseq;
  int t_rxtcur;
  u_int t_maxseg;
  int t_srtt;
  int t_rttvar;
  int t_rxtshift;
  u_int t_rttmin;
  u_int32_t t_rttupdated;
  u_int32_t max_sndwnd;
  int t_softerror;
  char t_oobflags;
  char t_iobc;
  u_char snd_scale;
  u_char rcv_scale;
  u_char request_r_scale;
  u_char requested_s_scale;
  u_int32_t ts_recent;
  u_int32_t ts_recent_age;
  tcp_seq last_ack_sent;
  tcp_cc cc_send;
  tcp_cc cc_recv;
  tcp_seq snd_recover;
  u_int32_t snd_cwnd_prev;
  u_int32_t snd_ssthresh_prev;
  u_int32_t t_badrxtwin;
  u_quad_t xt_alignment_hack;
};

/* 2921 */
struct ether_arp
{
  struct arphdr ea_hdr;
  u_char arp_sha[6];
  u_char arp_spa[4];
  u_char arp_tha[6];
  u_char arp_tpa[4];
};

/* 2922 */
struct sockaddr_inarp
{
  u_char sin_len;
  u_char sin_family;
  u_short sin_port;
  struct in_addr sin_addr;
  struct in_addr sin_srcaddr;
  u_short sin_tos;
  u_short sin_other;
};

/* 2923 */
struct sockaddr_sys
{
  u_char ss_len;
  u_char ss_family;
  u_int16_t ss_sysaddr;
  u_int32_t ss_reserved[7];
};

/* 2924 */
struct kern_event_msg
{
  u_int32_t total_size;
  u_int32_t vendor_code;
  u_int32_t kev_class;
  u_int32_t kev_subclass;
  u_int32_t id;
  u_int32_t event_code;
  u_int32_t event_data[1];
};

/* 2925 */
struct kev_request
{
  u_int32_t vendor_code;
  u_int32_t kev_class;
  u_int32_t kev_subclass;
};

/* 2926 */
struct kev_vendor_code
{
  u_int32_t vendor_code;
  char vendor_string[200];
};

/* 2928 */
struct in_aliasreq
{
  char ifra_name[16];
  struct sockaddr_in ifra_addr;
  struct sockaddr_in ifra_broadaddr;
  struct sockaddr_in ifra_mask;
};

/* 2929 */
struct kev_in_data
{
  struct net_event_data link_data;
  struct in_addr ia_addr;
  u_int32_t ia_net;
  u_int32_t ia_netmask;
  u_int32_t ia_subnet;
  u_int32_t ia_subnetmask;
  struct in_addr ia_netbroadcast;
  struct in_addr ia_dstaddr;
};

/* 2930 */
struct kev_in_collision
{
  struct net_event_data link_data;
  struct in_addr ia_ipaddr;
  u_char hw_len;
  u_char hw_addr[];
};

/* 2931 */
struct kev_in_arpfailure
{
  struct net_event_data link_data;
};

/* 2932 */
struct kev_in_arpalive
{
  struct net_event_data link_data;
};

/* 2933 */
struct kev_in_portinuse
{
  u_int16_t port;
  u_int32_t req_pid;
  u_int32_t reserved[2];
};

/* 2934 */
struct in6_addrlifetime
{
  time_t ia6t_expire;
  time_t ia6t_preferred;
  u_int32_t ia6t_vltime;
  u_int32_t ia6t_pltime;
};

/* 2935 */
struct in6_addrpolicy
{
  struct sockaddr_in6 addr;
  struct sockaddr_in6 addrmask;
  int preced;
  int label;
  u_quad_t use;
};

/* 2936 */
struct in6_ifstat
{
  u_quad_t ifs6_in_receive;
  u_quad_t ifs6_in_hdrerr;
  u_quad_t ifs6_in_toobig;
  u_quad_t ifs6_in_noroute;
  u_quad_t ifs6_in_addrerr;
  u_quad_t ifs6_in_protounknown;
  u_quad_t ifs6_in_truncated;
  u_quad_t ifs6_in_discard;
  u_quad_t ifs6_in_deliver;
  u_quad_t ifs6_out_forward;
  u_quad_t ifs6_out_request;
  u_quad_t ifs6_out_discard;
  u_quad_t ifs6_out_fragok;
  u_quad_t ifs6_out_fragfail;
  u_quad_t ifs6_out_fragcreat;
  u_quad_t ifs6_reass_reqd;
  u_quad_t ifs6_reass_ok;
  u_quad_t ifs6_atmfrag_rcvd;
  u_quad_t ifs6_reass_fail;
  u_quad_t ifs6_in_mcast;
  u_quad_t ifs6_out_mcast;
  u_quad_t ifs6_cantfoward_icmp6;
  u_quad_t ifs6_addr_expiry_cnt;
  u_quad_t ifs6_pfx_expiry_cnt;
  u_quad_t ifs6_defrtr_expiry_cnt;
};

/* 2937 */
struct icmp6_ifstat
{
  u_quad_t ifs6_in_msg;
  u_quad_t ifs6_in_error;
  u_quad_t ifs6_in_dstunreach;
  u_quad_t ifs6_in_adminprohib;
  u_quad_t ifs6_in_timeexceed;
  u_quad_t ifs6_in_paramprob;
  u_quad_t ifs6_in_pkttoobig;
  u_quad_t ifs6_in_echo;
  u_quad_t ifs6_in_echoreply;
  u_quad_t ifs6_in_routersolicit;
  u_quad_t ifs6_in_routeradvert;
  u_quad_t ifs6_in_neighborsolicit;
  u_quad_t ifs6_in_neighboradvert;
  u_quad_t ifs6_in_redirect;
  u_quad_t ifs6_in_mldquery;
  u_quad_t ifs6_in_mldreport;
  u_quad_t ifs6_in_mlddone;
  u_quad_t ifs6_out_msg;
  u_quad_t ifs6_out_error;
  u_quad_t ifs6_out_dstunreach;
  u_quad_t ifs6_out_adminprohib;
  u_quad_t ifs6_out_timeexceed;
  u_quad_t ifs6_out_paramprob;
  u_quad_t ifs6_out_pkttoobig;
  u_quad_t ifs6_out_echo;
  u_quad_t ifs6_out_echoreply;
  u_quad_t ifs6_out_routersolicit;
  u_quad_t ifs6_out_routeradvert;
  u_quad_t ifs6_out_neighborsolicit;
  u_quad_t ifs6_out_neighboradvert;
  u_quad_t ifs6_out_redirect;
  u_quad_t ifs6_out_mldquery;
  u_quad_t ifs6_out_mldreport;
  u_quad_t ifs6_out_mlddone;
};

/* 2938 */
union in6_ifreq::$0CF46D3379C4FC907B57BD8D6E2A2491
{
  struct sockaddr_in6 ifru_addr;
  struct sockaddr_in6 ifru_dstaddr;
  int ifru_flags;
  int ifru_flags6;
  int ifru_metric;
  int ifru_intval;
  caddr_t ifru_data;
  struct in6_addrlifetime ifru_lifetime;
  struct in6_ifstat ifru_stat;
  struct icmp6_ifstat ifru_icmp6stat;
  u_int32_t ifru_scope_id[16];
};

/* 2939 */
struct in6_ifreq
{
  char ifr_name[16];
  union in6_ifreq::$0CF46D3379C4FC907B57BD8D6E2A2491 ifr_ifru;
};

/* 2940 */
struct in6_aliasreq
{
  char ifra_name[16];
  struct sockaddr_in6 ifra_addr;
  struct sockaddr_in6 ifra_broadaddr;
  struct sockaddr_in6 ifra_prefixmask;
  int ifra_flags;
  struct in6_addrlifetime ifra_lifetime;
};

/* 4068 */
struct in6_prflags::prf_ra
{
  unsigned __int8 onlink : 1;
  unsigned __int8 autonomous : 1;
  unsigned __int8 reserved : 6;
};

/* 4069 */
struct in6_prflags::prf_rr
{
  unsigned __int8 decrvalid : 1;
  unsigned __int8 decrprefd : 1;
  unsigned __int8 reserved : 6;
};

/* 2941 */
struct in6_prflags
{
  struct in6_prflags::prf_ra prf_ra;
  u_char prf_reserved1;
  u_short prf_reserved2;
  struct in6_prflags::prf_rr prf_rr;
  u_char prf_reserved3;
  u_short prf_reserved4;
};

/* 2942 */
struct in6_prefixreq
{
  char ipr_name[16];
  u_char ipr_origin;
  u_char ipr_plen;
  u_int32_t ipr_vltime;
  u_int32_t ipr_pltime;
  struct in6_prflags ipr_flags;
  struct sockaddr_in6 ipr_prefix;
};

/* 4070 */
struct in6_rrenumreq::irr_raflagmask
{
  unsigned __int8 onlink : 1;
  unsigned __int8 autonomous : 1;
  unsigned __int8 reserved : 6;
};

/* 2943 */
struct in6_rrenumreq
{
  char irr_name[16];
  u_char irr_origin;
  u_char irr_m_len;
  u_char irr_m_minlen;
  u_char irr_m_maxlen;
  u_char irr_u_uselen;
  u_char irr_u_keeplen;
  struct in6_rrenumreq::irr_raflagmask irr_raflagmask;
  u_int32_t irr_vltime;
  u_int32_t irr_pltime;
  struct in6_prflags irr_flags;
  struct sockaddr_in6 irr_matchprefix;
  struct sockaddr_in6 irr_useprefix;
};

/* 2944 */
struct kev_in6_addrlifetime
{
  u_int32_t ia6t_expire;
  u_int32_t ia6t_preferred;
  u_int32_t ia6t_vltime;
  u_int32_t ia6t_pltime;
};

/* 2945 */
struct kev_in6_data
{
  struct net_event_data link_data;
  struct sockaddr_in6 ia_addr;
  struct sockaddr_in6 ia_net;
  struct sockaddr_in6 ia_dstaddr;
  struct sockaddr_in6 ia_prefixmask;
  u_int32_t ia_plen;
  u_int32_t ia6_flags;
  struct kev_in6_addrlifetime ia_lifetime;
  uint8_t ia_mac[6];
};

/* 2946 */
struct ipf_pktopts
{
  u_int32_t ippo_flags;
  ifnet_t ippo_mcast_ifnet;
  int ippo_mcast_loop;
  u_int8_t ippo_mcast_ttl;
};

/* 2947 */
typedef struct ipf_pktopts *ipf_pktopts_t;

/* 2948 */
typedef errno_t (__cdecl *ipf_input_func)(void *cookie, mbuf_t *data, int offset, u_int8_t protocol);

/* 2949 */
typedef errno_t (__cdecl *ipf_output_func)(void *cookie, mbuf_t *data, ipf_pktopts_t options);

/* 2950 */
typedef void (__cdecl *ipf_detach_func)(void *cookie);

/* 2951 */
struct ipf_filter
{
  void *cookie;
  const char *name;
  ipf_input_func ipf_input;
  ipf_output_func ipf_output;
  ipf_detach_func ipf_detach;
};

/* 2952 */
struct opaque_ipfilter;

/* 2953 */
typedef struct opaque_ipfilter *ipfilter_t;

/* 2954 */
struct vmspace
{
  int32_t dummy;
  caddr_t dummy2;
  int32_t dummy3[5];
  caddr_t dummy4[3];
};

/* 2959 */
typedef int (__cdecl *sysctl_handler_t)(struct sysctl_oid *oidp, void *arg1, int arg2, struct sysctl_req *req);

/* 2960 */
struct udpiphdr
{
  struct ipovly ui_i;
  struct udphdr ui_u;
};

/* 2961 */
struct udpstat
{
  u_int32_t udps_ipackets;
  u_int32_t udps_hdrops;
  u_int32_t udps_badsum;
  u_int32_t udps_badlen;
  u_int32_t udps_noport;
  u_int32_t udps_noportbcast;
  u_int32_t udps_fullsock;
  u_int32_t udpps_pcbcachemiss;
  u_int32_t udpps_pcbhashmiss;
  u_int32_t udps_opackets;
  u_int32_t udps_fastout;
  u_int32_t udps_nosum;
  u_int32_t udps_noportmcast;
  u_int32_t udps_filtermcast;
  u_int32_t udps_rcv_swcsum;
  u_int32_t udps_rcv_swcsum_bytes;
  u_int32_t udps_rcv6_swcsum;
  u_int32_t udps_rcv6_swcsum_bytes;
  u_int32_t udps_snd_swcsum;
  u_int32_t udps_snd_swcsum_bytes;
  u_int32_t udps_snd6_swcsum;
  u_int32_t udps_snd6_swcsum_bytes;
};

/* 2962 */
struct ip6_hdr::$0DD79BD9127E95C566439D7B95335CDE::ip6_hdrctl
{
  u_int32_t ip6_un1_flow;
  u_int16_t ip6_un1_plen;
  u_int8_t ip6_un1_nxt;
  u_int8_t ip6_un1_hlim;
};

/* 2963 */
union ip6_hdr::$0DD79BD9127E95C566439D7B95335CDE
{
  struct ip6_hdr::$0DD79BD9127E95C566439D7B95335CDE::ip6_hdrctl ip6_un1;
  u_int8_t ip6_un2_vfc;
};

/* 2964 */
struct ip6_hdr
{
  union ip6_hdr::$0DD79BD9127E95C566439D7B95335CDE ip6_ctlun;
  struct in6_addr ip6_src;
  struct in6_addr ip6_dst;
};

/* 2965 */
struct ip6_ext
{
  u_int8_t ip6e_nxt;
  u_int8_t ip6e_len;
};

/* 2966 */
struct ip6_hbh
{
  u_int8_t ip6h_nxt;
  u_int8_t ip6h_len;
};

/* 2967 */
struct ip6_dest
{
  u_int8_t ip6d_nxt;
  u_int8_t ip6d_len;
};

/* 2968 */
struct ip6_opt
{
  u_int8_t ip6o_type;
  u_int8_t ip6o_len;
};

/* 2969 */
struct ip6_opt_jumbo
{
  u_int8_t ip6oj_type;
  u_int8_t ip6oj_len;
  u_int8_t ip6oj_jumbo_len[4];
};

/* 2970 */
struct ip6_opt_nsap
{
  u_int8_t ip6on_type;
  u_int8_t ip6on_len;
  u_int8_t ip6on_src_nsap_len;
  u_int8_t ip6on_dst_nsap_len;
};

/* 2971 */
struct ip6_opt_tunnel
{
  u_int8_t ip6ot_type;
  u_int8_t ip6ot_len;
  u_int8_t ip6ot_encap_limit;
};

/* 2972 */
struct ip6_opt_router
{
  u_int8_t ip6or_type;
  u_int8_t ip6or_len;
  u_int8_t ip6or_value[2];
};

/* 2973 */
struct ip6_rthdr
{
  u_int8_t ip6r_nxt;
  u_int8_t ip6r_len;
  u_int8_t ip6r_type;
  u_int8_t ip6r_segleft;
};

/* 2974 */
struct ip6_rthdr0
{
  u_int8_t ip6r0_nxt;
  u_int8_t ip6r0_len;
  u_int8_t ip6r0_type;
  u_int8_t ip6r0_segleft;
  u_int8_t ip6r0_reserved;
  u_int8_t ip6r0_slmap[3];
  struct in6_addr ip6r0_addr[1];
};

/* 2975 */
struct ip6_frag
{
  u_int8_t ip6f_nxt;
  u_int8_t ip6f_reserved;
  u_int16_t ip6f_offlg;
  u_int32_t ip6f_ident;
};

/* 2976 */
union icmp6_hdr::$786D3EF3B107FADC2185E232AED3E537
{
  u_int32_t icmp6_un_data32[1];
  u_int16_t icmp6_un_data16[2];
  u_int8_t icmp6_un_data8[4];
};

/* 2977 */
struct icmp6_hdr
{
  u_int8_t icmp6_type;
  u_int8_t icmp6_code;
  u_int16_t icmp6_cksum;
  union icmp6_hdr::$786D3EF3B107FADC2185E232AED3E537 icmp6_dataun;
};

/* 2978 */
struct mld_hdr
{
  struct icmp6_hdr mld_icmp6_hdr;
  struct in6_addr mld_addr;
};

/* 2979 */
struct nd_router_solicit
{
  struct icmp6_hdr nd_rs_hdr;
};

/* 2980 */
struct nd_router_advert
{
  struct icmp6_hdr nd_ra_hdr;
  u_int32_t nd_ra_reachable;
  u_int32_t nd_ra_retransmit;
};

/* 2981 */
struct nd_neighbor_solicit
{
  struct icmp6_hdr nd_ns_hdr;
  struct in6_addr nd_ns_target;
};

/* 2982 */
struct nd_neighbor_advert
{
  struct icmp6_hdr nd_na_hdr;
  struct in6_addr nd_na_target;
};

/* 2983 */
struct nd_redirect
{
  struct icmp6_hdr nd_rd_hdr;
  struct in6_addr nd_rd_target;
  struct in6_addr nd_rd_dst;
};

/* 2984 */
struct nd_opt_hdr
{
  u_int8_t nd_opt_type;
  u_int8_t nd_opt_len;
};

/* 2985 */
struct nd_opt_prefix_info
{
  u_int8_t nd_opt_pi_type;
  u_int8_t nd_opt_pi_len;
  u_int8_t nd_opt_pi_prefix_len;
  u_int8_t nd_opt_pi_flags_reserved;
  u_int32_t nd_opt_pi_valid_time;
  u_int32_t nd_opt_pi_preferred_time;
  u_int32_t nd_opt_pi_reserved2;
  struct in6_addr nd_opt_pi_prefix;
};

/* 2986 */
struct nd_opt_nonce
{
  u_int8_t nd_opt_nonce_type;
  u_int8_t nd_opt_nonce_len;
  u_int8_t nd_opt_nonce[6];
};

/* 2987 */
struct nd_opt_rd_hdr
{
  u_int8_t nd_opt_rh_type;
  u_int8_t nd_opt_rh_len;
  u_int16_t nd_opt_rh_reserved1;
  u_int32_t nd_opt_rh_reserved2;
};

/* 2988 */
struct nd_opt_mtu
{
  u_int8_t nd_opt_mtu_type;
  u_int8_t nd_opt_mtu_len;
  u_int16_t nd_opt_mtu_reserved;
  u_int32_t nd_opt_mtu_mtu;
};

/* 2989 */
struct nd_opt_route_info
{
  u_int8_t nd_opt_rti_type;
  u_int8_t nd_opt_rti_len;
  u_int8_t nd_opt_rti_prefixlen;
  u_int8_t nd_opt_rti_flags;
  u_int32_t nd_opt_rti_lifetime;
};

/* 2990 */
struct nd_opt_rdnss
{
  u_int8_t nd_opt_rdnss_type;
  u_int8_t nd_opt_rdnss_len;
  u_int16_t nd_opt_rdnss_reserved;
  u_int32_t nd_opt_rdnss_lifetime;
  struct in6_addr nd_opt_rdnss_addr[1];
};

/* 2991 */
struct nd_opt_dnssl
{
  u_int8_t nd_opt_dnssl_type;
  u_int8_t nd_opt_dnssl_len;
  u_int16_t nd_opt_dnssl_reserved;
  u_int32_t nd_opt_dnssl_lifetime;
  u_int8_t nd_opt_dnssl_domains[8];
};

/* 2992 */
struct icmp6_namelookup
{
  struct icmp6_hdr icmp6_nl_hdr;
  u_int8_t icmp6_nl_nonce[8];
  int32_t icmp6_nl_ttl;
};

/* 2993 */
struct icmp6_nodeinfo
{
  struct icmp6_hdr icmp6_ni_hdr;
  u_int8_t icmp6_ni_nonce[8];
};

/* 2994 */
struct ni_reply_fqdn
{
  u_int32_t ni_fqdn_ttl;
  u_int8_t ni_fqdn_namelen;
  u_int8_t ni_fqdn_name[3];
};

/* 2995 */
struct icmp6_router_renum
{
  struct icmp6_hdr rr_hdr;
  u_int8_t rr_segnum;
  u_int8_t rr_flags;
  u_int16_t rr_maxdelay;
  u_int32_t rr_reserved;
};

/* 2996 */
struct rr_pco_match
{
  u_int8_t rpm_code;
  u_int8_t rpm_len;
  u_int8_t rpm_ordinal;
  u_int8_t rpm_matchlen;
  u_int8_t rpm_minlen;
  u_int8_t rpm_maxlen;
  u_int16_t rpm_reserved;
  struct in6_addr rpm_prefix;
};

/* 2997 */
struct rr_pco_use
{
  u_int8_t rpu_uselen;
  u_int8_t rpu_keeplen;
  u_int8_t rpu_ramask;
  u_int8_t rpu_raflags;
  u_int32_t rpu_vltime;
  u_int32_t rpu_pltime;
  u_int32_t rpu_flags;
  struct in6_addr rpu_prefix;
};

/* 2998 */
struct rr_result
{
  u_int16_t rrr_flags;
  u_int8_t rrr_ordinal;
  u_int8_t rrr_matchedlen;
  u_int32_t rrr_ifid;
  struct in6_addr rrr_prefix;
};

/* 2999 */
struct icmp6_filter
{
  u_int32_t icmp6_filt[8];
};

/* 3000 */
struct icmp6errstat
{
  u_quad_t icp6errs_dst_unreach_noroute;
  u_quad_t icp6errs_dst_unreach_admin;
  u_quad_t icp6errs_dst_unreach_beyondscope;
  u_quad_t icp6errs_dst_unreach_addr;
  u_quad_t icp6errs_dst_unreach_noport;
  u_quad_t icp6errs_packet_too_big;
  u_quad_t icp6errs_time_exceed_transit;
  u_quad_t icp6errs_time_exceed_reassembly;
  u_quad_t icp6errs_paramprob_header;
  u_quad_t icp6errs_paramprob_nextheader;
  u_quad_t icp6errs_paramprob_option;
  u_quad_t icp6errs_redirect;
  u_quad_t icp6errs_unknown;
};

/* 3001 */
struct icmp6stat
{
  u_quad_t icp6s_error;
  u_quad_t icp6s_canterror;
  u_quad_t icp6s_toofreq;
  u_quad_t icp6s_outhist[256];
  u_quad_t icp6s_badcode;
  u_quad_t icp6s_tooshort;
  u_quad_t icp6s_checksum;
  u_quad_t icp6s_badlen;
  u_quad_t icp6s_reflect;
  u_quad_t icp6s_inhist[256];
  u_quad_t icp6s_nd_toomanyopt;
  struct icmp6errstat icp6s_outerrhist;
  u_quad_t icp6s_pmtuchg;
  u_quad_t icp6s_nd_badopt;
  u_quad_t icp6s_badns;
  u_quad_t icp6s_badna;
  u_quad_t icp6s_badrs;
  u_quad_t icp6s_badra;
  u_quad_t icp6s_badredirect;
  u_quad_t icp6s_rfc6980_drop;
};

/* 3003 */
struct ip_timestamp::ipt_timestamp::ipt_ta
{
  struct in_addr ipt_addr;
  n_long ipt_time;
};

/* 3004 */
union ip_timestamp::ipt_timestamp
{
  n_long ipt_time[1];
  struct ip_timestamp::ipt_timestamp::ipt_ta ipt_ta[1];
};

/* 3005 */
struct ip_timestamp
{
  u_char ipt_code;
  u_char ipt_len;
  u_char ipt_ptr;
  unsigned __int32 ipt_flg : 4;
  unsigned __int32 ipt_oflw : 4;
  union ip_timestamp::ipt_timestamp ipt_timestamp;
};

/* 3006 */
struct igmpstat_v3
{
  uint32_t igps_version;
  uint32_t igps_len;
  uint64_t igps_rcv_total;
  uint64_t igps_rcv_tooshort;
  uint64_t igps_rcv_badttl;
  uint64_t igps_rcv_badsum;
  uint64_t igps_rcv_v1v2_queries;
  uint64_t igps_rcv_v3_queries;
  uint64_t igps_rcv_badqueries;
  uint64_t igps_rcv_gen_queries;
  uint64_t igps_rcv_group_queries;
  uint64_t igps_rcv_gsr_queries;
  uint64_t igps_drop_gsr_queries;
  uint64_t igps_rcv_reports;
  uint64_t igps_rcv_badreports;
  uint64_t igps_rcv_ourreports;
  uint64_t igps_rcv_nora;
  uint64_t igps_snd_reports;
  uint64_t __igps_pad[4];
};

/* 3007 */
struct igmpstat
{
  u_int igps_rcv_total;
  u_int igps_rcv_tooshort;
  u_int igps_rcv_badsum;
  u_int igps_rcv_queries;
  u_int igps_rcv_badqueries;
  u_int igps_rcv_reports;
  u_int igps_rcv_badreports;
  u_int igps_rcv_ourreports;
  u_int igps_snd_reports;
};

/* 3008 */
typedef struct kcdata_item *task_crashinfo_item_t;

/* 3009 */
typedef void (__cdecl *kdp_send_t)(void *pkt, unsigned int pkt_len);

/* 3010 */
typedef void (__cdecl *kdp_receive_t)(void *pkt, unsigned int *pkt_len, unsigned int timeout);

/* 3011 */
enum $0EAF07DE7AB43A00C331B71BA8AA8F5D
{
  KDP_EVENT_ENTER = 0x0,
  KDP_EVENT_EXIT = 0x1,
  KDP_EVENT_PANICLOG = 0x2,
};

/* 3012 */
typedef enum $0EAF07DE7AB43A00C331B71BA8AA8F5D kdp_event_t;

/* 3013 */
typedef void (__cdecl *kdp_callout_fn_t)(void *arg, kdp_event_t event);

/* 3014 */
typedef unsigned int WK_word;

/* 3015 */
struct sockaddr_un
{
  unsigned __int8 sun_len;
  sa_family_t sun_family;
  char sun_path[104];
};

/* 3019 */
struct _unpcb_list_entry
{
  u_int32_t le_next;
  u_int32_t le_prev;
};

/* 3020 */
struct xunpgen
{
  u_int32_t xug_len;
  u_int xug_count;
  unp_gen_t xug_gen;
  so_gen_t xug_sogen;
};

/* 3021 */
struct __ipc_perm_old
{
  __uint16_t cuid;
  __uint16_t cgid;
  __uint16_t uid;
  __uint16_t gid;
  mode_t mode;
  __uint16_t seq;
  key_t key;
};

/* 3022 */
struct __semid_ds_new
{
  struct ipc_perm sem_perm;
  __int32_t sem_base;
  unsigned __int16 sem_nsems;
  time_t sem_otime;
  __int32_t sem_pad1;
  time_t sem_ctime;
  __int32_t sem_pad2;
  __int32_t sem_pad3[4];
};

/* 3023 */
struct __semid_ds_old
{
  struct __ipc_perm_old sem_perm;
  __int32_t sem_base;
  unsigned __int16 sem_nsems;
  time_t sem_otime;
  __int32_t sem_pad1;
  time_t sem_ctime;
  __int32_t sem_pad2;
  __int32_t sem_pad3[4];
};

/* 3025 */
union semun
{
  int val;
  struct __semid_ds_new *buf;
  unsigned __int16 *array;
};

/* 3026 */
struct nameidata;

/* 3027 */
struct image_params
{
  user_addr_t ip_user_fname;
  user_addr_t ip_user_argv;
  user_addr_t ip_user_envv;
  int ip_seg;
  struct vnode *ip_vp;
  struct vnode_attr *ip_vattr;
  struct vnode_attr *ip_origvattr;
  cpu_type_t ip_origcputype;
  cpu_subtype_t ip_origcpusubtype;
  char *ip_vdata;
  int ip_flags;
  int ip_argc;
  int ip_envc;
  int ip_applec;
  char *ip_startargv;
  char *ip_endargv;
  char *ip_endenvv;
  char *ip_strings;
  char *ip_strendp;
  int ip_argspace;
  int ip_strspace;
  user_size_t ip_arch_offset;
  user_size_t ip_arch_size;
  char ip_interp_buffer[512];
  int ip_interp_sugid_fd;
  struct vfs_context *ip_vfs_context;
  struct nameidata *ip_ndp;
  thread_t ip_new_thread;
  struct label *ip_execlabelp;
  struct label *ip_scriptlabelp;
  struct vnode *ip_scriptvp;
  unsigned int ip_csflags;
  int ip_mac_return;
  void *ip_px_sa;
  void *ip_px_sfa;
  void *ip_px_spa;
  void *ip_px_smpx;
  void *ip_px_persona;
  void *ip_cs_error;
  uint64_t ip_dyld_fsid;
  uint64_t ip_dyld_fsobjid;
};

/* 3028 */
struct user32_ntptimeval
{
  struct user32_timespec time;
  user32_long_t maxerror;
  user32_long_t esterror;
  user32_long_t tai;
  __int32_t time_state;
};

/* 3029 */
struct user64_timex
{
  u_int64_t modes;
  user64_long_t offset;
  user64_long_t freq;
  user64_long_t maxerror;
  user64_long_t esterror;
  __int64_t status;
  user64_long_t constant;
  user64_long_t precision;
  user64_long_t tolerance;
  user64_long_t ppsfreq;
  user64_long_t jitter;
  __int64_t shift;
  user64_long_t stabil;
  user64_long_t jitcnt;
  user64_long_t calcnt;
  user64_long_t errcnt;
  user64_long_t stbcnt;
};

/* 3030 */
struct ucontext64
{
  int uc_onstack;
  __darwin_sigset_t uc_sigmask;
  struct sigaltstack uc_stack;
  struct ucontext64 *uc_link;
  __darwin_size_t uc_mcsize;
  struct mcontext64 *uc_mcontext64;
};

/* 3031 */
typedef struct ucontext64 ucontext64_t;

/* 3032 */
struct user32_timex
{
  u_int32_t modes;
  user32_long_t offset;
  user32_long_t freq;
  user32_long_t maxerror;
  user32_long_t esterror;
  __int32_t status;
  user32_long_t constant;
  user32_long_t precision;
  user32_long_t tolerance;
  user32_long_t ppsfreq;
  user32_long_t jitter;
  __int32_t shift;
  user32_long_t stabil;
  user32_long_t jitcnt;
  user32_long_t calcnt;
  user32_long_t errcnt;
  user32_long_t stbcnt;
};

/* 3033 */
struct user64_ntptimeval
{
  struct user64_timespec time;
  user64_long_t maxerror;
  user64_long_t esterror;
  user64_long_t tai;
  __int64_t time_state;
};

/* 3039 */
struct vfsmount_args::$9E65DD09AC61A9F6AFE43AF19640EA9C::$A77F255A1B06146557C0D7B942708129
{
  char *mnt_fspec;
  void *mnt_fsdata;
};

/* 3040 */
struct vfsmount_args::$9E65DD09AC61A9F6AFE43AF19640EA9C::$93E2C7A03E1FB0CEA82260B77A2F9A12
{
  void *mnt_fsdata;
};

/* 3041 */
union vfsmount_args::$9E65DD09AC61A9F6AFE43AF19640EA9C
{
  struct vfsmount_args::$9E65DD09AC61A9F6AFE43AF19640EA9C::$A77F255A1B06146557C0D7B942708129 mnt_localfs_args;
  struct vfsmount_args::$9E65DD09AC61A9F6AFE43AF19640EA9C::$93E2C7A03E1FB0CEA82260B77A2F9A12 mnt_remotefs_args;
};

/* 3038 */
struct vfsmount_args
{
  union vfsmount_args::$9E65DD09AC61A9F6AFE43AF19640EA9C mountfs_args;
};

/* 3042 */
struct user64_statfs
{
  __int16 f_otype;
  __int16 f_oflags;
  user64_long_t f_bsize;
  user64_long_t f_iosize;
  user64_long_t f_blocks;
  user64_long_t f_bfree;
  user64_long_t f_bavail;
  user64_long_t f_files;
  user64_long_t f_ffree;
  fsid_t f_fsid;
  uid_t f_owner;
  __int16 f_reserved1;
  __int16 f_type;
  user64_long_t f_flags;
  user64_long_t f_reserved2[2];
  char f_fstypename[15];
  char f_mntonname[90];
  char f_mntfromname[90];
  char f_reserved3;
  user64_long_t f_reserved4[4];
};

/* 3043 */
struct user32_statfs
{
  __int16 f_otype;
  __int16 f_oflags;
  user32_long_t f_bsize;
  user32_long_t f_iosize;
  user32_long_t f_blocks;
  user32_long_t f_bfree;
  user32_long_t f_bavail;
  user32_long_t f_files;
  user32_long_t f_ffree;
  fsid_t f_fsid;
  uid_t f_owner;
  __int16 f_reserved1;
  __int16 f_type;
  user32_long_t f_flags;
  user32_long_t f_reserved2[2];
  char f_fstypename[15];
  char f_mntonname[90];
  char f_mntfromname[90];
  char f_reserved3;
  user32_long_t f_reserved4[4];
};

/* 3044 */
struct mntlist
{
  struct mount *tqh_first;
  struct mount **tqh_last;
};

/* 3046 */
struct user64_semid_ds
{
  struct ipc_perm sem_perm;
  int32_t sem_base;
  unsigned __int16 sem_nsems;
  user64_time_t sem_otime;
  int32_t sem_pad1;
  user64_time_t sem_ctime;
  int32_t sem_pad2;
  int32_t sem_pad3[4];
};

/* 3047 */
struct user32_semid_ds
{
  struct ipc_perm sem_perm;
  int32_t sem_base;
  unsigned __int16 sem_nsems;
  user32_time_t sem_otime;
  int32_t sem_pad1;
  user32_time_t sem_ctime;
  int32_t sem_pad2;
  int32_t sem_pad3[4];
};

/* 3048 */
union user_semun
{
  user_addr_t buf;
  user_addr_t array;
};

/* 3049 */
typedef union user_semun user_semun_t;

/* 3050 */
struct sem_undo
{
  int un_next_idx;
  struct proc *un_proc;
  __int16 un_cnt;
  struct sem_undo::undo *un_ent;
};

/* 3051 */
struct sem_undo::undo
{
  __int16 une_adjval;
  __int16 une_num;
  int une_id;
  struct sem_undo::undo *une_next;
};

/* 3052 */
struct seminfo
{
  int semmap;
  int semmni;
  int semmns;
  int semmnu;
  int semmsl;
  int semopm;
  int semume;
  int semusz;
  int semvmx;
  int semaem;
};

/* 3053 */
struct shared_file_mapping_np
{
  mach_vm_address_t sfm_address;
  mach_vm_size_t sfm_size;
  mach_vm_offset_t sfm_file_offset;
  vm_prot_t sfm_max_prot;
  vm_prot_t sfm_init_prot;
};

/* 3054 */
struct nosys_args
{
  int32_t dummy;
};

/* 3055 */
struct exit_args
{
  char rval_l_[];
  int rval;
  char rval_r_[];
};

/* 3056 */
struct fork_args
{
  int32_t dummy;
};

/* 3057 */
struct read_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char cbuf_l_[];
  user_addr_t cbuf;
  char cbuf_r_[];
  char nbyte_l_[];
  user_size_t nbyte;
  char nbyte_r_[];
};

/* 3058 */
struct write_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char cbuf_l_[];
  user_addr_t cbuf;
  char cbuf_r_[];
  char nbyte_l_[];
  user_size_t nbyte;
  char nbyte_r_[];
};

/* 3059 */
struct open_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3060 */
struct close_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
};

/* 3061 */
struct wait4_args
{
  char pid_l_[];
  int pid;
  char pid_r_[];
  char status_l_[];
  user_addr_t status;
  char status_r_[];
  char options_l_[];
  int options;
  char options_r_[];
  char rusage_l_[];
  user_addr_t rusage;
  char rusage_r_[];
};

/* 3062 */
struct link_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char link_l_[];
  user_addr_t link;
  char link_r_[];
};

/* 3063 */
struct unlink_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
};

/* 3064 */
struct chdir_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
};

/* 3065 */
struct fchdir_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
};

/* 3066 */
struct mknod_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
  char dev_l_[];
  int dev;
  char dev_r_[];
};

/* 3067 */
struct chmod_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3068 */
struct chown_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char uid_l_[];
  int uid;
  char uid_r_[];
  char gid_l_[];
  int gid;
  char gid_r_[];
};

/* 3069 */
struct getfsstat_args
{
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char bufsize_l_[];
  int bufsize;
  char bufsize_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
};

/* 3070 */
struct getpid_args
{
  int32_t dummy;
};

/* 3071 */
struct setuid_args
{
  char uid_l_[];
  uid_t uid;
  char uid_r_[];
};

/* 3072 */
struct getuid_args
{
  int32_t dummy;
};

/* 3073 */
struct geteuid_args
{
  int32_t dummy;
};

/* 3074 */
struct ptrace_args
{
  char req_l_[];
  int req;
  char req_r_[];
  char pid_l_[];
  pid_t pid;
  char pid_r_[];
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char data_l_[];
  int data;
  char data_r_[];
};

/* 3075 */
struct access_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
};

/* 3076 */
struct chflags_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
};

/* 3077 */
struct fchflags_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
};

/* 3078 */
struct sync_args
{
  int32_t dummy;
};

/* 3079 */
struct kill_args
{
  char pid_l_[];
  int pid;
  char pid_r_[];
  char signum_l_[];
  int signum;
  char signum_r_[];
  char posix_l_[];
  int posix;
  char posix_r_[];
};

/* 3080 */
struct getppid_args
{
  int32_t dummy;
};

/* 3081 */
struct dup_args
{
  char fd_l_[];
  u_int fd;
  char fd_r_[];
};

/* 3082 */
struct pipe_args
{
  int32_t dummy;
};

/* 3083 */
struct getegid_args
{
  int32_t dummy;
};

/* 3084 */
struct sigaction_args
{
  char signum_l_[];
  int signum;
  char signum_r_[];
  char nsa_l_[];
  user_addr_t nsa;
  char nsa_r_[];
  char osa_l_[];
  user_addr_t osa;
  char osa_r_[];
};

/* 3085 */
struct getgid_args
{
  int32_t dummy;
};

/* 3086 */
struct sigprocmask_args
{
  char how_l_[];
  int how;
  char how_r_[];
  char mask_l_[];
  user_addr_t mask;
  char mask_r_[];
  char omask_l_[];
  user_addr_t omask;
  char omask_r_[];
};

/* 3087 */
struct getlogin_args
{
  char namebuf_l_[];
  user_addr_t namebuf;
  char namebuf_r_[];
  char namelen_l_[];
  u_int namelen;
  char namelen_r_[];
};

/* 3088 */
struct setlogin_args
{
  char namebuf_l_[];
  user_addr_t namebuf;
  char namebuf_r_[];
};

/* 3089 */
struct acct_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
};

/* 3090 */
struct sigpending_args
{
  char osv_l_[];
  user_addr_t osv;
  char osv_r_[];
};

/* 3091 */
struct sigaltstack_args
{
  char nss_l_[];
  user_addr_t nss;
  char nss_r_[];
  char oss_l_[];
  user_addr_t oss;
  char oss_r_[];
};

/* 3092 */
struct ioctl_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char com_l_[];
  user_ulong_t com;
  char com_r_[];
  char data_l_[];
  user_addr_t data;
  char data_r_[];
};

/* 3093 */
struct reboot_args
{
  char opt_l_[];
  int opt;
  char opt_r_[];
  char command_l_[];
  user_addr_t command;
  char command_r_[];
};

/* 3094 */
struct revoke_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
};

/* 3095 */
struct symlink_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char link_l_[];
  user_addr_t link;
  char link_r_[];
};

/* 3096 */
struct readlink_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char count_l_[];
  int count;
  char count_r_[];
};

/* 3097 */
struct execve_args
{
  char fname_l_[];
  user_addr_t fname;
  char fname_r_[];
  char argp_l_[];
  user_addr_t argp;
  char argp_r_[];
  char envp_l_[];
  user_addr_t envp;
  char envp_r_[];
};

/* 3098 */
struct umask_args
{
  char newmask_l_[];
  int newmask;
  char newmask_r_[];
};

/* 3099 */
struct chroot_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
};

/* 3100 */
struct msync_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
};

/* 3101 */
struct vfork_args
{
  int32_t dummy;
};

/* 3102 */
struct munmap_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
};

/* 3103 */
struct mprotect_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
  char prot_l_[];
  int prot;
  char prot_r_[];
};

/* 3104 */
struct madvise_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
  char behav_l_[];
  int behav;
  char behav_r_[];
};

/* 3105 */
struct mincore_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
  char vec_l_[];
  user_addr_t vec;
  char vec_r_[];
};

/* 3106 */
struct getgroups_args
{
  char gidsetsize_l_[];
  u_int gidsetsize;
  char gidsetsize_r_[];
  char gidset_l_[];
  user_addr_t gidset;
  char gidset_r_[];
};

/* 3107 */
struct setgroups_args
{
  char gidsetsize_l_[];
  u_int gidsetsize;
  char gidsetsize_r_[];
  char gidset_l_[];
  user_addr_t gidset;
  char gidset_r_[];
};

/* 3108 */
struct getpgrp_args
{
  int32_t dummy;
};

/* 3109 */
struct setpgid_args
{
  char pid_l_[];
  int pid;
  char pid_r_[];
  char pgid_l_[];
  int pgid;
  char pgid_r_[];
};

/* 3110 */
struct setitimer_args
{
  char which_l_[];
  u_int which;
  char which_r_[];
  char itv_l_[];
  user_addr_t itv;
  char itv_r_[];
  char oitv_l_[];
  user_addr_t oitv;
  char oitv_r_[];
};

/* 3111 */
struct swapon_args
{
  int32_t dummy;
};

/* 3112 */
struct getitimer_args
{
  char which_l_[];
  u_int which;
  char which_r_[];
  char itv_l_[];
  user_addr_t itv;
  char itv_r_[];
};

/* 3113 */
struct getdtablesize_args
{
  int32_t dummy;
};

/* 3114 */
struct dup2_args
{
  char from_l_[];
  u_int from;
  char from_r_[];
  char to_l_[];
  u_int to;
  char to_r_[];
};

/* 3115 */
struct fcntl_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char cmd_l_[];
  int cmd;
  char cmd_r_[];
  char arg_l_[];
  user_long_t arg;
  char arg_r_[];
};

/* 3116 */
struct select_args
{
  char nd_l_[];
  int nd;
  char nd_r_[];
  char in_l_[];
  user_addr_t in;
  char in_r_[];
  char ou_l_[];
  user_addr_t ou;
  char ou_r_[];
  char ex_l_[];
  user_addr_t ex;
  char ex_r_[];
  char tv_l_[];
  user_addr_t tv;
  char tv_r_[];
};

/* 3117 */
struct fsync_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
};

/* 3118 */
struct setpriority_args
{
  char which_l_[];
  int which;
  char which_r_[];
  char who_l_[];
  id_t who;
  char who_r_[];
  char prio_l_[];
  int prio;
  char prio_r_[];
};

/* 3119 */
struct getpriority_args
{
  char which_l_[];
  int which;
  char which_r_[];
  char who_l_[];
  id_t who;
  char who_r_[];
};

/* 3120 */
struct sigsuspend_args
{
  char mask_l_[];
  sigset_t mask;
  char mask_r_[];
};

/* 3121 */
struct gettimeofday_args
{
  char tp_l_[];
  user_addr_t tp;
  char tp_r_[];
  char tzp_l_[];
  user_addr_t tzp;
  char tzp_r_[];
  char mach_absolute_time_l_[];
  user_addr_t mach_absolute_time;
  char mach_absolute_time_r_[];
};

/* 3122 */
struct getrusage_args
{
  char who_l_[];
  int who;
  char who_r_[];
  char rusage_l_[];
  user_addr_t rusage;
  char rusage_r_[];
};

/* 3123 */
struct readv_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char iovp_l_[];
  user_addr_t iovp;
  char iovp_r_[];
  char iovcnt_l_[];
  u_int iovcnt;
  char iovcnt_r_[];
};

/* 3124 */
struct writev_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char iovp_l_[];
  user_addr_t iovp;
  char iovp_r_[];
  char iovcnt_l_[];
  u_int iovcnt;
  char iovcnt_r_[];
};

/* 3125 */
struct settimeofday_args
{
  char tv_l_[];
  user_addr_t tv;
  char tv_r_[];
  char tzp_l_[];
  user_addr_t tzp;
  char tzp_r_[];
};

/* 3126 */
struct fchown_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char uid_l_[];
  int uid;
  char uid_r_[];
  char gid_l_[];
  int gid;
  char gid_r_[];
};

/* 3127 */
struct fchmod_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3128 */
struct setreuid_args
{
  char ruid_l_[];
  uid_t ruid;
  char ruid_r_[];
  char euid_l_[];
  uid_t euid;
  char euid_r_[];
};

/* 3129 */
struct setregid_args
{
  char rgid_l_[];
  gid_t rgid;
  char rgid_r_[];
  char egid_l_[];
  gid_t egid;
  char egid_r_[];
};

/* 3130 */
struct rename_args
{
  char from_l_[];
  user_addr_t from;
  char from_r_[];
  char to_l_[];
  user_addr_t to;
  char to_r_[];
};

/* 3131 */
struct flock_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char how_l_[];
  int how;
  char how_r_[];
};

/* 3132 */
struct mkfifo_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3133 */
struct mkdir_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3134 */
struct rmdir_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
};

/* 3135 */
struct utimes_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char tptr_l_[];
  user_addr_t tptr;
  char tptr_r_[];
};

/* 3136 */
struct futimes_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char tptr_l_[];
  user_addr_t tptr;
  char tptr_r_[];
};

/* 3137 */
struct adjtime_args
{
  char delta_l_[];
  user_addr_t delta;
  char delta_r_[];
  char olddelta_l_[];
  user_addr_t olddelta;
  char olddelta_r_[];
};

/* 3138 */
struct gethostuuid_args
{
  char uuid_buf_l_[];
  user_addr_t uuid_buf;
  char uuid_buf_r_[];
  char timeoutp_l_[];
  user_addr_t timeoutp;
  char timeoutp_r_[];
  char spi_l_[];
  int spi;
  char spi_r_[];
};

/* 3139 */
struct setsid_args
{
  int32_t dummy;
};

/* 3140 */
struct getpgid_args
{
  char pid_l_[];
  pid_t pid;
  char pid_r_[];
};

/* 3141 */
struct setprivexec_args
{
  char flag_l_[];
  int flag;
  char flag_r_[];
};

/* 3142 */
struct pread_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char nbyte_l_[];
  user_size_t nbyte;
  char nbyte_r_[];
  char offset_l_[];
  off_t offset;
  char offset_r_[];
};

/* 3143 */
struct pwrite_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char nbyte_l_[];
  user_size_t nbyte;
  char nbyte_r_[];
  char offset_l_[];
  off_t offset;
  char offset_r_[];
};

/* 3144 */
struct statfs_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
};

/* 3145 */
struct fstatfs_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
};

/* 3146 */
struct unmount_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
};

/* 3147 */
struct quotactl_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char cmd_l_[];
  int cmd;
  char cmd_r_[];
  char uid_l_[];
  int uid;
  char uid_r_[];
  char arg_l_[];
  user_addr_t arg;
  char arg_r_[];
};

/* 3148 */
struct mount_args
{
  char type_l_[];
  user_addr_t type;
  char type_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char data_l_[];
  user_addr_t data;
  char data_r_[];
};

/* 3149 */
struct csops_args
{
  char pid_l_[];
  pid_t pid;
  char pid_r_[];
  char ops_l_[];
  uint32_t ops;
  char ops_r_[];
  char useraddr_l_[];
  user_addr_t useraddr;
  char useraddr_r_[];
  char usersize_l_[];
  user_size_t usersize;
  char usersize_r_[];
};

/* 3150 */
struct csops_audittoken_args
{
  char pid_l_[];
  pid_t pid;
  char pid_r_[];
  char ops_l_[];
  uint32_t ops;
  char ops_r_[];
  char useraddr_l_[];
  user_addr_t useraddr;
  char useraddr_r_[];
  char usersize_l_[];
  user_size_t usersize;
  char usersize_r_[];
  char uaudittoken_l_[];
  user_addr_t uaudittoken;
  char uaudittoken_r_[];
};

/* 4072 */
enum $891529C55A3D7F6C466AE0BA608A35EA
{
  P_ALL = 0x0,
  P_PID = 0x1,
  P_PGID = 0x2,
};

/* 4071 */
typedef $891529C55A3D7F6C466AE0BA608A35EA idtype_t;

/* 3151 */
struct waitid_args
{
  char idtype_l_[];
  idtype_t idtype;
  char idtype_r_[];
  char id_l_[];
  id_t id;
  char id_r_[];
  char infop_l_[];
  user_addr_t infop;
  char infop_r_[];
  char options_l_[];
  int options;
  char options_r_[];
};

/* 3152 */
struct kdebug_typefilter_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char size_l_[];
  user_addr_t size;
  char size_r_[];
};

/* 3153 */
struct kdebug_trace_string_args
{
  char debugid_l_[];
  uint32_t debugid;
  char debugid_r_[];
  char str_id_l_[];
  uint64_t str_id;
  char str_id_r_[];
  char str_l_[];
  user_addr_t str;
  char str_r_[];
};

/* 3154 */
struct kdebug_trace64_args
{
  char code_l_[];
  uint32_t code;
  char code_r_[];
  char arg1_l_[];
  uint64_t arg1;
  char arg1_r_[];
  char arg2_l_[];
  uint64_t arg2;
  char arg2_r_[];
  char arg3_l_[];
  uint64_t arg3;
  char arg3_r_[];
  char arg4_l_[];
  uint64_t arg4;
  char arg4_r_[];
};

/* 3155 */
struct kdebug_trace_args
{
  char code_l_[];
  uint32_t code;
  char code_r_[];
  char arg1_l_[];
  user_ulong_t arg1;
  char arg1_r_[];
  char arg2_l_[];
  user_ulong_t arg2;
  char arg2_r_[];
  char arg3_l_[];
  user_ulong_t arg3;
  char arg3_r_[];
  char arg4_l_[];
  user_ulong_t arg4;
  char arg4_r_[];
};

/* 3156 */
struct setgid_args
{
  char gid_l_[];
  gid_t gid;
  char gid_r_[];
};

/* 3157 */
struct setegid_args
{
  char egid_l_[];
  gid_t egid;
  char egid_r_[];
};

/* 3158 */
struct seteuid_args
{
  char euid_l_[];
  uid_t euid;
  char euid_r_[];
};

/* 3159 */
struct sigreturn_args
{
  char uctx_l_[];
  user_addr_t uctx;
  char uctx_r_[];
  char infostyle_l_[];
  int infostyle;
  char infostyle_r_[];
};

/* 3160 */
struct thread_selfcounts_args
{
  char type_l_[];
  int type;
  char type_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char nbytes_l_[];
  user_size_t nbytes;
  char nbytes_r_[];
};

/* 3161 */
struct fdatasync_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
};

/* 3162 */
struct stat_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
};

/* 3163 */
struct fstat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
};

/* 3164 */
struct lstat_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
};

/* 3165 */
struct pathconf_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char name_l_[];
  int name;
  char name_r_[];
};

/* 3166 */
struct fpathconf_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char name_l_[];
  int name;
  char name_r_[];
};

/* 3167 */
struct getrlimit_args
{
  char which_l_[];
  u_int which;
  char which_r_[];
  char rlp_l_[];
  user_addr_t rlp;
  char rlp_r_[];
};

/* 3168 */
struct setrlimit_args
{
  char which_l_[];
  u_int which;
  char which_r_[];
  char rlp_l_[];
  user_addr_t rlp;
  char rlp_r_[];
};

/* 3169 */
struct getdirentries_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char count_l_[];
  u_int count;
  char count_r_[];
  char basep_l_[];
  user_addr_t basep;
  char basep_r_[];
};

/* 3170 */
struct mmap_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
  char prot_l_[];
  int prot;
  char prot_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char fd_l_[];
  int fd;
  char fd_r_[];
  char pos_l_[];
  off_t pos;
  char pos_r_[];
};

/* 3171 */
struct lseek_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char offset_l_[];
  off_t offset;
  char offset_r_[];
  char whence_l_[];
  int whence;
  char whence_r_[];
};

/* 3172 */
struct truncate_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char length_l_[];
  off_t length;
  char length_r_[];
};

/* 3173 */
struct ftruncate_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char length_l_[];
  off_t length;
  char length_r_[];
};

/* 3174 */
struct sysctl_args
{
  char name_l_[];
  user_addr_t name;
  char name_r_[];
  char namelen_l_[];
  u_int namelen;
  char namelen_r_[];
  char old_l_[];
  user_addr_t old;
  char old_r_[];
  char oldlenp_l_[];
  user_addr_t oldlenp;
  char oldlenp_r_[];
  char new_l_[];
  user_addr_t new0;
  char new_r_[];
  char newlen_l_[];
  user_size_t newlen;
  char newlen_r_[];
};

/* 3175 */
struct mlock_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
};

/* 3176 */
struct munlock_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
};

/* 3177 */
struct undelete_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
};

/* 3178 */
struct open_dprotected_np_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char class_l_[];
  int class0;
  char class_r_[];
  char dpflags_l_[];
  int dpflags;
  char dpflags_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3179 */
struct getattrlist_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char alist_l_[];
  user_addr_t alist;
  char alist_r_[];
  char attributeBuffer_l_[];
  user_addr_t attributeBuffer;
  char attributeBuffer_r_[];
  char bufferSize_l_[];
  user_size_t bufferSize;
  char bufferSize_r_[];
  char options_l_[];
  user_ulong_t options;
  char options_r_[];
};

/* 3180 */
struct setattrlist_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char alist_l_[];
  user_addr_t alist;
  char alist_r_[];
  char attributeBuffer_l_[];
  user_addr_t attributeBuffer;
  char attributeBuffer_r_[];
  char bufferSize_l_[];
  user_size_t bufferSize;
  char bufferSize_r_[];
  char options_l_[];
  user_ulong_t options;
  char options_r_[];
};

/* 3181 */
struct getdirentriesattr_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char alist_l_[];
  user_addr_t alist;
  char alist_r_[];
  char buffer_l_[];
  user_addr_t buffer;
  char buffer_r_[];
  char buffersize_l_[];
  user_size_t buffersize;
  char buffersize_r_[];
  char count_l_[];
  user_addr_t count;
  char count_r_[];
  char basep_l_[];
  user_addr_t basep;
  char basep_r_[];
  char newstate_l_[];
  user_addr_t newstate;
  char newstate_r_[];
  char options_l_[];
  user_ulong_t options;
  char options_r_[];
};

/* 3182 */
struct exchangedata_args
{
  char path1_l_[];
  user_addr_t path1;
  char path1_r_[];
  char path2_l_[];
  user_addr_t path2;
  char path2_r_[];
  char options_l_[];
  user_ulong_t options;
  char options_r_[];
};

/* 3183 */
struct searchfs_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char searchblock_l_[];
  user_addr_t searchblock;
  char searchblock_r_[];
  char nummatches_l_[];
  user_addr_t nummatches;
  char nummatches_r_[];
  char scriptcode_l_[];
  uint32_t scriptcode;
  char scriptcode_r_[];
  char options_l_[];
  uint32_t options;
  char options_r_[];
  char state_l_[];
  user_addr_t state;
  char state_r_[];
};

/* 3184 */
struct delete_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
};

/* 3185 */
struct copyfile_args
{
  char from_l_[];
  user_addr_t from;
  char from_r_[];
  char to_l_[];
  user_addr_t to;
  char to_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
};

/* 3186 */
struct fgetattrlist_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char alist_l_[];
  user_addr_t alist;
  char alist_r_[];
  char attributeBuffer_l_[];
  user_addr_t attributeBuffer;
  char attributeBuffer_r_[];
  char bufferSize_l_[];
  user_size_t bufferSize;
  char bufferSize_r_[];
  char options_l_[];
  user_ulong_t options;
  char options_r_[];
};

/* 3187 */
struct fsetattrlist_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char alist_l_[];
  user_addr_t alist;
  char alist_r_[];
  char attributeBuffer_l_[];
  user_addr_t attributeBuffer;
  char attributeBuffer_r_[];
  char bufferSize_l_[];
  user_size_t bufferSize;
  char bufferSize_r_[];
  char options_l_[];
  user_ulong_t options;
  char options_r_[];
};

/* 3188 */
struct poll_args
{
  char fds_l_[];
  user_addr_t fds;
  char fds_r_[];
  char nfds_l_[];
  u_int nfds;
  char nfds_r_[];
  char timeout_l_[];
  int timeout;
  char timeout_r_[];
};

/* 3189 */
struct watchevent_args
{
  char u_req_l_[];
  user_addr_t u_req;
  char u_req_r_[];
  char u_eventmask_l_[];
  int u_eventmask;
  char u_eventmask_r_[];
};

/* 3190 */
struct waitevent_args
{
  char u_req_l_[];
  user_addr_t u_req;
  char u_req_r_[];
  char tv_l_[];
  user_addr_t tv;
  char tv_r_[];
};

/* 3191 */
struct modwatch_args
{
  char u_req_l_[];
  user_addr_t u_req;
  char u_req_r_[];
  char u_eventmask_l_[];
  int u_eventmask;
  char u_eventmask_r_[];
};

/* 3192 */
struct getxattr_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char attrname_l_[];
  user_addr_t attrname;
  char attrname_r_[];
  char value_l_[];
  user_addr_t value;
  char value_r_[];
  char size_l_[];
  user_size_t size;
  char size_r_[];
  char position_l_[];
  uint32_t position;
  char position_r_[];
  char options_l_[];
  int options;
  char options_r_[];
};

/* 3193 */
struct fgetxattr_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char attrname_l_[];
  user_addr_t attrname;
  char attrname_r_[];
  char value_l_[];
  user_addr_t value;
  char value_r_[];
  char size_l_[];
  user_size_t size;
  char size_r_[];
  char position_l_[];
  uint32_t position;
  char position_r_[];
  char options_l_[];
  int options;
  char options_r_[];
};

/* 3194 */
struct setxattr_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char attrname_l_[];
  user_addr_t attrname;
  char attrname_r_[];
  char value_l_[];
  user_addr_t value;
  char value_r_[];
  char size_l_[];
  user_size_t size;
  char size_r_[];
  char position_l_[];
  uint32_t position;
  char position_r_[];
  char options_l_[];
  int options;
  char options_r_[];
};

/* 3195 */
struct fsetxattr_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char attrname_l_[];
  user_addr_t attrname;
  char attrname_r_[];
  char value_l_[];
  user_addr_t value;
  char value_r_[];
  char size_l_[];
  user_size_t size;
  char size_r_[];
  char position_l_[];
  uint32_t position;
  char position_r_[];
  char options_l_[];
  int options;
  char options_r_[];
};

/* 3196 */
struct removexattr_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char attrname_l_[];
  user_addr_t attrname;
  char attrname_r_[];
  char options_l_[];
  int options;
  char options_r_[];
};

/* 3197 */
struct fremovexattr_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char attrname_l_[];
  user_addr_t attrname;
  char attrname_r_[];
  char options_l_[];
  int options;
  char options_r_[];
};

/* 3198 */
struct listxattr_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char namebuf_l_[];
  user_addr_t namebuf;
  char namebuf_r_[];
  char bufsize_l_[];
  user_size_t bufsize;
  char bufsize_r_[];
  char options_l_[];
  int options;
  char options_r_[];
};

/* 3199 */
struct flistxattr_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char namebuf_l_[];
  user_addr_t namebuf;
  char namebuf_r_[];
  char bufsize_l_[];
  user_size_t bufsize;
  char bufsize_r_[];
  char options_l_[];
  int options;
  char options_r_[];
};

/* 3200 */
struct fsctl_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char cmd_l_[];
  user_ulong_t cmd;
  char cmd_r_[];
  char data_l_[];
  user_addr_t data;
  char data_r_[];
  char options_l_[];
  u_int options;
  char options_r_[];
};

/* 3201 */
struct initgroups_args
{
  char gidsetsize_l_[];
  u_int gidsetsize;
  char gidsetsize_r_[];
  char gidset_l_[];
  user_addr_t gidset;
  char gidset_r_[];
  char gmuid_l_[];
  int gmuid;
  char gmuid_r_[];
};

/* 3202 */
struct posix_spawn_args
{
  char pid_l_[];
  user_addr_t pid;
  char pid_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char adesc_l_[];
  user_addr_t adesc;
  char adesc_r_[];
  char argv_l_[];
  user_addr_t argv;
  char argv_r_[];
  char envp_l_[];
  user_addr_t envp;
  char envp_r_[];
};

/* 3203 */
struct ffsctl_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char cmd_l_[];
  user_ulong_t cmd;
  char cmd_r_[];
  char data_l_[];
  user_addr_t data;
  char data_r_[];
  char options_l_[];
  u_int options;
  char options_r_[];
};

/* 3204 */
struct minherit_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
  char inherit_l_[];
  int inherit;
  char inherit_r_[];
};

/* 3205 */
struct shm_open_args
{
  char name_l_[];
  user_addr_t name;
  char name_r_[];
  char oflag_l_[];
  int oflag;
  char oflag_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3206 */
struct shm_unlink_args
{
  char name_l_[];
  user_addr_t name;
  char name_r_[];
};

/* 3207 */
struct sem_open_args
{
  char name_l_[];
  user_addr_t name;
  char name_r_[];
  char oflag_l_[];
  int oflag;
  char oflag_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
  char value_l_[];
  int value;
  char value_r_[];
};

/* 3208 */
struct sem_close_args
{
  char sem_l_[];
  user_addr_t sem;
  char sem_r_[];
};

/* 3209 */
struct sem_unlink_args
{
  char name_l_[];
  user_addr_t name;
  char name_r_[];
};

/* 3210 */
struct sem_wait_args
{
  char sem_l_[];
  user_addr_t sem;
  char sem_r_[];
};

/* 3211 */
struct sem_trywait_args
{
  char sem_l_[];
  user_addr_t sem;
  char sem_r_[];
};

/* 3212 */
struct sem_post_args
{
  char sem_l_[];
  user_addr_t sem;
  char sem_r_[];
};

/* 3213 */
struct sysctlbyname_args
{
  char name_l_[];
  user_addr_t name;
  char name_r_[];
  char namelen_l_[];
  user_size_t namelen;
  char namelen_r_[];
  char old_l_[];
  user_addr_t old;
  char old_r_[];
  char oldlenp_l_[];
  user_addr_t oldlenp;
  char oldlenp_r_[];
  char new_l_[];
  user_addr_t new0;
  char new_r_[];
  char newlen_l_[];
  user_size_t newlen;
  char newlen_r_[];
};

/* 3214 */
struct open_extended_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char uid_l_[];
  uid_t uid;
  char uid_r_[];
  char gid_l_[];
  gid_t gid;
  char gid_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
};

/* 3215 */
struct umask_extended_args
{
  char newmask_l_[];
  int newmask;
  char newmask_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
};

/* 3216 */
struct stat_extended_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
  char xsecurity_size_l_[];
  user_addr_t xsecurity_size;
  char xsecurity_size_r_[];
};

/* 3217 */
struct lstat_extended_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
  char xsecurity_size_l_[];
  user_addr_t xsecurity_size;
  char xsecurity_size_r_[];
};

/* 3218 */
struct fstat_extended_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
  char xsecurity_size_l_[];
  user_addr_t xsecurity_size;
  char xsecurity_size_r_[];
};

/* 3219 */
struct chmod_extended_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char uid_l_[];
  uid_t uid;
  char uid_r_[];
  char gid_l_[];
  gid_t gid;
  char gid_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
};

/* 3220 */
struct fchmod_extended_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char uid_l_[];
  uid_t uid;
  char uid_r_[];
  char gid_l_[];
  gid_t gid;
  char gid_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
};

/* 3221 */
struct access_extended_args
{
  char entries_l_[];
  user_addr_t entries;
  char entries_r_[];
  char size_l_[];
  user_size_t size;
  char size_r_[];
  char results_l_[];
  user_addr_t results;
  char results_r_[];
  char uid_l_[];
  uid_t uid;
  char uid_r_[];
};

/* 3222 */
struct settid_args
{
  char uid_l_[];
  uid_t uid;
  char uid_r_[];
  char gid_l_[];
  gid_t gid;
  char gid_r_[];
};

/* 3223 */
struct gettid_args
{
  char uidp_l_[];
  user_addr_t uidp;
  char uidp_r_[];
  char gidp_l_[];
  user_addr_t gidp;
  char gidp_r_[];
};

/* 3224 */
struct setsgroups_args
{
  char setlen_l_[];
  int setlen;
  char setlen_r_[];
  char guidset_l_[];
  user_addr_t guidset;
  char guidset_r_[];
};

/* 3225 */
struct getsgroups_args
{
  char setlen_l_[];
  user_addr_t setlen;
  char setlen_r_[];
  char guidset_l_[];
  user_addr_t guidset;
  char guidset_r_[];
};

/* 3226 */
struct setwgroups_args
{
  char setlen_l_[];
  int setlen;
  char setlen_r_[];
  char guidset_l_[];
  user_addr_t guidset;
  char guidset_r_[];
};

/* 3227 */
struct getwgroups_args
{
  char setlen_l_[];
  user_addr_t setlen;
  char setlen_r_[];
  char guidset_l_[];
  user_addr_t guidset;
  char guidset_r_[];
};

/* 3228 */
struct mkfifo_extended_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char uid_l_[];
  uid_t uid;
  char uid_r_[];
  char gid_l_[];
  gid_t gid;
  char gid_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
};

/* 3229 */
struct mkdir_extended_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char uid_l_[];
  uid_t uid;
  char uid_r_[];
  char gid_l_[];
  gid_t gid;
  char gid_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
};

/* 3230 */
struct shared_region_check_np_args
{
  char start_address_l_[];
  user_addr_t start_address;
  char start_address_r_[];
};

/* 3231 */
struct vm_pressure_monitor_args
{
  char wait_for_pressure_l_[];
  int wait_for_pressure;
  char wait_for_pressure_r_[];
  char nsecs_monitored_l_[];
  int nsecs_monitored;
  char nsecs_monitored_r_[];
  char pages_reclaimed_l_[];
  user_addr_t pages_reclaimed;
  char pages_reclaimed_r_[];
};

/* 3232 */
struct getsid_args
{
  char pid_l_[];
  pid_t pid;
  char pid_r_[];
};

/* 3233 */
struct settid_with_pid_args
{
  char pid_l_[];
  pid_t pid;
  char pid_r_[];
  char assume_l_[];
  int assume;
  char assume_r_[];
};

/* 3234 */
struct aio_fsync_args
{
  char op_l_[];
  int op;
  char op_r_[];
  char aiocbp_l_[];
  user_addr_t aiocbp;
  char aiocbp_r_[];
};

/* 3235 */
struct aio_return_args
{
  char aiocbp_l_[];
  user_addr_t aiocbp;
  char aiocbp_r_[];
};

/* 3236 */
struct aio_suspend_args
{
  char aiocblist_l_[];
  user_addr_t aiocblist;
  char aiocblist_r_[];
  char nent_l_[];
  int nent;
  char nent_r_[];
  char timeoutp_l_[];
  user_addr_t timeoutp;
  char timeoutp_r_[];
};

/* 3237 */
struct aio_cancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char aiocbp_l_[];
  user_addr_t aiocbp;
  char aiocbp_r_[];
};

/* 3238 */
struct aio_error_args
{
  char aiocbp_l_[];
  user_addr_t aiocbp;
  char aiocbp_r_[];
};

/* 3239 */
struct aio_read_args
{
  char aiocbp_l_[];
  user_addr_t aiocbp;
  char aiocbp_r_[];
};

/* 3240 */
struct aio_write_args
{
  char aiocbp_l_[];
  user_addr_t aiocbp;
  char aiocbp_r_[];
};

/* 3241 */
struct lio_listio_args
{
  char mode_l_[];
  int mode;
  char mode_r_[];
  char aiocblist_l_[];
  user_addr_t aiocblist;
  char aiocblist_r_[];
  char nent_l_[];
  int nent;
  char nent_r_[];
  char sigp_l_[];
  user_addr_t sigp;
  char sigp_r_[];
};

/* 3242 */
struct iopolicysys_args
{
  char cmd_l_[];
  int cmd;
  char cmd_r_[];
  char arg_l_[];
  user_addr_t arg;
  char arg_r_[];
};

/* 3243 */
struct process_policy_args
{
  char scope_l_[];
  int scope;
  char scope_r_[];
  char action_l_[];
  int action;
  char action_r_[];
  char policy_l_[];
  int policy;
  char policy_r_[];
  char policy_subtype_l_[];
  int policy_subtype;
  char policy_subtype_r_[];
  char attrp_l_[];
  user_addr_t attrp;
  char attrp_r_[];
  char target_pid_l_[];
  pid_t target_pid;
  char target_pid_r_[];
  char target_threadid_l_[];
  uint64_t target_threadid;
  char target_threadid_r_[];
};

/* 3244 */
struct mlockall_args
{
  char how_l_[];
  int how;
  char how_r_[];
};

/* 3245 */
struct munlockall_args
{
  char how_l_[];
  int how;
  char how_r_[];
};

/* 3246 */
struct issetugid_args
{
  int32_t dummy;
};

/* 3247 */
struct __pthread_kill_args
{
  char thread_port_l_[];
  int thread_port;
  char thread_port_r_[];
  char sig_l_[];
  int sig;
  char sig_r_[];
};

/* 3248 */
struct __pthread_sigmask_args
{
  char how_l_[];
  int how;
  char how_r_[];
  char set_l_[];
  user_addr_t set;
  char set_r_[];
  char oset_l_[];
  user_addr_t oset;
  char oset_r_[];
};

/* 3249 */
struct __sigwait_args
{
  char set_l_[];
  user_addr_t set;
  char set_r_[];
  char sig_l_[];
  user_addr_t sig;
  char sig_r_[];
};

/* 3250 */
struct __disable_threadsignal_args
{
  char value_l_[];
  int value;
  char value_r_[];
};

/* 3251 */
struct __pthread_markcancel_args
{
  char thread_port_l_[];
  int thread_port;
  char thread_port_r_[];
};

/* 3252 */
struct __pthread_canceled_args
{
  char action_l_[];
  int action;
  char action_r_[];
};

/* 3253 */
struct __semwait_signal_args
{
  char cond_sem_l_[];
  int cond_sem;
  char cond_sem_r_[];
  char mutex_sem_l_[];
  int mutex_sem;
  char mutex_sem_r_[];
  char timeout_l_[];
  int timeout;
  char timeout_r_[];
  char relative_l_[];
  int relative;
  char relative_r_[];
  char tv_sec_l_[];
  int64_t tv_sec;
  char tv_sec_r_[];
  char tv_nsec_l_[];
  int32_t tv_nsec;
  char tv_nsec_r_[];
};

/* 3254 */
struct proc_info_args
{
  char callnum_l_[];
  int32_t callnum;
  char callnum_r_[];
  char pid_l_[];
  int32_t pid;
  char pid_r_[];
  char flavor_l_[];
  uint32_t flavor;
  char flavor_r_[];
  char arg_l_[];
  uint64_t arg;
  char arg_r_[];
  char buffer_l_[];
  user_addr_t buffer;
  char buffer_r_[];
  char buffersize_l_[];
  int32_t buffersize;
  char buffersize_r_[];
};

/* 3255 */
struct stat64_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
};

/* 3256 */
struct fstat64_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
};

/* 3257 */
struct lstat64_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
};

/* 3258 */
struct stat64_extended_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
  char xsecurity_size_l_[];
  user_addr_t xsecurity_size;
  char xsecurity_size_r_[];
};

/* 3259 */
struct lstat64_extended_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
  char xsecurity_size_l_[];
  user_addr_t xsecurity_size;
  char xsecurity_size_r_[];
};

/* 3260 */
struct fstat64_extended_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
  char xsecurity_l_[];
  user_addr_t xsecurity;
  char xsecurity_r_[];
  char xsecurity_size_l_[];
  user_addr_t xsecurity_size;
  char xsecurity_size_r_[];
};

/* 3261 */
struct getdirentries64_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char bufsize_l_[];
  user_size_t bufsize;
  char bufsize_r_[];
  char position_l_[];
  user_addr_t position;
  char position_r_[];
};

/* 3262 */
struct statfs64_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
};

/* 3263 */
struct fstatfs64_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
};

/* 3264 */
struct getfsstat64_args
{
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char bufsize_l_[];
  int bufsize;
  char bufsize_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
};

/* 3265 */
struct __pthread_chdir_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
};

/* 3266 */
struct __pthread_fchdir_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
};

/* 3267 */
struct audit_args
{
  char record_l_[];
  user_addr_t record;
  char record_r_[];
  char length_l_[];
  int length;
  char length_r_[];
};

/* 3268 */
struct auditon_args
{
  char cmd_l_[];
  int cmd;
  char cmd_r_[];
  char data_l_[];
  user_addr_t data;
  char data_r_[];
  char length_l_[];
  int length;
  char length_r_[];
};

/* 3269 */
struct getauid_args
{
  char auid_l_[];
  user_addr_t auid;
  char auid_r_[];
};

/* 3270 */
struct setauid_args
{
  char auid_l_[];
  user_addr_t auid;
  char auid_r_[];
};

/* 3271 */
struct getaudit_addr_args
{
  char auditinfo_addr_l_[];
  user_addr_t auditinfo_addr;
  char auditinfo_addr_r_[];
  char length_l_[];
  int length;
  char length_r_[];
};

/* 3272 */
struct setaudit_addr_args
{
  char auditinfo_addr_l_[];
  user_addr_t auditinfo_addr;
  char auditinfo_addr_r_[];
  char length_l_[];
  int length;
  char length_r_[];
};

/* 3273 */
struct auditctl_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
};

/* 3274 */
struct kqueue_args
{
  int32_t dummy;
};

/* 3275 */
struct kevent_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char changelist_l_[];
  user_addr_t changelist;
  char changelist_r_[];
  char nchanges_l_[];
  int nchanges;
  char nchanges_r_[];
  char eventlist_l_[];
  user_addr_t eventlist;
  char eventlist_r_[];
  char nevents_l_[];
  int nevents;
  char nevents_r_[];
  char timeout_l_[];
  user_addr_t timeout;
  char timeout_r_[];
};

/* 3276 */
struct lchown_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char owner_l_[];
  uid_t owner;
  char owner_r_[];
  char group_l_[];
  gid_t group;
  char group_r_[];
};

/* 3277 */
struct kevent64_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char changelist_l_[];
  user_addr_t changelist;
  char changelist_r_[];
  char nchanges_l_[];
  int nchanges;
  char nchanges_r_[];
  char eventlist_l_[];
  user_addr_t eventlist;
  char eventlist_r_[];
  char nevents_l_[];
  int nevents;
  char nevents_r_[];
  char flags_l_[];
  unsigned int flags;
  char flags_r_[];
  char timeout_l_[];
  user_addr_t timeout;
  char timeout_r_[];
};

/* 3278 */
struct thread_selfid_args
{
  int32_t dummy;
};

/* 3279 */
struct ledger_args
{
  char cmd_l_[];
  int cmd;
  char cmd_r_[];
  char arg1_l_[];
  user_addr_t arg1;
  char arg1_r_[];
  char arg2_l_[];
  user_addr_t arg2;
  char arg2_r_[];
  char arg3_l_[];
  user_addr_t arg3;
  char arg3_r_[];
};

/* 3280 */
struct kevent_qos_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char changelist_l_[];
  user_addr_t changelist;
  char changelist_r_[];
  char nchanges_l_[];
  int nchanges;
  char nchanges_r_[];
  char eventlist_l_[];
  user_addr_t eventlist;
  char eventlist_r_[];
  char nevents_l_[];
  int nevents;
  char nevents_r_[];
  char data_out_l_[];
  user_addr_t data_out;
  char data_out_r_[];
  char data_available_l_[];
  user_addr_t data_available;
  char data_available_r_[];
  char flags_l_[];
  unsigned int flags;
  char flags_r_[];
};

/* 3281 */
struct kevent_id_args
{
  char id_l_[];
  uint64_t id;
  char id_r_[];
  char changelist_l_[];
  user_addr_t changelist;
  char changelist_r_[];
  char nchanges_l_[];
  int nchanges;
  char nchanges_r_[];
  char eventlist_l_[];
  user_addr_t eventlist;
  char eventlist_r_[];
  char nevents_l_[];
  int nevents;
  char nevents_r_[];
  char data_out_l_[];
  user_addr_t data_out;
  char data_out_r_[];
  char data_available_l_[];
  user_addr_t data_available;
  char data_available_r_[];
  char flags_l_[];
  unsigned int flags;
  char flags_r_[];
};

/* 3282 */
struct __mac_execve_args
{
  char fname_l_[];
  user_addr_t fname;
  char fname_r_[];
  char argp_l_[];
  user_addr_t argp;
  char argp_r_[];
  char envp_l_[];
  user_addr_t envp;
  char envp_r_[];
  char mac_p_l_[];
  user_addr_t mac_p;
  char mac_p_r_[];
};

/* 3283 */
struct pselect_args
{
  char nd_l_[];
  int nd;
  char nd_r_[];
  char in_l_[];
  user_addr_t in;
  char in_r_[];
  char ou_l_[];
  user_addr_t ou;
  char ou_r_[];
  char ex_l_[];
  user_addr_t ex;
  char ex_r_[];
  char ts_l_[];
  user_addr_t ts;
  char ts_r_[];
  char mask_l_[];
  user_addr_t mask;
  char mask_r_[];
};

/* 3284 */
struct pselect_nocancel_args
{
  char nd_l_[];
  int nd;
  char nd_r_[];
  char in_l_[];
  user_addr_t in;
  char in_r_[];
  char ou_l_[];
  user_addr_t ou;
  char ou_r_[];
  char ex_l_[];
  user_addr_t ex;
  char ex_r_[];
  char ts_l_[];
  user_addr_t ts;
  char ts_r_[];
  char mask_l_[];
  user_addr_t mask;
  char mask_r_[];
};

/* 3285 */
struct read_nocancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char cbuf_l_[];
  user_addr_t cbuf;
  char cbuf_r_[];
  char nbyte_l_[];
  user_size_t nbyte;
  char nbyte_r_[];
};

/* 3286 */
struct write_nocancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char cbuf_l_[];
  user_addr_t cbuf;
  char cbuf_r_[];
  char nbyte_l_[];
  user_size_t nbyte;
  char nbyte_r_[];
};

/* 3287 */
struct open_nocancel_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3288 */
struct close_nocancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
};

/* 3289 */
struct wait4_nocancel_args
{
  char pid_l_[];
  int pid;
  char pid_r_[];
  char status_l_[];
  user_addr_t status;
  char status_r_[];
  char options_l_[];
  int options;
  char options_r_[];
  char rusage_l_[];
  user_addr_t rusage;
  char rusage_r_[];
};

/* 3290 */
struct msync_nocancel_args
{
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
};

/* 3291 */
struct fcntl_nocancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char cmd_l_[];
  int cmd;
  char cmd_r_[];
  char arg_l_[];
  user_long_t arg;
  char arg_r_[];
};

/* 3292 */
struct fsync_nocancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
};

/* 3293 */
struct sigsuspend_nocancel_args
{
  char mask_l_[];
  sigset_t mask;
  char mask_r_[];
};

/* 3294 */
struct readv_nocancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char iovp_l_[];
  user_addr_t iovp;
  char iovp_r_[];
  char iovcnt_l_[];
  u_int iovcnt;
  char iovcnt_r_[];
};

/* 3295 */
struct writev_nocancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char iovp_l_[];
  user_addr_t iovp;
  char iovp_r_[];
  char iovcnt_l_[];
  u_int iovcnt;
  char iovcnt_r_[];
};

/* 3296 */
struct pread_nocancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char nbyte_l_[];
  user_size_t nbyte;
  char nbyte_r_[];
  char offset_l_[];
  off_t offset;
  char offset_r_[];
};

/* 3297 */
struct pwrite_nocancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char nbyte_l_[];
  user_size_t nbyte;
  char nbyte_r_[];
  char offset_l_[];
  off_t offset;
  char offset_r_[];
};

/* 3298 */
struct waitid_nocancel_args
{
  char idtype_l_[];
  idtype_t idtype;
  char idtype_r_[];
  char id_l_[];
  id_t id;
  char id_r_[];
  char infop_l_[];
  user_addr_t infop;
  char infop_r_[];
  char options_l_[];
  int options;
  char options_r_[];
};

/* 3299 */
struct poll_nocancel_args
{
  char fds_l_[];
  user_addr_t fds;
  char fds_r_[];
  char nfds_l_[];
  u_int nfds;
  char nfds_r_[];
  char timeout_l_[];
  int timeout;
  char timeout_r_[];
};

/* 3300 */
struct sem_wait_nocancel_args
{
  char sem_l_[];
  user_addr_t sem;
  char sem_r_[];
};

/* 3301 */
struct aio_suspend_nocancel_args
{
  char aiocblist_l_[];
  user_addr_t aiocblist;
  char aiocblist_r_[];
  char nent_l_[];
  int nent;
  char nent_r_[];
  char timeoutp_l_[];
  user_addr_t timeoutp;
  char timeoutp_r_[];
};

/* 3302 */
struct __sigwait_nocancel_args
{
  char set_l_[];
  user_addr_t set;
  char set_r_[];
  char sig_l_[];
  user_addr_t sig;
  char sig_r_[];
};

/* 3303 */
struct __semwait_signal_nocancel_args
{
  char cond_sem_l_[];
  int cond_sem;
  char cond_sem_r_[];
  char mutex_sem_l_[];
  int mutex_sem;
  char mutex_sem_r_[];
  char timeout_l_[];
  int timeout;
  char timeout_r_[];
  char relative_l_[];
  int relative;
  char relative_r_[];
  char tv_sec_l_[];
  int64_t tv_sec;
  char tv_sec_r_[];
  char tv_nsec_l_[];
  int32_t tv_nsec;
  char tv_nsec_r_[];
};

/* 3304 */
struct __mac_mount_args
{
  char type_l_[];
  user_addr_t type;
  char type_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char data_l_[];
  user_addr_t data;
  char data_r_[];
  char mac_p_l_[];
  user_addr_t mac_p;
  char mac_p_r_[];
};

/* 3305 */
struct __mac_getfsstat_args
{
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char bufsize_l_[];
  int bufsize;
  char bufsize_r_[];
  char mac_l_[];
  user_addr_t mac;
  char mac_r_[];
  char macsize_l_[];
  int macsize;
  char macsize_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
};

/* 3306 */
struct fsgetpath_args
{
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char bufsize_l_[];
  user_size_t bufsize;
  char bufsize_r_[];
  char fsid_l_[];
  user_addr_t fsid;
  char fsid_r_[];
  char objid_l_[];
  uint64_t objid;
  char objid_r_[];
};

/* 3307 */
struct audit_session_self_args
{
  int32_t dummy;
};

/* 3308 */
struct audit_session_join_args
{
  char port_l_[];
  mach_port_name_t port;
  char port_r_[];
};

/* 3309 */
struct fileport_makeport_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char portnamep_l_[];
  user_addr_t portnamep;
  char portnamep_r_[];
};

/* 3310 */
struct fileport_makefd_args
{
  char port_l_[];
  mach_port_name_t port;
  char port_r_[];
};

/* 3311 */
struct audit_session_port_args
{
  char asid_l_[];
  au_asid_t asid;
  char asid_r_[];
  char portnamep_l_[];
  user_addr_t portnamep;
  char portnamep_r_[];
};

/* 3312 */
struct pid_suspend_args
{
  char pid_l_[];
  int pid;
  char pid_r_[];
};

/* 3313 */
struct pid_resume_args
{
  char pid_l_[];
  int pid;
  char pid_r_[];
};

/* 3314 */
struct shared_region_map_and_slide_np_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char count_l_[];
  uint32_t count;
  char count_r_[];
  char mappings_l_[];
  user_addr_t mappings;
  char mappings_r_[];
  char slide_l_[];
  uint32_t slide;
  char slide_r_[];
  char slide_start_l_[];
  user_addr_t slide_start;
  char slide_start_r_[];
  char slide_size_l_[];
  uint32_t slide_size;
  char slide_size_r_[];
};

/* 3315 */
struct kas_info_args
{
  char selector_l_[];
  int selector;
  char selector_r_[];
  char value_l_[];
  user_addr_t value;
  char value_r_[];
  char size_l_[];
  user_addr_t size;
  char size_r_[];
};

/* 3316 */
struct guarded_open_np_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char guard_l_[];
  user_addr_t guard;
  char guard_r_[];
  char guardflags_l_[];
  u_int guardflags;
  char guardflags_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3317 */
struct guarded_close_np_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char guard_l_[];
  user_addr_t guard;
  char guard_r_[];
};

/* 3318 */
struct guarded_kqueue_np_args
{
  char guard_l_[];
  user_addr_t guard;
  char guard_r_[];
  char guardflags_l_[];
  u_int guardflags;
  char guardflags_r_[];
};

/* 3319 */
struct change_fdguard_np_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char guard_l_[];
  user_addr_t guard;
  char guard_r_[];
  char guardflags_l_[];
  u_int guardflags;
  char guardflags_r_[];
  char nguard_l_[];
  user_addr_t nguard;
  char nguard_r_[];
  char nguardflags_l_[];
  u_int nguardflags;
  char nguardflags_r_[];
  char fdflagsp_l_[];
  user_addr_t fdflagsp;
  char fdflagsp_r_[];
};

/* 3320 */
struct usrctl_args
{
  char flags_l_[];
  uint32_t flags;
  char flags_r_[];
};

/* 3321 */
struct proc_rlimit_control_args
{
  char pid_l_[];
  pid_t pid;
  char pid_r_[];
  char flavor_l_[];
  int flavor;
  char flavor_r_[];
  char arg_l_[];
  user_addr_t arg;
  char arg_r_[];
};

/* 3322 */
struct telemetry_args
{
  char cmd_l_[];
  uint64_t cmd;
  char cmd_r_[];
  char deadline_l_[];
  uint64_t deadline;
  char deadline_r_[];
  char interval_l_[];
  uint64_t interval;
  char interval_r_[];
  char leeway_l_[];
  uint64_t leeway;
  char leeway_r_[];
  char arg4_l_[];
  uint64_t arg4;
  char arg4_r_[];
  char arg5_l_[];
  uint64_t arg5;
  char arg5_r_[];
};

/* 3323 */
struct system_override_args
{
  char timeout_l_[];
  uint64_t timeout;
  char timeout_r_[];
  char flags_l_[];
  uint64_t flags;
  char flags_r_[];
};

/* 3324 */
struct vfs_purge_args
{
  int32_t dummy;
};

/* 3325 */
struct sfi_ctl_args
{
  char operation_l_[];
  uint32_t operation;
  char operation_r_[];
  char sfi_class_l_[];
  uint32_t sfi_class;
  char sfi_class_r_[];
  char time_l_[];
  uint64_t time;
  char time_r_[];
  char out_time_l_[];
  user_addr_t out_time;
  char out_time_r_[];
};

/* 3326 */
struct sfi_pidctl_args
{
  char operation_l_[];
  uint32_t operation;
  char operation_r_[];
  char pid_l_[];
  pid_t pid;
  char pid_r_[];
  char sfi_flags_l_[];
  uint32_t sfi_flags;
  char sfi_flags_r_[];
  char out_sfi_flags_l_[];
  user_addr_t out_sfi_flags;
  char out_sfi_flags_r_[];
};

/* 3327 */
struct getattrlistbulk_args
{
  char dirfd_l_[];
  int dirfd;
  char dirfd_r_[];
  char alist_l_[];
  user_addr_t alist;
  char alist_r_[];
  char attributeBuffer_l_[];
  user_addr_t attributeBuffer;
  char attributeBuffer_r_[];
  char bufferSize_l_[];
  user_size_t bufferSize;
  char bufferSize_r_[];
  char options_l_[];
  uint64_t options;
  char options_r_[];
};

/* 3328 */
struct clonefileat_args
{
  char src_dirfd_l_[];
  int src_dirfd;
  char src_dirfd_r_[];
  char src_l_[];
  user_addr_t src;
  char src_r_[];
  char dst_dirfd_l_[];
  int dst_dirfd;
  char dst_dirfd_r_[];
  char dst_l_[];
  user_addr_t dst;
  char dst_r_[];
  char flags_l_[];
  uint32_t flags;
  char flags_r_[];
};

/* 3329 */
struct openat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3330 */
struct openat_nocancel_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3331 */
struct renameat_args
{
  char fromfd_l_[];
  int fromfd;
  char fromfd_r_[];
  char from_l_[];
  user_addr_t from;
  char from_r_[];
  char tofd_l_[];
  int tofd;
  char tofd_r_[];
  char to_l_[];
  user_addr_t to;
  char to_r_[];
};

/* 3332 */
struct faccessat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char amode_l_[];
  int amode;
  char amode_r_[];
  char flag_l_[];
  int flag;
  char flag_r_[];
};

/* 3333 */
struct fchmodat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
  char flag_l_[];
  int flag;
  char flag_r_[];
};

/* 3334 */
struct fchownat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char uid_l_[];
  uid_t uid;
  char uid_r_[];
  char gid_l_[];
  gid_t gid;
  char gid_r_[];
  char flag_l_[];
  int flag;
  char flag_r_[];
};

/* 3335 */
struct fstatat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
  char flag_l_[];
  int flag;
  char flag_r_[];
};

/* 3336 */
struct fstatat64_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char ub_l_[];
  user_addr_t ub;
  char ub_r_[];
  char flag_l_[];
  int flag;
  char flag_r_[];
};

/* 3337 */
struct linkat_args
{
  char fd1_l_[];
  int fd1;
  char fd1_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char fd2_l_[];
  int fd2;
  char fd2_r_[];
  char link_l_[];
  user_addr_t link;
  char link_r_[];
  char flag_l_[];
  int flag;
  char flag_r_[];
};

/* 3338 */
struct unlinkat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char flag_l_[];
  int flag;
  char flag_r_[];
};

/* 3339 */
struct readlinkat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char bufsize_l_[];
  user_size_t bufsize;
  char bufsize_r_[];
};

/* 3340 */
struct symlinkat_args
{
  char path1_l_[];
  user_addr_t path1;
  char path1_r_[];
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path2_l_[];
  user_addr_t path2;
  char path2_r_[];
};

/* 3341 */
struct mkdirat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3342 */
struct getattrlistat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char alist_l_[];
  user_addr_t alist;
  char alist_r_[];
  char attributeBuffer_l_[];
  user_addr_t attributeBuffer;
  char attributeBuffer_r_[];
  char bufferSize_l_[];
  user_size_t bufferSize;
  char bufferSize_r_[];
  char options_l_[];
  user_ulong_t options;
  char options_r_[];
};

/* 3343 */
struct proc_trace_log_args
{
  char pid_l_[];
  pid_t pid;
  char pid_r_[];
  char uniqueid_l_[];
  uint64_t uniqueid;
  char uniqueid_r_[];
};

/* 3344 */
struct bsdthread_ctl_args
{
  char cmd_l_[];
  user_addr_t cmd;
  char cmd_r_[];
  char arg1_l_[];
  user_addr_t arg1;
  char arg1_r_[];
  char arg2_l_[];
  user_addr_t arg2;
  char arg2_r_[];
  char arg3_l_[];
  user_addr_t arg3;
  char arg3_r_[];
};

/* 3345 */
struct openbyid_np_args
{
  char fsid_l_[];
  user_addr_t fsid;
  char fsid_r_[];
  char objid_l_[];
  user_addr_t objid;
  char objid_r_[];
  char oflags_l_[];
  int oflags;
  char oflags_r_[];
};

/* 3346 */
struct thread_selfusage_args
{
  int32_t dummy;
};

/* 3347 */
struct guarded_open_dprotected_np_args
{
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char guard_l_[];
  user_addr_t guard;
  char guard_r_[];
  char guardflags_l_[];
  u_int guardflags;
  char guardflags_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char dpclass_l_[];
  int dpclass;
  char dpclass_r_[];
  char dpflags_l_[];
  int dpflags;
  char dpflags_r_[];
  char mode_l_[];
  int mode;
  char mode_r_[];
};

/* 3348 */
struct guarded_write_np_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char guard_l_[];
  user_addr_t guard;
  char guard_r_[];
  char cbuf_l_[];
  user_addr_t cbuf;
  char cbuf_r_[];
  char nbyte_l_[];
  user_size_t nbyte;
  char nbyte_r_[];
};

/* 3349 */
struct guarded_pwrite_np_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char guard_l_[];
  user_addr_t guard;
  char guard_r_[];
  char buf_l_[];
  user_addr_t buf;
  char buf_r_[];
  char nbyte_l_[];
  user_size_t nbyte;
  char nbyte_r_[];
  char offset_l_[];
  off_t offset;
  char offset_r_[];
};

/* 3350 */
struct guarded_writev_np_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char guard_l_[];
  user_addr_t guard;
  char guard_r_[];
  char iovp_l_[];
  user_addr_t iovp;
  char iovp_r_[];
  char iovcnt_l_[];
  int iovcnt;
  char iovcnt_r_[];
};

/* 3351 */
struct renameatx_np_args
{
  char fromfd_l_[];
  int fromfd;
  char fromfd_r_[];
  char from_l_[];
  user_addr_t from;
  char from_r_[];
  char tofd_l_[];
  int tofd;
  char tofd_r_[];
  char to_l_[];
  user_addr_t to;
  char to_r_[];
  char flags_l_[];
  u_int flags;
  char flags_r_[];
};

/* 3352 */
struct stack_snapshot_with_config_args
{
  char stackshot_config_version_l_[];
  int stackshot_config_version;
  char stackshot_config_version_r_[];
  char stackshot_config_l_[];
  user_addr_t stackshot_config;
  char stackshot_config_r_[];
  char stackshot_config_size_l_[];
  user_size_t stackshot_config_size;
  char stackshot_config_size_r_[];
};

/* 3353 */
struct work_interval_ctl_args
{
  char operation_l_[];
  uint32_t operation;
  char operation_r_[];
  char work_interval_id_l_[];
  uint64_t work_interval_id;
  char work_interval_id_r_[];
  char arg_l_[];
  user_addr_t arg;
  char arg_r_[];
  char len_l_[];
  user_size_t len;
  char len_r_[];
};

/* 3354 */
struct getentropy_args
{
  char buffer_l_[];
  user_addr_t buffer;
  char buffer_r_[];
  char size_l_[];
  user_size_t size;
  char size_r_[];
};

/* 3355 */
struct ulock_wait_args
{
  char operation_l_[];
  uint32_t operation;
  char operation_r_[];
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char value_l_[];
  uint64_t value;
  char value_r_[];
  char timeout_l_[];
  uint32_t timeout;
  char timeout_r_[];
};

/* 3356 */
struct ulock_wake_args
{
  char operation_l_[];
  uint32_t operation;
  char operation_r_[];
  char addr_l_[];
  user_addr_t addr;
  char addr_r_[];
  char wake_value_l_[];
  uint64_t wake_value;
  char wake_value_r_[];
};

/* 3357 */
struct fclonefileat_args
{
  char src_fd_l_[];
  int src_fd;
  char src_fd_r_[];
  char dst_dirfd_l_[];
  int dst_dirfd;
  char dst_dirfd_r_[];
  char dst_l_[];
  user_addr_t dst;
  char dst_r_[];
  char flags_l_[];
  uint32_t flags;
  char flags_r_[];
};

/* 3358 */
struct fs_snapshot_args
{
  char op_l_[];
  uint32_t op;
  char op_r_[];
  char dirfd_l_[];
  int dirfd;
  char dirfd_r_[];
  char name1_l_[];
  user_addr_t name1;
  char name1_r_[];
  char name2_l_[];
  user_addr_t name2;
  char name2_r_[];
  char data_l_[];
  user_addr_t data;
  char data_r_[];
  char flags_l_[];
  uint32_t flags;
  char flags_r_[];
};

/* 3359 */
struct terminate_with_payload_args
{
  char pid_l_[];
  int pid;
  char pid_r_[];
  char reason_namespace_l_[];
  uint32_t reason_namespace;
  char reason_namespace_r_[];
  char reason_code_l_[];
  uint64_t reason_code;
  char reason_code_r_[];
  char payload_l_[];
  user_addr_t payload;
  char payload_r_[];
  char payload_size_l_[];
  uint32_t payload_size;
  char payload_size_r_[];
  char reason_string_l_[];
  user_addr_t reason_string;
  char reason_string_r_[];
  char reason_flags_l_[];
  uint64_t reason_flags;
  char reason_flags_r_[];
};

/* 3360 */
struct abort_with_payload_args
{
  char reason_namespace_l_[];
  uint32_t reason_namespace;
  char reason_namespace_r_[];
  char reason_code_l_[];
  uint64_t reason_code;
  char reason_code_r_[];
  char payload_l_[];
  user_addr_t payload;
  char payload_r_[];
  char payload_size_l_[];
  uint32_t payload_size;
  char payload_size_r_[];
  char reason_string_l_[];
  user_addr_t reason_string;
  char reason_string_r_[];
  char reason_flags_l_[];
  uint64_t reason_flags;
  char reason_flags_r_[];
};

/* 3361 */
struct setattrlistat_args
{
  char fd_l_[];
  int fd;
  char fd_r_[];
  char path_l_[];
  user_addr_t path;
  char path_r_[];
  char alist_l_[];
  user_addr_t alist;
  char alist_r_[];
  char attributeBuffer_l_[];
  user_addr_t attributeBuffer;
  char attributeBuffer_r_[];
  char bufferSize_l_[];
  user_size_t bufferSize;
  char bufferSize_r_[];
  char options_l_[];
  uint32_t options;
  char options_r_[];
};

/* 3362 */
struct net_qos_guideline_args
{
  char param_l_[];
  user_addr_t param;
  char param_r_[];
  char param_len_l_[];
  uint32_t param_len;
  char param_len_r_[];
};

/* 3363 */
struct fmount_args
{
  char type_l_[];
  user_addr_t type;
  char type_r_[];
  char fd_l_[];
  int fd;
  char fd_r_[];
  char flags_l_[];
  int flags;
  char flags_r_[];
  char data_l_[];
  user_addr_t data;
  char data_r_[];
};

/* 3364 */
struct ntp_adjtime_args
{
  char tp_l_[];
  user_addr_t tp;
  char tp_r_[];
};

/* 3365 */
struct ntp_gettime_args
{
  char ntvp_l_[];
  user_addr_t ntvp;
  char ntvp_r_[];
};

/* 3366 */
struct os_fault_with_payload_args
{
  char reason_namespace_l_[];
  uint32_t reason_namespace;
  char reason_namespace_r_[];
  char reason_code_l_[];
  uint64_t reason_code;
  char reason_code_r_[];
  char payload_l_[];
  user_addr_t payload;
  char payload_r_[];
  char payload_size_l_[];
  uint32_t payload_size;
  char payload_size_r_[];
  char reason_string_l_[];
  user_addr_t reason_string;
  char reason_string_r_[];
  char reason_flags_l_[];
  uint64_t reason_flags;
  char reason_flags_r_[];
};

/* 3367 */
struct $8BFFA31DCC72C3A805584D69C36A2F74
{
  u_int32_t state[4];
  u_int32_t count[2];
  unsigned __int8 buffer[64];
};

/* 3368 */
typedef struct $8BFFA31DCC72C3A805584D69C36A2F74 MD5_CTX;

/* 3369 */
enum $505E9B1E6B811886A12D552D23A1E165
{
  MBUF_EXT = 0x1,
  MBUF_PKTHDR = 0x2,
  MBUF_EOR = 0x4,
  MBUF_LOOP = 0x40,
  MBUF_BCAST = 0x100,
  MBUF_MCAST = 0x200,
  MBUF_FRAG = 0x400,
  MBUF_FIRSTFRAG = 0x800,
  MBUF_LASTFRAG = 0x1000,
  MBUF_PROMISC = 0x2000,
  MBUF_HASFCS = 0x4000,
};

/* 3370 */
typedef u_int32_t mbuf_flags_t;

/* 3371 */
enum $D39ACB6FB70CBADDFE33331BB4C82F27
{
  MBUF_TYPE_FREE = 0x0,
  MBUF_TYPE_DATA = 0x1,
  MBUF_TYPE_HEADER = 0x2,
  MBUF_TYPE_SOCKET = 0x3,
  MBUF_TYPE_PCB = 0x4,
  MBUF_TYPE_RTABLE = 0x5,
  MBUF_TYPE_HTABLE = 0x6,
  MBUF_TYPE_ATABLE = 0x7,
  MBUF_TYPE_SONAME = 0x8,
  MBUF_TYPE_SOOPTS = 0xA,
  MBUF_TYPE_FTABLE = 0xB,
  MBUF_TYPE_RIGHTS = 0xC,
  MBUF_TYPE_IFADDR = 0xD,
  MBUF_TYPE_CONTROL = 0xE,
  MBUF_TYPE_OOBDATA = 0xF,
};

/* 3372 */
typedef u_int32_t mbuf_type_t;

/* 3373 */
enum $6F51C516420EF755B7DA1876532832AB
{
  MBUF_TSO_IPV4 = 0x100000,
  MBUF_TSO_IPV6 = 0x200000,
};

/* 3374 */
typedef u_int32_t mbuf_tso_request_flags_t;

/* 3375 */
enum $E3B40ACDEEF0BE81CFF1D7DA8643C404
{
  MBUF_CSUM_REQ_IP = 0x1,
  MBUF_CSUM_REQ_TCP = 0x2,
  MBUF_CSUM_REQ_UDP = 0x4,
  MBUF_CSUM_REQ_TCPIPV6 = 0x20,
  MBUF_CSUM_REQ_UDPIPV6 = 0x40,
};

/* 3376 */
typedef u_int32_t mbuf_csum_request_flags_t;

/* 3377 */
enum $C5F46F9A056613ACCD246391CEA74157
{
  MBUF_CSUM_DID_IP = 0x100,
  MBUF_CSUM_IP_GOOD = 0x200,
  MBUF_CSUM_DID_DATA = 0x400,
  MBUF_CSUM_PSEUDO_HDR = 0x800,
};

/* 3378 */
typedef u_int32_t mbuf_csum_performed_flags_t;

/* 3379 */
enum $9D6FF6EE4618D4926608512EF59890FF
{
  MBUF_WAITOK = 0x0,
  MBUF_DONTWAIT = 0x1,
};

/* 3380 */
typedef u_int32_t mbuf_how_t;

/* 3381 */
typedef u_int32_t mbuf_tag_id_t;

/* 3382 */
typedef u_int16_t mbuf_tag_type_t;

/* 3383 */
struct mbuf_stat
{
  u_int32_t mbufs;
  u_int32_t clusters;
  u_int32_t clfree;
  u_int32_t drops;
  u_int32_t wait;
  u_int32_t drain;
  u_short mtypes[256];
  u_int32_t mcfail;
  u_int32_t mpfail;
  u_int32_t msize;
  u_int32_t mclbytes;
  u_int32_t minclsize;
  u_int32_t mlen;
  u_int32_t mhlen;
  u_int32_t bigclusters;
  u_int32_t bigclfree;
  u_int32_t bigmclbytes;
};

/* 3384 */
enum $1207EBD17A187CD0F4840BD265E958ED
{
  MBUF_TC_BE = 0x0,
  MBUF_TC_BK = 0x1,
  MBUF_TC_VI = 0x2,
  MBUF_TC_VO = 0x3,
};

/* 3385 */
typedef enum $1207EBD17A187CD0F4840BD265E958ED mbuf_traffic_class_t;

/* 3386 */
struct reg_values
{
  unsigned int rv_value;
  char *rv_name;
};

/* 3387 */
struct reg_desc
{
  unsigned int rd_mask;
  int rd_shift;
  char *rd_name;
  char *rd_format;
  struct reg_values *rd_values;
};

/* 3388 */
struct $5786039A7167373CEAC3C34C5917CB64
{
  uint64_t offset;
  uint64_t length;
};

/* 3389 */
typedef struct $5786039A7167373CEAC3C34C5917CB64 dk_extent_t;

/* 3390 */
struct $864E7C5A1811BD9FE42C31E59D13D3B0
{
  uint64_t blockCount;
  uint32_t blockSize;
  uint8_t reserved0096[4];
};

/* 3391 */
typedef struct $864E7C5A1811BD9FE42C31E59D13D3B0 dk_format_capacity_t;

/* 3392 */
struct $16A88658109073B1997E5637E613EF85
{
  dk_format_capacity_t *capacities;
  uint32_t capacitiesCount;
  uint8_t reserved0096[4];
};

/* 3393 */
typedef struct $16A88658109073B1997E5637E613EF85 dk_format_capacities_t;

/* 3394 */
struct $76E8F7E94D77EB2492D41C229C7C1491
{
  uint64_t offset;
  uint64_t length;
  uint32_t options;
  uint8_t reserved0160[4];
};

/* 3395 */
typedef struct $76E8F7E94D77EB2492D41C229C7C1491 dk_synchronize_t;

/* 3396 */
struct $60160AD7E79BCFD4940AC89B1C60A02D
{
  dk_extent_t *extents;
  uint32_t extentsCount;
  uint32_t options;
};

/* 3397 */
typedef struct $60160AD7E79BCFD4940AC89B1C60A02D dk_unmap_t;

/* 3398 */
struct $A9C8E2652E685BCE5C5074C877196B8B
{
  uint64_t flags;
  uint64_t hotfile_size;
  uint64_t hibernate_minsize;
  uint64_t swapfile_pinning;
  uint64_t padding[4];
};

/* 3399 */
typedef struct $A9C8E2652E685BCE5C5074C877196B8B dk_corestorage_info_t;

/* 3400 */
struct $3307D54C086E536DAC58DD798EBDC595
{
  uint64_t offset;
  uint64_t length;
  uint8_t provisionType;
  uint8_t reserved[7];
};

/* 3401 */
typedef struct $3307D54C086E536DAC58DD798EBDC595 dk_provision_extent_t;

/* 3402 */
struct $BDBA97FCD1DEE21FBA3CC59AFC48A7C2
{
  uint64_t offset;
  uint64_t length;
  uint64_t options;
  uint32_t reserved;
  uint32_t extentsCount;
  dk_provision_extent_t *extents;
};

/* 3403 */
typedef struct $BDBA97FCD1DEE21FBA3CC59AFC48A7C2 dk_provision_status_t;

/* 3404 */
struct $9B761975B814BC56A2B1470F0CADB3D7
{
  uint64_t options;
  uint64_t reserved;
  uint64_t description_size;
  char *description;
};

/* 3405 */
typedef struct $9B761975B814BC56A2B1470F0CADB3D7 dk_error_description_t;

/* 3406 */
struct $D484CEBA73A5C75DE0DA027A14D8AA4F
{
  uint64_t offset;
  uint64_t length;
  uint8_t reserved0128[12];
  dev_t dev;
};

/* 3407 */
typedef struct $D484CEBA73A5C75DE0DA027A14D8AA4F dk_physical_extent_t;

/* 3408 */
struct $77DD32B137DC1E39E7F76BF3C937F38E
{
  dk_extent_t *extents;
  uint32_t extentsCount;
  uint8_t tier;
  uint8_t reserved0104[3];
};

/* 3409 */
typedef struct $77DD32B137DC1E39E7F76BF3C937F38E dk_set_tier_t;

/* 3410 */
struct $F0975ABA0211256C35D1C42DD5284933
{
  uint32_t id;
  const char *name;
};

/* 3411 */
typedef struct $F0975ABA0211256C35D1C42DD5284933 kd_event_t;

/* 3412 */
struct ntptimeval
{
  struct timespec time;
  __int64 maxerror;
  __int64 esterror;
  __int64 tai;
  int time_state;
};

/* 3413 */
struct timex
{
  unsigned int modes;
  __int64 offset;
  __int64 freq;
  __int64 maxerror;
  __int64 esterror;
  int status;
  __int64 constant;
  __int64 precision;
  __int64 tolerance;
  __int64 ppsfreq;
  __int64 jitter;
  int shift;
  __int64 stabil;
  __int64 jitcnt;
  __int64 calcnt;
  __int64 errcnt;
  __int64 stbcnt;
};

/* 3414 */
struct mbstat
{
  u_int32_t m_mbufs;
  u_int32_t m_clusters;
  u_int32_t m_spare;
  u_int32_t m_clfree;
  u_int32_t m_drops;
  u_int32_t m_wait;
  u_int32_t m_drain;
  u_short m_mtypes[256];
  u_int32_t m_mcfail;
  u_int32_t m_mpfail;
  u_int32_t m_msize;
  u_int32_t m_mclbytes;
  u_int32_t m_minclsize;
  u_int32_t m_mlen;
  u_int32_t m_mhlen;
  u_int32_t m_bigclusters;
  u_int32_t m_bigclfree;
  u_int32_t m_bigmclbytes;
};

/* 3415 */
struct ombstat
{
  u_int32_t m_mbufs;
  u_int32_t m_clusters;
  u_int32_t m_spare;
  u_int32_t m_clfree;
  u_int32_t m_drops;
  u_int32_t m_wait;
  u_int32_t m_drain;
  u_short m_mtypes[256];
  u_int32_t m_mcfail;
  u_int32_t m_mpfail;
  u_int32_t m_msize;
  u_int32_t m_mclbytes;
  u_int32_t m_minclsize;
  u_int32_t m_mlen;
  u_int32_t m_mhlen;
};

/* 3416 */
struct mb_class_stat
{
  char mbcl_cname[16];
  u_int32_t mbcl_size;
  u_int32_t mbcl_total;
  u_int32_t mbcl_active;
  u_int32_t mbcl_infree;
  u_int32_t mbcl_slab_cnt;
  u_int32_t mbcl_pad;
  u_int64_t mbcl_alloc_cnt;
  u_int64_t mbcl_free_cnt;
  u_int64_t mbcl_notified;
  u_int64_t mbcl_purge_cnt;
  u_int64_t mbcl_fail_cnt;
  u_int32_t mbcl_ctotal;
  u_int32_t mbcl_release_cnt;
  u_int32_t mbcl_mc_state;
  u_int32_t mbcl_mc_cached;
  u_int32_t mbcl_mc_waiter_cnt;
  u_int32_t mbcl_mc_wretry_cnt;
  u_int32_t mbcl_mc_nwretry_cnt;
  u_int32_t mbcl_peak_reported;
  u_int32_t mbcl_reserved[7];
};

/* 3417 */
struct mb_stat
{
  u_int32_t mbs_cnt;
  u_int32_t mbs_pad;
  mb_class_stat_t mbs_class[1];
};

/* 3418 */
struct __msqid_ds_new
{
  struct ipc_perm msg_perm;
  __int32_t msg_first;
  __int32_t msg_last;
  msglen_t msg_cbytes;
  msgqnum_t msg_qnum;
  msglen_t msg_qbytes;
  pid_t msg_lspid;
  pid_t msg_lrpid;
  time_t msg_stime;
  __int32_t msg_pad1;
  time_t msg_rtime;
  __int32_t msg_pad2;
  time_t msg_ctime;
  __int32_t msg_pad3;
  __int32_t msg_pad4[4];
};

/* 3419 */
struct __msqid_ds_old
{
  struct __ipc_perm_old msg_perm;
  __int32_t msg_first;
  __int32_t msg_last;
  msglen_t msg_cbytes;
  msgqnum_t msg_qnum;
  msglen_t msg_qbytes;
  pid_t msg_lspid;
  pid_t msg_lrpid;
  time_t msg_stime;
  __int32_t msg_pad1;
  time_t msg_rtime;
  __int32_t msg_pad2;
  time_t msg_ctime;
  __int32_t msg_pad3;
  __int32_t msg_pad4[4];
};

/* 3421 */
typedef user64_ulong_t user64_msgqnum_t;

/* 3422 */
typedef user32_ulong_t user32_msgqnum_t;

/* 3424 */
typedef user64_ulong_t user64_msglen_t;

/* 3425 */
typedef user32_ulong_t user32_msglen_t;

/* 3427 */
struct user64_msqid_ds
{
  struct ipc_perm msg_perm;
  __int32_t msg_first;
  __int32_t msg_last;
  user64_msglen_t msg_cbytes;
  user64_msgqnum_t msg_qnum;
  user64_msglen_t msg_qbytes;
  pid_t msg_lspid;
  pid_t msg_lrpid;
  user64_time_t msg_stime;
  __int32_t msg_pad1;
  user64_time_t msg_rtime;
  __int32_t msg_pad2;
  user64_time_t msg_ctime;
  __int32_t msg_pad3;
  __int32_t msg_pad4[4];
};

/* 3428 */
struct user32_msqid_ds
{
  struct ipc_perm msg_perm;
  __int32_t msg_first;
  __int32_t msg_last;
  user32_msglen_t msg_cbytes;
  user32_msgqnum_t msg_qnum;
  user32_msglen_t msg_qbytes;
  pid_t msg_lspid;
  pid_t msg_lrpid;
  user32_time_t msg_stime;
  __int32_t msg_pad1;
  user32_time_t msg_rtime;
  __int32_t msg_pad2;
  user32_time_t msg_ctime;
  __int32_t msg_pad3;
  __int32_t msg_pad4[4];
};

/* 3430 */
struct msginfo
{
  int msgmax;
  int msgmni;
  int msgmnb;
  int msgtql;
  int msgssz;
  int msgseg;
};

/* 3431 */
struct msgmap
{
  __int16 next;
};

/* 3432 */
struct lockf::$8E53988229C36DA83A3F462691E29587
{
  struct lockf *tqe_next;
  struct lockf **tqe_prev;
};

/* 3433 */
struct lockf
{
  __int16 lf_flags;
  __int16 lf_type;
  off_t lf_start;
  off_t lf_end;
  caddr_t lf_id;
  struct lockf **lf_head;
  struct vnode *lf_vnode;
  struct lockf *lf_next;
  struct locklist lf_blkhd;
  struct lockf::$8E53988229C36DA83A3F462691E29587 lf_block;
  struct proc *lf_owner;
};

/* 4073 */
struct locklist
{
  lockf *tqh_first;
  lockf **tqh_last;
};

/* 3434 */
struct __shmid_ds_new
{
  struct ipc_perm shm_perm;
  size_t shm_segsz;
  pid_t shm_lpid;
  pid_t shm_cpid;
  shmatt_t shm_nattch;
  time_t shm_atime;
  time_t shm_dtime;
  time_t shm_ctime;
  void *shm_internal;
};

/* 3435 */
struct __shmid_ds_old
{
  struct __ipc_perm_old shm_perm;
  size_t shm_segsz;
  pid_t shm_lpid;
  pid_t shm_cpid;
  shmatt_t shm_nattch;
  time_t shm_atime;
  time_t shm_dtime;
  time_t shm_ctime;
  void *shm_internal;
};

/* 3436 */
struct ctl_event_data
{
  u_int32_t ctl_id;
  u_int32_t ctl_unit;
};

/* 3437 */
struct ctl_info
{
  u_int32_t ctl_id;
  char ctl_name[96];
};

/* 3438 */
struct sockaddr_ctl
{
  u_char sc_len;
  u_char sc_family;
  u_int16_t ss_sysaddr;
  u_int32_t sc_id;
  u_int32_t sc_unit;
  u_int32_t sc_reserved[5];
};

/* 3439 */
typedef void *kern_ctl_ref;

/* 3440 */
typedef errno_t (__cdecl *ctl_connect_func)(kern_ctl_ref kctlref, struct sockaddr_ctl *sac, void **unitinfo);

/* 3441 */
typedef errno_t (__cdecl *ctl_disconnect_func)(kern_ctl_ref kctlref, u_int32_t unit, void *unitinfo);

/* 3442 */
typedef errno_t (__cdecl *ctl_send_func)(kern_ctl_ref kctlref, u_int32_t unit, void *unitinfo, mbuf_t m, int flags);

/* 3443 */
typedef errno_t (__cdecl *ctl_setopt_func)(kern_ctl_ref kctlref, u_int32_t unit, void *unitinfo, int opt, void *data, size_t len);

/* 3444 */
typedef errno_t (__cdecl *ctl_getopt_func)(kern_ctl_ref kctlref, u_int32_t unit, void *unitinfo, int opt, void *data, size_t *len);

/* 3445 */
struct kern_ctl_reg
{
  char ctl_name[96];
  u_int32_t ctl_id;
  u_int32_t ctl_unit;
  u_int32_t ctl_flags;
  u_int32_t ctl_sendsize;
  u_int32_t ctl_recvsize;
  ctl_connect_func ctl_connect;
  ctl_disconnect_func ctl_disconnect;
  ctl_send_func ctl_send;
  ctl_setopt_func ctl_setopt;
  ctl_getopt_func ctl_getopt;
};

/* 3446 */
struct cpu_disklabel
{
  int cd_dummy;
};

/* 3448 */
struct disklabel::$956230F84389B932A89569C3DDD87CA8::$92EBF5BC2658A7548750D664F561A810
{
  char *un_d_boot0;
  char *un_d_boot1;
};

/* 3450 */
union disklabel::$956230F84389B932A89569C3DDD87CA8
{
  char un_d_packname[16];
  struct disklabel::$956230F84389B932A89569C3DDD87CA8::$92EBF5BC2658A7548750D664F561A810 un_b;
};

/* 3451 */
union disklabel::partition::$489B698F466EC603F036E47B049A0A14
{
  u_int16_t cpg;
  u_int16_t sgs;
};

/* 3449 */
struct disklabel::partition
{
  u_int32_t p_size;
  u_int32_t p_offset;
  u_int32_t p_fsize;
  u_int8_t p_fstype;
  u_int8_t p_frag;
  union disklabel::partition::$489B698F466EC603F036E47B049A0A14 __partition_u1;
};

/* 3447 */
struct disklabel
{
  u_int32_t d_magic;
  u_int16_t d_type;
  u_int16_t d_subtype;
  char d_typename[16];
  union disklabel::$956230F84389B932A89569C3DDD87CA8 d_un;
  u_int32_t d_secsize;
  u_int32_t d_nsectors;
  u_int32_t d_ntracks;
  u_int32_t d_ncylinders;
  u_int32_t d_secpercyl;
  u_int32_t d_secperunit;
  u_int16_t d_sparespertrack;
  u_int16_t d_sparespercyl;
  u_int32_t d_acylinders;
  u_int16_t d_rpm;
  u_int16_t d_interleave;
  u_int16_t d_trackskew;
  u_int16_t d_cylskew;
  u_int32_t d_headswitch;
  u_int32_t d_trkseek;
  u_int32_t d_flags;
  u_int32_t d_drivedata[5];
  u_int32_t d_spare[5];
  u_int32_t d_magic2;
  u_int16_t d_checksum;
  u_int16_t d_npartitions;
  u_int32_t d_bbsize;
  u_int32_t d_sbsize;
  struct disklabel::partition d_partitions[8];
};

/* 3452 */
struct format_op
{
  char *df_buf;
  int df_count;
  daddr_t df_startblk;
  int df_reg[8];
};

/* 3453 */
struct partinfo
{
  struct disklabel *disklab;
  struct partition *part;
};

/* 3454 */
typedef __uint64_t user_tcflag_t;

/* 3455 */
typedef __uint64_t user_speed_t;

/* 3456 */
struct user_termios
{
  user_tcflag_t c_iflag;
  user_tcflag_t c_oflag;
  user_tcflag_t c_cflag;
  user_tcflag_t c_lflag;
  cc_t c_cc[20];
  user_speed_t c_ispeed;
  user_speed_t c_ospeed;
};

/* 3457 */
struct termios32
{
  __uint32_t c_iflag;
  __uint32_t c_oflag;
  __uint32_t c_cflag;
  __uint32_t c_lflag;
  cc_t c_cc[20];
  __uint32_t c_ispeed;
  __uint32_t c_ospeed;
};

/* 3458 */
enum $6A88871918CEFC4E9E27F5D9A33C85E6
{
  SFLT_GLOBAL = 0x1,
  SFLT_PROG = 0x2,
  SFLT_EXTENDED = 0x4,
  SFLT_EXTENDED_REGISTRY = 0x8,
};

/* 3459 */
typedef u_int32_t sflt_flags;

/* 3460 */
typedef u_int32_t sflt_handle;

/* 3461 */
enum $4C5F8C08F0638B7F87256C61AFDD5B69
{
  sock_evt_connecting = 0x1,
  sock_evt_connected = 0x2,
  sock_evt_disconnecting = 0x3,
  sock_evt_disconnected = 0x4,
  sock_evt_flush_read = 0x5,
  sock_evt_shutdown = 0x6,
  sock_evt_cantrecvmore = 0x7,
  sock_evt_cantsendmore = 0x8,
  sock_evt_closing = 0x9,
  sock_evt_bound = 0xA,
};

/* 3462 */
typedef u_int32_t sflt_event_t;

/* 3463 */
enum $CE2DE44479124C66E7B9A917C28054EE
{
  sock_data_filt_flag_oob = 0x1,
  sock_data_filt_flag_record = 0x2,
};

/* 3464 */
typedef u_int32_t sflt_data_flag_t;

/* 3465 */
typedef void (__cdecl *sf_unregistered_func)(sflt_handle handle);

/* 3466 */
typedef errno_t (__cdecl *sf_attach_func)(void **cookie, socket_t so);

/* 3467 */
typedef void (__cdecl *sf_detach_func)(void *cookie, socket_t so);

/* 3468 */
typedef void (__cdecl *sf_notify_func)(void *cookie, socket_t so, sflt_event_t event, void *param);

/* 3469 */
typedef int (__cdecl *sf_getpeername_func)(void *cookie, socket_t so, struct sockaddr **sa);

/* 3470 */
typedef int (__cdecl *sf_getsockname_func)(void *cookie, socket_t so, struct sockaddr **sa);

/* 3471 */
typedef errno_t (__cdecl *sf_data_in_func)(void *cookie, socket_t so, const struct sockaddr *from, mbuf_t *data, mbuf_t *control, sflt_data_flag_t flags);

/* 3472 */
typedef errno_t (__cdecl *sf_data_out_func)(void *cookie, socket_t so, const struct sockaddr *to, mbuf_t *data, mbuf_t *control, sflt_data_flag_t flags);

/* 3473 */
typedef errno_t (__cdecl *sf_connect_in_func)(void *cookie, socket_t so, const struct sockaddr *from);

/* 3474 */
typedef errno_t (__cdecl *sf_connect_out_func)(void *cookie, socket_t so, const struct sockaddr *to);

/* 3475 */
typedef errno_t (__cdecl *sf_bind_func)(void *cookie, socket_t so, const struct sockaddr *to);

/* 3476 */
typedef errno_t (__cdecl *sf_setoption_func)(void *cookie, socket_t so, sockopt_t opt);

/* 3477 */
typedef errno_t (__cdecl *sf_getoption_func)(void *cookie, socket_t so, sockopt_t opt);

/* 3478 */
typedef errno_t (__cdecl *sf_listen_func)(void *cookie, socket_t so);

/* 3479 */
typedef errno_t (__cdecl *sf_ioctl_func)(void *cookie, socket_t so, unsigned __int64 request, const char *argp);

/* 3480 */
typedef errno_t (__cdecl *sf_accept_func)(void *cookie, socket_t so_listen, socket_t so, const struct sockaddr *local, const struct sockaddr *remote);

/* 3482 */
struct sflt_filter::sflt_filter_ext
{
  unsigned int sf_ext_len;
  sf_accept_func sf_ext_accept;
  void *sf_ext_rsvd[5];
};

/* 3481 */
struct sflt_filter
{
  sflt_handle sf_handle;
  int sf_flags;
  char *sf_name;
  sf_unregistered_func sf_unregistered;
  sf_attach_func sf_attach;
  sf_detach_func sf_detach;
  sf_notify_func sf_notify;
  sf_getpeername_func sf_getpeername;
  sf_getsockname_func sf_getsockname;
  sf_data_in_func sf_data_in;
  sf_data_out_func sf_data_out;
  sf_connect_in_func sf_connect_in;
  sf_connect_out_func sf_connect_out;
  sf_bind_func sf_bind;
  sf_setoption_func sf_setoption;
  sf_getoption_func sf_getoption;
  sf_listen_func sf_listen;
  sf_ioctl_func sf_ioctl;
  struct sflt_filter::sflt_filter_ext sf_ext;
};

/* 3483 */
enum $02D4DE108FB9C0F8BEE4808A3F0E2B7B
{
  sockopt_get = 0x1,
  sockopt_set = 0x2,
};

/* 3484 */
typedef u_int8_t sockopt_dir;

/* 3485 */
struct cl_direct_read_lock;

/* 3486 */
typedef struct cl_direct_read_lock cl_direct_read_lock_t;

/* 3487 */
struct $C1CA0E5C165AC3949E337098AB38255C
{
  u_int8_t sid_kind;
  u_int8_t sid_authcount;
  u_int8_t sid_authority[6];
  u_int32_t sid_authorities[16];
};

/* 3488 */
typedef struct $C1CA0E5C165AC3949E337098AB38255C ntsid_t;

/* 3489 */
struct kauth_identity_extlookup
{
  u_int32_t el_seqno;
  u_int32_t el_result;
  u_int32_t el_flags;
  __darwin_pid_t el_info_pid;
  u_int64_t el_extend;
  u_int32_t el_info_reserved_1;
  uid_t el_uid;
  guid_t el_uguid;
  u_int32_t el_uguid_valid;
  ntsid_t el_usid;
  u_int32_t el_usid_valid;
  gid_t el_gid;
  guid_t el_gguid;
  u_int32_t el_gguid_valid;
  ntsid_t el_gsid;
  u_int32_t el_gsid_valid;
  u_int32_t el_member_valid;
  u_int32_t el_sup_grp_cnt;
  gid_t el_sup_groups[16];
};

/* 3490 */
struct kauth_cache_sizes
{
  u_int32_t kcs_group_size;
  u_int32_t kcs_id_size;
};

/* 3495 */
struct kauth_filesec
{
  u_int32_t fsec_magic;
  guid_t fsec_owner;
  guid_t fsec_group;
  struct kauth_acl fsec_acl;
};

/* 3496 */
struct kauth_scope;

/* 3497 */
typedef struct kauth_scope *kauth_scope_t;

/* 3498 */
struct kauth_listener;

/* 3499 */
typedef struct kauth_listener *kauth_listener_t;

/* 3500 */
typedef int (__cdecl *kauth_scope_callback_t)(kauth_cred_t credential, void *idata, kauth_action_t action, uintptr_t arg0, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);

/* 3501 */
struct kauth_acl_eval
{
  kauth_ace_t ae_acl;
  int ae_count;
  kauth_ace_rights_t ae_requested;
  kauth_ace_rights_t ae_residual;
  int ae_result;
  boolean_t ae_found_deny;
  int ae_options;
  kauth_ace_rights_t ae_exp_gall;
  kauth_ace_rights_t ae_exp_gread;
  kauth_ace_rights_t ae_exp_gwrite;
  kauth_ace_rights_t ae_exp_gexec;
};

/* 3502 */
typedef struct kauth_acl_eval *kauth_acl_eval_t;

/* 3503 */
typedef uint32_t sock_storage[32];

/* 3504 */
typedef uint32_t xcred[19];

/* 3505 */
typedef uint8_t nfs_handle[64];

/* 3506 */
struct $24709F64955B27BE3CE69A4DD2FE76E1
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  uint32_t vers;
  uint32_t flags;
  uint64_t xid;
  int64_t flk_start;
  int64_t flk_len;
  int32_t flk_pid;
  int32_t flk_type;
  int32_t flk_whence;
  sock_storage sock_address;
  xcred cred;
  uint32_t fh_len;
  nfs_handle fh;
};

/* 3507 */
typedef struct $24709F64955B27BE3CE69A4DD2FE76E1 __Request__lockd_request_t;

/* 3508 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__lockd_ping_t;

/* 3509 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__lockd_shutdown_t;

/* 3510 */
union __RequestUnion__lockd_mach_subsystem
{
  __Request__lockd_request_t Request_lockd_request;
  __Request__lockd_ping_t Request_lockd_ping;
  __Request__lockd_shutdown_t Request_lockd_shutdown;
};

/* 3511 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__lockd_request_t;

/* 3512 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__lockd_ping_t;

/* 3513 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__lockd_shutdown_t;

/* 3514 */
union __ReplyUnion__lockd_mach_subsystem
{
  __Reply__lockd_request_t Reply_lockd_request;
  __Reply__lockd_ping_t Reply_lockd_ping;
  __Reply__lockd_shutdown_t Reply_lockd_shutdown;
};

/* 3515 */
struct pal_efi_registers
{
  uint64_t rcx;
  uint64_t rdx;
  uint64_t r8;
  uint64_t r9;
  uint64_t rax;
};

/* 3516 */
struct mt_cpu
{
  uint64_t mtc_snaps[3];
  uint64_t mtc_counts[3];
  uint64_t mtc_counts_last[3];
};

/* 3517 */
struct mt_thread
{
  uint64_t mth_gen;
  uint64_t mth_counts[3];
};

/* 3518 */
struct mt_task
{
  uint64_t mtk_counts[3];
};

/* 3519 */
typedef void (__cdecl *mach_bridge_regwrite_timestamp_func_t)(uint64_t);

/* 3520 */
struct specinfo
{
  struct vnode **si_hashchain;
  struct vnode *si_specnext;
  __int64 si_flags;
  dev_t si_rdev;
  int32_t si_opencount;
  daddr_t si_size;
  daddr64_t si_lastr;
  u_int64_t si_devsize;
  u_int8_t si_initted;
  u_int8_t si_throttleable;
  u_int16_t si_isssd;
  u_int32_t si_devbsdunit;
  u_int64_t si_throttle_mask;
};

/* 3521 */
struct HFSUniStr255
{
  u_int16_t length;
  u_int16_t unicode[255];
};

/* 3522 */
struct HFSExtentKey
{
  u_int8_t keyLength;
  u_int8_t forkType;
  u_int32_t fileID;
  u_int16_t startBlock;
};

/* 3523 */
struct HFSPlusExtentKey
{
  u_int16_t keyLength;
  u_int8_t forkType;
  u_int8_t pad;
  u_int32_t fileID;
  u_int32_t startBlock;
};

/* 3524 */
struct HFSExtentDescriptor
{
  u_int16_t startBlock;
  u_int16_t blockCount;
};

/* 3525 */
struct HFSPlusExtentDescriptor
{
  u_int32_t startBlock;
  u_int32_t blockCount;
};

/* 3526 */
typedef HFSExtentDescriptor HFSExtentRecord[3];

/* 3527 */
typedef HFSPlusExtentDescriptor HFSPlusExtentRecord[8];

/* 3528 */
struct FndrFileInfo::$5A6426B944AD56E111220E38122198EF
{
  int16_t v;
  int16_t h;
};

/* 3529 */
struct FndrFileInfo
{
  u_int32_t fdType;
  u_int32_t fdCreator;
  u_int16_t fdFlags;
  struct FndrFileInfo::$5A6426B944AD56E111220E38122198EF fdLocation;
  int16_t opaque;
};

/* 3530 */
struct FndrDirInfo::$2303F5CFE4F062D9E2CD97AE171B119D
{
  int16_t top;
  int16_t left;
  int16_t bottom;
  int16_t right;
};

/* 3531 */
struct FndrDirInfo::$7BAF1B007CA5C6669EC8CAA1163B31AB
{
  u_int16_t v;
  u_int16_t h;
};

/* 3532 */
struct FndrDirInfo
{
  struct FndrDirInfo::$2303F5CFE4F062D9E2CD97AE171B119D frRect;
  unsigned __int16 frFlags;
  struct FndrDirInfo::$7BAF1B007CA5C6669EC8CAA1163B31AB frLocation;
  int16_t opaque;
};

/* 3533 */
struct FndrOpaqueInfo
{
  int8_t opaque[16];
};

/* 3534 */
struct FndrExtendedDirInfo
{
  u_int32_t document_id;
  u_int32_t date_added;
  u_int16_t extended_flags;
  u_int16_t reserved3;
  u_int32_t write_gen_counter;
};

/* 3535 */
struct FndrExtendedFileInfo
{
  u_int32_t document_id;
  u_int32_t date_added;
  u_int16_t extended_flags;
  u_int16_t reserved2;
  u_int32_t write_gen_counter;
};

/* 3536 */
struct HFSPlusForkData
{
  u_int64_t logicalSize;
  u_int32_t clumpSize;
  u_int32_t totalBlocks;
  HFSPlusExtentRecord extents;
};

/* 3537 */
union HFSPlusBSDInfo::$FD5AC16ED77F990C04CF59033DB12CE3
{
  u_int32_t iNodeNum;
  u_int32_t linkCount;
  u_int32_t rawDevice;
};

/* 3538 */
struct HFSPlusBSDInfo
{
  u_int32_t ownerID;
  u_int32_t groupID;
  u_int8_t adminFlags;
  u_int8_t ownerFlags;
  u_int16_t fileMode;
  union HFSPlusBSDInfo::$FD5AC16ED77F990C04CF59033DB12CE3 special;
};

/* 3539 */
struct HFSCatalogKey
{
  u_int8_t keyLength;
  u_int8_t reserved;
  u_int32_t parentID;
  u_int8_t nodeName[32];
};

/* 3540 */
struct HFSPlusCatalogKey
{
  u_int16_t keyLength;
  u_int32_t parentID;
  HFSUniStr255 nodeName;
};

/* 3541 */
enum $AC592A0B42287059A9581DF957B44792
{
  kHFSFileLockedBit = 0x0,
  kHFSFileLockedMask = 0x1,
  kHFSThreadExistsBit = 0x1,
  kHFSThreadExistsMask = 0x2,
  kHFSHasAttributesBit = 0x2,
  kHFSHasAttributesMask = 0x4,
  kHFSHasSecurityBit = 0x3,
  kHFSHasSecurityMask = 0x8,
  kHFSHasFolderCountBit = 0x4,
  kHFSHasFolderCountMask = 0x10,
  kHFSHasLinkChainBit = 0x5,
  kHFSHasLinkChainMask = 0x20,
  kHFSHasChildLinkBit = 0x6,
  kHFSHasChildLinkMask = 0x40,
  kHFSHasDateAddedBit = 0x7,
  kHFSHasDateAddedMask = 0x80,
  kHFSFastDevPinnedBit = 0x8,
  kHFSFastDevPinnedMask = 0x100,
  kHFSDoNotFastDevPinBit = 0x9,
  kHFSDoNotFastDevPinMask = 0x200,
  kHFSFastDevCandidateBit = 0xA,
  kHFSFastDevCandidateMask = 0x400,
  kHFSAutoCandidateBit = 0xB,
  kHFSAutoCandidateMask = 0x800,
};

/* 3542 */
struct HFSCatalogFolder
{
  int16_t recordType;
  u_int16_t flags;
  u_int16_t valence;
  u_int32_t folderID;
  u_int32_t createDate;
  u_int32_t modifyDate;
  u_int32_t backupDate;
  FndrDirInfo userInfo;
  FndrOpaqueInfo finderInfo;
  u_int32_t reserved[4];
};

/* 3543 */
struct HFSPlusCatalogFolder
{
  int16_t recordType;
  u_int16_t flags;
  u_int32_t valence;
  u_int32_t folderID;
  u_int32_t createDate;
  u_int32_t contentModDate;
  u_int32_t attributeModDate;
  u_int32_t accessDate;
  u_int32_t backupDate;
  HFSPlusBSDInfo bsdInfo;
  FndrDirInfo userInfo;
  FndrOpaqueInfo finderInfo;
  u_int32_t textEncoding;
  u_int32_t folderCount;
};

/* 3544 */
struct HFSCatalogFile
{
  int16_t recordType;
  u_int8_t flags;
  int8_t fileType;
  FndrFileInfo userInfo;
  u_int32_t fileID;
  u_int16_t dataStartBlock;
  int32_t dataLogicalSize;
  int32_t dataPhysicalSize;
  u_int16_t rsrcStartBlock;
  int32_t rsrcLogicalSize;
  int32_t rsrcPhysicalSize;
  u_int32_t createDate;
  u_int32_t modifyDate;
  u_int32_t backupDate;
  FndrOpaqueInfo finderInfo;
  u_int16_t clumpSize;
  HFSExtentRecord dataExtents;
  HFSExtentRecord rsrcExtents;
  u_int32_t reserved;
};

/* 3545 */
struct HFSPlusCatalogFile
{
  int16_t recordType;
  u_int16_t flags;
  u_int32_t reserved1;
  u_int32_t fileID;
  u_int32_t createDate;
  u_int32_t contentModDate;
  u_int32_t attributeModDate;
  u_int32_t accessDate;
  u_int32_t backupDate;
  HFSPlusBSDInfo bsdInfo;
  FndrFileInfo userInfo;
  FndrOpaqueInfo finderInfo;
  u_int32_t textEncoding;
  u_int32_t reserved2;
  HFSPlusForkData dataFork;
  HFSPlusForkData resourceFork;
};

/* 3546 */
struct HFSCatalogThread
{
  int16_t recordType;
  int32_t reserved[2];
  u_int32_t parentID;
  u_int8_t nodeName[32];
};

/* 3547 */
struct HFSPlusCatalogThread
{
  int16_t recordType;
  int16_t reserved;
  u_int32_t parentID;
  HFSUniStr255 nodeName;
};

/* 3548 */
struct HFSPlusAttrForkData
{
  u_int32_t recordType;
  u_int32_t reserved;
  HFSPlusForkData theFork;
};

/* 3549 */
struct HFSPlusAttrExtents
{
  u_int32_t recordType;
  u_int32_t reserved;
  HFSPlusExtentRecord extents;
};

/* 3550 */
struct HFSPlusAttrData
{
  u_int32_t recordType;
  u_int32_t reserved[2];
  u_int32_t attrSize;
  u_int8_t attrData[2];
};

/* 3551 */
struct HFSPlusAttrInlineData
{
  u_int32_t recordType;
  u_int32_t reserved;
  u_int32_t logicalSize;
  u_int8_t userData[2];
};

/* 3552 */
union HFSPlusAttrRecord
{
  u_int32_t recordType;
  HFSPlusAttrInlineData inlineData;
  HFSPlusAttrData attrData;
  HFSPlusAttrForkData forkData;
  HFSPlusAttrExtents overflowExtents;
};

/* 3553 */
struct HFSPlusAttrKey
{
  u_int16_t keyLength;
  u_int16_t pad;
  u_int32_t fileID;
  u_int32_t startBlock;
  u_int16_t attrNameLen;
  u_int16_t attrName[127];
};

/* 3554 */
enum $422B151CF90F7CD02DBADD7DA727FB0A
{
  kHFSPlusExtentKeyMaximumLength = 0xA,
  kHFSExtentKeyMaximumLength = 0xB,
  kHFSPlusCatalogKeyMaximumLength = 0x206,
  kHFSPlusCatalogKeyMinimumLength = 0x8,
  kHFSCatalogKeyMaximumLength = 0x27,
  kHFSCatalogKeyMinimumLength = 0x8,
  kHFSPlusCatalogMinNodeSize = 0x1000,
  kHFSPlusExtentMinNodeSize = 0x200,
  kHFSPlusAttrMinNodeSize = 0x1000,
};

/* 3555 */
enum $0E0E63C1EAB26F16D80EDCB1523ED906 : __int64
{
  kHFSVolumeHardwareLockBit = 0x7,
  kHFSVolumeUnmountedBit = 0x8,
  kHFSVolumeSparedBlocksBit = 0x9,
  kHFSVolumeNoCacheRequiredBit = 0xA,
  kHFSBootVolumeInconsistentBit = 0xB,
  kHFSCatalogNodeIDsReusedBit = 0xC,
  kHFSVolumeJournaledBit = 0xD,
  kHFSVolumeInconsistentBit = 0xE,
  kHFSVolumeSoftwareLockBit = 0xF,
  kHFSUnusedNodeFixBit = 0x1F,
  kHFSContentProtectionBit = 0x1E,
  kHFSVolumeHardwareLockMask = 0x80,
  kHFSVolumeUnmountedMask = 0x100,
  kHFSVolumeSparedBlocksMask = 0x200,
  kHFSVolumeNoCacheRequiredMask = 0x400,
  kHFSBootVolumeInconsistentMask = 0x800,
  kHFSCatalogNodeIDsReusedMask = 0x1000,
  kHFSVolumeJournaledMask = 0x2000,
  kHFSVolumeInconsistentMask = 0x4000,
  kHFSVolumeSoftwareLockMask = 0x8000,
  kHFSContentProtectionMask = 0x40000000,
  kHFSUnusedNodeFixMask = 0x80000000,
  kHFSMDBAttributesMask = 0x8380,
};

/* 3556 */
struct HFSMasterDirectoryBlock
{
  u_int16_t drSigWord;
  u_int32_t drCrDate;
  u_int32_t drLsMod;
  u_int16_t drAtrb;
  u_int16_t drNmFls;
  u_int16_t drVBMSt;
  u_int16_t drAllocPtr;
  u_int16_t drNmAlBlks;
  u_int32_t drAlBlkSiz;
  u_int32_t drClpSiz;
  u_int16_t drAlBlSt;
  u_int32_t drNxtCNID;
  u_int16_t drFreeBks;
  u_int8_t drVN[28];
  u_int32_t drVolBkUp;
  u_int16_t drVSeqNum;
  u_int32_t drWrCnt;
  u_int32_t drXTClpSiz;
  u_int32_t drCTClpSiz;
  u_int16_t drNmRtDirs;
  u_int32_t drFilCnt;
  u_int32_t drDirCnt;
  u_int32_t drFndrInfo[8];
  u_int16_t drEmbedSigWord;
  HFSExtentDescriptor drEmbedExtent;
  u_int32_t drXTFlSize;
  HFSExtentRecord drXTExtRec;
  u_int32_t drCTFlSize;
  HFSExtentRecord drCTExtRec;
};

/* 3557 */
struct HFSPlusVolumeHeader
{
  u_int16_t signature;
  u_int16_t version;
  u_int32_t attributes;
  u_int32_t lastMountedVersion;
  u_int32_t journalInfoBlock;
  u_int32_t createDate;
  u_int32_t modifyDate;
  u_int32_t backupDate;
  u_int32_t checkedDate;
  u_int32_t fileCount;
  u_int32_t folderCount;
  u_int32_t blockSize;
  u_int32_t totalBlocks;
  u_int32_t freeBlocks;
  u_int32_t nextAllocation;
  u_int32_t rsrcClumpSize;
  u_int32_t dataClumpSize;
  u_int32_t nextCatalogID;
  u_int32_t writeCount;
  u_int64_t encodingsBitmap;
  u_int8_t finderInfo[32];
  HFSPlusForkData allocationFile;
  HFSPlusForkData extentsFile;
  HFSPlusForkData catalogFile;
  HFSPlusForkData attributesFile;
  HFSPlusForkData startupFile;
};

/* 3558 */
union BTreeKey
{
  u_int8_t length8;
  u_int16_t length16;
  u_int8_t rawData[522];
};

/* 3559 */
struct BTNodeDescriptor
{
  u_int32_t fLink;
  u_int32_t bLink;
  int8_t kind;
  u_int8_t height;
  u_int16_t numRecords;
  u_int16_t reserved;
};

/* 3560 */
struct BTHeaderRec
{
  u_int16_t treeDepth;
  u_int32_t rootNode;
  u_int32_t leafRecords;
  u_int32_t firstLeafNode;
  u_int32_t lastLeafNode;
  u_int16_t nodeSize;
  u_int16_t maxKeyLength;
  u_int32_t totalNodes;
  u_int32_t freeNodes;
  u_int16_t reserved1;
  u_int32_t clumpSize;
  u_int8_t btreeType;
  u_int8_t keyCompareType;
  u_int32_t attributes;
  u_int32_t reserved3[16];
};

/* 3561 */
struct JournalInfoBlock
{
  u_int32_t flags;
  u_int32_t device_signature[8];
  u_int64_t offset;
  u_int64_t size;
  uuid_string_t ext_jnl_uuid;
  char machine_serial_num[48];
  char reserved[43];
};

/* 3562 */
typedef int (__cdecl *hfs_to_unicode_func_t)(const uint8_t hfs_str[32], uint16_t *uni_str, u_int32_t maxCharLen, u_int32_t *usedCharLen);

/* 3563 */
typedef int (__cdecl *unicode_to_hfs_func_t)(uint16_t *uni_str, u_int32_t unicodeChars, uint8_t hfs_str[32]);

/* 4074 */
struct timezone
{
  int tz_minuteswest;
  int tz_dsttime;
};

/* 3564 */
struct hfs_mount_args
{
  uid_t hfs_uid;
  gid_t hfs_gid;
  mode_t hfs_mask;
  u_int32_t hfs_encoding;
  struct timezone hfs_timezone;
  int flags;
  int journal_tbuffer_size;
  int journal_flags;
  int journal_disable;
};

/* 3565 */
typedef uint32_t ipc_pthread_priority_value_t;

/* 3566 */
typedef uint8_t EFI_UINT8;

/* 3567 */
typedef uint16_t EFI_UINT16;

/* 3568 */
typedef uint32_t EFI_UINT32;

/* 3569 */
typedef uint64_t EFI_UINT64;

/* 3570 */
typedef uint32_t EFI_UINTN;

/* 3571 */
typedef int8_t EFI_INT8;

/* 3572 */
typedef int16_t EFI_INT16;

/* 3573 */
typedef int32_t EFI_INT32;

/* 3574 */
typedef int64_t EFI_INT64;

/* 3575 */
typedef int8_t EFI_CHAR8;

/* 3576 */
typedef int16_t EFI_CHAR16;

/* 3577 */
typedef int32_t EFI_CHAR32;

/* 3578 */
typedef int64_t EFI_CHAR64;

/* 3579 */
typedef uint32_t EFI_STATUS;

/* 3580 */
typedef uint8_t EFI_BOOLEAN;

/* 3581 */
typedef void VOID;

/* 3582 */
typedef uint32_t EFI_PTR32;

/* 3583 */
typedef uint32_t EFI_HANDLE32;

/* 3584 */
typedef uint64_t EFI_PTR64;

/* 3585 */
typedef uint64_t EFI_HANDLE64;

/* 3586 */
struct $74826F4988D4359A80310E889DEC88E2
{
  EFI_UINT32 Data1;
  EFI_UINT16 Data2;
  EFI_UINT16 Data3;
  EFI_UINT8 Data4[8];
};

/* 3587 */
typedef struct $74826F4988D4359A80310E889DEC88E2 EFI_GUID;

/* 3588 */
union $E3FC136D725E6ADE1079D7B5988BD96F
{
  EFI_GUID Guid;
  EFI_UINT8 Raw[16];
};

/* 3589 */
typedef union $E3FC136D725E6ADE1079D7B5988BD96F EFI_GUID_UNION;

/* 3590 */
struct $B370DE5BDF737475664ABB7D8E66CF66
{
  EFI_UINT16 Year;
  EFI_UINT8 Month;
  EFI_UINT8 Day;
  EFI_UINT8 Hour;
  EFI_UINT8 Minute;
  EFI_UINT8 Second;
  EFI_UINT8 Pad1;
  EFI_UINT32 Nanosecond;
  EFI_INT16 TimeZone;
  EFI_UINT8 Daylight;
  EFI_UINT8 Pad2;
};

/* 3591 */
typedef struct $B370DE5BDF737475664ABB7D8E66CF66 EFI_TIME;

/* 3592 */
enum $1926846CE1663A425FF72B365CE400E1
{
  EfiReservedMemoryType = 0x0,
  EfiLoaderCode = 0x1,
  EfiLoaderData = 0x2,
  EfiBootServicesCode = 0x3,
  EfiBootServicesData = 0x4,
  EfiRuntimeServicesCode = 0x5,
  EfiRuntimeServicesData = 0x6,
  EfiConventionalMemory = 0x7,
  EfiUnusableMemory = 0x8,
  EfiACPIReclaimMemory = 0x9,
  EfiACPIMemoryNVS = 0xA,
  EfiMemoryMappedIO = 0xB,
  EfiMemoryMappedIOPortSpace = 0xC,
  EfiPalCode = 0xD,
  EfiMaxMemoryType = 0xE,
};

/* 3593 */
typedef enum $1926846CE1663A425FF72B365CE400E1 EFI_MEMORY_TYPE;

/* 3594 */
struct $87311737107FB7775CBE5EF15604D61E
{
  EFI_UINT64 Signature;
  EFI_UINT32 Revision;
  EFI_UINT32 HeaderSize;
  EFI_UINT32 CRC32;
  EFI_UINT32 Reserved;
};

/* 3595 */
typedef struct $87311737107FB7775CBE5EF15604D61E EFI_TABLE_HEADER;

/* 3596 */
typedef EFI_UINT64 EFI_PHYSICAL_ADDRESS;

/* 3597 */
typedef EFI_UINT64 EFI_VIRTUAL_ADDRESS;

/* 3598 */
struct $258A7D66C57633CD2AAA1D1AB5505E5F
{
  EFI_UINT32 Type;
  EFI_UINT32 Pad;
  EFI_PHYSICAL_ADDRESS PhysicalStart;
  EFI_VIRTUAL_ADDRESS VirtualStart;
  EFI_UINT64 NumberOfPages;
  EFI_UINT64 Attribute;
};

/* 3599 */
typedef struct $258A7D66C57633CD2AAA1D1AB5505E5F EFI_MEMORY_DESCRIPTOR;

/* 3600 */
typedef EFI_STATUS (__cdecl *EFI_SET_VIRTUAL_ADDRESS_MAP)(EFI_UINTN MemoryMapSize, EFI_UINTN DescriptorSize, EFI_UINT32 DescriptorVersion, EFI_MEMORY_DESCRIPTOR *VirtualMap);

/* 3601 */
typedef EFI_STATUS (__cdecl *EFI_CONVERT_POINTER)(EFI_UINTN DebugDisposition, VOID **Address);

/* 3602 */
typedef EFI_STATUS (__cdecl *EFI_GET_VARIABLE)(EFI_CHAR16 *VariableName, EFI_GUID *VendorGuid, EFI_UINT32 *Attributes, EFI_UINTN *DataSize, VOID *Data);

/* 3603 */
typedef EFI_STATUS (__cdecl *EFI_GET_NEXT_VARIABLE_NAME)(EFI_UINTN *VariableNameSize, EFI_CHAR16 *VariableName, EFI_GUID *VendorGuid);

/* 3604 */
typedef EFI_STATUS (__cdecl *EFI_SET_VARIABLE)(EFI_CHAR16 *VariableName, EFI_GUID *VendorGuid, EFI_UINT32 Attributes, EFI_UINTN DataSize, VOID *Data);

/* 3605 */
struct $BE1D9F9B06CB7C345D2BDA4A943950B9
{
  EFI_UINT32 Resolution;
  EFI_UINT32 Accuracy;
  EFI_BOOLEAN SetsToZero;
};

/* 3606 */
typedef struct $BE1D9F9B06CB7C345D2BDA4A943950B9 EFI_TIME_CAPABILITIES;

/* 3607 */
typedef EFI_STATUS (__cdecl *EFI_GET_TIME)(EFI_TIME *Time, EFI_TIME_CAPABILITIES *Capabilities);

/* 3608 */
typedef EFI_STATUS (__cdecl *EFI_SET_TIME)(EFI_TIME *Time);

/* 3609 */
typedef EFI_STATUS (__cdecl *EFI_GET_WAKEUP_TIME)(EFI_BOOLEAN *Enabled, EFI_BOOLEAN *Pending, EFI_TIME *Time);

/* 3610 */
typedef EFI_STATUS (__cdecl *EFI_SET_WAKEUP_TIME)(EFI_BOOLEAN Enable, EFI_TIME *Time);

/* 3611 */
enum $60285AC66C9D411EA1F085C286A6FFEF
{
  EfiResetCold = 0x0,
  EfiResetWarm = 0x1,
  EfiResetShutdown = 0x2,
};

/* 3612 */
typedef enum $60285AC66C9D411EA1F085C286A6FFEF EFI_RESET_TYPE;

/* 3613 */
typedef VOID (__cdecl *EFI_RESET_SYSTEM)(EFI_RESET_TYPE ResetType, EFI_STATUS ResetStatus, EFI_UINTN DataSize, EFI_CHAR16 *ResetData);

/* 3614 */
typedef EFI_STATUS (__cdecl *EFI_GET_NEXT_HIGH_MONO_COUNT)(EFI_UINT32 *HighCount);

/* 3615 */
struct $57D7128EBA52A684F1739A476E111001
{
  EFI_TABLE_HEADER Hdr;
  EFI_PTR32 GetTime;
  EFI_PTR32 SetTime;
  EFI_PTR32 GetWakeupTime;
  EFI_PTR32 SetWakeupTime;
  EFI_PTR32 SetVirtualAddressMap;
  EFI_PTR32 ConvertPointer;
  EFI_PTR32 GetVariable;
  EFI_PTR32 GetNextVariableName;
  EFI_PTR32 SetVariable;
  EFI_PTR32 GetNextHighMonotonicCount;
  EFI_PTR32 ResetSystem;
};

/* 3616 */
typedef struct $57D7128EBA52A684F1739A476E111001 EFI_RUNTIME_SERVICES_32;

/* 3617 */
struct $3787B2249594072704A5FB87482FA3AA
{
  EFI_TABLE_HEADER Hdr;
  EFI_PTR64 GetTime;
  EFI_PTR64 SetTime;
  EFI_PTR64 GetWakeupTime;
  EFI_PTR64 SetWakeupTime;
  EFI_PTR64 SetVirtualAddressMap;
  EFI_PTR64 ConvertPointer;
  EFI_PTR64 GetVariable;
  EFI_PTR64 GetNextVariableName;
  EFI_PTR64 SetVariable;
  EFI_PTR64 GetNextHighMonotonicCount;
  EFI_PTR64 ResetSystem;
};

/* 3618 */
typedef struct $3787B2249594072704A5FB87482FA3AA EFI_RUNTIME_SERVICES_64;

/* 3619 */
struct $AACA2F8B7AD3ABC293CBCF99B2D91F64
{
  EFI_GUID VendorGuid;
  EFI_PTR32 VendorTable;
};

/* 3620 */
typedef struct $AACA2F8B7AD3ABC293CBCF99B2D91F64 EFI_CONFIGURATION_TABLE_32;

/* 3621 */
struct $B4E46D1FDD11FAE5045B723EFFA942E4
{
  EFI_GUID VendorGuid;
  EFI_PTR64 VendorTable;
};

/* 3622 */
typedef struct $B4E46D1FDD11FAE5045B723EFFA942E4 EFI_CONFIGURATION_TABLE_64;

/* 3623 */
struct EFI_SYSTEM_TABLE_32
{
  EFI_TABLE_HEADER Hdr;
  EFI_PTR32 FirmwareVendor;
  EFI_UINT32 FirmwareRevision;
  EFI_HANDLE32 ConsoleInHandle;
  EFI_PTR32 ConIn;
  EFI_HANDLE32 ConsoleOutHandle;
  EFI_PTR32 ConOut;
  EFI_HANDLE32 StandardErrorHandle;
  EFI_PTR32 StdErr;
  EFI_PTR32 RuntimeServices;
  EFI_PTR32 BootServices;
  EFI_UINT32 NumberOfTableEntries;
  EFI_PTR32 ConfigurationTable;
};

/* 3624 */
struct EFI_SYSTEM_TABLE_64
{
  EFI_TABLE_HEADER Hdr;
  EFI_PTR64 FirmwareVendor;
  EFI_UINT32 FirmwareRevision;
  EFI_UINT32 __pad;
  EFI_HANDLE64 ConsoleInHandle;
  EFI_PTR64 ConIn;
  EFI_HANDLE64 ConsoleOutHandle;
  EFI_PTR64 ConOut;
  EFI_HANDLE64 StandardErrorHandle;
  EFI_PTR64 StdErr;
  EFI_PTR64 RuntimeServices;
  EFI_PTR64 BootServices;
  EFI_UINT64 NumberOfTableEntries;
  EFI_PTR64 ConfigurationTable;
};

/* 3625 */
enum $10461590E3BA87E1FB053606EB282E7F
{
  kDTPathNameSeparator = 0x2F,
};

/* 3626 */
enum $DBB33D90FC54CF148A0EB42E8F540E7B
{
  kDTMaxPropertyNameLength = 0x1F,
};

/* 3627 */
typedef char DTPropertyNameBuf[32];

/* 3628 */
enum $6BC3108770DC788BD8ED90FCCB0C520C
{
  kDTMaxEntryNameLength = 0x3F,
};

/* 3629 */
typedef char DTEntryNameBuf[64];

/* 3630 */
struct DeviceTreeNodeProperty
{
  char name[32];
  uint32_t length;
};

/* 3631 */
struct OpaqueDTEntry
{
  uint32_t nProperties;
  uint32_t nChildren;
};

/* 3632 */
typedef struct OpaqueDTEntry DeviceTreeNode;

/* 3633 */
typedef DeviceTreeNode *RealDTEntry;

/* 3634 */
struct DTSavedScope
{
  struct DTSavedScope *nextScope;
  RealDTEntry scope;
  RealDTEntry entry;
  unsigned __int64 index;
};

/* 3635 */
typedef struct DTSavedScope *DTSavedScopePtr;

/* 3636 */
struct OpaqueDTEntryIterator
{
  RealDTEntry outerScope;
  RealDTEntry currentScope;
  RealDTEntry currentEntry;
  DTSavedScopePtr savedScope;
  unsigned __int64 currentIndex;
};

/* 3637 */
typedef struct OpaqueDTEntryIterator *DTEntryIterator;

/* 3638 */
struct OpaqueDTPropertyIterator
{
  RealDTEntry entry;
  DeviceTreeNodeProperty *currentProperty;
  unsigned __int64 currentIndex;
};

/* 3639 */
typedef struct OpaqueDTPropertyIterator *DTPropertyIterator;

/* 3640 */
typedef struct OpaqueDTEntry *DTEntry;

/* 3641 */
enum $C139F8B6B275D82F1E5BBE3EF0EA3675
{
  kError = 0xFFFFFFFF,
  kIterationDone = 0x0,
  kSuccess = 0x1,
};

/* 3642 */
struct __float2
{
  float __sinval;
  float __cosval;
};

/* 3643 */
struct __double2
{
  double __sinval;
  double __cosval;
};

/* 3644 */
struct exception
{
  int type;
  char *name;
  double arg1;
  double arg2;
  double retval;
};

/* 3645 */
struct ipc_object;

/* 3646 */
typedef struct ipc_object *ipc_object_t;

/* 3647 */
struct coalition_notification_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t reserved;
  struct routine_descriptor routine[1];
};

/* 3648 */
struct $47BA7B836A5289E74EE414ECEC21EF89
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  uint64_t id;
  uint32_t flags;
};

/* 3649 */
typedef struct $47BA7B836A5289E74EE414ECEC21EF89 __Request__coalition_notification_t;

/* 3650 */
union __RequestUnion__coalition_notification_subsystem
{
  __Request__coalition_notification_t Request_coalition_notification;
};

/* 3651 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__coalition_notification_t;

/* 3652 */
union __ReplyUnion__coalition_notification_subsystem
{
  __Reply__coalition_notification_t Reply_coalition_notification;
};

/* 3653 */
struct telemetry_notification_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t reserved;
  struct routine_descriptor routine[1];
};

/* 3654 */
struct $F2E60389C8B0D12D695D039994FD5609
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  uint32_t flags;
};

/* 3655 */
typedef struct $F2E60389C8B0D12D695D039994FD5609 __Request__telemetry_notification_t;

/* 3656 */
union __RequestUnion__telemetry_notification_subsystem
{
  __Request__telemetry_notification_t Request_telemetry_notification;
};

/* 3657 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__telemetry_notification_t;

/* 3658 */
union __ReplyUnion__telemetry_notification_subsystem
{
  __Reply__telemetry_notification_t Reply_telemetry_notification;
};

/* 3659 */
struct $9BE8DB1993559FC68D59ECCD5FBA6904
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  integer_t abort_cond;
};

/* 3660 */
typedef struct $9BE8DB1993559FC68D59ECCD5FBA6904 __Request__upl_abort_t;

/* 3661 */
struct $2F524D7CF2775CA860D7940E412751CB
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  upl_offset_t offset;
  upl_size_t size;
  integer_t abort_cond;
};

/* 3662 */
typedef struct $2F524D7CF2775CA860D7940E412751CB __Request__upl_abort_range_t;

/* 3663 */
struct $5AB9694B538366EBAF3F4400FF114A0F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_msg_type_number_t page_listCnt;
  upl_page_info_t page_list[256];
};

/* 3664 */
typedef struct $5AB9694B538366EBAF3F4400FF114A0F __Request__upl_commit_t;

/* 3665 */
struct $A105F7D5B7BAB584554848D69D0016F4
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  upl_offset_t offset;
  upl_size_t size;
  integer_t cntrl_flags;
  mach_msg_type_number_t page_listCnt;
  upl_page_info_t page_list[256];
};

/* 3666 */
typedef struct $A105F7D5B7BAB584554848D69D0016F4 __Request__upl_commit_range_t;

/* 3667 */
union __RequestUnion__upl_subsystem
{
  __Request__upl_abort_t Request_upl_abort;
  __Request__upl_abort_range_t Request_upl_abort_range;
  __Request__upl_commit_t Request_upl_commit;
  __Request__upl_commit_range_t Request_upl_commit_range;
};

/* 3668 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__upl_abort_t;

/* 3669 */
struct $136981F2CF100AC6749DC2F6741820BB
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  boolean_t empty;
};

/* 3670 */
typedef struct $136981F2CF100AC6749DC2F6741820BB __Reply__upl_abort_range_t;

/* 3671 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__upl_commit_t;

/* 3672 */
typedef struct $136981F2CF100AC6749DC2F6741820BB __Reply__upl_commit_range_t;

/* 3673 */
union __ReplyUnion__upl_subsystem
{
  __Reply__upl_abort_t Reply_upl_abort;
  __Reply__upl_abort_range_t Reply_upl_abort_range;
  __Reply__upl_commit_t Reply_upl_commit;
  __Reply__upl_commit_range_t Reply_upl_commit_range;
};

/* 3674 */
struct shared_region_range_np
{
  mach_vm_address_t srr_address;
  mach_vm_size_t srr_size;
};

/* 3675 */
struct memory_object_default_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t reserved;
  struct routine_descriptor routine[1];
};

/* 3676 */
struct $3253F03124F7208420DD4EC71761751F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  vm_size_t new_memory_object_size;
};

/* 3677 */
typedef struct $3253F03124F7208420DD4EC71761751F __Request__memory_object_create_t;

/* 3678 */
union __RequestUnion__memory_object_default_subsystem
{
  __Request__memory_object_create_t Request_memory_object_create;
};

/* 3679 */
struct $15114E278E4D7889DC998F07062D54D6
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t new_memory_object;
};

/* 3680 */
typedef struct $15114E278E4D7889DC998F07062D54D6 __Reply__memory_object_create_t;

/* 3681 */
union __ReplyUnion__memory_object_default_subsystem
{
  __Reply__memory_object_create_t Reply_memory_object_create;
};

/* 3682 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__ktrace_background_available_t;

/* 3683 */
union __RequestUnion__send_ktrace_background_subsystem
{
  __Request__ktrace_background_available_t Request_send_ktrace_background_available;
};

/* 3684 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__ktrace_background_available_t;

/* 3685 */
union __ReplyUnion__send_ktrace_background_subsystem
{
  __Reply__ktrace_background_available_t Reply_send_ktrace_background_available;
};

/* 3686 */
struct receive_sysdiagnose_notification_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t reserved;
  struct routine_descriptor routine[1];
};

/* 3687 */
typedef struct $F2E60389C8B0D12D695D039994FD5609 __Request__sysdiagnose_notification_t;

/* 3688 */
union __RequestUnion__receive_sysdiagnose_notification_subsystem
{
  __Request__sysdiagnose_notification_t Request_sysdiagnose_notification;
};

/* 3689 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__sysdiagnose_notification_t;

/* 3690 */
union __ReplyUnion__receive_sysdiagnose_notification_subsystem
{
  __Reply__sysdiagnose_notification_t Reply_sysdiagnose_notification;
};

/* 3691 */
struct $718C63E3A25300F509FC2C121A172C2D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int32_t calling_pid;
  uint32_t calling_gid;
  int32_t target_pid;
};

/* 3692 */
typedef struct $718C63E3A25300F509FC2C121A172C2D __Request__check_task_access_t;

/* 3693 */
struct $3DF923F1F0BB58BFACF983CFDB95DB18
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int32_t new_pid;
};

/* 3694 */
typedef struct $3DF923F1F0BB58BFACF983CFDB95DB18 __Request__find_code_signature_t;

/* 3695 */
union __RequestUnion__task_access_subsystem
{
  __Request__check_task_access_t Request_check_task_access;
  __Request__find_code_signature_t Request_find_code_signature;
};

/* 3696 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__check_task_access_t;

/* 3697 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__find_code_signature_t;

/* 3698 */
union __ReplyUnion__task_access_subsystem
{
  __Reply__check_task_access_t Reply_check_task_access;
  __Reply__find_code_signature_t Reply_find_code_signature;
};

/* 3699 */
struct $8D6E3DAEA2B8816BF4ECBB19596CEC22
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_voucher_attr_key_t key;
  mach_msg_type_number_t contentCnt;
};

/* 3700 */
typedef struct $8D6E3DAEA2B8816BF4ECBB19596CEC22 __Request__mach_voucher_extract_attr_content_t;

/* 3701 */
struct $D3252A2E2F28CB6EC85E8864263E27D5
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_voucher_attr_key_t key;
  mach_msg_type_number_t recipeCnt;
};

/* 3702 */
typedef struct $D3252A2E2F28CB6EC85E8864263E27D5 __Request__mach_voucher_extract_attr_recipe_t;

/* 3703 */
struct $6C2F89A8DB10B47063EA064460EB7823
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_msg_type_number_t recipesCnt;
};

/* 3704 */
typedef struct $6C2F89A8DB10B47063EA064460EB7823 __Request__mach_voucher_extract_all_attr_recipes_t;

/* 3705 */
struct $0191139B6FA4E2CF0F1C311BD5699593
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_voucher_attr_key_t key;
  mach_voucher_attr_command_t command;
  mach_msg_type_number_t in_contentCnt;
  uint8_t in_content[4096];
  mach_msg_type_number_t out_contentCnt;
};

/* 3706 */
typedef struct $0191139B6FA4E2CF0F1C311BD5699593 __Request__mach_voucher_attr_command_t;

/* 3707 */
struct $577B13E31DD56099707F12785FC9C7CE
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_port_name_t voucher_name;
  mach_msg_type_number_t recipesCnt;
};

/* 3708 */
typedef struct $577B13E31DD56099707F12785FC9C7CE __Request__mach_voucher_debug_info_t;

/* 3709 */
union __RequestUnion__mach_voucher_subsystem
{
  __Request__mach_voucher_extract_attr_content_t Request_mach_voucher_extract_attr_content;
  __Request__mach_voucher_extract_attr_recipe_t Request_mach_voucher_extract_attr_recipe;
  __Request__mach_voucher_extract_all_attr_recipes_t Request_mach_voucher_extract_all_attr_recipes;
  __Request__mach_voucher_attr_command_t Request_mach_voucher_attr_command;
  __Request__mach_voucher_debug_info_t Request_mach_voucher_debug_info;
};

/* 3710 */
struct $39D381A9863E1D9F5F5F18778311353B
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t contentCnt;
  uint8_t content[4096];
};

/* 3711 */
typedef struct $39D381A9863E1D9F5F5F18778311353B __Reply__mach_voucher_extract_attr_content_t;

/* 3712 */
struct $964C19D3FF0A2F69EBB4D4D0FD82F482
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t recipeCnt;
  uint8_t recipe[4096];
};

/* 3713 */
typedef struct $964C19D3FF0A2F69EBB4D4D0FD82F482 __Reply__mach_voucher_extract_attr_recipe_t;

/* 3714 */
struct $47CC3F452F707D71E97CDB0343312A2A
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t recipesCnt;
  uint8_t recipes[5120];
};

/* 3715 */
typedef struct $47CC3F452F707D71E97CDB0343312A2A __Reply__mach_voucher_extract_all_attr_recipes_t;

/* 3716 */
struct $703D3CFD161CC6C5D7618926ADED4178
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t out_contentCnt;
  uint8_t out_content[4096];
};

/* 3717 */
typedef struct $703D3CFD161CC6C5D7618926ADED4178 __Reply__mach_voucher_attr_command_t;

/* 3718 */
typedef struct $47CC3F452F707D71E97CDB0343312A2A __Reply__mach_voucher_debug_info_t;

/* 3719 */
union __ReplyUnion__mach_voucher_subsystem
{
  __Reply__mach_voucher_extract_attr_content_t Reply_mach_voucher_extract_attr_content;
  __Reply__mach_voucher_extract_attr_recipe_t Reply_mach_voucher_extract_attr_recipe;
  __Reply__mach_voucher_extract_all_attr_recipes_t Reply_mach_voucher_extract_all_attr_recipes;
  __Reply__mach_voucher_attr_command_t Reply_mach_voucher_attr_command;
  __Reply__mach_voucher_debug_info_t Reply_mach_voucher_debug_info;
};

/* 3720 */
struct $4407EFFC296F525D82D75004ED29DEA0
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t voucher;
  NDR_record_t NDR;
  mach_msg_type_number_t value_handlesCnt;
};

/* 3721 */
typedef struct $4407EFFC296F525D82D75004ED29DEA0 __Request__mach_voucher_attr_control_get_values_t;

/* 3722 */
typedef struct $4855EEFC1E3C8F5FE9AB7E10832CEB5F __Request__mach_voucher_attr_control_create_mach_voucher_t;

/* 3723 */
union __RequestUnion__mach_voucher_attr_control_subsystem
{
  __Request__mach_voucher_attr_control_get_values_t Request_mach_voucher_attr_control_get_values;
  __Request__mach_voucher_attr_control_create_mach_voucher_t Request_mach_voucher_attr_control_create_mach_voucher;
};

/* 3724 */
struct $3FC014EED996E5CC9B37B0A6DCFFCB8D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t value_handlesCnt;
  mach_voucher_attr_value_handle_t value_handles[4];
};

/* 3725 */
typedef struct $3FC014EED996E5CC9B37B0A6DCFFCB8D __Reply__mach_voucher_attr_control_get_values_t;

/* 3726 */
typedef struct $55F043C4C53CD699F417A5D97368A0D6 __Reply__mach_voucher_attr_control_create_mach_voucher_t;

/* 3727 */
union __ReplyUnion__mach_voucher_attr_control_subsystem
{
  __Reply__mach_voucher_attr_control_get_values_t Reply_mach_voucher_attr_control_get_values;
  __Reply__mach_voucher_attr_control_create_mach_voucher_t Reply_mach_voucher_attr_control_create_mach_voucher;
};

/* 3728 */
struct audit_triggers_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t reserved;
  struct routine_descriptor routine[1];
};

/* 3729 */
struct $CDF58FF66C9B1FD7D28284B4D75B11E3
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  int flags;
};

/* 3730 */
typedef struct $CDF58FF66C9B1FD7D28284B4D75B11E3 __Request__audit_triggers_t;

/* 3731 */
union __RequestUnion__audit_triggers_subsystem
{
  __Request__audit_triggers_t Request_audit_triggers;
};

/* 3732 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__audit_triggers_t;

/* 3733 */
union __ReplyUnion__audit_triggers_subsystem
{
  __Reply__audit_triggers_t Reply_audit_triggers;
};

/* 3734 */
struct rpc_subsystem
{
  void *reserved;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t base_addr;
  struct rpc_routine_descriptor routine[1];
  struct rpc_routine_arg_descriptor arg_descriptor[1];
};

/* 3735 */
struct $5451C20AFD50E4001BF4E4A57F6339E5
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  memory_object_flavor_t flavor;
  mach_msg_type_number_t attributesCnt;
};

/* 3736 */
typedef struct $5451C20AFD50E4001BF4E4A57F6339E5 __Request__memory_object_get_attributes_t;

/* 3737 */
struct $63BFFF87BC5BB701FFA427286F0B89A8
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  memory_object_flavor_t flavor;
  mach_msg_type_number_t attributesCnt;
  int attributes[6];
};

/* 3738 */
typedef struct $63BFFF87BC5BB701FFA427286F0B89A8 __Request__memory_object_change_attributes_t;

/* 3739 */
struct $4BCFF5139113C2B4D6845505E81B003E
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  memory_object_offset_t offset;
  memory_object_size_t length;
};

/* 3740 */
typedef struct $4BCFF5139113C2B4D6845505E81B003E __Request__memory_object_synchronize_completed_t;

/* 3741 */
struct $7FA010BE28BB413BE7D1D6DAB9EC393E
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  memory_object_offset_t offset;
  memory_object_size_t size;
  memory_object_return_t should_return;
  integer_t flags;
  vm_prot_t lock_value;
};

/* 3742 */
typedef struct $7FA010BE28BB413BE7D1D6DAB9EC393E __Request__memory_object_lock_request_t;

/* 3743 */
struct $E8D9021C4FAFA053B98368740067D34E
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t reason;
};

/* 3744 */
typedef struct $E8D9021C4FAFA053B98368740067D34E __Request__memory_object_destroy_t;

/* 3745 */
struct $E11377C5E225C5C01AE91662EC2C6E56
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  memory_object_offset_t offset;
  upl_size_t size;
  mach_msg_type_number_t page_listCnt;
  integer_t cntrl_flags;
  integer_t tag;
};

/* 3746 */
typedef struct $E11377C5E225C5C01AE91662EC2C6E56 __Request__memory_object_upl_request_t;

/* 3747 */
struct $BF8E5433E517609A9C041B7BEA992089
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  memory_object_offset_t offset;
  upl_size_t size;
  upl_size_t super_size;
  mach_msg_type_number_t page_listCnt;
  integer_t cntrl_flags;
  integer_t tag;
};

/* 3748 */
typedef struct $BF8E5433E517609A9C041B7BEA992089 __Request__memory_object_super_upl_request_t;

/* 3749 */
struct $80D5D07F9AD1351E005EF505AD0EED85
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  memory_object_fault_info_t fault_info;
};

/* 3750 */
typedef struct $80D5D07F9AD1351E005EF505AD0EED85 __Request__memory_object_cluster_size_t;

/* 3751 */
struct $EBDD3C35158EFEA4A53E5B76C39C8999
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  memory_object_offset_t offset;
  integer_t ops;
};

/* 3752 */
typedef struct $EBDD3C35158EFEA4A53E5B76C39C8999 __Request__memory_object_page_op_t;

/* 3753 */
struct $705B3914BEFCB7688A07C259219ACEF1
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  boolean_t wait_on_terminating;
};

/* 3754 */
typedef struct $705B3914BEFCB7688A07C259219ACEF1 __Request__memory_object_recover_named_t;

/* 3755 */
struct $4168E24A1AFB0E34355B67A5885898B9
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  integer_t flags;
};

/* 3756 */
typedef struct $4168E24A1AFB0E34355B67A5885898B9 __Request__memory_object_release_name_t;

/* 3757 */
struct $B36ACEA0C85AA6F43AC482D8AFEEC6C3
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  memory_object_offset_t offset_beg;
  memory_object_offset_t offset_end;
  integer_t ops;
};

/* 3758 */
typedef struct $B36ACEA0C85AA6F43AC482D8AFEEC6C3 __Request__memory_object_range_op_t;

/* 3759 */
union __RequestUnion__memory_object_control_subsystem
{
  __Request__memory_object_get_attributes_t Request_memory_object_get_attributes;
  __Request__memory_object_change_attributes_t Request_memory_object_change_attributes;
  __Request__memory_object_synchronize_completed_t Request_memory_object_synchronize_completed;
  __Request__memory_object_lock_request_t Request_memory_object_lock_request;
  __Request__memory_object_destroy_t Request_memory_object_destroy;
  __Request__memory_object_upl_request_t Request_memory_object_upl_request;
  __Request__memory_object_super_upl_request_t Request_memory_object_super_upl_request;
  __Request__memory_object_cluster_size_t Request_memory_object_cluster_size;
  __Request__memory_object_page_op_t Request_memory_object_page_op;
  __Request__memory_object_recover_named_t Request_memory_object_recover_named;
  __Request__memory_object_release_name_t Request_memory_object_release_name;
  __Request__memory_object_range_op_t Request_memory_object_range_op;
};

/* 3760 */
struct $E7588C455E69527374CB220D84DD1450
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t attributesCnt;
  int attributes[6];
};

/* 3761 */
typedef struct $E7588C455E69527374CB220D84DD1450 __Reply__memory_object_get_attributes_t;

/* 3762 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__memory_object_change_attributes_t;

/* 3763 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__memory_object_synchronize_completed_t;

/* 3764 */
struct $7266FEA296DC6408898FDD15E9855BD0
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  memory_object_offset_t resid_offset;
  integer_t io_errno;
};

/* 3765 */
typedef struct $7266FEA296DC6408898FDD15E9855BD0 __Reply__memory_object_lock_request_t;

/* 3766 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__memory_object_destroy_t;

/* 3767 */
struct $10AD40A84BAA22AFC72250A7E6897C8A
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t upl;
  NDR_record_t NDR;
  mach_msg_type_number_t page_listCnt;
  upl_page_info_t page_list[256];
};

/* 3768 */
typedef struct $10AD40A84BAA22AFC72250A7E6897C8A __Reply__memory_object_upl_request_t;

/* 3769 */
typedef struct $10AD40A84BAA22AFC72250A7E6897C8A __Reply__memory_object_super_upl_request_t;

/* 3770 */
struct $F97CB8C8189D8A63533DDB9FE529007B
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  memory_object_offset_t start;
  vm_size_t length;
  uint32_t io_streaming;
};

/* 3771 */
typedef struct $F97CB8C8189D8A63533DDB9FE529007B __Reply__memory_object_cluster_size_t;

/* 3772 */
struct $9E1F4C393E6028A9696CE50515EB4CFA
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  uint32_t phys_entry;
  integer_t flags;
};

/* 3773 */
typedef struct $9E1F4C393E6028A9696CE50515EB4CFA __Reply__memory_object_page_op_t;

/* 3774 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__memory_object_recover_named_t;

/* 3775 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__memory_object_release_name_t;

/* 3776 */
struct $D4EF2E56B81767CD87A712ED5C0D5B3C
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  integer_t range;
};

/* 3777 */
typedef struct $D4EF2E56B81767CD87A712ED5C0D5B3C __Reply__memory_object_range_op_t;

/* 3778 */
union __ReplyUnion__memory_object_control_subsystem
{
  __Reply__memory_object_get_attributes_t Reply_memory_object_get_attributes;
  __Reply__memory_object_change_attributes_t Reply_memory_object_change_attributes;
  __Reply__memory_object_synchronize_completed_t Reply_memory_object_synchronize_completed;
  __Reply__memory_object_lock_request_t Reply_memory_object_lock_request;
  __Reply__memory_object_destroy_t Reply_memory_object_destroy;
  __Reply__memory_object_upl_request_t Reply_memory_object_upl_request;
  __Reply__memory_object_super_upl_request_t Reply_memory_object_super_upl_request;
  __Reply__memory_object_cluster_size_t Reply_memory_object_cluster_size;
  __Reply__memory_object_page_op_t Reply_memory_object_page_op;
  __Reply__memory_object_recover_named_t Reply_memory_object_recover_named;
  __Reply__memory_object_release_name_t Reply_memory_object_release_name;
  __Reply__memory_object_range_op_t Reply_memory_object_range_op;
};

/* 3779 */
struct task_access_subsystem
{
  mig_server_routine_t server;
  mach_msg_id_t start;
  mach_msg_id_t end;
  unsigned int maxsize;
  vm_address_t reserved;
  struct routine_descriptor routine[2];
};

/* 3780 */
struct $A449BD3801724C8B22B2601931BD7240
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
  int flags;
};

/* 3781 */
typedef struct $A449BD3801724C8B22B2601931BD7240 __Request__mach_vm_allocate_t;

/* 3782 */
struct $254C1F9D3456D067F37D971F09D1A4C4
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
};

/* 3783 */
typedef struct $254C1F9D3456D067F37D971F09D1A4C4 __Request__mach_vm_deallocate_t;

/* 3784 */
struct $AA3E5F5A285D968E1806F444F84382C5
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
  boolean_t set_maximum;
  vm_prot_t new_protection;
};

/* 3785 */
typedef struct $AA3E5F5A285D968E1806F444F84382C5 __Request__mach_vm_protect_t;

/* 3786 */
struct $E31A5AEA1910853A6D58AB219D146707
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
  vm_inherit_t new_inheritance;
};

/* 3787 */
typedef struct $E31A5AEA1910853A6D58AB219D146707 __Request__mach_vm_inherit_t;

/* 3788 */
typedef struct $254C1F9D3456D067F37D971F09D1A4C4 __Request__mach_vm_read_t;

/* 3789 */
struct $376E6B296EAE7423EB1D52687702C654
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_read_entry_t data_list;
  natural_t count;
};

/* 3790 */
typedef struct $376E6B296EAE7423EB1D52687702C654 __Request__mach_vm_read_list_t;

/* 3791 */
struct $FA54FED998960C1E49294B7EFFB587E8
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t data;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_msg_type_number_t dataCnt;
};

/* 3792 */
typedef struct $FA54FED998960C1E49294B7EFFB587E8 __Request__mach_vm_write_t;

/* 3793 */
struct $4F468BCFB11D770FE326D0EF598BACE0
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t source_address;
  mach_vm_size_t size;
  mach_vm_address_t dest_address;
};

/* 3794 */
typedef struct $4F468BCFB11D770FE326D0EF598BACE0 __Request__mach_vm_copy_t;

/* 3795 */
struct $4DD0821CED377514A9D861F41A01D5C5
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
  mach_vm_address_t data;
};

/* 3796 */
typedef struct $4DD0821CED377514A9D861F41A01D5C5 __Request__mach_vm_read_overwrite_t;

/* 3797 */
struct $CC530A49937DB97C6C80EBAC7FC17D05
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
  vm_sync_t sync_flags;
};

/* 3798 */
typedef struct $CC530A49937DB97C6C80EBAC7FC17D05 __Request__mach_vm_msync_t;

/* 3799 */
struct $676CE2D11D6EF7F715515E3A99D27860
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
  vm_behavior_t new_behavior;
};

/* 3800 */
typedef struct $676CE2D11D6EF7F715515E3A99D27860 __Request__mach_vm_behavior_set_t;

/* 3801 */
struct $22846B6ABCB77693B55DF76291237167
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t object;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
  mach_vm_offset_t mask;
  int flags;
  memory_object_offset_t offset;
  boolean_t copy;
  vm_prot_t cur_protection;
  vm_prot_t max_protection;
  vm_inherit_t inheritance;
};

/* 3802 */
typedef struct $22846B6ABCB77693B55DF76291237167 __Request__mach_vm_map_t;

/* 3803 */
struct $4F8295275CD0474A6D09FF63C9F1D794
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
  vm_machine_attribute_t attribute;
  vm_machine_attribute_val_t value;
};

/* 3804 */
typedef struct $4F8295275CD0474A6D09FF63C9F1D794 __Request__mach_vm_machine_attribute_t;

/* 3805 */
struct $BBC6045A172C9EB6E3F16161503DB877
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t src_task;
  NDR_record_t NDR;
  mach_vm_address_t target_address;
  mach_vm_size_t size;
  mach_vm_offset_t mask;
  int flags;
  mach_vm_address_t src_address;
  boolean_t copy;
  vm_inherit_t inheritance;
};

/* 3806 */
typedef struct $BBC6045A172C9EB6E3F16161503DB877 __Request__mach_vm_remap_t;

/* 3807 */
struct $137B00800037F0A6451FEDBF7714723F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_offset_t offset;
};

/* 3808 */
typedef struct $137B00800037F0A6451FEDBF7714723F __Request__mach_vm_page_query_t;

/* 3809 */
struct $DC0F04EBEE6E4801D2F9787BF445FE13
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  natural_t nesting_depth;
  mach_msg_type_number_t infoCnt;
};

/* 3810 */
typedef struct $DC0F04EBEE6E4801D2F9787BF445FE13 __Request__mach_vm_region_recurse_t;

/* 3811 */
struct $DA464A9672155BC73CCD24205CE01A41
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  vm_region_flavor_t flavor;
  mach_msg_type_number_t infoCnt;
};

/* 3812 */
typedef struct $DA464A9672155BC73CCD24205CE01A41 __Request__mach_vm_region_t;

/* 3813 */
struct $1C9B62C941D52B081B69ED0E233305FB
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t parent_handle;
  NDR_record_t NDR;
  memory_object_size_t size;
  memory_object_offset_t offset;
  vm_prot_t permission;
};

/* 3814 */
typedef struct $1C9B62C941D52B081B69ED0E233305FB __Request___mach_make_memory_entry_t;

/* 3815 */
struct $E0EFCFA3F8E4CE42DB4B8473A38C2130
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  vm_purgable_t control;
  int state;
};

/* 3816 */
typedef struct $E0EFCFA3F8E4CE42DB4B8473A38C2130 __Request__mach_vm_purgable_control_t;

/* 3817 */
struct $2AEE1BC75F39640E5C2B38CA6643D505
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_address_t address;
  vm_page_info_flavor_t flavor;
  mach_msg_type_number_t infoCnt;
};

/* 3818 */
typedef struct $2AEE1BC75F39640E5C2B38CA6643D505 __Request__mach_vm_page_info_t;

/* 3819 */
struct $6486046A4454F77A08D1A91DA68C385A
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_vm_offset_t address;
  mach_vm_size_t size;
  mach_vm_address_t dispositions;
  mach_vm_size_t dispositions_count;
};

/* 3820 */
typedef struct $6486046A4454F77A08D1A91DA68C385A __Request__mach_vm_page_range_query_t;

/* 3821 */
union __RequestUnion__mach_vm_subsystem
{
  __Request__mach_vm_allocate_t Request_mach_vm_allocate;
  __Request__mach_vm_deallocate_t Request_mach_vm_deallocate;
  __Request__mach_vm_protect_t Request_mach_vm_protect;
  __Request__mach_vm_inherit_t Request_mach_vm_inherit;
  __Request__mach_vm_read_t Request_mach_vm_read;
  __Request__mach_vm_read_list_t Request_mach_vm_read_list;
  __Request__mach_vm_write_t Request_mach_vm_write;
  __Request__mach_vm_copy_t Request_mach_vm_copy;
  __Request__mach_vm_read_overwrite_t Request_mach_vm_read_overwrite;
  __Request__mach_vm_msync_t Request_mach_vm_msync;
  __Request__mach_vm_behavior_set_t Request_mach_vm_behavior_set;
  __Request__mach_vm_map_t Request_mach_vm_map;
  __Request__mach_vm_machine_attribute_t Request_mach_vm_machine_attribute;
  __Request__mach_vm_remap_t Request_mach_vm_remap;
  __Request__mach_vm_page_query_t Request_mach_vm_page_query;
  __Request__mach_vm_region_recurse_t Request_mach_vm_region_recurse;
  __Request__mach_vm_region_t Request_mach_vm_region;
  __Request___mach_make_memory_entry_t Request__mach_make_memory_entry;
  __Request__mach_vm_purgable_control_t Request_mach_vm_purgable_control;
  __Request__mach_vm_page_info_t Request_mach_vm_page_info;
  __Request__mach_vm_page_range_query_t Request_mach_vm_page_range_query;
};

/* 3822 */
struct $CFA0103018D8C0132482714D89F36F6F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_vm_address_t address;
};

/* 3823 */
typedef struct $CFA0103018D8C0132482714D89F36F6F __Reply__mach_vm_allocate_t;

/* 3824 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_vm_deallocate_t;

/* 3825 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_vm_protect_t;

/* 3826 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_vm_inherit_t;

/* 3827 */
typedef struct $F751BC857CE986E726E3B81E1109F417 __Reply__mach_vm_read_t;

/* 3828 */
struct $DB9533504AC52196AD097042EBE190B6
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_vm_read_entry_t data_list;
};

/* 3829 */
typedef struct $DB9533504AC52196AD097042EBE190B6 __Reply__mach_vm_read_list_t;

/* 3830 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_vm_write_t;

/* 3831 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_vm_copy_t;

/* 3832 */
struct $C7D5B71F927336D0430CF1957D0E2599
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_vm_size_t outsize;
};

/* 3833 */
typedef struct $C7D5B71F927336D0430CF1957D0E2599 __Reply__mach_vm_read_overwrite_t;

/* 3834 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_vm_msync_t;

/* 3835 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_vm_behavior_set_t;

/* 3836 */
typedef struct $CFA0103018D8C0132482714D89F36F6F __Reply__mach_vm_map_t;

/* 3837 */
typedef struct $567371A4A4A32568E0935AB48358ABE3 __Reply__mach_vm_machine_attribute_t;

/* 3838 */
struct $F1A99D2B0561FFA0DEC4D307259E823D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_vm_address_t target_address;
  vm_prot_t cur_protection;
  vm_prot_t max_protection;
};

/* 3839 */
typedef struct $F1A99D2B0561FFA0DEC4D307259E823D __Reply__mach_vm_remap_t;

/* 3840 */
typedef struct $1A9BD6B0A513F11C50296905C8BE925C __Reply__mach_vm_page_query_t;

/* 3841 */
struct $4DA7D51D8832EC071A810B513B9F166F
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_vm_address_t address;
  mach_vm_size_t size;
  natural_t nesting_depth;
  mach_msg_type_number_t infoCnt;
  int info[19];
};

/* 3842 */
typedef struct $4DA7D51D8832EC071A810B513B9F166F __Reply__mach_vm_region_recurse_t;

/* 3843 */
struct $0389538851768EA7570654B5B20AED17
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t object_name;
  NDR_record_t NDR;
  mach_vm_address_t address;
  mach_vm_size_t size;
  mach_msg_type_number_t infoCnt;
  int info[10];
};

/* 3844 */
typedef struct $0389538851768EA7570654B5B20AED17 __Reply__mach_vm_region_t;

/* 3845 */
typedef struct $3FA1BB238F14FEE56FD7D85E21CC2571 __Reply___mach_make_memory_entry_t;

/* 3846 */
typedef struct $629180E99E6F33877C4B6148532D2657 __Reply__mach_vm_purgable_control_t;

/* 3847 */
struct $1211A5EE01072451E4ADEB1BE3C3EB3B
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_msg_type_number_t infoCnt;
  int info[32];
};

/* 3848 */
typedef struct $1211A5EE01072451E4ADEB1BE3C3EB3B __Reply__mach_vm_page_info_t;

/* 3849 */
struct $B4D30A1398FCF9CDC4F48DCFE95A9834
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  mach_vm_size_t dispositions_count;
};

/* 3850 */
typedef struct $B4D30A1398FCF9CDC4F48DCFE95A9834 __Reply__mach_vm_page_range_query_t;

/* 3851 */
union __ReplyUnion__mach_vm_subsystem
{
  __Reply__mach_vm_allocate_t Reply_mach_vm_allocate;
  __Reply__mach_vm_deallocate_t Reply_mach_vm_deallocate;
  __Reply__mach_vm_protect_t Reply_mach_vm_protect;
  __Reply__mach_vm_inherit_t Reply_mach_vm_inherit;
  __Reply__mach_vm_read_t Reply_mach_vm_read;
  __Reply__mach_vm_read_list_t Reply_mach_vm_read_list;
  __Reply__mach_vm_write_t Reply_mach_vm_write;
  __Reply__mach_vm_copy_t Reply_mach_vm_copy;
  __Reply__mach_vm_read_overwrite_t Reply_mach_vm_read_overwrite;
  __Reply__mach_vm_msync_t Reply_mach_vm_msync;
  __Reply__mach_vm_behavior_set_t Reply_mach_vm_behavior_set;
  __Reply__mach_vm_map_t Reply_mach_vm_map;
  __Reply__mach_vm_machine_attribute_t Reply_mach_vm_machine_attribute;
  __Reply__mach_vm_remap_t Reply_mach_vm_remap;
  __Reply__mach_vm_page_query_t Reply_mach_vm_page_query;
  __Reply__mach_vm_region_recurse_t Reply_mach_vm_region_recurse;
  __Reply__mach_vm_region_t Reply_mach_vm_region;
  __Reply___mach_make_memory_entry_t Reply__mach_make_memory_entry;
  __Reply__mach_vm_purgable_control_t Reply_mach_vm_purgable_control;
  __Reply__mach_vm_page_info_t Reply_mach_vm_page_info;
  __Reply__mach_vm_page_range_query_t Reply_mach_vm_page_range_query;
};

/* 3852 */
typedef const struct _xpc_type_s *xpc_type_t;

/* 3855 */
struct _xpc_type_s;

/* 3853 */
typedef void *xpc_object_t;

/* 3854 */
typedef void (__cdecl *xpc_handler_t)(xpc_object_t object);

/* 3856 */
typedef struct _xpc_connection_s *xpc_connection_t;

/* 3857 */
typedef void (__cdecl *xpc_connection_handler_t)(xpc_connection_t connection);

/* 3858 */
typedef struct _xpc_endpoint_s *xpc_endpoint_t;

/* 3859 */
struct _xpc_bool_s;

/* 3860 */
struct _xpc_dictionary_s;

/* 3861 */
typedef void (__cdecl *xpc_finalizer_t)(void *value);

/* 3862 */
typedef struct _xpc_activity_s *xpc_activity_t;

/* 3863 */
typedef void (__cdecl *xpc_activity_handler_t)(xpc_activity_t activity);

/* 3864 */
enum $378409A0309EE4CA73667997898B2385
{
  XPC_ACTIVITY_STATE_CHECK_IN = 0x0,
  XPC_ACTIVITY_STATE_WAIT = 0x1,
  XPC_ACTIVITY_STATE_RUN = 0x2,
  XPC_ACTIVITY_STATE_DEFER = 0x3,
  XPC_ACTIVITY_STATE_CONTINUE = 0x4,
  XPC_ACTIVITY_STATE_DONE = 0x5,
};

/* 3865 */
typedef __int64 xpc_activity_state_t;

/* 3866 */
typedef void (__cdecl *launch_data_dict_iterator_t)(const launch_data_t lval, const char *key, void *ctx);

/* 3867 */
typedef uint8_t (__cdecl *xpc_array_applier_t)(size_t index, xpc_object_t value);

/* 3868 */
typedef uint8_t (__cdecl *xpc_dictionary_applier_t)(const char *key, xpc_object_t value);

/* 3869 */
typedef void (__cdecl *os_trace_payload_t)(xpc_object_t xdict);

/* 3870 */
typedef struct os_log_s *os_log_t;

/* 3871 */
struct os_log_s;

/* 3872 */
enum $A6AA76DF5F7C9C5501D29AF89B55AA8F
{
  OS_LOG_TYPE_DEFAULT = 0x0,
  OS_LOG_TYPE_INFO = 0x1,
  OS_LOG_TYPE_DEBUG = 0x2,
  OS_LOG_TYPE_ERROR = 0x10,
  OS_LOG_TYPE_FAULT = 0x11,
};

/* 3873 */
typedef uint8_t os_log_type_t;

/* 3874 */
typedef struct $7D117E890AE5C53348BBC49FB7609529 __Request__kextd_ping_t;

/* 3875 */
union __RequestUnion__kextd_kernel_request_subsystem
{
  __Request__kextd_ping_t Request_kextd_ping;
};

/* 3876 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__kextd_ping_t;

/* 3877 */
union __ReplyUnion__kextd_kernel_request_subsystem
{
  __Reply__kextd_ping_t Reply_kextd_ping;
};

/* 3878 */
union nlist::$E9613512AAF59DC88EB2912B57EC6019
{
  uint32_t n_strx;
};

/* 3879 */
struct nlist
{
  union nlist::$E9613512AAF59DC88EB2912B57EC6019 n_un;
  uint8_t n_type;
  uint8_t n_sect;
  int16_t n_desc;
  uint32_t n_value;
};

/* 3880 */
union nlist_64::$E9613512AAF59DC88EB2912B57EC6019
{
  uint32_t n_strx;
};

/* 3881 */
struct nlist_64
{
  union nlist_64::$E9613512AAF59DC88EB2912B57EC6019 n_un;
  uint8_t n_type;
  uint8_t n_sect;
  uint16_t n_desc;
  uint64_t n_value;
};

/* 3882 */
struct mach_header
{
  uint32_t magic;
  cpu_type_t cputype;
  cpu_subtype_t cpusubtype;
  uint32_t filetype;
  uint32_t ncmds;
  uint32_t sizeofcmds;
  uint32_t flags;
};

/* 3883 */
struct load_command
{
  uint32_t cmd;
  uint32_t cmdsize;
};

/* 3884 */
union lc_str
{
  uint32_t offset;
};

/* 3885 */
struct segment_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  char segname[16];
  uint32_t vmaddr;
  uint32_t vmsize;
  uint32_t fileoff;
  uint32_t filesize;
  vm_prot_t maxprot;
  vm_prot_t initprot;
  uint32_t nsects;
  uint32_t flags;
};

/* 3886 */
struct section
{
  char sectname[16];
  char segname[16];
  uint32_t addr;
  uint32_t size;
  uint32_t offset;
  uint32_t align;
  uint32_t reloff;
  uint32_t nreloc;
  uint32_t flags;
  uint32_t reserved1;
  uint32_t reserved2;
};

/* 3887 */
struct fvmlib
{
  union lc_str name;
  uint32_t minor_version;
  uint32_t header_addr;
};

/* 3888 */
struct fvmlib_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  struct fvmlib fvmlib;
};

/* 3889 */
struct dylib
{
  union lc_str name;
  uint32_t timestamp;
  uint32_t current_version;
  uint32_t compatibility_version;
};

/* 3890 */
struct dylib_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  struct dylib dylib;
};

/* 3891 */
struct sub_framework_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  union lc_str umbrella;
};

/* 3892 */
struct sub_client_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  union lc_str client;
};

/* 3893 */
struct sub_umbrella_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  union lc_str sub_umbrella;
};

/* 3894 */
struct sub_library_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  union lc_str sub_library;
};

/* 3895 */
struct prebound_dylib_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  union lc_str name;
  uint32_t nmodules;
  union lc_str linked_modules;
};

/* 3896 */
struct dylinker_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  union lc_str name;
};

/* 3897 */
struct thread_command
{
  uint32_t cmd;
  uint32_t cmdsize;
};

/* 3898 */
struct routines_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t init_address;
  uint32_t init_module;
  uint32_t reserved1;
  uint32_t reserved2;
  uint32_t reserved3;
  uint32_t reserved4;
  uint32_t reserved5;
  uint32_t reserved6;
};

/* 3899 */
struct routines_command_64
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint64_t init_address;
  uint64_t init_module;
  uint64_t reserved1;
  uint64_t reserved2;
  uint64_t reserved3;
  uint64_t reserved4;
  uint64_t reserved5;
  uint64_t reserved6;
};

/* 3900 */
struct dylib_table_of_contents
{
  uint32_t symbol_index;
  uint32_t module_index;
};

/* 3901 */
struct dylib_module
{
  uint32_t module_name;
  uint32_t iextdefsym;
  uint32_t nextdefsym;
  uint32_t irefsym;
  uint32_t nrefsym;
  uint32_t ilocalsym;
  uint32_t nlocalsym;
  uint32_t iextrel;
  uint32_t nextrel;
  uint32_t iinit_iterm;
  uint32_t ninit_nterm;
  uint32_t objc_module_info_addr;
  uint32_t objc_module_info_size;
};

/* 3902 */
struct dylib_module_64
{
  uint32_t module_name;
  uint32_t iextdefsym;
  uint32_t nextdefsym;
  uint32_t irefsym;
  uint32_t nrefsym;
  uint32_t ilocalsym;
  uint32_t nlocalsym;
  uint32_t iextrel;
  uint32_t nextrel;
  uint32_t iinit_iterm;
  uint32_t ninit_nterm;
  uint32_t objc_module_info_size;
  uint64_t objc_module_info_addr;
};

/* 3903 */
struct twolevel_hints_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t offset;
  uint32_t nhints;
};

/* 3904 */
struct prebind_cksum_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t cksum;
};

/* 3905 */
struct rpath_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  union lc_str path;
};

/* 3906 */
struct encryption_info_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t cryptoff;
  uint32_t cryptsize;
  uint32_t cryptid;
};

/* 3907 */
struct encryption_info_command_64
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t cryptoff;
  uint32_t cryptsize;
  uint32_t cryptid;
  uint32_t pad;
};

/* 3908 */
struct version_min_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t version;
  uint32_t sdk;
};

/* 3909 */
struct build_version_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t platform;
  uint32_t minos;
  uint32_t sdk;
  uint32_t ntools;
};

/* 3910 */
struct build_tool_version
{
  uint32_t tool;
  uint32_t version;
};

/* 3911 */
struct dyld_info_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t rebase_off;
  uint32_t rebase_size;
  uint32_t bind_off;
  uint32_t bind_size;
  uint32_t weak_bind_off;
  uint32_t weak_bind_size;
  uint32_t lazy_bind_off;
  uint32_t lazy_bind_size;
  uint32_t export_off;
  uint32_t export_size;
};

/* 3912 */
struct linker_option_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t count;
};

/* 3913 */
struct symseg_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint32_t offset;
  uint32_t size;
};

/* 3914 */
struct ident_command
{
  uint32_t cmd;
  uint32_t cmdsize;
};

/* 3915 */
struct fvmfile_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  union lc_str name;
  uint32_t header_addr;
};

/* 3916 */
struct entry_point_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  uint64_t entryoff;
  uint64_t stacksize;
};

/* 3917 */
struct data_in_code_entry
{
  uint32_t offset;
  uint16_t length;
  uint16_t kind;
};

/* 3918 */
struct note_command
{
  uint32_t cmd;
  uint32_t cmdsize;
  char data_owner[16];
  uint64_t offset;
  uint64_t size;
};

/* 3919 */
struct relocation_info
{
  int32_t r_address;
  unsigned __int32 r_symbolnum : 24;
  unsigned __int32 r_pcrel : 1;
  unsigned __int32 r_length : 2;
  unsigned __int32 r_extern : 1;
  unsigned __int32 r_type : 4;
};

/* 3920 */
struct scattered_relocation_info
{
  unsigned __int32 r_address : 24;
  unsigned __int32 r_type : 4;
  unsigned __int32 r_length : 2;
  unsigned __int32 r_pcrel : 1;
  unsigned __int32 r_scattered : 1;
  int32_t r_value;
};

/* 3921 */
struct fat_header
{
  uint32_t magic;
  uint32_t nfat_arch;
};

/* 3922 */
struct fat_arch
{
  cpu_type_t cputype;
  cpu_subtype_t cpusubtype;
  uint32_t offset;
  uint32_t size;
  uint32_t align;
};

/* 3923 */
typedef char *UNDMessage;

/* 3924 */
typedef char *UNDLabel;

/* 3925 */
typedef char *UNDKey;

/* 3926 */
typedef char *UNDPath;

/* 3927 */
typedef const char *xmlData_t;

/* 3928 */
typedef mach_port_t UNDReplyRef;

/* 3929 */
typedef uintptr_t KUNCUserNotificationID;

/* 3930 */
enum $C135B885DF0476A09A00218450D4B2F2
{
  kKUNCDefaultResponse = 0x0,
  kKUNCAlternateResponse = 0x1,
  kKUNCOtherResponse = 0x2,
  kKUNCCancelResponse = 0x3,
};

/* 3931 */
typedef void (__cdecl *KUNCUserNotificationCallBack)(int contextKey, int responseFlags, const void *xmlData);

/* 3932 */
typedef signed __int8 vSInt8;

/* 3933 */
typedef unsigned __int16 vUInt16;

/* 3934 */
typedef signed __int16 vSInt16;

/* 3935 */
typedef __int64 vSInt64;

/* 3936 */
typedef unsigned __int64 vUInt64;

/* 3937 */
typedef float vFloat;

/* 3938 */
typedef double vDouble;

/* 3939 */
typedef unsigned int vBool32;

/* 3940 */
typedef unsigned __int64 vDSP_Length;

/* 3941 */
typedef __int64 vDSP_Stride;

/* 3942 */
struct DSPComplex
{
  float real;
  float imag;
};

/* 3943 */
struct DSPDoubleComplex
{
  double real;
  double imag;
};

/* 3944 */
struct DSPSplitComplex
{
  float *realp;
  float *imagp;
};

/* 3945 */
struct DSPDoubleSplitComplex
{
  double *realp;
  double *imagp;
};

/* 3946 */
typedef int FFTDirection;

/* 3947 */
typedef int FFTRadix;

/* 3948 */
enum $0DF345DEC0B3A697591BED85E834AA1B
{
  kFFTDirection_Forward = 0x1,
  kFFTDirection_Inverse = 0xFFFFFFFF,
};

/* 3949 */
enum $02F6093B09BA506C81BD5B0D7BD41D13
{
  kFFTRadix2 = 0x0,
  kFFTRadix3 = 0x1,
  kFFTRadix5 = 0x2,
};

/* 3950 */
enum $4959F15C028A8C9CC0E338CD7F628386
{
  vDSP_HALF_WINDOW = 0x1,
  vDSP_HANN_DENORM = 0x0,
  vDSP_HANN_NORM = 0x2,
};

/* 3951 */
typedef struct OpaqueFFTSetup *FFTSetup;

/* 3952 */
typedef struct OpaqueFFTSetupD *FFTSetupD;

/* 3953 */
typedef struct vDSP_biquad_SetupStructD *vDSP_biquad_SetupD;

/* 3954 */
typedef struct vDSP_biquadm_SetupStruct *vDSP_biquadm_Setup;

/* 3955 */
typedef struct vDSP_biquadm_SetupStructD *vDSP_biquadm_SetupD;

/* 3956 */
enum $7F7513BBC06176AE902BB5C83A3D7BAE : __int64
{
  FFT_FORWARD = 0x1,
  FFT_INVERSE = 0xFFFFFFFF,
};

/* 3957 */
enum $466AC7C0E8F8634F75A0AF4F856D128B
{
  FFT_RADIX2 = 0x0,
  FFT_RADIX3 = 0x1,
  FFT_RADIX5 = 0x2,
};

/* 3958 */
typedef DSPComplex COMPLEX;

/* 3959 */
typedef DSPSplitComplex COMPLEX_SPLIT;

/* 3960 */
typedef DSPDoubleComplex DOUBLE_COMPLEX;

/* 3961 */
typedef DSPDoubleSplitComplex DOUBLE_COMPLEX_SPLIT;

/* 3962 */
struct nd_ifinfo
{
  u_int32_t linkmtu;
  u_int32_t maxmtu;
  u_int32_t basereachable;
  u_int32_t reachable;
  u_int32_t retrans;
  u_int32_t flags;
  int recalctm;
  u_int8_t chlim;
  u_int8_t receivedra;
  u_int8_t randomseed0[8];
  u_int8_t randomseed1[8];
  u_int8_t randomid[8];
};

/* 3963 */
struct in6_nbrinfo
{
  char ifname[16];
  struct in6_addr addr;
  __int64 asked;
  int isrouter;
  int state;
  int expire;
};

/* 3965 */
struct in6_drlist::$06582CBFF9436DC3E10A9BCA0A4A3C04
{
  struct in6_addr rtaddr;
  u_char flags;
  u_short rtlifetime;
  u_long expire;
  u_short if_index;
};

/* 3964 */
struct in6_drlist
{
  char ifname[16];
  struct in6_drlist::$06582CBFF9436DC3E10A9BCA0A4A3C04 defrouter[10];
};

/* 3966 */
struct in6_defrouter
{
  struct sockaddr_in6 rtaddr;
  u_char flags;
  u_char stateflags;
  u_short rtlifetime;
  u_long expire;
  u_short if_index;
};

/* 3968 */
struct in6_prlist::$1A3879ECF6CB69619BFE3895950F3A84::prf_ra
{
  unsigned __int8 onlink : 1;
  unsigned __int8 autonomous : 1;
  unsigned __int8 reserved : 6;
};

/* 3969 */
struct in6_prlist::$1A3879ECF6CB69619BFE3895950F3A84
{
  struct in6_addr prefix;
  struct in6_prlist::$1A3879ECF6CB69619BFE3895950F3A84::prf_ra raflags;
  u_char prefixlen;
  u_char origin;
  u_long vltime;
  u_long pltime;
  u_long expire;
  u_short if_index;
  u_short advrtrs;
  struct in6_addr advrtr[10];
};

/* 3967 */
struct in6_prlist
{
  char ifname[16];
  struct in6_prlist::$1A3879ECF6CB69619BFE3895950F3A84 prefix[10];
};

/* 3971 */
struct in6_prefix::prf_ra
{
  unsigned __int8 onlink : 1;
  unsigned __int8 autonomous : 1;
  unsigned __int8 reserved : 6;
};

/* 3970 */
struct in6_prefix
{
  struct sockaddr_in6 prefix;
  struct in6_prefix::prf_ra raflags;
  u_char prefixlen;
  u_char origin;
  u_long vltime;
  u_long pltime;
  u_long expire;
  u_int32_t flags;
  int refcnt;
  u_short if_index;
  u_short advrtrs;
};

/* 3973 */
struct in6_ondireq::$1466482FC00720A839B66B8521866775
{
  u_int32_t linkmtu;
  u_int32_t maxmtu;
  u_int32_t basereachable;
  u_int32_t reachable;
  u_int32_t retrans;
  u_int32_t flags;
  int recalctm;
  u_int8_t chlim;
  u_int8_t receivedra;
};

/* 3972 */
struct in6_ondireq
{
  char ifname[16];
  struct in6_ondireq::$1466482FC00720A839B66B8521866775 ndi;
};

/* 3974 */
struct in6_ndireq
{
  char ifname[16];
  struct nd_ifinfo ndi;
};

/* 3975 */
struct in6_ndifreq
{
  char ifname[16];
  u_long ifindex;
};

/* 3976 */
struct ipsecstat
{
  u_quad_t in_success;
  u_quad_t in_polvio;
  u_quad_t in_nosa;
  u_quad_t in_inval;
  u_quad_t in_nomem;
  u_quad_t in_badspi;
  u_quad_t in_ahreplay;
  u_quad_t in_espreplay;
  u_quad_t in_ahauthsucc;
  u_quad_t in_ahauthfail;
  u_quad_t in_espauthsucc;
  u_quad_t in_espauthfail;
  u_quad_t in_esphist[256];
  u_quad_t in_ahhist[256];
  u_quad_t in_comphist[256];
  u_quad_t out_success;
  u_quad_t out_polvio;
  u_quad_t out_nosa;
  u_quad_t out_inval;
  u_quad_t out_nomem;
  u_quad_t out_noroute;
  u_quad_t out_esphist[256];
  u_quad_t out_ahhist[256];
  u_quad_t out_comphist[256];
};

/* 3977 */
struct ipcomp
{
  u_int8_t comp_nxt;
  u_int8_t comp_flags;
  u_int16_t comp_cpi;
};

/* 3978 */
struct rip6stat
{
  u_quad_t rip6s_ipackets;
  u_quad_t rip6s_isum;
  u_quad_t rip6s_badsum;
  u_quad_t rip6s_nosock;
  u_quad_t rip6s_nosockmcast;
  u_quad_t rip6s_fullsock;
  u_quad_t rip6s_opackets;
};

/* 3979 */
struct ah
{
  u_int8_t ah_nxt;
  u_int8_t ah_len;
  u_int16_t ah_reserve;
  u_int32_t ah_spi;
};

/* 3980 */
struct newah
{
  u_int8_t ah_nxt;
  u_int8_t ah_len;
  u_int16_t ah_reserve;
  u_int32_t ah_spi;
  u_int32_t ah_seq;
};

/* 3981 */
struct esp
{
  u_int32_t esp_spi;
};

/* 3982 */
struct newesp
{
  u_int32_t esp_spi;
  u_int32_t esp_seq;
};

/* 3983 */
struct esptail
{
  u_int8_t esp_padlen;
  u_int8_t esp_nxt;
};

/* 3985 */
union sha1_ctxt::$17CBD1F1B5255E534C201FD521D01C08
{
  u_int8_t b8[20];
  u_int32_t b32[5];
};

/* 3986 */
union sha1_ctxt::$A44FA08C5D243254D48B538F11C66DFD
{
  u_int8_t b8[8];
  u_int32_t b32[2];
  u_int64_t b64[1];
};

/* 3987 */
union sha1_ctxt::$D4807DF1C837135D11F5447703F158C4
{
  u_int8_t b8[64];
  u_int32_t b32[16];
};

/* 3984 */
struct sha1_ctxt
{
  union sha1_ctxt::$17CBD1F1B5255E534C201FD521D01C08 h;
  union sha1_ctxt::$A44FA08C5D243254D48B538F11C66DFD c;
  union sha1_ctxt::$D4807DF1C837135D11F5447703F158C4 m;
  u_int8_t count;
};

/* 3988 */
typedef struct sha1_ctxt SHA1_CTX;

/* 3989 */
typedef struct __OSMallocTag__ *OSMallocTag;

/* 3990 */
typedef struct __OSMallocTag__ *OSMallocTag_t;

/* 3992 */
typedef uint32_t OSKextRequestTag;

/* 3993 */
typedef void (__cdecl *OSKextRequestResourceCallback)(OSKextRequestTag requestTag, OSReturn result, const void *resourceData, uint32_t resourceDataLength, void *context);

/* 3994 */
struct gz_header_s
{
  int text;
  uLong time;
  int xflags;
  int os;
  Bytef *extra;
  uInt extra_len;
  uInt extra_max;
  Bytef *name;
  uInt name_max;
  Bytef *comment;
  uInt comm_max;
  int hcrc;
  int done;
};

/* 3995 */
enum gssd_mechtype
{
  GSSD_NO_MECH = 0xFFFFFFFF,
  GSSD_KRB5_MECH = 0x0,
  GSSD_SPNEGO_MECH = 0x1,
  GSSD_NTLM_MECH = 0x2,
  GSSD_IAKERB_MECH = 0x3,
};

/* 3996 */
enum gssd_nametype
{
  GSSD_STRING_NAME = 0x0,
  GSSD_EXPORT = 0x1,
  GSSD_ANONYMOUS = 0x2,
  GSSD_HOSTBASED = 0x3,
  GSSD_USER = 0x4,
  GSSD_MACHINE_UID = 0x5,
  GSSD_STRING_UID = 0x6,
  GSSD_KRB5_PRINCIPAL = 0x7,
  GSSD_KRB5_REFERRAL = 0x8,
  GSSD_NTLM_PRINCIPAL = 0x9,
  GSSD_NTLM_BLOB = 0xA,
  GSSD_UUID = 0xB,
};

/* 3997 */
typedef char *gssd_string;

/* 3998 */
typedef char *gssd_dstring;

/* 3999 */
typedef uint8_t *gssd_byte_buffer;

/* 4000 */
typedef uint32_t *gssd_gid_list;

/* 4001 */
typedef uint64_t gssd_ctx;

/* 4002 */
typedef uint64_t gssd_cred;

/* 4003 */
typedef int32_t *gssd_etype_list;

/* 4004 */
struct $852AFB98A785D3BD2A0BA2850DEDA904
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t intoken;
  NDR_record_t NDR;
  gssd_mechtype mech;
  mach_msg_type_number_t intokenCnt;
  uint32_t uid;
  mach_msg_type_number_t princ_namestrOffset;
  mach_msg_type_number_t princ_namestrCnt;
  char princ_namestr[1024];
  mach_msg_type_number_t svc_namestrOffset;
  mach_msg_type_number_t svc_namestrCnt;
  char svc_namestr[1024];
  uint32_t flags;
  uint32_t gssd_flags;
  gssd_ctx context;
  gssd_cred cred_handle;
};

/* 4005 */
typedef struct $852AFB98A785D3BD2A0BA2850DEDA904 __Request__mach_gss_init_sec_context_t;

/* 4006 */
struct $7F276D08F6CF08C6B9B8548B7A3F83AC
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t intoken;
  NDR_record_t NDR;
  mach_msg_type_number_t intokenCnt;
  mach_msg_type_number_t svc_namestrOffset;
  mach_msg_type_number_t svc_namestrCnt;
  char svc_namestr[1024];
  uint32_t gssd_flags;
  gssd_ctx context;
  gssd_cred cred_handle;
};

/* 4007 */
typedef struct $7F276D08F6CF08C6B9B8548B7A3F83AC __Request__mach_gss_accept_sec_context_t;

/* 4008 */
struct $8E863F66E173DFB7A9A3C74FB5100C3D
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  mach_msg_type_number_t mntOffset;
  mach_msg_type_number_t mntCnt;
  char mnt[1024];
  uint32_t uid;
  mach_msg_type_number_t sourceOffset;
  mach_msg_type_number_t sourceCnt;
  char source[1024];
  uint32_t major_stat;
  uint32_t minor_stat;
};

/* 4009 */
typedef struct $8E863F66E173DFB7A9A3C74FB5100C3D __Request__mach_gss_log_error_t;

/* 4010 */
struct $63FD1604A2AADED65AFA433BA64027C5
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t intoken;
  mach_msg_ool_descriptor_t clnt_princ;
  mach_msg_ool_descriptor_t svc_princ;
  NDR_record_t NDR;
  gssd_mechtype mech;
  mach_msg_type_number_t intokenCnt;
  uint32_t uid;
  gssd_nametype clnt_nt;
  mach_msg_type_number_t clnt_princCnt;
  gssd_nametype svc_nt;
  mach_msg_type_number_t svc_princCnt;
  uint32_t flags;
  uint32_t gssd_flags;
  gssd_ctx context;
  gssd_cred cred_handle;
};

/* 4011 */
typedef struct $63FD1604A2AADED65AFA433BA64027C5 __Request__mach_gss_init_sec_context_v2_t;

/* 4012 */
struct $D66323FA705CE2FF5742289CBF7D879B
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t intoken;
  mach_msg_ool_descriptor_t svc_princ;
  NDR_record_t NDR;
  mach_msg_type_number_t intokenCnt;
  gssd_nametype svc_nt;
  mach_msg_type_number_t svc_princCnt;
  uint32_t gssd_flags;
  gssd_ctx context;
  gssd_cred cred_handle;
};

/* 4013 */
typedef struct $D66323FA705CE2FF5742289CBF7D879B __Request__mach_gss_accept_sec_context_v2_t;

/* 4014 */
struct $A93E71325B65F1EBE95FEFE1BF83863D
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t intoken;
  mach_msg_ool_descriptor_t clnt_princ;
  mach_msg_ool_descriptor_t svc_princ;
  NDR_record_t NDR;
  gssd_mechtype mech;
  mach_msg_type_number_t intokenCnt;
  uint32_t uid;
  gssd_nametype clnt_nt;
  mach_msg_type_number_t clnt_princCnt;
  gssd_nametype svc_nt;
  mach_msg_type_number_t svc_princCnt;
  uint32_t flags;
  mach_msg_type_number_t etypesCnt;
  int32_t etypes[64];
  uint32_t gssd_flags;
  gssd_ctx context;
  gssd_cred cred_handle;
};

/* 4015 */
typedef struct $A93E71325B65F1EBE95FEFE1BF83863D __Request__mach_gss_init_sec_context_v3_t;

/* 4016 */
struct $AF59A8B34B2571E44A40A336786ED31B
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t princ;
  NDR_record_t NDR;
  gssd_mechtype mech;
  gssd_nametype nt;
  mach_msg_type_number_t princCnt;
};

/* 4017 */
typedef struct $AF59A8B34B2571E44A40A336786ED31B __Request__mach_gss_hold_cred_t;

/* 4018 */
typedef struct $AF59A8B34B2571E44A40A336786ED31B __Request__mach_gss_unhold_cred_t;

/* 4019 */
struct $FDB08FCD8D83B96B9541E4F882375279
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  uint32_t uid;
  int32_t asid;
};

/* 4020 */
typedef struct $FDB08FCD8D83B96B9541E4F882375279 __Request__mach_gss_lookup_t;

/* 4021 */
union __RequestUnion__gssd_mach_subsystem
{
  __Request__mach_gss_init_sec_context_t Request_mach_gss_init_sec_context;
  __Request__mach_gss_accept_sec_context_t Request_mach_gss_accept_sec_context;
  __Request__mach_gss_log_error_t Request_mach_gss_log_error;
  __Request__mach_gss_init_sec_context_v2_t Request_mach_gss_init_sec_context_v2;
  __Request__mach_gss_accept_sec_context_v2_t Request_mach_gss_accept_sec_context_v2;
  __Request__mach_gss_init_sec_context_v3_t Request_mach_gss_init_sec_context_v3;
  __Request__mach_gss_hold_cred_t Request_mach_gss_hold_cred;
  __Request__mach_gss_unhold_cred_t Request_mach_gss_unhold_cred;
  __Request__mach_gss_lookup_t Request_mach_gss_lookup;
};

/* 4022 */
struct $FC83F9AC084963B4806623647B1EC3D9
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t key;
  mach_msg_ool_descriptor_t outtoken;
  NDR_record_t NDR;
  gssd_ctx context;
  gssd_cred cred_handle;
  uint32_t ret_flags;
  mach_msg_type_number_t keyCnt;
  mach_msg_type_number_t outtokenCnt;
  uint32_t major_stat;
  uint32_t minor_stat;
};

/* 4023 */
typedef struct $FC83F9AC084963B4806623647B1EC3D9 __Reply__mach_gss_init_sec_context_t;

/* 4024 */
struct $F30F582319AB8611B134FE17EE9F1C87
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t key;
  mach_msg_ool_descriptor_t outtoken;
  NDR_record_t NDR;
  gssd_ctx context;
  gssd_cred cred_handle;
  uint32_t flags;
  uint32_t uid;
  mach_msg_type_number_t gidsCnt;
  uint32_t gids[16];
  mach_msg_type_number_t keyCnt;
  mach_msg_type_number_t outtokenCnt;
  uint32_t major_stat;
  uint32_t minor_stat;
};

/* 4025 */
typedef struct $F30F582319AB8611B134FE17EE9F1C87 __Reply__mach_gss_accept_sec_context_t;

/* 4026 */
typedef struct $1AB9ED800012CCE7700E5A617585E609 __Reply__mach_gss_log_error_t;

/* 4027 */
struct $3B462CD8EBAE0E24410279444383C796
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t key;
  mach_msg_ool_descriptor_t outtoken;
  NDR_record_t NDR;
  uint32_t gssd_flags;
  gssd_ctx context;
  gssd_cred cred_handle;
  uint32_t ret_flags;
  mach_msg_type_number_t keyCnt;
  mach_msg_type_number_t outtokenCnt;
  mach_msg_type_number_t displaynameOffset;
  mach_msg_type_number_t displaynameCnt;
  char displayname[128];
  uint32_t major_stat;
  uint32_t minor_stat;
};

/* 4028 */
typedef struct $3B462CD8EBAE0E24410279444383C796 __Reply__mach_gss_init_sec_context_v2_t;

/* 4029 */
struct $12755C74BADC6F7A89E5A6AB8DBE1B4E
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_ool_descriptor_t key;
  mach_msg_ool_descriptor_t outtoken;
  NDR_record_t NDR;
  uint32_t gssd_flags;
  gssd_ctx context;
  gssd_cred cred_handle;
  uint32_t flags;
  uint32_t uid;
  mach_msg_type_number_t gidsCnt;
  uint32_t gids[16];
  mach_msg_type_number_t keyCnt;
  mach_msg_type_number_t outtokenCnt;
  uint32_t major_stat;
  uint32_t minor_stat;
};

/* 4030 */
typedef struct $12755C74BADC6F7A89E5A6AB8DBE1B4E __Reply__mach_gss_accept_sec_context_v2_t;

/* 4031 */
typedef struct $3B462CD8EBAE0E24410279444383C796 __Reply__mach_gss_init_sec_context_v3_t;

/* 4032 */
struct $DC04D80D9B659DC1570A2221D6ECD5E1
{
  mach_msg_header_t Head;
  NDR_record_t NDR;
  kern_return_t RetCode;
  uint32_t major_stat;
  uint32_t minor_stat;
};

/* 4033 */
typedef struct $DC04D80D9B659DC1570A2221D6ECD5E1 __Reply__mach_gss_hold_cred_t;

/* 4034 */
typedef struct $DC04D80D9B659DC1570A2221D6ECD5E1 __Reply__mach_gss_unhold_cred_t;

/* 4035 */
struct $BD85F8C9F588380978D25802F16F72EF
{
  mach_msg_header_t Head;
  mach_msg_body_t msgh_body;
  mach_msg_port_descriptor_t gssd_session_port;
};

/* 4036 */
typedef struct $BD85F8C9F588380978D25802F16F72EF __Reply__mach_gss_lookup_t;

/* 4037 */
union __ReplyUnion__gssd_mach_subsystem
{
  __Reply__mach_gss_init_sec_context_t Reply_mach_gss_init_sec_context;
  __Reply__mach_gss_accept_sec_context_t Reply_mach_gss_accept_sec_context;
  __Reply__mach_gss_log_error_t Reply_mach_gss_log_error;
  __Reply__mach_gss_init_sec_context_v2_t Reply_mach_gss_init_sec_context_v2;
  __Reply__mach_gss_accept_sec_context_v2_t Reply_mach_gss_accept_sec_context_v2;
  __Reply__mach_gss_init_sec_context_v3_t Reply_mach_gss_init_sec_context_v3;
  __Reply__mach_gss_hold_cred_t Reply_mach_gss_hold_cred;
  __Reply__mach_gss_unhold_cred_t Reply_mach_gss_unhold_cred;
  __Reply__mach_gss_lookup_t Reply_mach_gss_lookup;
};

/* 4038 */
struct console_ops
{
  void (__cdecl *putc)(int, int, int);
  int (__cdecl *getc)(int, int, boolean_t, boolean_t);
};

/* 4039 */
enum $6F889E3C335C9FC2896A75F269CC0D3D
{
  kVCDarkReboot = 0x1,
  kVCAcquireImmediate = 0x2,
  kVCUsePosition = 0x4,
  kVCDarkBackground = 0x8,
  kVCLightBackground = 0x10,
};

/* 4040 */
struct vc_progress_user_options
{
  uint32_t options;
  uint32_t x_pos;
  uint32_t y_pos;
  uint32_t resv[8];
};


/* 4079 */
struct whole_vtable_OSMetaClassBase
{
  __int64 padding[2];
  vtable_OSMetaClassBase vtable;
};

/* 4081 */
struct whole_vtable_OSMetaClassMeta
{
  __int64 padding[2];
  vtable_OSMetaClassMeta vtable;
};

/* 4083 */
struct whole_vtable_OSMetaClass
{
  __int64 padding[2];
  vtable_OSMetaClass vtable;
};

/* 4085 */
struct whole_vtable_OSObject
{
  __int64 padding[2];
  vtable_OSObject vtable;
};

/* 4087 */
struct whole_vtable_OSObject::MetaClass
{
  __int64 padding[2];
  vtable_OSObject::MetaClass vtable;
};

/* 4089 */
struct whole_vtable_OSArray
{
  __int64 padding[2];
  vtable_OSArray vtable;
};

/* 4091 */
struct whole_vtable_OSArray::MetaClass
{
  __int64 padding[2];
  vtable_OSArray::MetaClass vtable;
};

/* 4093 */
struct whole_vtable_OSBoolean
{
  __int64 padding[2];
  vtable_OSBoolean vtable;
};

/* 4095 */
struct whole_vtable_OSBoolean::MetaClass
{
  __int64 padding[2];
  vtable_OSBoolean::MetaClass vtable;
};

/* 4097 */
struct whole_vtable_OSCollection
{
  __int64 padding[2];
  vtable_OSCollection vtable;
};

/* 4099 */
struct whole_vtable_OSCollection::MetaClass
{
  __int64 padding[2];
  vtable_OSCollection::MetaClass vtable;
};

/* 4101 */
struct whole_vtable_OSCollectionIterator
{
  __int64 padding[2];
  vtable_OSCollectionIterator vtable;
};

/* 4103 */
struct whole_vtable_OSCollectionIterator::MetaClass
{
  __int64 padding[2];
  vtable_OSCollectionIterator::MetaClass vtable;
};

/* 4105 */
struct whole_vtable_OSData
{
  __int64 padding[2];
  vtable_OSData vtable;
};

/* 4107 */
struct whole_vtable_OSData::MetaClass
{
  __int64 padding[2];
  vtable_OSData::MetaClass vtable;
};

/* 4109 */
struct whole_vtable_OSDictionary
{
  __int64 padding[2];
  vtable_OSDictionary vtable;
};

/* 4111 */
struct whole_vtable_OSDictionary::MetaClass
{
  __int64 padding[2];
  vtable_OSDictionary::MetaClass vtable;
};

/* 4113 */
struct whole_vtable_OSIterator
{
  __int64 padding[2];
  vtable_OSIterator vtable;
};

/* 4115 */
struct whole_vtable_OSIterator::MetaClass
{
  __int64 padding[2];
  vtable_OSIterator::MetaClass vtable;
};

/* 4117 */
struct whole_vtable_OSKext
{
  __int64 padding[2];
  vtable_OSKext vtable;
};

/* 4119 */
struct whole_vtable_OSKext::MetaClass
{
  __int64 padding[2];
  vtable_OSKext::MetaClass vtable;
};

/* 4121 */
struct whole_vtable_OSNumber
{
  __int64 padding[2];
  vtable_OSNumber vtable;
};

/* 4123 */
struct whole_vtable_OSNumber::MetaClass
{
  __int64 padding[2];
  vtable_OSNumber::MetaClass vtable;
};

/* 4125 */
struct whole_vtable_OSOrderedSet
{
  __int64 padding[2];
  vtable_OSOrderedSet vtable;
};

/* 4127 */
struct whole_vtable_OSOrderedSet::MetaClass
{
  __int64 padding[2];
  vtable_OSOrderedSet::MetaClass vtable;
};

/* 4129 */
struct whole_vtable_OSSerialize
{
  __int64 padding[2];
  vtable_OSSerialize vtable;
};

/* 4131 */
struct whole_vtable_OSSerialize::MetaClass
{
  __int64 padding[2];
  vtable_OSSerialize::MetaClass vtable;
};

/* 4133 */
struct whole_vtable_OSSerializer
{
  __int64 padding[2];
  vtable_OSSerializer vtable;
};

/* 4135 */
struct whole_vtable_OSSerializer::MetaClass
{
  __int64 padding[2];
  vtable_OSSerializer::MetaClass vtable;
};

/* 4137 */
struct whole_vtable_OSSet
{
  __int64 padding[2];
  vtable_OSSet vtable;
};

/* 4139 */
struct whole_vtable_OSSet::MetaClass
{
  __int64 padding[2];
  vtable_OSSet::MetaClass vtable;
};

/* 4141 */
struct whole_vtable_OSString
{
  __int64 padding[2];
  vtable_OSString vtable;
};

/* 4143 */
struct whole_vtable_OSString::MetaClass
{
  __int64 padding[2];
  vtable_OSString::MetaClass vtable;
};

/* 4145 */
struct whole_vtable_OSSymbolPool
{
  __int64 padding[2];
  vtable_OSSymbolPool vtable;
};

/* 4147 */
struct whole_vtable_OSSymbol
{
  __int64 padding[2];
  vtable_OSSymbol vtable;
};

/* 4149 */
struct whole_vtable_OSSymbol::MetaClass
{
  __int64 padding[2];
  vtable_OSSymbol::MetaClass vtable;
};

/* 4151 */
struct whole_vtable_OSAction
{
  __int64 padding[2];
  vtable_OSAction vtable;
};

/* 4153 */
struct whole_vtable_OSAction::MetaClass
{
  __int64 padding[2];
  vtable_OSAction::MetaClass vtable;
};

/* 4155 */
struct whole_vtable_IODispatchSource
{
  __int64 padding[2];
  vtable_IODispatchSource vtable;
};

/* 4157 */
struct whole_vtable_IODispatchSource::MetaClass
{
  __int64 padding[2];
  vtable_IODispatchSource::MetaClass vtable;
};

/* 4159 */
struct whole_vtable_IODispatchQueue
{
  __int64 padding[2];
  vtable_IODispatchQueue vtable;
};

/* 4161 */
struct whole_vtable_IODispatchQueue::MetaClass
{
  __int64 padding[2];
  vtable_IODispatchQueue::MetaClass vtable;
};

/* 4163 */
struct whole_vtable_IOInterruptDispatchSource
{
  __int64 padding[2];
  vtable_IOInterruptDispatchSource vtable;
};

/* 4165 */
struct whole_vtable_IOInterruptDispatchSource::MetaClass
{
  __int64 padding[2];
  vtable_IOInterruptDispatchSource::MetaClass vtable;
};

/* 4167 */
struct whole_vtable_IODataQueueDispatchSource
{
  __int64 padding[2];
  vtable_IODataQueueDispatchSource vtable;
};

/* 4169 */
struct whole_vtable_IODataQueueDispatchSource::MetaClass
{
  __int64 padding[2];
  vtable_IODataQueueDispatchSource::MetaClass vtable;
};

/* 4171 */
struct whole_vtable_IOConditionLock
{
  __int64 padding[2];
  vtable_IOConditionLock vtable;
};

/* 4173 */
struct whole_vtable_IOConditionLock::MetaClass
{
  __int64 padding[2];
  vtable_IOConditionLock::MetaClass vtable;
};

/* 4175 */
struct whole_vtable_IORegistryEntry
{
  __int64 padding[2];
  vtable_IORegistryEntry vtable;
};

/* 4177 */
struct whole_vtable_IORegistryIterator
{
  __int64 padding[2];
  vtable_IORegistryIterator vtable;
};

/* 4179 */
struct whole_vtable_IORegistryEntry::MetaClass
{
  __int64 padding[2];
  vtable_IORegistryEntry::MetaClass vtable;
};

/* 4181 */
struct whole_vtable_IORegistryPlane
{
  __int64 padding[2];
  vtable_IORegistryPlane vtable;
};

/* 4183 */
struct whole_vtable_IORegistryPlane::MetaClass
{
  __int64 padding[2];
  vtable_IORegistryPlane::MetaClass vtable;
};

/* 4185 */
struct whole_vtable_IORegistryIterator::MetaClass
{
  __int64 padding[2];
  vtable_IORegistryIterator::MetaClass vtable;
};

/* 4187 */
struct whole_vtable_IOService
{
  __int64 padding[2];
  vtable_IOService vtable;
};

/* 4189 */
struct whole_vtable__IOServiceInterestNotifier
{
  __int64 padding[2];
  vtable__IOServiceInterestNotifier vtable;
};

/* 4191 */
struct whole_vtable__IOOpenServiceIterator
{
  __int64 padding[2];
  vtable__IOOpenServiceIterator vtable;
};

/* 4193 */
struct whole_vtable__IOServiceJob
{
  __int64 padding[2];
  vtable__IOServiceJob vtable;
};

/* 4195 */
struct whole_vtable__IOServiceNotifier
{
  __int64 padding[2];
  vtable__IOServiceNotifier vtable;
};

/* 4197 */
struct whole_vtable__IOConfigThread
{
  __int64 padding[2];
  vtable__IOConfigThread vtable;
};

/* 4199 */
struct whole_vtable_IOService::MetaClass
{
  __int64 padding[2];
  vtable_IOService::MetaClass vtable;
};

/* 4201 */
struct whole_vtable__IOServiceNotifier::MetaClass
{
  __int64 padding[2];
  vtable__IOServiceNotifier::MetaClass vtable;
};

/* 4203 */
struct whole_vtable__IOServiceNullNotifier
{
  __int64 padding[2];
  vtable__IOServiceNullNotifier vtable;
};

/* 4205 */
struct whole_vtable__IOServiceNullNotifier::MetaClass
{
  __int64 padding[2];
  vtable__IOServiceNullNotifier::MetaClass vtable;
};

/* 4207 */
struct whole_vtable__IOServiceInterestNotifier::MetaClass
{
  __int64 padding[2];
  vtable__IOServiceInterestNotifier::MetaClass vtable;
};

/* 4209 */
struct whole_vtable__IOConfigThread::MetaClass
{
  __int64 padding[2];
  vtable__IOConfigThread::MetaClass vtable;
};

/* 4211 */
struct whole_vtable__IOServiceJob::MetaClass
{
  __int64 padding[2];
  vtable__IOServiceJob::MetaClass vtable;
};

/* 4213 */
struct whole_vtable_IOResources
{
  __int64 padding[2];
  vtable_IOResources vtable;
};

/* 4215 */
struct whole_vtable_IOResources::MetaClass
{
  __int64 padding[2];
  vtable_IOResources::MetaClass vtable;
};

/* 4217 */
struct whole_vtable_IOUserResources
{
  __int64 padding[2];
  vtable_IOUserResources vtable;
};

/* 4219 */
struct whole_vtable_IOUserResources::MetaClass
{
  __int64 padding[2];
  vtable_IOUserResources::MetaClass vtable;
};

/* 4221 */
struct whole_vtable__IOOpenServiceIterator::MetaClass
{
  __int64 padding[2];
  vtable__IOOpenServiceIterator::MetaClass vtable;
};

/* 4223 */
struct whole_vtable_IONotifier
{
  __int64 padding[2];
  vtable_IONotifier vtable;
};

/* 4225 */
struct whole_vtable_IONotifier::MetaClass
{
  __int64 padding[2];
  vtable_IONotifier::MetaClass vtable;
};

/* 4227 */
struct whole_vtable_IOPMRequest
{
  __int64 padding[2];
  vtable_IOPMRequest vtable;
};

/* 4229 */
struct whole_vtable_IOPMRequest::MetaClass
{
  __int64 padding[2];
  vtable_IOPMRequest::MetaClass vtable;
};

/* 4231 */
struct whole_vtable_IOPMRequestQueue
{
  __int64 padding[2];
  vtable_IOPMRequestQueue vtable;
};

/* 4233 */
struct whole_vtable_IOPMRequestQueue::MetaClass
{
  __int64 padding[2];
  vtable_IOPMRequestQueue::MetaClass vtable;
};

/* 4235 */
struct whole_vtable_IOPMWorkQueue
{
  __int64 padding[2];
  vtable_IOPMWorkQueue vtable;
};

/* 4237 */
struct whole_vtable_IOPMWorkQueue::MetaClass
{
  __int64 padding[2];
  vtable_IOPMWorkQueue::MetaClass vtable;
};

/* 4239 */
struct whole_vtable_IOPMCompletionQueue
{
  __int64 padding[2];
  vtable_IOPMCompletionQueue vtable;
};

/* 4241 */
struct whole_vtable_IOPMCompletionQueue::MetaClass
{
  __int64 padding[2];
  vtable_IOPMCompletionQueue::MetaClass vtable;
};

/* 4243 */
struct whole_vtable_IOServicePM
{
  __int64 padding[2];
  vtable_IOServicePM vtable;
};

/* 4245 */
struct whole_vtable_IOServicePM::MetaClass
{
  __int64 padding[2];
  vtable_IOServicePM::MetaClass vtable;
};

/* 4247 */
struct whole_vtable_IOPMinformee
{
  __int64 padding[2];
  vtable_IOPMinformee vtable;
};

/* 4249 */
struct whole_vtable_IOPMinformee::MetaClass
{
  __int64 padding[2];
  vtable_IOPMinformee::MetaClass vtable;
};

/* 4251 */
struct whole_vtable_IOPMinformeeList
{
  __int64 padding[2];
  vtable_IOPMinformeeList vtable;
};

/* 4253 */
struct whole_vtable_IOPMinformeeList::MetaClass
{
  __int64 padding[2];
  vtable_IOPMinformeeList::MetaClass vtable;
};

/* 4255 */
struct whole_vtable_IOPMPowerStateQueue
{
  __int64 padding[2];
  vtable_IOPMPowerStateQueue vtable;
};

/* 4257 */
struct whole_vtable_IOPMPowerStateQueue::MetaClass
{
  __int64 padding[2];
  vtable_IOPMPowerStateQueue::MetaClass vtable;
};

/* 4259 */
struct whole_vtable_IOCatalogue
{
  __int64 padding[2];
  vtable_IOCatalogue vtable;
};

/* 4261 */
struct whole_vtable_IOCatalogue::MetaClass
{
  __int64 padding[2];
  vtable_IOCatalogue::MetaClass vtable;
};

/* 4263 */
struct whole_vtable_IOPMPowerSource
{
  __int64 padding[2];
  vtable_IOPMPowerSource vtable;
};

/* 4265 */
struct whole_vtable_IOPMPowerSource::MetaClass
{
  __int64 padding[2];
  vtable_IOPMPowerSource::MetaClass vtable;
};

/* 4267 */
struct whole_vtable_IOPMPowerSourceList
{
  __int64 padding[2];
  vtable_IOPMPowerSourceList vtable;
};

/* 4269 */
struct whole_vtable_IOPMPowerSourceList::MetaClass
{
  __int64 padding[2];
  vtable_IOPMPowerSourceList::MetaClass vtable;
};

/* 4271 */
struct whole_vtable_IOPolledInterface
{
  __int64 padding[2];
  vtable_IOPolledInterface vtable;
};

/* 4273 */
struct whole_vtable_IOPolledInterface::MetaClass
{
  __int64 padding[2];
  vtable_IOPolledInterface::MetaClass vtable;
};

/* 4275 */
struct whole_vtable_IOPolledFilePollers
{
  __int64 padding[2];
  vtable_IOPolledFilePollers vtable;
};

/* 4277 */
struct whole_vtable_IOPolledFilePollers::MetaClass
{
  __int64 padding[2];
  vtable_IOPolledFilePollers::MetaClass vtable;
};

/* 4279 */
struct whole_vtable_IOWorkLoop
{
  __int64 padding[2];
  vtable_IOWorkLoop vtable;
};

/* 4281 */
struct whole_vtable_IOWorkLoop::MetaClass
{
  __int64 padding[2];
  vtable_IOWorkLoop::MetaClass vtable;
};

/* 4283 */
struct whole_vtable_IOEventSource
{
  __int64 padding[2];
  vtable_IOEventSource vtable;
};

/* 4285 */
struct whole_vtable_IOEventSource::MetaClass
{
  __int64 padding[2];
  vtable_IOEventSource::MetaClass vtable;
};

/* 4287 */
struct whole_vtable_IOInterruptEventSource
{
  __int64 padding[2];
  vtable_IOInterruptEventSource vtable;
};

/* 4289 */
struct whole_vtable_IOInterruptEventSource::MetaClass
{
  __int64 padding[2];
  vtable_IOInterruptEventSource::MetaClass vtable;
};

/* 4291 */
struct whole_vtable_IOCommandGate
{
  __int64 padding[2];
  vtable_IOCommandGate vtable;
};

/* 4293 */
struct whole_vtable_IOCommandGate::MetaClass
{
  __int64 padding[2];
  vtable_IOCommandGate::MetaClass vtable;
};

/* 4295 */
struct whole_vtable_IOCommand
{
  __int64 padding[2];
  vtable_IOCommand vtable;
};

/* 4297 */
struct whole_vtable_IOCommand::MetaClass
{
  __int64 padding[2];
  vtable_IOCommand::MetaClass vtable;
};

/* 4299 */
struct whole_vtable_IOCommandPool
{
  __int64 padding[2];
  vtable_IOCommandPool vtable;
};

/* 4301 */
struct whole_vtable_IOCommandPool::MetaClass
{
  __int64 padding[2];
  vtable_IOCommandPool::MetaClass vtable;
};

/* 4303 */
struct whole_vtable_IODMAEventSource
{
  __int64 padding[2];
  vtable_IODMAEventSource vtable;
};

/* 4305 */
struct whole_vtable_IODMAEventSource::MetaClass
{
  __int64 padding[2];
  vtable_IODMAEventSource::MetaClass vtable;
};

/* 4307 */
struct whole_vtable_IOFilterInterruptEventSource
{
  __int64 padding[2];
  vtable_IOFilterInterruptEventSource vtable;
};

/* 4309 */
struct whole_vtable_IOFilterInterruptEventSource::MetaClass
{
  __int64 padding[2];
  vtable_IOFilterInterruptEventSource::MetaClass vtable;
};

/* 4311 */
struct whole_vtable_IOTimerEventSource
{
  __int64 padding[2];
  vtable_IOTimerEventSource vtable;
};

/* 4313 */
struct whole_vtable_IOTimerEventSource::MetaClass
{
  __int64 padding[2];
  vtable_IOTimerEventSource::MetaClass vtable;
};

/* 4315 */
struct whole_vtable_IOBufferMemoryDescriptor
{
  __int64 padding[2];
  vtable_IOBufferMemoryDescriptor vtable;
};

/* 4317 */
struct whole_vtable_IOBufferMemoryDescriptor::MetaClass
{
  __int64 padding[2];
  vtable_IOBufferMemoryDescriptor::MetaClass vtable;
};

/* 4319 */
struct whole_vtable_IODMACommand
{
  __int64 padding[2];
  vtable_IODMACommand vtable;
};

/* 4321 */
struct whole_vtable_IODMACommand::MetaClass
{
  __int64 padding[2];
  vtable_IODMACommand::MetaClass vtable;
};

/* 4323 */
struct whole_vtable_IOInterleavedMemoryDescriptor
{
  __int64 padding[2];
  vtable_IOInterleavedMemoryDescriptor vtable;
};

/* 4325 */
struct whole_vtable_IOInterleavedMemoryDescriptor::MetaClass
{
  __int64 padding[2];
  vtable_IOInterleavedMemoryDescriptor::MetaClass vtable;
};

/* 4327 */
struct whole_vtable_IOMapper
{
  __int64 padding[2];
  vtable_IOMapper vtable;
};

/* 4329 */
struct whole_vtable_IOMapper::MetaClass
{
  __int64 padding[2];
  vtable_IOMapper::MetaClass vtable;
};

/* 4331 */
struct whole_vtable_IOMemoryCursor
{
  __int64 padding[2];
  vtable_IOMemoryCursor vtable;
};

/* 4333 */
struct whole_vtable_IOMemoryCursor::MetaClass
{
  __int64 padding[2];
  vtable_IOMemoryCursor::MetaClass vtable;
};

/* 4335 */
struct whole_vtable_IONaturalMemoryCursor
{
  __int64 padding[2];
  vtable_IONaturalMemoryCursor vtable;
};

/* 4337 */
struct whole_vtable_IONaturalMemoryCursor::MetaClass
{
  __int64 padding[2];
  vtable_IONaturalMemoryCursor::MetaClass vtable;
};

/* 4339 */
struct whole_vtable_IOBigMemoryCursor
{
  __int64 padding[2];
  vtable_IOBigMemoryCursor vtable;
};

/* 4341 */
struct whole_vtable_IOBigMemoryCursor::MetaClass
{
  __int64 padding[2];
  vtable_IOBigMemoryCursor::MetaClass vtable;
};

/* 4343 */
struct whole_vtable_IOLittleMemoryCursor
{
  __int64 padding[2];
  vtable_IOLittleMemoryCursor vtable;
};

/* 4345 */
struct whole_vtable_IOLittleMemoryCursor::MetaClass
{
  __int64 padding[2];
  vtable_IOLittleMemoryCursor::MetaClass vtable;
};

/* 4347 */
struct whole_vtable_IOMemoryDescriptor
{
  __int64 padding[2];
  vtable_IOMemoryDescriptor vtable;
};

/* 4349 */
struct whole_vtable_IOGeneralMemoryDescriptor
{
  __int64 padding[2];
  vtable_IOGeneralMemoryDescriptor vtable;
};

/* 4351 */
struct whole_vtable_IOMemoryMap
{
  __int64 padding[2];
  vtable_IOMemoryMap vtable;
};

/* 4353 */
struct whole_vtable_IOMemoryDescriptor::MetaClass
{
  __int64 padding[2];
  vtable_IOMemoryDescriptor::MetaClass vtable;
};

/* 4355 */
struct whole_vtable_IOGeneralMemoryDescriptor::MetaClass
{
  __int64 padding[2];
  vtable_IOGeneralMemoryDescriptor::MetaClass vtable;
};

/* 4357 */
struct whole_vtable_IOMemoryMap::MetaClass
{
  __int64 padding[2];
  vtable_IOMemoryMap::MetaClass vtable;
};

/* 4359 */
struct whole_vtable_IOMultiMemoryDescriptor
{
  __int64 padding[2];
  vtable_IOMultiMemoryDescriptor vtable;
};

/* 4361 */
struct whole_vtable_IOMultiMemoryDescriptor::MetaClass
{
  __int64 padding[2];
  vtable_IOMultiMemoryDescriptor::MetaClass vtable;
};

/* 4363 */
struct whole_vtable_IORangeAllocator
{
  __int64 padding[2];
  vtable_IORangeAllocator vtable;
};

/* 4365 */
struct whole_vtable_IORangeAllocator::MetaClass
{
  __int64 padding[2];
  vtable_IORangeAllocator::MetaClass vtable;
};

/* 4367 */
struct whole_vtable_IOSubMemoryDescriptor
{
  __int64 padding[2];
  vtable_IOSubMemoryDescriptor vtable;
};

/* 4369 */
struct whole_vtable_IOSubMemoryDescriptor::MetaClass
{
  __int64 padding[2];
  vtable_IOSubMemoryDescriptor::MetaClass vtable;
};

/* 4371 */
struct whole_vtable_IOPlatformExpert
{
  __int64 padding[2];
  vtable_IOPlatformExpert vtable;
};

/* 4373 */
struct whole_vtable_IOPlatformDevice
{
  __int64 padding[2];
  vtable_IOPlatformDevice vtable;
};

/* 4375 */
struct whole_vtable_IOPlatformExpert::MetaClass
{
  __int64 padding[2];
  vtable_IOPlatformExpert::MetaClass vtable;
};

/* 4377 */
struct whole_vtable_IODTPlatformExpert
{
  __int64 padding[2];
  vtable_IODTPlatformExpert vtable;
};

/* 4379 */
struct whole_vtable_IODTPlatformExpert::MetaClass
{
  __int64 padding[2];
  vtable_IODTPlatformExpert::MetaClass vtable;
};

/* 4381 */
struct whole_vtable_IOPlatformExpertDevice
{
  __int64 padding[2];
  vtable_IOPlatformExpertDevice vtable;
};

/* 4383 */
struct whole_vtable_IOPlatformExpertDevice::MetaClass
{
  __int64 padding[2];
  vtable_IOPlatformExpertDevice::MetaClass vtable;
};

/* 4385 */
struct whole_vtable_IOPlatformDevice::MetaClass
{
  __int64 padding[2];
  vtable_IOPlatformDevice::MetaClass vtable;
};

/* 4387 */
struct whole_vtable_IOPanicPlatform
{
  __int64 padding[2];
  vtable_IOPanicPlatform vtable;
};

/* 4389 */
struct whole_vtable_IOPanicPlatform::MetaClass
{
  __int64 padding[2];
  vtable_IOPanicPlatform::MetaClass vtable;
};

/* 4391 */
struct whole_vtable_IOCPU
{
  __int64 padding[2];
  vtable_IOCPU vtable;
};

/* 4393 */
struct whole_vtable_IOCPU::MetaClass
{
  __int64 padding[2];
  vtable_IOCPU::MetaClass vtable;
};

/* 4395 */
struct whole_vtable_IOCPUInterruptController
{
  __int64 padding[2];
  vtable_IOCPUInterruptController vtable;
};

/* 4397 */
struct whole_vtable_IOCPUInterruptController::MetaClass
{
  __int64 padding[2];
  vtable_IOCPUInterruptController::MetaClass vtable;
};

/* 4399 */
struct whole_vtable_IODTNVRAM
{
  __int64 padding[2];
  vtable_IODTNVRAM vtable;
};

/* 4401 */
struct whole_vtable_IODTNVRAM::MetaClass
{
  __int64 padding[2];
  vtable_IODTNVRAM::MetaClass vtable;
};

/* 4403 */
struct whole_vtable_IODMAController
{
  __int64 padding[2];
  vtable_IODMAController vtable;
};

/* 4405 */
struct whole_vtable_IODMAController::MetaClass
{
  __int64 padding[2];
  vtable_IODMAController::MetaClass vtable;
};

/* 4407 */
struct whole_vtable_IOInterruptController
{
  __int64 padding[2];
  vtable_IOInterruptController vtable;
};

/* 4409 */
struct whole_vtable_IOSharedInterruptController
{
  __int64 padding[2];
  vtable_IOSharedInterruptController vtable;
};

/* 4411 */
struct whole_vtable_IOInterruptController::MetaClass
{
  __int64 padding[2];
  vtable_IOInterruptController::MetaClass vtable;
};

/* 4413 */
struct whole_vtable_IOSharedInterruptController::MetaClass
{
  __int64 padding[2];
  vtable_IOSharedInterruptController::MetaClass vtable;
};

/* 4415 */
struct whole_vtable_IOMachPort
{
  __int64 padding[2];
  vtable_IOMachPort vtable;
};

/* 4417 */
struct whole_vtable_IOMachPort::MetaClass
{
  __int64 padding[2];
  vtable_IOMachPort::MetaClass vtable;
};

/* 4419 */
struct whole_vtable_IOUserIterator
{
  __int64 padding[2];
  vtable_IOUserIterator vtable;
};

/* 4421 */
struct whole_vtable_IOUserIterator::MetaClass
{
  __int64 padding[2];
  vtable_IOUserIterator::MetaClass vtable;
};

/* 4423 */
struct whole_vtable_IOUserNotification
{
  __int64 padding[2];
  vtable_IOUserNotification vtable;
};

/* 4425 */
struct whole_vtable_IOUserNotification::MetaClass
{
  __int64 padding[2];
  vtable_IOUserNotification::MetaClass vtable;
};

/* 4427 */
struct whole_vtable_IOServiceUserNotification
{
  __int64 padding[2];
  vtable_IOServiceUserNotification vtable;
};

/* 4429 */
struct whole_vtable_IOServiceUserNotification::MetaClass
{
  __int64 padding[2];
  vtable_IOServiceUserNotification::MetaClass vtable;
};

/* 4431 */
struct whole_vtable_IOServiceMessageUserNotification
{
  __int64 padding[2];
  vtable_IOServiceMessageUserNotification vtable;
};

/* 4433 */
struct whole_vtable_IOServiceMessageUserNotification::MetaClass
{
  __int64 padding[2];
  vtable_IOServiceMessageUserNotification::MetaClass vtable;
};

/* 4435 */
struct whole_vtable_IOUserClient
{
  __int64 padding[2];
  vtable_IOUserClient vtable;
};

/* 4437 */
struct whole_vtable_IOUserClient::MetaClass
{
  __int64 padding[2];
  vtable_IOUserClient::MetaClass vtable;
};

/* 4439 */
struct whole_vtable_IOKitDiagnostics
{
  __int64 padding[2];
  vtable_IOKitDiagnostics vtable;
};

/* 4441 */
struct whole_vtable_IOKitDiagnostics::MetaClass
{
  __int64 padding[2];
  vtable_IOKitDiagnostics::MetaClass vtable;
};

/* 4443 */
struct whole_vtable_IOKitDiagnosticsClient
{
  __int64 padding[2];
  vtable_IOKitDiagnosticsClient vtable;
};

/* 4445 */
struct whole_vtable_IOKitDiagnosticsClient::MetaClass
{
  __int64 padding[2];
  vtable_IOKitDiagnosticsClient::MetaClass vtable;
};

/* 4447 */
struct whole_vtable_IODataQueue
{
  __int64 padding[2];
  vtable_IODataQueue vtable;
};

/* 4449 */
struct whole_vtable_IODataQueue::MetaClass
{
  __int64 padding[2];
  vtable_IODataQueue::MetaClass vtable;
};

/* 4451 */
struct whole_vtable_IOSharedDataQueue
{
  __int64 padding[2];
  vtable_IOSharedDataQueue vtable;
};

/* 4453 */
struct whole_vtable_IOSharedDataQueue::MetaClass
{
  __int64 padding[2];
  vtable_IOSharedDataQueue::MetaClass vtable;
};

/* 4455 */
struct whole_vtable_IOReporter
{
  __int64 padding[2];
  vtable_IOReporter vtable;
};

/* 4457 */
struct whole_vtable_IOReporter::MetaClass
{
  __int64 padding[2];
  vtable_IOReporter::MetaClass vtable;
};

/* 4459 */
struct whole_vtable_IOSimpleReporter
{
  __int64 padding[2];
  vtable_IOSimpleReporter vtable;
};

/* 4461 */
struct whole_vtable_IOSimpleReporter::MetaClass
{
  __int64 padding[2];
  vtable_IOSimpleReporter::MetaClass vtable;
};

/* 4463 */
struct whole_vtable_IOStateReporter
{
  __int64 padding[2];
  vtable_IOStateReporter vtable;
};

/* 4465 */
struct whole_vtable_IOStateReporter::MetaClass
{
  __int64 padding[2];
  vtable_IOStateReporter::MetaClass vtable;
};

/* 4467 */
struct whole_vtable_IOHistogramReporter
{
  __int64 padding[2];
  vtable_IOHistogramReporter vtable;
};

/* 4469 */
struct whole_vtable_IOHistogramReporter::MetaClass
{
  __int64 padding[2];
  vtable_IOHistogramReporter::MetaClass vtable;
};

/* 4471 */
struct whole_vtable_IOReportLegend
{
  __int64 padding[2];
  vtable_IOReportLegend vtable;
};

/* 4473 */
struct whole_vtable_IOReportLegend::MetaClass
{
  __int64 padding[2];
  vtable_IOReportLegend::MetaClass vtable;
};

/* 4475 */
struct whole_vtable_IORTC
{
  __int64 padding[2];
  vtable_IORTC vtable;
};

/* 4477 */
struct whole_vtable_IORTC::MetaClass
{
  __int64 padding[2];
  vtable_IORTC::MetaClass vtable;
};

/* 4479 */
struct whole_vtable_OSUserMetaClass
{
  __int64 padding[2];
  vtable_OSUserMetaClass vtable;
};

/* 4481 */
struct whole_vtable_OSUserMetaClass::MetaClass
{
  __int64 padding[2];
  vtable_OSUserMetaClass::MetaClass vtable;
};

/* 4483 */
struct whole_vtable_IOUserService
{
  __int64 padding[2];
  vtable_IOUserService vtable;
};

/* 4485 */
struct whole_vtable_IOUserService::MetaClass
{
  __int64 padding[2];
  vtable_IOUserService::MetaClass vtable;
};

/* 4487 */
struct whole_vtable_IOUserServer
{
  __int64 padding[2];
  vtable_IOUserServer vtable;
};

/* 4489 */
struct whole_vtable_IOUserServer::MetaClass
{
  __int64 padding[2];
  vtable_IOUserServer::MetaClass vtable;
};

/* 4491 */
struct whole_vtable_RootDomainUserClient
{
  __int64 padding[2];
  vtable_RootDomainUserClient vtable;
};

/* 4493 */
struct whole_vtable_RootDomainUserClient::MetaClass
{
  __int64 padding[2];
  vtable_RootDomainUserClient::MetaClass vtable;
};

/* 4495 */
struct whole_vtable_IOPowerConnection
{
  __int64 padding[2];
  vtable_IOPowerConnection vtable;
};

/* 4497 */
struct whole_vtable_IOPowerConnection::MetaClass
{
  __int64 padding[2];
  vtable_IOPowerConnection::MetaClass vtable;
};

/* 4499 */
struct whole_vtable_IOWatchDogTimer
{
  __int64 padding[2];
  vtable_IOWatchDogTimer vtable;
};

/* 4501 */
struct whole_vtable_IOWatchDogTimer::MetaClass
{
  __int64 padding[2];
  vtable_IOWatchDogTimer::MetaClass vtable;
};

/* 4503 */
struct whole_vtable_IOPerfControlClient
{
  __int64 padding[2];
  vtable_IOPerfControlClient vtable;
};

/* 4505 */
struct whole_vtable_IOPerfControlClient::MetaClass
{
  __int64 padding[2];
  vtable_IOPerfControlClient::MetaClass vtable;
};

/* 4507 */
struct whole_vtable_IOSKRegionMapper
{
  __int64 padding[2];
  vtable_IOSKRegionMapper vtable;
};

/* 4509 */
struct whole_vtable_IOSKRegionMapper::MetaClass
{
  __int64 padding[2];
  vtable_IOSKRegionMapper::MetaClass vtable;
};

/* 4511 */
struct whole_vtable_IOSKMapper
{
  __int64 padding[2];
  vtable_IOSKMapper vtable;
};

/* 4513 */
struct whole_vtable_IOSKMapper::MetaClass
{
  __int64 padding[2];
  vtable_IOSKMapper::MetaClass vtable;
};

/* 4515 */
struct whole_vtable_IOSKArena
{
  __int64 padding[2];
  vtable_IOSKArena vtable;
};

/* 4517 */
struct whole_vtable_IOSKArena::MetaClass
{
  __int64 padding[2];
  vtable_IOSKArena::MetaClass vtable;
};

/* 4519 */
struct whole_vtable_IOSKRegion
{
  __int64 padding[2];
  vtable_IOSKRegion vtable;
};

/* 4521 */
struct whole_vtable_IOSKRegion::MetaClass
{
  __int64 padding[2];
  vtable_IOSKRegion::MetaClass vtable;
};

/* 4523 */
struct whole_vtable_IOSKMemoryArray
{
  __int64 padding[2];
  vtable_IOSKMemoryArray vtable;
};

/* 4525 */
struct whole_vtable_IOSKMemoryArray::MetaClass
{
  __int64 padding[2];
  vtable_IOSKMemoryArray::MetaClass vtable;
};

/* 4527 */
struct whole_vtable_IOSKMemoryBuffer
{
  __int64 padding[2];
  vtable_IOSKMemoryBuffer vtable;
};

/* 4529 */
struct whole_vtable_IOSKMemoryBuffer::MetaClass
{
  __int64 padding[2];
  vtable_IOSKMemoryBuffer::MetaClass vtable;
};

/* 4531 */
struct whole_vtable_IOSyncer
{
  __int64 padding[2];
  vtable_IOSyncer vtable;
};

/* 4533 */
struct whole_vtable_IOSyncer::MetaClass
{
  __int64 padding[2];
  vtable_IOSyncer::MetaClass vtable;
};

/* 4535 */
struct whole_vtable_PMAssertionsTracker
{
  __int64 padding[2];
  vtable_PMAssertionsTracker vtable;
};

/* 4537 */
struct whole_vtable_PMAssertionsTracker::MetaClass
{
  __int64 padding[2];
  vtable_PMAssertionsTracker::MetaClass vtable;
};

/* 4539 */
struct whole_vtable_PMHaltWorker
{
  __int64 padding[2];
  vtable_PMHaltWorker vtable;
};

/* 4541 */
struct whole_vtable_PMHaltWorker::MetaClass
{
  __int64 padding[2];
  vtable_PMHaltWorker::MetaClass vtable;
};

/* 4543 */
struct whole_vtable_IOPMrootDomain
{
  __int64 padding[2];
  vtable_IOPMrootDomain vtable;
};

/* 4545 */
struct whole_vtable_IOPMServiceInterestNotifier
{
  __int64 padding[2];
  vtable_IOPMServiceInterestNotifier vtable;
};

/* 4547 */
struct whole_vtable_IORootParent
{
  __int64 padding[2];
  vtable_IORootParent vtable;
};

/* 4549 */
struct whole_vtable_IOPMrootDomain::MetaClass
{
  __int64 padding[2];
  vtable_IOPMrootDomain::MetaClass vtable;
};

/* 4551 */
struct whole_vtable_IOPMServiceInterestNotifier::MetaClass
{
  __int64 padding[2];
  vtable_IOPMServiceInterestNotifier::MetaClass vtable;
};

/* 4553 */
struct whole_vtable_PMTraceWorker
{
  __int64 padding[2];
  vtable_PMTraceWorker vtable;
};

/* 4555 */
struct whole_vtable_PMTraceWorker::MetaClass
{
  __int64 padding[2];
  vtable_PMTraceWorker::MetaClass vtable;
};

/* 4557 */
struct whole_vtable_PMSettingHandle
{
  __int64 padding[2];
  vtable_PMSettingHandle vtable;
};

/* 4559 */
struct whole_vtable_PMSettingHandle::MetaClass
{
  __int64 padding[2];
  vtable_PMSettingHandle::MetaClass vtable;
};

/* 4561 */
struct whole_vtable_PMSettingObject
{
  __int64 padding[2];
  vtable_PMSettingObject vtable;
};

/* 4563 */
struct whole_vtable_PMSettingObject::MetaClass
{
  __int64 padding[2];
  vtable_PMSettingObject::MetaClass vtable;
};

/* 4565 */
struct whole_vtable_IORootParent::MetaClass
{
  __int64 padding[2];
  vtable_IORootParent::MetaClass vtable;
};


